[
{"id":1,"category":"DPN","title":"How to send a variable from controller to front end","body":"\t- in controller:\n\t\t---------------------\n\t\tthat.responseData.firstName = 'nnn';\n\t\t---------------------\n\t- in page:\n\t\t---------------------\n\t\tthat.firstName = response.data.firstName;\n\t\t---------------------","points":10,"extras":"$rank=3.5","systemWhenCreated":"2019-05-13 14:16:01","systemWhoCreated":"systemUnknown"},{"id":3,"category":"CSS","title":"How to style all but the first in a series of elements","body":"- you have this list of items:\n\t-------------------------\n\t<div class=\"infoArea\">\n\t\t<div class=\"info\">\n\t\t\t<div class=\"title\">First Title</div>\n\t\t\t<div class=\"content\">This is the first content.</div>\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<div class=\"title\">Second Title</div>\n\t\t\t<div class=\"content\">This is the second content.</div>\n\t\t</div>\n\t\t<div class=\"info\">\n\t\t\t<div class=\"title\">Third Title</div>\n\t\t\t<div class=\"content\">This is the third content.</div>\n\t\t</div>\n\t</div>\t\t\n\t-------------------------\n- you style it with this to separate it\n\t-------------------------------\n\t.outputArea div.codeChunk .title {\n\t\tmargin-top: 10px;\n\t}\t\t\n\t-------------------------------\n- PROBLEM: you want to not have the leading space in front of the first item\n- SOLUTION: add `:not(:first-child)` to the \n\t-------------------------------\n\t.outputArea div.codeChunk:not(:first-child) .title {\n\t\tmargin-top: 10px;\n\t}\t\t\n\t-------------------------------","points":20,"extras":"$jsfiddle=a75uwjcp; $rank=4.5","systemWhenCreated":"2019-04-20 14:36:14","systemWhoCreated":"et"},{"id":4,"category":"JavaScript","title":"How to get parts of an array out of an array","body":"- you have: \n\t---------------------------------\n\tconst elements = [\n\t\t{ id: 20, name: 'element 1' },\n\t\t{ id: 23, name: 'element 2' },\n\t\t{ id: 12, name: 'element 3' },\n\t\t{ id: 4, name: 'element 4' },\n\t];\t\n\t---------------------------------\n- you need: [20,23,12,4] \n- use .map like this:\n\t-----------------------------------\n\tconst ids = elements.map(item => item.id);\n\tconst names = elements.map(item => item.name);\n\tconsole.log(ids);\n\tconsole.log(names);\t\n\t-----------------------------------","points":20,"extras":"","systemWhenCreated":"2019-04-20 14:36:14","systemWhoCreated":"systemUnknown"},{"id":5,"category":"Vue.js 2.0","title":"Basic Vue 2.0 page to display a variable from code and a button that changes that variable","body":"- HTML\n\t-----------------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t\t<title>test</title>\n\t\t<style>\n\t\t\t.information {\n\t\t\t\tcolor: orange;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div class=\"information\">{{message}}</div>\n\t\t\t<button @click=\"changeTheText\">Change the Text</button>\n\t\t</div>\n\n\t\t<script>\n\t\t\tconst app = new Vue({\n\t\t\t\tel: \"#app\",\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: ''\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize: function () {\n\t\t\t\t\t\tthis.message = 'test';\n\t\t\t\t\t},\n\t\t\t\t\tchangeTheText: function () {\n\t\t\t\t\t\tthis.message = 'you clicked the button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tapp.initialize();\n\t\t</script>\n\t</body>\n\n\t</html>\n\t-------------------","points":50,"extras":"$jsfiddle=hpcnq1b6","systemWhenCreated":"2019-04-20 17:04:43","systemWhoCreated":"systemUnknown"},{"id":6,"category":"JavaScript","title":"Code to purposely crash a node app (e.g. if you want to test `forever`) ","body":"- add this code to where you want the code to stop\n\t--------------------------------\n\tsetTimeout(function () {\n\t\t  throw new Error('We crashed!!!!!');\n\t}, 10);    \n\t--------------------------------\n- for extra credit:\n\t- experiment with `setTimeout`\n\t- experiment with `setInterval`","points":5,"extras":"$excludeFromLearnBits","systemWhenCreated":"2019-04-27 18:19:24","systemWhoCreated":"systemUnknown"},{"id":7,"category":"DPN","title":"How to make icon on Windows to start Datapod for Node","body":"- make directory: c:\\edward\\start\n\t- create file: `start_n49902_dpnp.bat`\n\t\t---------------------------------------\n\t\tcd C:\\edward\\nodewebs\\n49902_dpnp\n\t\tnodemon server.js      \n\t\t(or this: forever start -c nodemon server.js)  \n\t\t---------------------------------------\n\t- right-click bat file: create shortcut\n\t\t- rename shortcut to `start_n49902_dpnp`\n\t- right-click shortcut: properties \n\t\t- change icon (1 to right, blue screen)\n\t\t- type `explorer ` in front of path in `target`\n\t\t- `OK` (enter)\n\t- drag shortcut to task bar\n- click on icon in taskbar\n\t- click on C:\\ icon (upper-left) and properties\n\t- opacity 80%\n\t- font size: 12\n- minimize\n- now when you want to run other CMD windows, right-click, right-click, open\n- trouble shooting:\n\t- you get the error \"nodemon command is not recognized\"\n\t\t- this is because it was not able to be installed globally\n\t\t- so change the above .bat file to:\n\t\t\t---------------------------------------\n\t\t\tcd c:\\edward\\dpn\n\t\t\tnode_modules\\.bin\\nodemon server.js      \n\t\t\t---------------------------------------","points":20,"extras":"","systemWhenCreated":"2019-04-20 14:54:11","systemWhoCreated":"systemUnknown"},{"id":9,"category":"JavaScript","title":"How to iterate through items in an array and through properties in an object","body":"- you want to iterate through an array like this: \n\t----------------\n\tconst colors = ['red','blue','green'];\n\t----------------\n- or an array like this:\n\t----------------\n\tconst users = [\n \t\t{\n\t\t\tid : 232,\n\t\t\tlogin: 'jim',\n\t\t\tfirstName : 'Jim',\n\t\t\tlastName : 'Jones'\n\t\t},\n \t\t{\n\t\t\tid : 325,\n\t\t\tlogin: 'angie',\n\t\t\tfirstName : 'Angie',\n\t\t\tlastName : 'Axelton'\n\t\t},\n \t\t{\n\t\t\tid : 634,\n\t\t\tlogin: 'joan',\n\t\t\tfirstName : 'Joan',\n\t\t\tlastName : 'Jambler'\n\t\t}\n\t];\n\t----------------\n- and you want to iterate through the properties of an object like this:\n\t----------------\n\tconst users = {\n\t\tjim : {\n\t\t\tid : 232,\n\t\t\tfirstName : 'Jim',\n\t\t\tlastName : 'Jones'\n\t\t},\n\t\tangie : {\n\t\t\tid : 325,\n\t\t\tfirstName : 'Angie',\n\t\t\tlastName : 'Axelton'\n\t\t},\n\t\tjoan : {\n\t\t\tid : 634,\n\t\t\tfirstName : 'Joan',\n\t\t\tlastName : 'Jambler'\n\t\t}\n\t};\n\t----------------\n- for arrays, generally use `for ... of`\n\t--------------------\n\tfor(const color of colors) {\n\t\tconsole.log(color);\n\t}\n\t--------------------\n- also for arrays, if you need the index, you can also use `for ... in`\n\t--------------------\n\tfor(const key in colors) {\n\t\tconsole.log(`${key} = ${colors[key]}`);\n\t}\n\t--------------------\n- for objects, only use `for ... in` so that you can get the key as long as the value\n\t--------------------\n\tfor(const key in users) {\n\t\tconst user = users[key];\n\t\tuser.login = key; // if you are passing the object to the front in, you often want to put the key in the object as a property\n\t\tconsole.log(user);\n\t}\t\n\t--------------------\n- note: if you try to use `for ... of` on an object, you will get the error `users is not iterable`","points":40,"extras":"$webdev=iterationObjectProperties","systemWhenCreated":"2019-04-20 14:55:18","systemWhoCreated":"systemUnknown"},{"id":10,"category":"vscode","title":"How to set up a macro ","body":"- this shows you how to set up a macroconsole.log debug macro\n- `File > Preferences > User Snippets`\n- select `javascript.json`\n- add the following text:\n\t----------------------------\n\t\"debug variable\": {\n\t\t\"prefix\": \"c\",\n\t\t\"body\": \"console.log('$1: ' + $2);\"\n\t}\n\t----------------------------\n- in a javascript file, press `cc` and then `TAB`","points":30,"extras":"","systemWhenCreated":"2019-04-20 14:54:11","systemWhoCreated":"systemUnknown"},{"id":11,"category":"vscode","title":"How to compare two files","body":"- this shows you how to diff two files in Visual Studio Code\n- right-click on file name in outline, and choose `Select for Compare`\n- right-click another file in outline, and choose `Compare with Selected`\t","points":10,"extras":"$rank=4.8","systemWhenCreated":"2019-04-20 14:58:21","systemWhoCreated":"systemUnknown"},{"id":12,"category":"CSS","title":"How to style all but the first in a list","body":"\t- the HTML\n\t\t-------------------------\n\t\t<div class=\"infoArea\">\n\t\t\t<div class=\"info\">\n\t\t\t\t<div class=\"title\">First Title</div>\n\t\t\t\t<div class=\"content\">This is the first content.</div>\n\t\t\t</div>\n\t\t\t<div class=\"info\">\n\t\t\t\t<div class=\"title\">Second Title</div>\n\t\t\t\t<div class=\"content\">This is the second content.</div>\n\t\t\t</div>\n\t\t\t<div class=\"info\">\n\t\t\t\t<div class=\"title\">Third Title</div>\n\t\t\t\t<div class=\"content\">This is the third content.</div>\n\t\t\t</div>\n\t\t</div>\t\t\n\t\t-------------------------\n\t- the style\n\t\t-------------------------------\n\t\t.outputArea div.codeChunk:not(:first-child) .title {\n\t\t\tmargin-top: 10px;\n\t\t}\t\t\n\t\t-------------------------------","points":20,"extras":"","systemWhenCreated":"2019-04-20 14:58:21","systemWhoCreated":"systemUnknown"},{"id":13,"category":"regex","title":"In Notepad++ and VSCode, replace all varied brackets at the beginning of lines in a todo list with a simple hyphen","body":"- in Notepad++ copy in this text\n\t----------------------\n\t[x] get money\n\t[] go to the store\n\t[..] install software\n\t[] get books\n\t[x] check out new book on Amazon\n\t[..] go to bank\n\t[] replace all [] with [x] in main todo list\n\t[] organize shelf\n\t[] clean desk\n\t----------------------\n- you want to make it look like this:\n\t----------------------\n\t-  get money\n\t-  go to the store\n\t-  install software\n\t-  get books\n\t-  check out new book on Amazon\n\t-  go to bank\n\t-  replace all [] with [x] in main todo list\n\t-  organize shelf\n\t-  clean desk\n\t----------------------\n- search and replace `\\[.*\\] ` with `- `\n- notice that it also deletes those in the middle of the line, which was not your intention\n- and notice that it what it means to be \"greedy\"\n\t- if you wanted to take these out as well, then you would have to tell it to be non-greedy: `\\[.*?\\] `\n- but you want to only replace those at the beginning of the line, so do this: `^\\[.*\\] `\n- do the same thing in Visual Studio Code and notice that you can see the selections as you type the regular expression","points":40,"extras":"","systemWhenCreated":"2019-04-20 14:58:21","systemWhoCreated":"systemUnknown"},{"id":14,"category":"regex","title":"Indent blocks of lines below specific lines in a text","body":"- you want to indent each of the lines after lines that start with \"TEXT ??\"\n\t------------------------------\n\tTEXT 01 - This is a text about nnnnnn\n\tThis is an item.\n\tThis is some information.\n\tTEXT 02 - This is a text about nnnnnn\n\tThis is an item.\n\tThis is some information.\n\tThis is an item.\n\tThis is some information.\n\tTEXT 03 - This is a text about nnnnnn\n\tThis is an item.\n\tThis is some information.\n\tTEXT is an item.\n\tThis is some information.\n\tThis is an item.\n\tThis is some information.\n\t------------------------------\n- try in Visual Studio Code, Notepad++ and Regex101\n\t-----------------\n\tsearch: ^(?!TEXT \\d\\d)\n\treplace: \\t- \n\t-----------------\n- explanation: `?!` is called \"negative look ahead\", i.e. searches for text that does not occur after another marker, in this case, the beginning of the line (`^`)","points":30,"extras":"$rank=4.7","systemWhenCreated":"2019-04-20 14:58:21","systemWhoCreated":"systemUnknown"},{"id":15,"category":"sqlite","title":"Create table in DB Browser for SQLite","body":"- download and install [DB Browser for SQLite](https://sqlitebrowser.org/)\n- create table\n\t------------------------------------\n\tCREATE TABLE \"howtos\" (\n\t\t`id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,\n\t\t`category` TEXT,\n\t\t`title` TEXT,\n\t\t`body` TEXT,\n\t\t`systemWhenCreated` TEXT,\n\t\t`systemWhoCreated` TEXT\n\t)\n\t------------------------------------\n- add and sort data","points":20,"extras":"$rank=4.6","systemWhenCreated":"2019-04-20 15:03:03","systemWhoCreated":"systemUnknown"},{"id":18,"category":"vscode","title":"How to search and replace in a selection","body":"- `CTRL-H`\n- select text\n- click \"Find in selection\" icon on right\n- enter find and replace strings\n- click replace-all icon","points":10,"extras":"$rank=4.5","systemWhenCreated":"2019-04-20 19:07:30","systemWhoCreated":"systemUnknown"},{"id":22,"category":"less","title":"How to install and set up less in VSCode","body":"- intro, you have:\n\t--------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<title>test</title>\n\t\t<link rel=\"stylesheet\" href=\"css/main.css\">\n\t</head>\n\n\t<body>\n\t\t<h4>Main Info</h4>\n\t\t<p>This is the info.</p>\n\t\t<h4>More Info</h4>\n\t\t<p>This is more info. This is more info. This is more info. This is more info.</p>\n\t</body>\n\n\t</html>\n\t--------------------------\n- with css:\n\t---------------------------\n\th4 {\n\t\tbackground-color: navy;\n\t\tcolor           : yellow;\n\t}\n\n\tp {\n\t\tcolor: navy;\n\t}\n\t---------------------------\n- `npm install -g less`\n- `npm install -g less-watch-compiler`\n- `less-watch-compiler less css`\n- or make file in root: `less-watch-compiler.config.json`\n\t------------------------------\n\t{\n\t\t\"watchFolder\": \"less\",\n\t\t\"outputFolder\": \"public\"\n\t}\t\n\t------------------------------\n- type: `less-watch-compiler`\n- note: I fixed an error once with: `npm install -g less`\n- less can now be:\n\t--------------------------\n\t@color_main: green;\n\n\th4 {\n\t\tbackground-color: @color_main;\n\t\tcolor           : yellow;\n\t}\n\n\tp {\n\t\tcolor: @color_main;\n\n\t\tb {\n\t\t\tcolor: red; \n\t\t}\n\t}\n\t-------------------------------","points":20,"extras":"$rank=4.6","systemWhenCreated":"2019-04-27 18:20:54","systemWhoCreated":"systemUnknown"},{"id":23,"category":"regex","title":"Remove and replace XML attributes from XML elements with regex","body":"\t- copy the following text into Notepad++\n\t\t--------------------------------------\n\t\t<?xml version=\"1.0\" encoding=\"utf-8\" ?>\t\n\t\t<reports>\t\n\t\t\t<report idCode=\"2018\">\t\n\t\t\t\t<item date=\"2018-12-13\" revision=\"1954\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-11\" revision=\"34534\" dev=\"christiana\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"323\" dev=\"robert\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2348\" dev=\"christiana\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"9780\" dev=\"steffen\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"23323\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1954\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"193254\" dev=\"christiana\" category=\"\" type=\"Security\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"19234\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1954\" dev=\"anna\" category=\"\" type=\"New Feature\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"193254\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"19233\" dev=\"robert\" category=\"\" type=\"New Feature\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"19325\" dev=\"anna\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"12954\" dev=\"robert\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1915\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"s-1914\" dev=\"steffen\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1954\" dev=\"anna\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2342\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"s-1234\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"3434\" dev=\"christiana\" category=\"\" type=\"New Feature\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2343\" dev=\"christiana\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2343\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t</report>\n\t\t</reports>\n\t\t--------------------------------------\n\t- consider: how would you remove all the `revision` attributes?\n\t- delete the `revision` tags\n\t\t- `revision=\"\\d*\"`\n\t\t\t- doesn't get the ones that start with `s-`\n\t\t\t\t- so try this: revision=`(s-)?\\d*`\n\t\t- search and replace in Notepad++\n\t- delete the `dev` tags\n\t\t- `dev=\".*\"`\n\t\t- note that it is too greedy, so use:\n\t\t\t- `dev=\".*?\"`\n\t\t- search and replace in Notepad++\n\t- copy this text into Notepad++ again:\n\t\t--------------------------------------\n\t\t<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n\t\t<reports>\t\n\t\t\t<report idCode=\"2018\">\t\n\t\t\t\t<item date=\"2018-12-13\" revision=\"1954\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-11\" revision=\"34534\" dev=\"christiana\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"323\" dev=\"robert\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2348\" dev=\"christiana\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"9780\" dev=\"steffen\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"23323\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1954\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"193254\" dev=\"christiana\" category=\"\" type=\"Security\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"19234\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1954\" dev=\"anna\" category=\"\" type=\"New Feature\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"193254\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"19233\" dev=\"robert\" category=\"\" type=\"New Feature\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"19325\" dev=\"anna\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"12954\" dev=\"robert\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1915\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"s-1914\" dev=\"steffen\" category=\"\" type=\"Bug\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"1954\" dev=\"anna\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2342\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"s-1234\" dev=\"robert\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"3434\" dev=\"christiana\" category=\"\" type=\"New Feature\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2343\" dev=\"christiana\" category=\"\" type=\"Enhancement\"/>\n\t\t\t\t<item date=\"2018-12-12\" revision=\"2343\" dev=\"steffen\" category=\"\" type=\"Enhancement\"/>\n\t\t\t</report>\n\t\t</reports>\n\t\t--------------------------------------\n\t- now you want to replace the number in revision with `0000`\n\t\t- search for: `revision=\"(.*?)\"`\n\t\t- replace with: `revision=\"0000\"`\n\t- undo\n\t- now you want to reuse what you remove in a different way\n\t\t- e.g. replace `revision=\"xxxx\"` with `revision=\"01\" ticket=\"xxxx\"`\n\t\t\t- search for: `revision=\"(.*?)\"`\n\t\t\t- replace with: `revision=\"0000\"`","points":25,"extras":"","systemWhenCreated":"2019-05-13 14:07:02","systemWhoCreated":"systemUnknown"},{"id":24,"category":"JavaScript","title":"How to determine if a string contains another string with browser-compatibility","body":"- use .includes()\n\t--------------------------\n\t<!DOCTYPE html>\n\t<html>\n\t<head>\n\t\t<script src=\"https://code.jquery.com/jquery-2.2.4.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div id=\"message\">first</div>\n\n\t\t<script>\n\t\t\t$(function () {\n\t\t\t\tconst name = \"this is a test\";\n\t\t\t\tif (name.includes('nnn')) {\n\t\t\t\t\t$('#message').html('yes');\n\t\t\t\t} else {\n\t\t\t\t\t$('#message').html('no');\n\t\t\t\t}\n\t\t\t});\n\t\t</script>\n\t</body>\n\t</html>\t\n\t--------------------------\n- check in Internet Explorer 11\n\t- gets error\n\t- fix with this:\n\t\t-------------------------\n\t\tif (name.indexOf('nnn') !== -1) {\n\t\t-------------------------\n- this points out why you have to be aware what JavaScript function you use, since Internet Explorer often doesn't support it\n\t- see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes","points":20,"extras":"$rank=3.7","systemWhenCreated":"2019-05-13 13:27:30","systemWhoCreated":"systemUnknown"},{"id":25,"category":"regex","title":"Search and replace with regular expressions","body":"- in **Notepad++**, you have a text such as:\n\t------------------------\n\tthis and sand and band ok\n\t------------------------\n\t- you want to search for the word `and` and replace it with `or`\n\t- the problem is that you will also change `sand` to `sor`, etc.\n- therefore, use regular expressions:\n\t- search for: `\\band\\b`\n\t- replace with: `or`\n- also possible in **Visual Studio Code** and **Google Drive**","points":5,"extras":"$rank=4.5","systemWhenCreated":"2019-04-27 16:06:52","systemWhoCreated":"systemUnknown"},{"id":26,"category":"jquery","title":"Make word flashcards with jQuery","body":"- build up from jquery to regex and dynamic regex:\n\t-----------------------------\n\t<!doctype html>\n\t<html>\n\t<head>\n\t   <script src=\"https://code.jquery.com/jquery-2.2.4.min.js\"></script>\n\t   <style>\n\t\t.back {\n\t\t\tdisplay: none;\n\t\t\tbackground-color: #ddd;\n\t\t}\n\t\t.front {\n\t\t\tbackground-color: #eee;\n\t\t\tcursor: pointer;\n\t\t}\n\t   </style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"main\">\n\t\t111 This is a test of regex <span class=\"front\">front</span><span class=\"back\">the back</span>.\n\n\t\t222 This is a test of regex [front/back]. This is also a test of [111/222].\n\n\t\t</div>\n\n\t\t<script>\n\t\t\t$(function() {\n\t\t\t\t//const mainHtml = $(\"#main\").html();\n\n\t\t\t\t// BASIC REGEX\n\t\t\t\t// TEXT: This is the text.\n\t\t\t\t// const parsedHtml = mainHtml + \"nnn\";\n\t\t\t\t// const parsedHtml = mainHtml.replace(/(text)/, '<i>$1</i>'); \n\n\t\t\t\t// WITH WORD FLASHCARD\n\t\t\t\t// TEXT: This is a test of regex [front/back]. \n\t\t\t\t// build this at regex101: \\[(.*)\\/(.*)\\]\n\t\t\t\t// const parsedHtml = mainHtml.replace(/\\[(.*)\\/(.*)\\]/, '(<span style=\"color: red\">$1</span>) (<span style=\"color: green\">$1</span>)'); \n\n\t\t\t\t// MULTIPLE\n\t\t\t\t// TEXT: This is a test of regex [front/back]. This is also a test of [111/222].\n\t\t\t\t// add ungreedy: https://stackoverflow.com/questions/2824302/how-to-make-regular-expression-into-non-greedy\n\t\t\t\t// const parsedHtml = mainHtml.replace(/\\[(.*?)\\/(.*?)\\]/g, '(<span style=\"color: red\">$1</span>) (<span style=\"color: green\">$1</span>)'); \n\n\t\t\t\t// INTERACTIVE TEST FIRST\n\t\t\t\t// TEXT: This is a test of regex <span class=\"front\">front</span><span class=\"back\">the back</span>.\n\t\t\t\t// const parsedHtml = mainHtml.replace(/\\[(.*?)\\/(.*?)\\]/g, '(<span style=\"color: red\">$1</span>) (<span style=\"color: green\">$1</span>)'); \n\n\t\t\t\t// COMBINE WITH REGEX\n\t\t\t\t// TEXT: This is a test of regex [front/back]. This is also a test of [111/222].\n\t\t\t\t//const parsedHtml = mainHtml.replace(/\\[(.*?)\\/(.*?)\\]/g, '<span class=\"front\">$1</span><span class=\"back\">$1</span>'); \n\n\t\t\t\t// dollar-sign jquery variables: https://stackoverflow.com/questions/205853/why-would-a-javascript-variable-start-with-a-dollar-sign\n\t\t\t\t//$(\"#main\").html(parsedHtml);\n\t\t\t});\n\n\t\t\t//$(function() {\n\t\t\t$(document).ready(function () {\n\n\t\t\t\tconst mainHtml = $(\"#main\").html();\n\t\t\t\tconst parsedHtml = mainHtml.replace(/\\[(.*?)\\/(.*?)\\]/g, '<span class=\"front\">$1</span><span class=\"back\">$1</span>'); \n\n\t\t\t\t$(\"#main\").html(parsedHtml);\n\n\t\t\t\t//alert('works');\n\t\t\t\t//$('.front').css('color', 'blue');\n\t\t\t\t//$('.front').click(function() {\n\t\t\t\t$(document).on('click','.front', function() {\n\t\t\t\t\t//alert('clicked');\n\t\t\t\t\tconst $front = $(this);\n\t\t\t\t\t$front.hide();\n\t\t\t\t\tconst $back = $front.next();\n\t\t\t\t\t$back.show();\n\t\t\t\t});\n\t\t\t});\n\n\t\t</script>\n\n\t</body>\n\t</html>\t\n\t-----------------------------\n- this is the final code that works with a one-way click flip\n\t-------------------------------------------\n\t<!doctype html>\n\t<html>\n\t<head>\n\t   <script src=\"https://code.jquery.com/jquery-2.2.4.min.js\"></script>\n\t   <style>\n\t\t.back {\n\t\t\tdisplay: none;\n\t\t\tbackground-color: #ddd;\n\t\t}\n\t\t.front {\n\t\t\tbackground-color: #eee;\n\t\t\tcursor: pointer;\n\t\t}\n\t   </style>\n\t</head>\n\t<body>\n\t\t<div id=\"main\">\n\t\t\t<p>THIS WORKS: <span class=\"front\">front</span><span class=\"back\">the back</span>.</p>\n\t\t\t<p>this does not work: This is a test of regex [front/back]. This is also a test of [fff/bbb]. This is also a test of [111/222].</p>\t\n\t\t</div>\n\n\t\t<script>\n\t\t\t$(document).ready(function () {\n\t\t\t\tconst mainHtml = $(\"#main\").html();\n\t\t\t\tconst parsedHtml = mainHtml.replace(/\\[(.*?)\\/(.*?)\\]/g, '<span class=\"front\">$1</span><span style=\"display:none\" class=\"back\">$2</span>'); \n\t\t\t\t$(\"#main\").html(parsedHtml);\n\n\t\t\t\t$(document).on('click','.front', function() {\n\t\t\t\t\tconst $front = $(this);\n\t\t\t\t\t$front.hide();\n\t\t\t\t\tconst $back = $front.next();\n\t\t\t\t\t$back.show();\n\t\t\t\t});\n\t\t\t});\n\t\t</script>\n\t</body>\n\t</html>\n\t-------------------------------------------\n- and this is the two-way flip click\n\t------------------------------------\n\t<!doctype html>\n\t<html>\n\t<head>\n\t   <script src=\"https://code.jquery.com/jquery-2.2.4.min.js\"></script>\n\t   <style>\n\t\t.back {\n\t\t\tdisplay: none;\n\t\t\tbackground-color: #ddd;\n\t\t\tcursor: pointer;\n\t\t}\n\t\t.front {\n\t\t\tbackground-color: #eee;\n\t\t\tcursor: pointer;\n\t\t}\n\t   </style>\n\t</head>\n\t<body>\n\t\t<div id=\"main\">\n\t\t\t<p>THIS WORKS: <span class=\"front\">front</span><span class=\"back\">the back</span>.</p>\n\t\t\t<p>this does not work: This is a test of regex [front/back]. This is also a test of [fff/bbb]. This is also a test of [111/222].</p>\t\n\t\t</div>\n\n\t\t<script>\n\t\t\t$(document).ready(function () {\n\t\t\t\tconst mainHtml = $(\"#main\").html();\n\t\t\t\tconst parsedHtml = mainHtml.replace(/\\[(.*?)\\/(.*?)\\]/g, '<span class=\"front\">$1</span><span style=\"display:none\" class=\"back\">$2</span>'); \n\t\t\t\t$(\"#main\").html(parsedHtml);\n\n\t\t\t\t$(document).on('click','.front', function() {\n\t\t\t\t\tconst $front = $(this);\n\t\t\t\t\t$front.hide();\n\t\t\t\t\tconst $back = $front.next();\n\t\t\t\t\t$back.show();\n\t\t\t\t});\n\n\t\t\t\t$(document).on('click','.back', function() {\n\t\t\t\t\tconst $back = $(this);\n\t\t\t\t\t$back.hide();\n\t\t\t\t\tconst $front = $back.prev();\n\t\t\t\t\t$front.show();\n\t\t\t\t});\n\t\t\t});\n\t\t</script>\n\t</body>\n\t</html>\t\n\t------------------------------------","points":100,"extras":"","systemWhenCreated":"2019-04-20 16:24:04","systemWhoCreated":"systemUnknown"},{"id":27,"category":"vscode","title":"Emmet Basics","body":"- learn basic useful features\n\t- make new file: `test.htm`\n\t- `html:5`\n\t\t- tab through, enter title\n\t- all basic elements: `p`, `b`, `i`, `div`\n\t- div with attribute\n\t\t- `div.section`\n\t\t- `div#main`\n\t- a\n\t\t- `a`\n\t\t- `a:link`\n\t- lists: \n\t\t- `ul>li`\n\t\t- `ul>li*5`\n- learn more at https://docs.emmet.io/cheat-sheet","points":10,"extras":"$rank=4.8","systemWhenCreated":"2019-04-20 16:56:16","systemWhoCreated":"systemUnknown"},{"id":29,"category":"Google Docs","title":"How to create a footnote in a Google document","body":"- go to Google Drive\n- create a Document\n- on the page, just click near the bottom and the footnote area will open\n- then click on the **right-justify** button:##rightjustifybutton\n- and type your text##typeatbottomtext\n- your footnote will appear on the bottom of every page##willappearall\n- here's a full video on how to create footnotes:@@ZkC7EmsP6zI","points":5,"extras":"$rank=3.1","systemWhenCreated":"2019-05-02 12:55:22","systemWhoCreated":"systemUnknown"},{"id":30,"category":"windows","title":"How to look in Event Log to see why some error occurred","body":"- in Windows search, look for `event log` or `Ereignisanzeige` (Spanish = `Visor de Eventos`)\n- under **Ereignisanzeige**, **Windows-Protokolle** click on **Anwendung** and the other categories\n- there you will see to the right entries in the log files that applications and the operating system reported and when\n- set a filter to not show information\n- search for TechSmith\n- turn off connect to Internet\n- start SnagIt and check for latest version\n- refresh logs again","points":10,"extras":"$rank=2.8","systemWhenCreated":"2019-05-02 13:04:38","systemWhoCreated":"systemUnknown"},{"id":31,"category":"vscode","title":"How to set a bookmark and return to it","body":"- install **Bookmarks**##thebookmarkInstall\n- to set bookmark, press `CTRL-ALT-K`##toSetbookmark\n- right-click the bookmark and set a meaningful title##therightMark\n- go somewhere else in code, then click on this bookmark and you will return","points":20,"extras":"$rank=4.7","systemWhenCreated":"2019-05-07 15:42:47","systemWhoCreated":"systemUnknown"},{"id":32,"category":"regex","title":"Search for a hyphen that is not at the beginning of a line","body":"- you have this text:\n\t-----------------------------\n\t- this is a test\n\t- this is also a test\n\t- and so is this, you want to find hypens like software-version\n\t- and also: 5 - 2 = 3\n\t-----------------------------\n- `(?<!^)-`\n- for instance: `(?<!a)b` matches a “b” that is not preceded by an “a”, using negative lookbehind.\n- see [explanation of negative lookbehind](https://www.regular-expressions.info/lookaround.html)","points":10,"extras":"$rank=4.5","systemWhenCreated":"2019-05-17 11:23:04","systemWhoCreated":"systemUnknown"},{"id":33,"category":"dotnetcore","title":"How to create a C# console app in .NET Core","body":"- `dotnet new console`\n- `dotnet run`\n- replace code with this:\n\t---------------------\n\tusing System;\n\tusing System.Collections.Generic;\n\tusing System.Text.RegularExpressions;\n\n\tnamespace regextest {\n\t\tclass Program {\n\t\t\tstatic void Main (string[] args) {\n\t\t\t\tList<string> lines = new List<string> ();\n\t\t\t\tList<string> fixedLines = new List<string> ();\n\t\t\t\tlines.Add (\"   This is line number 1.\");\n\t\t\t\tlines.Add (\"        This is line number 2.\\n    lasdkjfsdlfkj\\nskdfjsdflksjdfsdf\");\n\t\t\t\tlines.Add (\"This is line number 3.\");\n\t\t\t\tlines.Add (\"  This is line number 4.\");\n\t\t\t\tlines.Add (\"This is line number 5.\\n11111\\n     22222\\n33333ok\\n       44444   \");\n\t\t\t\tRegexOptions options = RegexOptions.Multiline;\n\t\t\t\tforeach (string line in lines) {\n\t\t\t\t\tvar fixedLine = line;\n\t\t\t\t\tfixedLine = Regex.Replace (fixedLine, @\"^\\s+\", m => \"\");\n\t\t\t\t\tfixedLine = Regex.Replace (fixedLine, @\"\\n\\s+\", m => \"\\n\");\n\n\t\t\t\t\tfixedLines.Add (fixedLine);\n\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < lines.Count; i++) {\n\t\t\t\t\tvar line = lines[i];\n\t\t\t\t\tvar fixedLine = fixedLines[i];\n\t\t\t\t\tConsole.WriteLine (\"=================\");\n\t\t\t\t\tConsole.WriteLine (line);\n\t\t\t\t\tConsole.WriteLine (\"---\");\n\t\t\t\t\tConsole.WriteLine (fixedLine);\n\t\t\t\t\tConsole.WriteLine (\"=================\");\n\t\t\t\t\tConsole.WriteLine ();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t---------------------\n- `dotnet run`","points":30,"extras":"","systemWhenCreated":"2019-05-23 09:25:18","systemWhoCreated":"systemUnknown"},{"id":34,"category":"csharp","title":"How to search and replace via regex","body":"var fixedLine = Regex.Replace (line, @\"\\b[a-z]\\w+\", delegate (Match match) {\n\tstring v = match.ToString ();\n\treturn char.ToUpper (v[0]) + v.Substring (1);\n});","points":20,"extras":"","systemWhenCreated":"2019-05-21 13:59:25","systemWhoCreated":"systemUnknown"},{"id":35,"category":"virtualMachine","title":"Install Windows in virtual machine without key","body":"- download Windows 10 ISO\n\t- https://www.microsoft.com/en-us/software-download/windows10\n\t- download the installer click on `Download Tool Now`\n\t- follow all the clicks to build an ISO\n\t- you eventually have an ISO on your drive, e.g. 3.8 GB (second time was 4.0 GB)\n- install Windows 10 in VirtualBox\n\t- New, follow all defaults\n\t- Start, choose the ISO file\n\t- click \"I don't have a product key\"\n\t- Windows 10 Pro (second time I chose Windows Pro N, i.e. without media player but had to switch back to Pro, not sure if this was the cause of it crashing during installation, i.e. couldn't find the files)\n\t- Custom\n- Login for the first time\n\t- personal use\n\t- create account\n\t\t- new email: e.g. `test123111222@outlook.com` (you never have to confirm)\n\t\t\t- any password: Test4Test$\n\t\t- birthdate, etc.\n\t\t\t- make sure it is before 2000 otherwise it will think you are a child and not let you in\n\t- any pin\n\t\t- 4456\n- log in\n\t- install the tools for connected folder\n\t- Machine, create snaphot, \"Installed\"\n- always start machine where you are logged in so you don't have to log in\n- move the machine: https://superuser.com/questions/633431/whats-the-recommended-way-to-move-a-virtualbox-vm-to-another-computer","points":100,"extras":"","systemWhenCreated":"2019-05-22 16:12:08","systemWhoCreated":"systemUnknown"},{"id":36,"category":"dotnet","title":"How to install Visual Studio Community","body":"- https://visualstudio.microsoft.com/vs/community\n\t- ASP.NET and Web Development\n\t- .NET Desktop Development\n\t- Database\n\t- restart","points":20,"extras":"","systemWhenCreated":"2019-05-23 11:38:20","systemWhoCreated":"systemUnknown"},{"id":38,"category":"dotnet","title":"How to create a C# application in Visual Studio Community","body":"- start Visual Studio Community\n- file, new, project type: console, console app (.net framework), next\n\t- `deepdir`\n\t- `C:\\edward\\consapps`\n\t- place solution in same directory\n\t- [[Create]]\n- edit file\n\t- add `Console.ReadLine();`\n\t- execute\n- replace code with this:\n\t---------------------------------\n\tusing System;\n\tusing System.IO;\n\tusing System.Collections.Generic;\n\tusing System.Diagnostics;\n\tusing static System.Net.Mime.MediaTypeNames;\n\n\tnamespace showimages\n\t{\n\t\tclass Program\n\t\t{\n\t\t\tstatic void Main(string[] args)\n\t\t\t{\n\t\t\t\tvar wildCard = \"*.*\";\n\t\t\t\tif(args.Length > 0)\n\t\t\t\t{\n\t\t\t\t\twildCard = args[0];\n\t\t\t\t}\n\n\t\t\t\tvar docPath = Directory.GetCurrentDirectory();\n\t\t\t\tstring[] files = Directory.GetFiles(docPath, wildCard, SearchOption.AllDirectories);\n\t\t\t\tforeach (string file in files)\n\t\t\t\t{\n\t\t\t\t\tConsole.WriteLine(file);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t---------------------------------\n- switch to release\n- build\n- in Explorer, go to `C:\\edward\\consapps\\deepdir\\bin\\Release`\n\t- copy the .exe files out to another directory with sub-directories\n\t- test it\n- to enable it to work everywhere\n\t- put in e.g. `c:\\consoleapps`\n- in Windows menu, search for `environment`\n\t- Environment variables\n\t- add `C:\\consoleapps` to Path\n\t- close and open command window in any directory\n\t- type `deepdir`","points":50,"extras":"","systemWhenCreated":"2019-05-23 15:36:04","systemWhoCreated":"systemUnknown"},{"id":39,"category":"dotnet","title":"How to install and use LinqPad","body":"- download at: https://www.linqpad.net/download.aspx\n- attach sqlite database\n\t- add connection\n\t- IQ\n\t- Sqlite, browse, OK\n\t- connection: select sqlite database\n- use SQL commands\n\t- choose Language: SQL\n\t- `select * from pageItems`\n\t- `select id,title,kind from pageItems`\n\t- `select id,title,kind from pageItems order by title`\n- use LINQ commands\n\t- 1. query syntax\n\t\t- `from p in PageItems select p`\n\t\t- `from p in PageItems select new { p.Id, p.Title, p.Kind }`\n\t\t- `from p in PageItems orderby p.Title select new { p.Id, p.Title, p.Kind }`\n\t- 2. method syntax\n\t\t- `PageItems`\n\t\t- `PageItems.Where (p => p.Title.StartsWith(\"T\"))`\n\t\t- `PageItems.Where (p => p.Title.StartsWith(\"T\")).OrderBy(m => m.Title)`\n- see **Help > Tutorials and Reference**","points":50,"extras":"$rank=1.0","systemWhenCreated":"2019-05-23 16:35:51","systemWhoCreated":"systemUnknown"},{"id":40,"category":"responsiveDesign","title":"Responsive CSS and HTML to show different content on smartphones and computers/tables","body":"- for styles use this code:\n\t---------------------------\n\t/* smartphone view */\n\t@media (max-width: 577px) {\n\t\t.mainGraphic {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\t/* computer/tablet view */\n\t@media (min-width: 578px) {\n\t\t.mainGraphic {\n\t\t\tbox-shadow: 10px 10px 5px grey;\n\t\t}\n\t}\t\n\t---------------------------\n- for HTML use this code:\n\t-------------------------------\n\t<!--SMARTPHONE VIEW-->\n\t<div class=\"d-inline d-sm-none\">\n\t\tsmartphone HTML goes here\n\t</div>\n\n\t<!--COMPUTER/TABLET VIEW-->\n\t<div class=\"d-none d-sm-inline\">\n\t\tcomputer/tablet HTML goes here\n\t</div>\n\t-------------------------------\n- here's a full HTML test page:\n\t--------------------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<link rel=\"stylesheet\"\n\t\t\t  href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n\t\t<title>responsivity test</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t\t.message {\n\t\t\t\tfont-size: 3em;\n\t\t\t}\n\n\t\t\t/* smartphone view */\n\t\t\t@media (max-width: 577px) {\n\t\t\t\t.message {\n\t\t\t\t\tcolor: red;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* computer/tablet view */\n\t\t\t@media (min-width: 578px) {\n\t\t\t\t.message {\n\t\t\t\t\tcolor: blue;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div class=\"message\">CSS: This is a test</div>\n\n\t\t<!--SMARTPHONE VIEW-->\n\t\t<div class=\"d-inline d-sm-none\">\n\t\t\tHTML: SMARTPHONE\n\t\t</div>\n\n\t\t<!--COMPUTER/TABLET VIEW-->\n\t\t<div class=\"d-none d-sm-inline\">\n\t\t\tHTML: computer or tablet\n\t\t</div>\n\n\t</body>\n\n\t</html>\n\t--------------------------------------","points":50,"extras":"","systemWhenCreated":"2019-07-23 15:25:30","systemWhoCreated":"systemUnknown"},{"id":41,"category":"vscode","title":"How to get the thick scrollbar back on the right side","body":"- `ctrl-,`\n- type `editor.minimap.enabled` and set to true","points":5,"extras":"$rank=4.1","systemWhenCreated":"2019-07-30 14:36:59","systemWhoCreated":"systemUnknown"},{"id":42,"category":"JavaScript","title":"Small JavaScript page that pops up a timestamp to copy and paste","body":"- copy and paste the following text to a file called `timestamp.htm`\n\t--------------------------\n\t<html>\n\t<head>\n\t<title>timestamp</title>\n\n\t<script>\n\t\t// rawTimeString = \"2017-08-01T08:18:32.525Z\"\n\t\tfunction getTimeLine(rawTimeString, format) {\n\t\t\tvar date = rawTimeString.substring(0,10); // \"2017-08-01\"\n\t\t\tvar fullTime = rawTimeString.substring(11,19); // \"08:18:32\"\n\t\t\tvar shortTime = rawTimeString.substring(11,16); // \"08:18\"\n\t\t\tvar shortRoundedTime = rawTimeString.substring(11,14) + \"00\"; // \"08:00\"\n\t\t\tvar timeLine = '';\n\n\t\t\tswitch(format) {\n\t\t\t\tcase 'standard': // \"2019-08-01 08:30:46\"\n\t\t\t\t\ttimeLine = date + \" \" + fullTime;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'range': // \"2017-08-01 08:33 - 2017-08-01 08:33\"\n\t\t\t\t\tvar shortTimeStamp = date + \" \" + shortTime;\n\t\t\t\t\ttimeLine = shortTimeStamp + ' - ' + shortTimeStamp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roundedRange': // \"2017-08-01 08:00 - 2017-08-01 08:00\"\n\t\t\t\t\tvar shortRoundedTimeStamp = date + \" \" + shortRoundedTime;\n\t\t\t\t\ttimeLine = shortRoundedTimeStamp + ' - ' + shortRoundedTimeStamp;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ttimeLine = '(unknown format)';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn timeLine;\n\t\t}\n\n\t\tfunction copyTimestampToClipboard() {\n\t\t\tvar offset = 4;\n\t\t\tvar d = new Date();\n\t\t\tutc = d.getTime() + (d.getTimezoneOffset() * 60000);\n\t\t\tnd = new Date(utc + (3600000*offset));\n\t\t\tvar rawTimeString = nd.toISOString(); \n\t\t\tvar timeLine = getTimeLine(rawTimeString, 'standard');\n\t\t\twindow.prompt(\"CTRL-C, CTRL-W\", timeLine);\n\t\t}\n\t</script>\n\n\t</head>\n\t<body onload=\"copyTimestampToClipboard()\">\n\n\t</body>\n\t</html>\n\t--------------------------\n- double-click on it and press `CTRL-C`, `CTRL-W` to get quick timestamp to copy and paste\n- you can easily make new formats, e.g. see `standard`, `range` and `roundedRange` or make your own\n- in your browser, make a bookmark for it for fast access","points":30,"extras":"$rank=4.6","systemWhenCreated":"2019-08-01 08:37:51","systemWhoCreated":"systemUnknown"},{"id":43,"category":"vuejs","title":"Syntax for dynamic classes in Vue.js","body":"Use the following syntaxes to create dynamic classes in Vue.js.\n\t------------------------\n\t<div id=\"vue\">\n\t  <div :class=\"{highlighted: isImported}\">\n\t\tsyntax 1: apply-class-if-true\n\t  </div>\n\t  <div :class=\"{highlighted: loggedIn && totalProcessed >= processGoal}\">\n\t\tsyntax 2: apply-class-if-expression\n\t  </div>\n\t  <div :class=\"{highlighted: isImported, 'double-highlighted':isSaved}\">\n\t\tsyntax 3: multiple apply-class-if-true\n\t  </div>\n\t  <div :class=\"[highlightClass, doubleHighlightClass]\">\n\t\tsyntax 4: list of classes as array\n\t  </div>\n\t  <div :class=\"[isAdministrator ? 'highlighted-administrator' : 'highlighted']\">\n\t\tsyntax 5: ternary operator\n\t  </div>\n\t  <div :class=\"[isAdministrator ? 'highlighted-administrator' : 'highlighted', isWrong ? 'error': '']\">\n\t\tsyntax 6: multiple ternary operators\n\t  </div>\n\t</div>\n\t------------------------","points":20,"extras":"","systemWhenCreated":"2019-08-01 09:05:04","systemWhoCreated":"systemUnknown"},{"id":44,"category":"json","title":"How to get sets of JSON data for examples","body":"- go to: https://github.com/graphql-compose/graphql-compose-examples/tree/master/examples/northwind/data/json\n- TODO:  do 10 examples with map, filter, and reduce\n- keywords: sample data to import","points":10,"extras":"$status=todo","systemWhenCreated":"2019-08-01 12:59:19","systemWhoCreated":"systemUnknown"},{"id":45,"category":"sqlite","title":"Create 10 examples of complex SQLite statements","body":"- get SQLite sample database\n\t- http://www.sqlitetutorial.net/sqlite-sample-database\n\t- click on  \"Download SQLite sample database\" and download the `chinook.zip` database\n- download and install DB Browser for SQLite\n\t- https://sqlitebrowser.org\n- list simple table\n\t---------------------------\n\tselect * from albums\n\t---------------------------\n- simple join of albums and artists\n\t---------------------------\n\tselect * from albums al\n\tjoin artists ar on al.ArtistId = ar.ArtistId\n\t---------------------------\n- simple join of albums and artists only with pertinent fields\n\t---------------------------\n\tselect AlbumId, Title, al.ArtistId, Name as Artist from albums al\n\tjoin artists ar on al.ArtistId = ar.ArtistId\n\t---------------------------\n- list all unique cities in customers\n\t---------------------------\n\tselect distinct city from customers order by city\n\t---------------------------\n- at http://www.sqlitetutorial.net/sqlite-sample-database do six more examples that are interesting","points":100,"extras":"","systemWhenCreated":"2019-08-13 15:20:36","systemWhoCreated":"systemUnknown"},{"id":46,"category":"DPN","title":"How to set Datapod into developing mode so the server restarts when files are changed","body":"- in `config.js`, change `exports.developing` to true.\n- reload the page and click on the link to login as developer","points":5,"extras":"$rank=3.6","systemWhenCreated":"2019-08-14 11:10:22","systemWhoCreated":"systemUnknown"},{"id":47,"category":"typescript","title":"Basic example of TypeScript-to-JavaScript compiling","body":"- make directory `testts`\n- go to command line\n\t- `npm install typescript`\n\t\t- (if tsc doesn't work after then then try: `npm install -g typescript`)\n- create `person.ts`:\n\t------------------------\n\tinterface Person {\n\t\tfirstName: string;\n\t\tlastName: string;\n\t}\n\n\tfunction displayWelcomeMessage(person: Person) {\n\t\treturn `Hello, ${person.firstName} ${person.lastName}.`;\n\t}\t\t\t\t\t\n\t------------------------\n- create `index.htm`:\n\t--------------------------\n\t<!DOCTYPE html>\n\t<html>\n\t\t<head><title>TypeScript Test</title></head>\n\t\t<body>\n\t\t\t<div id=\"message\">(no message)</div>\n\t\t\t<script src=\"person.js\"></script>\n\t\t\t<script>\n\t\t\t\tconst user = { firstName: \"Hans\", lastName: \"Tester\" };\n\t\t\t\tdocument.getElementById('message').innerHTML = displayWelcomeMessage(user);\n\t\t\t</script>\n\t\t</body>\n\t</html>\t\t\t\t\t\t\n\t--------------------------\n- execute `tsc person.ts`\n- note that `person.js` was created and is the JavaScript version of the TypeScript file\n- look at `index.htm` in a browser","points":40,"extras":"","systemWhenCreated":"2019-08-20 12:41:42","systemWhoCreated":"systemUnknown"},{"id":48,"category":"DPN","title":"Record screencasts with Hypercam","body":"- download Hypercam at http://www.hyperionics.com\n- install\n- set screen area to: 10/10, 1280x720 (or for smaller: 1024x576) and Iconize##hypercam1\n- Hot Keys: start/stop = CTRL-F10, pause/resume = CTRL-F11\n- avi file name, e.g. `C:\\edward\\raw_videos\\`\n- sound: select headphones, sample rate: 44100","points":50,"extras":"","systemWhenCreated":"2019-08-20 21:18:12","systemWhoCreated":"systemUnknown"},{"id":49,"category":"DPN","title":"How to set up Datapod for Node including development environment","body":"- these instructions assume you are installing on Windows\n\t- Datapod for Node will run on Linux and Mac, but you'll have to substitute tools appropriately, etc.\n- recommended pre-install tools\n\t- these tools will make your environment easier to work in, install them if you haven't yet\n\t\t- install 7zip \n\t\t\t- you'll have more options zipping and unzipping files if you install 7zip\n\t\t\t- goto [7-zip.de](https://7-zip.de)\n\t\t\t- download and install\n\t\t- install Notepad++\n\t\t\t- even though you'll be using Visual Studio Code for your main editor, Notepad++ is a useful, non-nonsense text editor to quickly edit any text file\n\t\t\t- goto: https://notepad-plus-plus.org/download\n\t\t\t- download and install\n- make a directory where you are going to put your Node websites\n\t- create `c:\\nodewebs`\n\t- create `c:\\nodewebs\\main` (where \"main\" is the name of your datapod site)\n- install Git\n\t- whether or not you save your code in Git, it gives you the bash command line interface, so that you have a more Linux-like command line where you can use bash commands such as `ls` and `pwd`\n\t- go to `https://git-scm.com/download`\n\t- then just download and click-accept-click to install it\n\t- to test if it was successful, right-click in directory `c:\\nodewebs\\main` and you should see option **Git Bash Here**\n- install Node and NPM\n\t- go to `http://nodejs.org`\n\t- download the LTS version\n\t- install it with click-accept-click\n\t- check versions of each\n\t\t- in Windows Explorer, go to `c:\\nodewebs\\main`\n\t\t- right-click and choose **Git Bash Here**\n\t\t- type `node -v`, you should get something like **v10.16.3**\n\t\t- type `npm -v`, you should get something like **6.9.0**\n- install Datapod\n\t- go to `http://tanguay.info/datapod`\n\t\t- TODO: make link here\n\t- go to [tanguay.info/tech/datapodForNode](http://tanguay.info/tech/datapodForNode)\n\t- unzip the file `dpn00300.zip`\n\t- copy all the files to `c:\\nodewebs\\main`\n\t- in the Windows Explorer at `c:\\nodewebs\\main`, right-click and enter the Git bash shell\n\t\t- type `npm install` (this may take a few minutes)\n\t- test Datapod \n\t\t- starting it with `node server.js`\n\t\t\t- you may have to allow access to Node.js, click **allow**\n\t\t- it should say **Now listening at http://localhost:49901**\n\t\t- in your browser, go to `http://localhost:49901`\n\t\t- log in as `dev`/`dev`\n\t\t- if it logs in, then Datapod is correctly installed\n\t\t- log out\n- install Visual Studio Code\n\t- goto `https://code.visualstudio.com`\n\t- download and install\n\t- in Windows Explorer, goto `c:\\nodewebs\\main`\n\t- right-click, **Git Bash Here**\n\t- type `code .`\n- setup Datapod developer mode\n\t- since Datapod in developer mode makes changes to its own files and thus requires nodemon\n\t- install it like this: `npm install -g nodemon`\n\t- in `system\\config.js`, change **exports.developing** to `true`\n\t- run Datapod again with `nodemon server.js`\n\t- click on login, \n\t- test Datapod developer features\n\t\t- create page\n\t\t\t- call it `Information`\n\t\t\t- see that it is added to the menu\n\t\t- delete page\n\t\t\t- type `Information`\n\t\t\t- see that it was removed from the menu\n- install DB Browser for SQLite\n\t- go to [sqlitebrowser.org](https://sqlitebrowser.org/dl)\n\t- for 64-bit machines, choose **DB Browser for SQLite - Standard installer for 64-bit Windows**\n\t- execute it, accepting all defaults\n\t- if it doesn't show in the start menu, go to `C:\\Program Files\\DB Browser for SQLite`, right-click on `DB Browser for SQLite.exe` and choose **pin to taskbar, so you have this:**##pintotaskbardebrowse\n\t- start DB Browser for SQLite\n\t\t- open `C:\\nodewebs\\main\\data` and choose `main.sqlite`\n\t\t- right-click on **pageItems** and choose **Browse Table**\n\t\t- under column header **title**, type `logout`\n\t\t- change `Logout` to `Logout2` and then click on **Write Changes**\n\t\t- refresh the Datapod website, and you will see in your menu that the label **Logout** changed to **Logout2**\n\t\t- change it back\n- setup quick-start icons \n\t- we will now make it possible to start your Node server with one click, when you want to develop on your Datapod site\n\t- make directory: c:\\start\n\t\t- create file: `start_main.bat` where **main** is the name of your site\n\t\t\t---------------------------------------\n\t\t\tcd C:\\nodewebs\\main\n\t\t\tnodemon server.js      \n\t\t\t---------------------------------------\n\t\t- right-click bat file: create shortcut\n\t\t\t- rename shortcut to `start_main`\n\t\t- right-click shortcut: properties \n\t\t\t- in the `target` field, type `explorer ` in front of path\n\t\t\t\t- .e.g so that it reads `explorer C:\\start\\start_main.bat`\n\t\t\t- change icon to whatever you want\n\t\t\t- `OK` (enter)\n\t\t- drag shortcut to task bar\n\t- stop and close any nodemon you have running\n\t\t- with **CTRL-C**\n\t\t- and type `exit`\n\t- click on icon\n\t\t- test your site to make sure it works, e.g. go to `http://localhost:49901`\n\t- format the command window running Node so it looks different from others\n\t\t- (you will use this window to output information from backend files)\n\t\t- click on C:\\ icon (upper-left) and properties\n\t\t- Colors, opacity 80%\n\t\t- Font, size: 12\n\t- if you want to run other CMD windows while this window is open, right-click, right-click on \"Command Prompt\", open\n- customize Visual Studio Code\n\t- turn on autosave\t\n\t\t- files will be automatically saved after you make any changes, so you will not have to press **CTRL-S** anymore\n\t\t- **CTRL-C**, `auto save`, change auto save to **afterDelay**\n\t- snippets\n\t\t- these are chunks of code with variable positions that you can inject into code by typing a short code and pressing TAB\n\t\t- click File, Preferences, User Snippets\n\t\t\t- click on **javascript.json**\n\t\t\t- replace the text there with:\n\t\t\t\t--------------------------------\n\t\t\t\t{\n\t\t\t\t\t\"Show debug output\": {\n\t\t\t\t\t\t\"prefix\": \"dd\",\n\t\t\t\t\t\t\"body\": \"qdev.debug('$1',$2);\"\n\t\t\t\t\t},\n\t\t\t\t\t\"console.log\": {\n\t\t\t\t\t\t\"prefix\": \"cc\",\n\t\t\t\t\t\t\"body\": \"console.log('$1: ' + $2);\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t--------------------------------\n\t\t- now open up a controller file with CTRL-P, `controller`\n\t\t\t- in the file type `cc` and TAB to see it expand\n\t- test to make sure **emmet** works\n\t\t- emmet enables you to type large chunks of HTML code with short codes\n\t\t- it should be installed by default\n\t\t- open up an `.ejs` view file of any of your pages, e.g. CTRL-P and `ejs` and choose a page\n\t\t- in an open space in the HTML, type `ul>li#5` and then press TAB\n\t\t- see more basics in the [Emmet Basics Howto](http://tanguay.info/tech/howtos?id=27)\n\t- install the CSS/LESS formatter extension\n\t\t- open `system_main.less` with CTRL-P, type `less`\n\t\t- TAB a line to unformat it\n\t\t- press SHIFT-ALT-F to try to format it\n\t\t- click **Install Formatter...**\n\t\t- click the [[Install]] button on the extension called **formate: CSS/LESS/SCSS formatter**\n\t\t- again, open `system_main.less` with CTRL-P, type `less`\n\t\t- TAB a line to unformat it\n\t\t- press SHIFT-ALT-F to format it this time\n- setup automatic LESS-to-CSS conversion\n\t- Datapod uses .less style files which need to be converted into css\n\t- open `system_main.less` with CTRL-P, type `less`\n\t- at the end, add the following *less* code:\n\t\t---------------------\n\t\tdiv.test {\n\t\t\tp {\n\t\t\t\tcolor: red;\n\t\t\t}\n\t\t}\n\t\t---------------------\n\t- open `system_main.css` with CTRL-P, type `main css`\n\t- see that you code was not yet automatically added\n\t- in Windows Explorer, go to `C:\\nodewebs\\main`\n\t- right-click and **Git Bash Here**\n\t- type `npm install -g less`\n\t- type `npm install -g less-watch-compiler`\n\t- type `less-` and TAB and ENTER\n\t- see that your change is not in `system_main.less`\n\t- add another style e.g.:\n\t\t----------------------\n\t\tdiv.test {\n\t\t\tp {\n\t\t\t\tcolor: red;\n\t\t\t}\n\t\t\th1 {\n\t\t\t\tcolor: blue;\n\t\t\t}\n\t\t}\n\t\t----------------------\n\t- and see that your `system_main.less` file was automatically updated\n\t- from now on, when you start to develop, you will simply need to type `less-` then TAB and ENTER","points":100,"extras":"","systemWhenCreated":"2019-08-20 23:28:02","systemWhoCreated":"systemUnknown"},{"id":51,"category":"Regex","title":"Click on examples at regex101","body":"- go to [regex101](https://regex101.com) and click through the examples in the lower right","points":50,"extras":"","systemWhenCreated":"2019-09-06 16:49:19","systemWhoCreated":"systemUnknown"},{"id":52,"category":"Datapod for Node","title":"How to read in new information on the Screen Scrape Showcase","body":"- here is the code to read in the points data\n\t-----------------------\n\tgetHackerNewsData(html) {\n\t\tconst data = [];\n\t\tconst nextData = {};\n\t\tconst $ = cheerio.load(html);\n\t\t$('table.itemlist tr td:nth-child(3)').each((i, elem) => {\n\t\t\tconst pointText = $(elem).parent().next().find('td.subtext').find('span.score').text();\n\t\t\tdata.push({\n\t\t\t\ttitle: $(elem).text(),\n\t\t\t\tlink: $(elem).find('a.storylink').attr('href'),\n\t\t\t\tpointText: qstr.isEmpty(pointText) ? '??? points' : pointText\n\t\t\t});\n\t\t});\n\t\treturn data;\n\t}\n\t-----------------------","points":70,"extras":"","systemWhenCreated":"2019-09-10 16:37:26","systemWhoCreated":"systemUnknown"},{"id":53,"category":"vuejs","title":"How to click a button which selects text in a textarea","body":"- HTML:\n\t-------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div>\n\t\t\t\t<button @click=\"selectTheText\">Select the Text of box 2</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<textarea v-for=\"id in ids\" :id=\"'info'+id\">this is box {{id}}</textarea>\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<script>\n\t\t\tconst app = new Vue({\n\t\t\t\tel: \"#app\",\n\t\t\t\tdata: {\n\t\t\t\t\tinfo: 'nnn',\n\t\t\t\t\tids: [1, 2, 3]\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize: function () {\n\t\t\t\t\t\tthis.message = 'test';\n\t\t\t\t\t},\n\t\t\t\t\tselectTheText: function () {\n\t\t\t\t\t\tdocument.getElementById('info2').select();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tapp.initialize();\n\t\t</script>\n\t</body>\n\n\t</html>\n\t-------------------------\n- but in larger Vue.js pages, I had to call a Vue.js method:\n\t-----------------------------\n\t<div class=\"templateArea\" v-show=\"showTemplateArea\">\n\t\t<textarea style=\"display:none\" id=\"templateArea\" class=\"showCodeToCopy localCodeBlock\">\n\tcode line 111\n\tcode line 222\n\tcode line 333</textarea>\n\t</div>\n\t-----------------------------\n- and then handle it with jQuery\n\t-------------------------------\n\ttoggleTemplateArea: function () {\n\t\tif (!$('#templateArea').is(':visible')) {\n\t\t\t$('#templateArea').show();\n\t\t\tdocument.getElementById('templateArea').select();\n\t\t} else {\n\t\t\t$('#templateArea').hide();\n\t\t}\n\t}\n\t-------------------------------","points":40,"extras":"$rank=0.5","systemWhenCreated":"2019-09-11 14:29:26","systemWhoCreated":"systemUnknown"},{"id":54,"category":"windows","title":"How to find out latest Windows version, e.g. 1903","body":"- right-click Windows-Icon, Einstellungen\n- System\n- Info\n- scroll down: Windows Spezifikation##thewinwinversion","points":5,"extras":"$rank=3.1","systemWhenCreated":"2019-09-18 08:59:13","systemWhoCreated":"systemUnknown"},{"id":55,"category":"notepadePlusPlus","title":"Compare to files with Compare plugin","body":"- Notepad++\n- click Plugins, Plugins Admin\n- type `compare`\n- try: compare since last save\n- try: compare two files","points":20,"extras":"","systemWhenCreated":"2019-10-23 15:14:25","systemWhoCreated":"systemUnknown"},{"id":56,"category":"ubuntu","title":"Set file to always open with Notepad++","body":"- right-click file, properties\n- open with\n- do example with `.txt` files and `.js` files for Notepad++ and Visual Studio Code","points":5,"extras":"$rank=4.4","systemWhenCreated":"2019-10-23 15:25:28","systemWhoCreated":"systemUnknown"},{"id":57,"category":"linux","title":"How to create path of directories at once","body":"- `mkdir -p ~/git/testing/version001`\n- the tilda means your home directory","points":5,"extras":"$rank=4.4","systemWhenCreated":"2019-11-26 16:29:37","systemWhoCreated":"systemUnknown"},{"id":58,"category":"DPN","title":"How to set up a dpn site from Github","body":"- clone from GitHub to local machine\n\t- `git clone https://github.com/edwardtanguay/dpn.git n49999_mysite`\n\t\t- `n49999_` is a convention of mine, `n` stands for Node and `49999` for the port this site will be running on\n\t\t- if you develop multiple Datapod sites, this convention will help you keep your sites organized\n\t- `cd n49999_mysite`\n\t- `npm install`\n\t- with any editor, change `system/config.js`\n\t- in `config.js` change port to **49999**\n\t- test the site\n\t\t- `nodemon server.js`\n\t\t- in browser: `http://localhost:49999`\n\t\t- login as `dev` / `dev`\n\t\t- logout\n\t\t- [[CTRL-C]] to stop nodemon\n\t- save as new repository at GitHub\n\t\t- on Github, create new repository **n49999_mysite**\n\t\t- `git remote set-url origin https://github.com/edwardtanguay/n49999_mysite.git`\n\t\t- `git add *`\n\t\t- `git commit -m initial`\n\t\t- `git push`\n- test new respository on another machine\n\t- `git clone https://github.com/edwardtanguay/n49999_mysite.git`\n\t- `cd n49999_mysite`\n\t- `npm install`\n\t- test the site\n\t\t- `nodemon server.js`\n\t\t- in browser: `http://localhost:49999`\n\t\t- login as `dev` / `dev`\n\t\t- logout\n\t\t- [[CTRL-C]] to stop nodemon","points":50,"extras":"","systemWhenCreated":"2019-11-26 17:14:50","systemWhoCreated":"systemUnknown"},{"id":59,"category":"regex","title":"How to replace list markers in Notepad++","body":"- you have this list in Notepad++\n\t---------------------------\n\t1: jeden\n\t2: dwa\n\t3 – trzy\n\t4 – cztery\n\t5 – pięć\n\t6 – sześć\n\t7 – siedem\n\t8 – osiem\n\t9 – dziewięć\n\t10 – dziesięć\n\t11 – jedenaście\n\t12 – dwanaście\n\t13 – trzynaście\n\t14 – czternaście\n\t15 – piętnaście\n\t16 – szesnaście\n\t17 – siedemnaście\n\t18 – osiemnaście\n\t19 – dziewiętnaście\n\t20 – dwadzieścia\n\t30 – trzydzieści\n\t40 – czterdzieści\n\t50 – pięćdziesiąt\n\t60 – sześćdziesiąt\n\t70 – siedemdziesiąt\n\t80 – osiemdziesiąt\n\t90 – dziewięćdziesiąt\n\t100 – sto\t\n\t---------------------------\n- and you want to change it to:\n\t---------------------------\n\tNumber 1: jeden\n\tNumber 2: dwa\n\tNumber 3: trzy\n\tNumber 4: cztery\n\tNumber 5: pięć\n\tNumber 6: sześć\n\tNumber 7: siedem\n\tNumber 8: osiem\n\tNumber 9: dziewięć\n\tNumber 10: dziesięć\n\tNumber 11: jedenaście\n\tNumber 12: dwanaście\n\tNumber 13: trzynaście\n\tNumber 14: czternaście\n\tNumber 15: piętnaście\n\tNumber 16: szesnaście\n\tNumber 17: siedemnaście\n\tNumber 18: osiemnaście\n\tNumber 19: dziewiętnaście\n\tNumber 20: dwadzieścia\n\tNumber 30: trzydzieści\n\tNumber 40: czterdzieści\n\tNumber 50: pięćdziesiąt\n\tNumber 60: sześćdziesiąt\n\tNumber 70: siedemdziesiąt\n\tNumber 80: osiemdziesiąt\n\tNumber 90: dziewięćdziesiąt\n\tNumber 100: sto\t\t\n\t---------------------------\n- search for `^(\\d*)\\s.\\s`\n- replace with `Number $1:`","points":50,"extras":"","systemWhenCreated":"2019-11-29 15:10:59","systemWhoCreated":"systemUnknown"},{"id":60,"category":"linux","title":"How to copy a file with a date/time stamp","body":"- `cp testing testing_backup_(BACKTICK)date +%Y-%m-%d--%H-%M-%S(BACKTICK)`\n- replace `(BACKTICK)` with a backtick:##withthebacktickhere","points":5,"extras":"$rank=4.5","systemWhenCreated":"2019-12-02 16:59:12","systemWhoCreated":"systemUnknown"},{"id":61,"category":"Git","title":"How to create, use, merge and delete a branch locally","body":"- create new branch, [naming conventions](http://blog.avinoth.com/2019/05/28/git-branch-naming-convention.html)\n\t- `git checkout -b et/feat/outline-date`\n- view current branches\n\t- `git branch`\n- (make changes)\n- commit changes\n\t- `git commit -am \"outline change\"`\n- switch back to master\n\t- `git checkout master`\n- merge feature branch into master\n\t- `git merge et/feat/outline-date --no-ff`\n- delete empty feature branch\n\t- `git branch -d et/feat/outline-date`\n- then push your changes to remote\n\t- `git push`","points":50,"extras":"","systemWhenCreated":"2019-12-03 11:57:31","systemWhoCreated":"systemUnknown"},{"id":62,"category":"windows","title":"How to set Windows Explorer to show drives when it opens","body":"- open Windows Explorer\n- in header area, click **View** (Ansicht)\n- on the right, click **Options**\n- choose: **change folder and search options**\n- change to: **This PC**","points":5,"extras":"$rank=3.8","systemWhenCreated":"2019-12-04 10:05:48","systemWhoCreated":"systemUnknown"},{"id":63,"category":"ubuntu","title":"Install Ubuntu in VirtualBox","body":"- use [this foray](forays?openItemIds=46&id=46) and create HowTo as you go","points":100,"extras":"$rank=3.8","systemWhenCreated":"2019-12-06 15:09:55","systemWhoCreated":"systemUnknown"},{"id":64,"category":"Regex","title":"Find '##' followed by a variable at end of line","body":"- You want to find all \"##\" which have a variable code at the end\n\t- but not \"##\" at the end\n\t- and not if it has spaces or any other character in it\n- e.g. find the first four but not the others\n\t--------------------\n\tsdjfk sjkf skdfj sdkf##ksjf2ksdjf\n\tsfjsdfsdlf##kdjfdkfjd\n\tksdjfsdkfjsdkf##kdf\n\t##sdkfsdkfasd\n\taskdfjsfkjsdlkfj##\n\tasdfksdjfsdfkjsdf##sdjfksdfj.sdfjkdfjdf\n\tksdjfsdkfjsdkf#kdf\n\tdkfjfiejfiefjefij## sdkfjs dfksjd f\n\t--------------------\n- use this:\n\t- `##([a-zA-Z1-9])+$`","points":20,"extras":"$rank=4.5","systemWhenCreated":"2019-12-11 12:50:14","systemWhoCreated":"systemUnknown"},{"id":65,"category":"Regex","title":"Create regex to find uppercase code with underlines","body":"- you want to identify if a user has put a code on a line to identify a header\n- the code has to have the following characteristics\n\t- it is alone on the line\n\t- it is all uppercase\n\t- underlines are allowed\n- e.g. only the last two items should pass:\n\t------------------\n\tthis is not ok\n\tNot_this\n\talso_not\n\tTHIS_IS not ok\n\tTHIS_IS_OK\n\tTHISTOO\t\t\n\t------------------\n- use this regex: `^[A-Z_]*$`","points":10,"extras":"$rank=0.5","systemWhenCreated":"2019-12-12 13:11:14","systemWhoCreated":"systemUnknown"},{"id":66,"category":"dpod","title":"How to get nodemon working on \"command not found\" error","body":"- `npm install nodemon --save-dev`\n- `node_modules/.bin/nodemon server.js`","points":30,"extras":"","systemWhenCreated":"2019-12-25 23:13:32","systemWhoCreated":"systemUnknown"},{"id":67,"category":"JavaScript","title":"How to simulate a method that takes two seconds to execute","body":"- use `Date.now()`: \n\t---------------------------\n\tfunction getUserDetails_sync() {\n\t\tconst timeout = Date.now() + 2000;\n\t\twhile (Date.now() < timeout) { }\n\t\treturn \"test data\";\n\t}\n\t---------------------------","points":20,"extras":"","systemWhenCreated":"2020-04-18 20:52:09","systemWhoCreated":"systemUnknown"},{"id":68,"category":"JavaScript","title":"Example to show synchronous and asynchronous calls","body":"- use `callback`:\n\t------------------------\n\tconsole.log(\"getting data...\");\n\n\tfunction doSomething_sync() {\n\t\tlet data = getUserDetails_sync();\n\t\tconsole.log(data);\n\t\tconsole.log(\"thread available again\");\n\t}\n\n\tfunction getUserDetails_sync() {\n\t\tconst timeout = Date.now() + 2000;\n\t\twhile (Date.now() < timeout) {}\n\t\treturn \"sync data\";\n\t}\n\n\tfunction doSomething_async() {\n\t\tgetUserDetails_async((data) => console.log(data));\n\t\tconsole.log(\"thread available again\");\n\t}\n\n\tfunction getUserDetails_async(callback) {\n\t\tsetTimeout(() => callback(\"async data\"), 2000);\n\t}\n\n\tdoSomething_sync();\n\t//doSomething_async();\n\t------------------------","points":50,"extras":"","systemWhenCreated":"2020-04-18 21:16:53","systemWhoCreated":"systemUnknown"},{"id":69,"category":"JavaScript","title":"Asynchronous JavaScript joke","body":"- use `callback`:\n\t-------------------------\n\ttellJoke();\n\n\tfunction tellJoke() {\n\t\taskQuestion((data) => console.log(data));\n\t\ttellPunchLine();\n\t}\n\tfunction askQuestion(callback) {\n\t\tsetTimeout(() => callback(\"Did you hear the one about the JavaScript function that walks into a bar?\"), 3000);\n\t}\n\n\tfunction tellPunchLine() {\n\t\tconsole.log(\"It sits at the bar and orders a callback.\");\n\t}\n\t-------------------------","points":30,"extras":"$rank=4.9","systemWhenCreated":"2020-04-18 21:43:14","systemWhoCreated":"systemUnknown"},{"id":70,"category":"node","title":"How to use .emit() and .on() for events","body":"- `eventTest.js`\n------------------------------\nconst emitter = require(\"./events/eventEmitter\");\n\nemitter.timer.on(\"closing\", () => console.log(\"now the book is about to be closed\"));\nemitter.timer.on(\"reading\", () => console.log(\"ok, it is reading now\"));\n\nemitter.launchTimer();\n------------------------------\n- `eventEmitter.js`\n-------------------------------\nconst EventEmitter = require(\"events\");\n\ntimer = new EventEmitter();\n\nexports.launchTimer = function () {\nsetTimeout(() => timer.emit(\"opening\"), 1000);\nsetTimeout(() => timer.emit(\"reading\"), 2000);\nsetTimeout(() => timer.emit(\"closing\"), 3000);\n};\n\nexports.timer = timer;\n-------------------------------","points":90,"extras":"","systemWhenCreated":"2020-04-21 21:47:21","systemWhoCreated":"systemUnknown"},{"id":71,"category":"vue.js","title":"How to set up a simple Vue.js page","body":"- create directory `vuetest`\n- go there with VSCode\n- open terminal\n- `npm i -g vue-cli`\n- terminal: `vue init simple .`\n- open with Live Server","points":50,"extras":"","systemWhenCreated":"2020-04-21 23:07:37","systemWhoCreated":"systemUnknown"},{"id":72,"category":"node","title":"Basics of a command line program","body":"- use Node's stdin:\n\t----------------------------\n\tprocess.stdin.setEncoding(\"utf8\");\n\tprocess.stdin.on(\"data\", evaluate);\n\tprocess.stdin.on(\"pause\", () => console.log('Terminated.'));\n\n\tfunction evaluate(rawInput) {\n\t\tconst command = rawInput.trim();\n\t\tswitch (command) {\n\t\t\tcase \"help\":\n\t\t\t\tconsole.log(`\n\thelp - get this list\n\tlist - show all items\n\texit - leaves program\n\t`);\n\t\t\t\tbreak;\n\t\t\tcase \"list\":\n\t\t\t\tconsole.log(`\n\tpageItems\n\tusers\n\titemTypes\n\t`);\n\t\t\t\tbreak;\n\t\t\tcase \"exit\":\n\t\t\t\tprocess.stdin.pause();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(`unknown command, type \"help\" for a list of commands`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t----------------------------","points":100,"extras":"","systemWhenCreated":"2020-05-02 10:20:29","systemWhoCreated":"systemUnknown"},{"id":73,"category":"windows","title":"How to set up Git Bash in Hyper terminal","body":"- download **and** install Hyper: https://hyper.is\n- copy this text: https://gist.github.com/coco-napky/404220405435b3d0373e37ec43e54a23\n- paste in Edit | Preferences (or [[CTRL-,]])","points":30,"extras":"","systemWhenCreated":"2020-05-04 10:37:19","systemWhoCreated":"systemUnknown"},{"id":74,"category":"Bootstrap","title":"Basic Bootstrap/React Form","body":"- HTML\n\t-------------------\n\t<div className=\"card mt-3\">\n\t\t<div className=\"apt-addheading card-header bg-primary text-white\">Termin hinzufügen</div>\n\t\t<div className=\"card-body\">\n\n\t\t\t<form id=\"aptForm\" noValidate>\n\n\t\t\t\t<div className=\"form-group form-row\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"col-md-2 col-form-label text-md-right\"\n\t\t\t\t\t\thtmlFor=\"petName\"\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t>Tiername</label>\n\t\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tname=\"petName\"\n\t\t\t\t\t\t\tplaceholder=\"Tiername\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group form-row\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"col-md-2 col-form-label text-md-right\"\n\t\t\t\t\t\thtmlFor=\"ownerName\"\n\t\t\t\t\t>Besitzer</label>\n\t\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tname=\"ownerName\"\n\t\t\t\t\t\t\tplaceholder=\"Name des Besitzers\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group form-row\">\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"col-md-2 col-form-label text-md-right\"\n\t\t\t\t\t\thtmlFor=\"aptDate\"\n\t\t\t\t\t>Datum</label>\n\t\t\t\t\t<div className=\"col-md-4\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tname=\"aptDate\"\n\t\t\t\t\t\t\tid=\"aptDate\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label\n\t\t\t\t\t\tclassName=\"col-md-2 col-form-label text-md-right\"\n\t\t\t\t\t\thtmlFor=\"aptTime\"\n\t\t\t\t\t>Uhrzeit</label>\n\t\t\t\t\t<div className=\"col-md-4\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tname=\"aptTime\"\n\t\t\t\t\t\t\tid=\"aptTime\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group form-row\">\n\t\t\t\t\t<label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">Anmerkungen</label>\n\t\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tname=\"aptNotes\"\n\t\t\t\t\t\t\tid=\"aptNotes\"\n\t\t\t\t\t\t\tplaceholder=\"Anmerkungen\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group form-row mb-0\">\n\t\t\t\t\t<div className=\"offset-md-2 col-md-10\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary d-block ml-auto\"\n\t\t\t\t\t\t>Termin hinzufügen</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</form>\n\t\t</div>\n\t</div>\n\t-------------------\n- CSS:\n\t---------------------\n\t.apt-addheading {\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t}\n\t--------------------","points":50,"extras":"","systemWhenCreated":"2020-05-12 19:31:05","systemWhoCreated":"systemUnknown"},{"id":75,"category":"bootstrap","title":"Responsive dark navbar","body":"- HTML\n\t----------------\n\t<header class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n\t\t<ul class=\"navbar-nav\">\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a href=\"#\" class=\"nav-link active\">Welcome</a>\n\t\t\t</li>\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a href=\"#\" class=\"nav-link\">Create Item</a>\n\t\t\t</li>\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a href=\"#\" class=\"nav-link\">Create Page</a>\n\t\t\t</li>\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a href=\"#\" class=\"nav-link disabled\">About</a>\n\t\t\t</li>\n\t\t</ul>\n\t</header>\n\t----------------","points":20,"extras":"","systemWhenCreated":"2020-05-12 21:50:22","systemWhoCreated":"systemUnknown"},{"id":76,"category":"bootstrap","title":"Unresponsive dark navbar","body":"- HTML\n\t----------------\n\t<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n\t\t<ul class=\"navbar-nav\">\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<NavLink to=\"/all\" className=\"nav-link\"><GiStack /> All</NavLink>\n\t\t\t</li>\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<NavLink to=\"/git\" className=\"nav-link\"><GiStack /> Git</NavLink>\n\t\t\t</li>\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<NavLink to=\"/gimp\" className=\"nav-link\"><GiStack /> Gimp</NavLink>\n\t\t\t</li>\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<NavLink to=\"/linux\" className=\"nav-link\"><GiStack /> Linux</NavLink>\n\t\t\t</li>\n\t\t</ul>\n\t</nav>\n\t----------------\n- It won't break on mobile devices: ##theunresponheader","points":20,"extras":"","systemWhenCreated":"2020-05-12 22:38:49","systemWhoCreated":"systemUnknown"},{"id":77,"category":"bootstrap","title":"Responsive, collapsable navbar with graphic","body":"- collapsable menu on smartphones:##responsenavbarimage\n- HTML\n\t----------------------\n\t<header class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n\t\t<div class=\"navbar-brand\">\n\t\t\t<img src=\"logo.png\" alt=\"\">\n\t\t</div>\n\t\t<button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-content\">\n\t\t\t<span class=\"navbar-toggler-icon\"></span>\n\t\t</button>\n\t\t<div class=\"collapse navbar-collapse\" id=\"navbar-content\">\n\t\t\t<nav>\n\t\t\t\t<ul class=\"navbar-nav mr-auto\">\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a href=\"#\" class=\"nav-link active\">Welcome</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a href=\"#\" class=\"nav-link\">Create Item</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a href=\"#\" class=\"nav-link\">Create Page</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a href=\"#\" class=\"nav-link disabled\">About</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</div>\n\t</header>\n\t----------------------\n- see [code at GitHub](https://github.com/edwardtanguay/bootstrap4/tree/58d8f2bee10981c90051b2f3aa68fc8087329f03/navBarResponsiveWithGraphic)","points":100,"extras":"","systemWhenCreated":"2020-05-16 12:42:17","systemWhoCreated":"systemUnknown"},{"id":79,"category":"CSS","title":"Three-Screen Responsive Layout with grid-container and @media screen","body":"- three screens:##threeresponsivescreens\n- HTML:\n\t------------------------\n\t<section class=\"grid-container\">\n\t\t<header>\n\t\t\t<h1>Lorem ipsum dolor sit.</h1>\n\t\t</header>\n\t\t<main>\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ex, maxime enim alias, illum blanditiis, amet\n\t\t\t\teaque id illo accusantium eius nisi facere rerum? Beatae atque, tempora explicabo repellendus reiciendis\n\t\t\t\tconsequuntur.</p>\n\t\t\t<p>Quis, porro praesentium pariatur corporis impedit assumenda eum vero quos blanditiis voluptate recusandae\n\t\t\t\todio natus illum similique dolorem optio vitae doloribus mollitia voluptatibus consequuntur nesciunt\n\t\t\t\tperferendis aliquid, et nisi. Id.</p>\n\t\t\t<p>Atque ipsum, eos, excepturi optio dolore aliquid error placeat nemo magni, natus fuga! Molestiae modi\n\t\t\t\tassumenda sequi ullam velit perferendis eligendi, alias esse recusandae doloribus aut molestias nihil\n\t\t\t\test reprehenderit?</p>\n\t\t\t<p>Eveniet, cupiditate repudiandae molestiae quos. Laboriosam magni, ullam tempore vitae repellendus\n\t\t\t\ttemporibus possimus. Dolorum corrupti voluptatum, repellat cum praesentium facilis soluta quis porro\n\t\t\t\taliquid itaque perferendis, nostrum libero fuga eaque?</p>\n\t\t</main>\n\t\t<aside>\n\t\t\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorem, labore dolorum, fuga explicabo, placeat\n\t\t\taliquid facere nesciunt illo animi neque dolores voluptatibus reprehenderit doloribus tenetur amet facilis\n\t\t\tsit quidem corrupti.\n\t\t</aside>\n\t\t<footer>Lorem ipsum dolor sit amet, consectetur.</footer>\n\t</section>\n\t------------------------\n- CSS:\n\t-----------------------\n\tbody {\n\t\tbackground: #dedede;\n\t\tpadding: 10px;\n\t}\n\n\theader {\n\t\tbackground: #7c9aea;\n\t\tborder: 2px solid #1d42a7;\n\t\tpadding: 10px;\n\t}\n\n\tmain {\n\t\tbackground: #81ce8a;\n\t\tborder: 2px solid #2f7136;\n\t\tpadding: 10px;\n\t}\n\n\taside {\n\t\tbackground: #e88585;\n\t\tborder: 2px solid #a22424;\n\t\tpadding: 10px;\n\t}\n\n\tfooter {\n\t\tbackground: #eb8fe8;\n\t\tborder: 2px solid #8d1f89;\n\t\tpadding: 10px;\n\t}\n\n\t.grid-container {\n\t\tdisplay: grid;\n\t\tgrid-gap: 20px;\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\t.grid-container {\n\t\t\tgrid-template-columns: 1fr 200px;\n\t\t}\n\n\t\theader,\n\t\tfooter {\n\t\t\tgrid-column: 1 / 3;\n\t\t}\n\t}\n\n\t@media screen and (min-width: 1024px) {\n\t\t.grid-container {\n\t\t\tgrid-template-columns: 1fr 400px;\n\t\t\tgrid-template-rows: auto repeat(2, 1fr);\n\t\t}\n\n\t\tmain {\n\t\t\tgrid-row: 2 / 4;\n\t\t}\n\n\t\tfooter {\n\t\t\tgrid-column: 2 / 3;\n\t\t}\n\t}\n\t-----------------------\n- full code at [GitHub](https://github.com/edwardtanguay/cssgrid4/tree/45e10821f718217daa54cf96a03ed883ac99f482/threeScreenResponsive)","points":100,"extras":"","systemWhenCreated":"2020-05-17 12:11:36","systemWhoCreated":"systemUnknown"},{"id":80,"category":"JavaScript","title":"How to define multiple variables from an array or JavaScript object","body":"- this is useful when sending data back from functions, e.g. return an array or JavaScript object, note that one can even return a function\n\t--------------------\n\tconsole.log(`${name}: \"${quote}\"`);\n\n\tconst { username, text, buildQuote } = { username: 'Julian the Apostate', text: 'You have won, O Galilean.', buildQuote: (a,b) => { return `It was ${a} who said, \"${b}\"`;} };\n\tconsole.log(`${username}: \"${text}\"`);\n\tconsole.log(buildQuote(username, text));\n\t--------------------","points":20,"extras":"","systemWhenCreated":"2020-05-18 20:27:23","systemWhoCreated":"systemUnknown"},{"id":81,"category":"Node","title":"Make a 10-line web server","body":"- `npm i http-server` (not necessary)\n- server.js:\n\t-------------------------\n\tconst http = require('http');\n\tconst port = 3001;\n\n\thttp.createServer(function (request, repuesto) {\n\t\trepuesto.writeHead(200, { 'Content-Type': 'text/plain' });\n\t\trepuesto.write(\"Hello.\");\n\t\trepuesto.end();\n\t}).listen(port, 'localhost');\n\n\tconsole.log(`listing at http://localhost:${port}`);\n\t-------------------------","points":40,"extras":"","systemWhenCreated":"2020-05-27 00:08:26","systemWhoCreated":"systemUnknown"},{"id":82,"category":"ES6","title":"ES6 function syntax","body":"- these are seven ways you can write functions in ES6:\n\t-----------------------------------\n\tfunction countIt(items) {\n\t\treturn items.length;\n\t}\n\n\tconst countIt2 = function (items) {\n\t\treturn items.length + 1;\n\t}\n\n\tconst countIt3 = (items) => {\n\t\treturn total = items.length + 2;\n\t};\n\n\tconst countIt4 = (items) => items.length + 3;\n\n\tconst countIt5 = items => items.length + 4;\n\n\tconst sayHello = () => \"hello\";\n\n\tconst getAuthor = () => ({\n\t\tfirstName: \"Maruice\",\n\t\tlastName: \"Merleau-Ponty\"\n\t});\n\n\tconst numbers = [1, 2, 3, 4, 5];\n\n\tconsole.log(countIt(numbers));\n\tconsole.log(countIt2(numbers));\n\tconsole.log(countIt3(numbers));\n\tconsole.log(countIt4(numbers));\n\tconsole.log(countIt5(numbers));\n\tconsole.log(sayHello());\n\tconsole.log(getAuthor());\n\t-----------------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-05 16:52:47","systemWhoCreated":"systemUnknown"},{"id":83,"category":"ES6","title":"Syntax to mock functions e.g. for testing","body":"- the code:\n\t---------------------------\n\t// simple example\n\tconst status = \"short\"; // \"short\" or \"long\"\n\tconst displayInfo = status == \"short\"\n\t\t? name => console.log(`Hello, ${name}.`)\n\t\t: name => console.log(`We welcome you, ${name}.`)\n\tdisplayInfo(\"Pierre-Simon\");\n\n\t//realistic example\n\tconst DEVELOPMENT = true;\n\tconst fetchDataReal = () => {\n\t\t// time-intensive operations \n\t};\n\tconst fetchDataTest = () => ({\n\t\tname: 'Gideon Mantall',\n\t\tbirthYear: 1790\n\t});\n\tconst fetchData = DEVELOPMENT\n\t\t? fetchDataTest\n\t\t: fetchDataReal;\n\t---------------------------","points":30,"extras":"","systemWhenCreated":"2020-06-05 17:29:22","systemWhoCreated":"systemUnknown"},{"id":84,"category":"JavaScript","title":"Use arrays of functions","body":"- this example shows a number of tasks that you run on a number:\n\t------------------------------\n\tconst add = (x, y) => x + y;\n\tconst subtract = (x, y) => x - y;\n\tconst multiply = (x, y) => x * y;\n\tconst divide = (x, y) => x / y;\n\n\tconst tasks = [add, subtract, multiply, divide];\n\n\ttasks.forEach(f => console.log(f(3, 5)));\n\t------------------------------","points":25,"extras":"","systemWhenCreated":"2020-06-08 13:04:25","systemWhoCreated":"systemUnknown"},{"id":85,"category":"JavaScript","title":"Send functions as parameters","body":"- note you can send not only predefiend custom but system and on-the-fly functions\n\t-----------------------------\n\tconst add = (x, y) => x + y;\n\tconst subtract = (x, y) => x - y;\n\n\tconst process = (x, y, func) => func(x, y);\n\n\tconsole.log(process(5, 4, add));\n\tconsole.log(process(5, 4, subtract));\n\tconsole.log(process(5, 4, Math.max));\n\tconsole.log(process(5, 4, Math.min));\n\tconsole.log(process(5, 4, (x, y) => x * y));\n\t-----------------------------","points":30,"extras":"","systemWhenCreated":"2020-06-08 13:46:17","systemWhoCreated":"systemUnknown"},{"id":86,"category":"JavaScript","title":"Return functions from functions","body":"- this is known as a function factory:\n\t----------------\n\tconst createMultiplier = y => x => x * y;\n\n\tconst doubleIt = createMultiplier(2);\n\tconst tripleIt = createMultiplier(3);\n\tconst quadrupleIt = createMultiplier(4);\n\n\tconsole.log(doubleIt(5));\n\tconsole.log(tripleIt(5));\n\tconsole.log(quadrupleIt(5));\n\t----------------","points":35,"extras":"","systemWhenCreated":"2020-06-08 14:10:38","systemWhoCreated":"systemUnknown"},{"id":87,"category":"JavaScript","title":"Simple example of closure","body":"- notes that the value is still inside the function even after it has been passed:\n\t-----------------\n\tconst createFunction = () => {\n\t\tconst x = 5;\n\t\treturn () => console.log(`the value is ${x}`); \n\t};\n\n\tconst func = createFunction();\n\n\tfunc();\n\t-----------------","points":25,"extras":"","systemWhenCreated":"2020-06-08 14:50:58","systemWhoCreated":"systemUnknown"},{"id":88,"category":"JavaScript","title":"Simple JavaScript class with private variables","body":"- private variables are available only via public setter and getter methods\n\t-----------------------------\n\tconst Person = ({ name, age, job }) => {\n\t\tlet _name = name;\n\t\tlet _age = age;\n\t\tlet _job = job;\n\n\t\treturn {\n\t\t\tgetName: () => _name,\n\t\t\tgetAge: () => _age,\n\t\t\tgetJob: () => _job,\n\n\t\t\tsetName: name => _name = name,\n\t\t\tsetAge: age => _age = age,\n\t\t\tsetJob: job => _job = job\n\t\t};\n\t}\n\n\tconst p = Person({ name: 'Maurice', age: 73, job: 'writer' });\n\tconsole.log(p.getName());\n\tp.setName(\"Angelo\");\n\tconsole.log(p.getName());\n\t-----------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-08 17:33:26","systemWhoCreated":"systemUnknown"},{"id":89,"category":"JavaScript","title":"Use high-order JavaScript functions to separate concerns","body":"- instead of having parameter checking logic in the function itself, do this:\n\t------------------------------\n\tconst divide = (x,y) => {\n\t\treturn x/y;\n\t};\n\n\tconst secondArgumentIsntZero = func => (...args) => {\n\t\tif(args[1] === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn func(...args);\n\t}\n\n\tconst divideSafe = secondArgumentIsntZero(divide);\n\n\tconsole.log(divideSafe(10,0));\n\t------------------------------","points":30,"extras":"","systemWhenCreated":"2020-06-11 12:09:04","systemWhoCreated":"systemUnknown"},{"id":90,"category":"ES6","title":"Spread operator for objects and arrays and function parameters","body":"- note how updates overwrite properties\n\t------------------------\n\t// objects\n\n\tconst person = {\n\t\tname: \"Paul Dirac\",\n\t\tage: 40,\n\t\thairColor: 'brown'\n\t};\n\n\tconst careerData = {\n\t\ttitle: 'physicist',\n\t\tarea: 'quantum theory'\n\t};\n\n\tconst nationalityData = {\n\t\tcountry: 'Britain',\n\t\tworkedIn: 'USA'\n\t};\n\n\tconst updates = {\n\t\thairColor: 'black'\n\t}\n\n\tconst personWithCareerData = {\n\t\t...person,\n\t\t...careerData,\n\t\tcountry: nationalityData.country,\n\t\t...updates\n\t};\n\n\tconsole.log(personWithCareerData);\n\n\t// arrays\n\n\tconst numbers = [1, 2, 3, 4, 5];\n\tconst newNumbers = [\n\t\t0,\n\t\t...numbers,\n\t\t6, 7, 8\n\t]\n\n\tconsole.log(newNumbers);\n\n\t// functions\n\tconst add = (x, y, z) => console.log(`${x} + ${y} + ${z} = ${x + y + z}`);\n\tadd(1, 2, 3);\n\tconst numbers = [6, 7, 8, 9, 10];\n\tadd(...numbers);\n\t------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-11 17:44:11","systemWhoCreated":"systemUnknown"},{"id":91,"category":"ES6","title":"Use .map() to convert arrays to new arrays","body":"- note that you can send a predefined function, see tripled:\n\t--------------------------\n\tconst numbers = [1, 2, 3, 4, 5];\n\tnumbers.reverse();\n\tconst doubled = numbers.map(x => x * 2);\n\tconst tripleIt = x => x * 3;\n\tconst tripled = numbers.map(tripleIt);\n\n\tconsole.log(numbers);\n\tconsole.log(doubled);\n\tconsole.log(tripled);\n\n\tconst people = [\n\t\t{\n\t\t\tname: \"George Romanes\",\n\t\t\tcountry: \"Canada\"\n\t\t},\n\t\t{\n\t\t\tname: \"Syngman Rhee\",\n\t\t\tcountry: \"South Korea\"\n\t\t},\n\t\t{\n\t\t\tname: \"Harry Hopkins\",\n\t\t\tcountry: \"USA\"\n\t\t}\n\t];\n\n\tconst names = people.map(x => x.name);\n\n\tconst extendedPeople = people.map(x => {\n\t\tconst pieces = x.name.trim().split(\" \");\n\t\treturn {\n\t\t\tfirstName: pieces[0],\n\t\t\tlastName: pieces[1],\n\t\t\tisCanadian: x.country === \"Canada\"\n\t\t}\n\t});\n\n\tconsole.log(people);\n\tconsole.log(names);\n\tconsole.log(extendedPeople);\n\t--------------------------","points":70,"extras":"","systemWhenCreated":"2020-06-12 14:14:15","systemWhoCreated":"systemUnknown"},{"id":92,"category":"ES6","title":"How to filter arrays","body":"- notice difference between `longNames` and `longNamedPeople`:\n\t-------------------------\n\tconst numbers = [1, 2, 3, 5, 7, 45, 67, 88, 34, 65, 34, 23, 65, 23, 42, 22, 25];\n\tconst evenNumbers = numbers.filter(x => x % 2 === 0);\n\tconst oddNumbers = numbers.filter(x => x % 2 !== 0);\n\n\tconsole.log(numbers);\n\tconsole.log(evenNumbers);\n\tconsole.log(oddNumbers);\n\n\tconst people = [\n\t\t{\n\t\t\tname: \"Petrarch\",\n\t\t\tdied: 1374\n\t\t},\n\t\t{\n\t\t\tname: \"Vincent Martín y Soler\",\n\t\t\tdied: 1806\n\t\t},\n\t\t{\n\t\t\tname: \"Henri Dunant\",\n\t\t\tdied: 1910\n\t\t},\n\t];\n\n\tconst modernPeople = people.filter( x => x.died > 1800);\n\tconsole.log(modernPeople);\n\n\tconst minLength = len => x => x.length >= len;\n\n\tconst longNames = people.map(x => x.name).filter(minLength(10));\n\tconsole.log(longNames);\n\n\tconst longNamedPeople = people.filter( x => x.name.length >= 10);\n\tconsole.log(longNamedPeople);\n\t-------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-12 16:20:38","systemWhoCreated":"systemUnknown"},{"id":93,"category":"ES6","title":"How to use .every() and .some()","body":"- note the `isNotEmpty` function:\n\t------------------------------------\n\tconst employees = getEmployees();\n\tconsole.log(employees.length);\n\tconsole.log(employees.map(x => {\n\t\treturn {\n\t\t\tname: x.firstName + ' ' + x.lastName,\n\t\t\tcity: x.address.city,\n\t\t\tyearOfBirth: x.birthDate.substr(0, 4)\n\t\t};\n\t}));\n\tconst fromLondon = x => x.address.city === \"London\";\n\tconsole.log(employees.every(fromLondon));\n\tconsole.log(employees.some(fromLondon));\n\tconsole.log(employees.filter(fromLondon).length);\n\n\tconst isNotEmpty = string => !!string;\n\n\tconsole.log(`The following employees have no titles: ${employees.filter(x => x.title === \"\").map(x => x.firstName + \" \" + x.lastName).join(\", \")}`);\n\tconsole.log(employees.map(x => x.lastName).every(isNotEmpty));\n\tconsole.log(employees.map(x => x.title).every(isNotEmpty));\n\n\t// data\n\tfunction getEmployees() {\n\t\treturn [\n\t\t\t{\n\t\t\t\t\"employeeID\": 2,\n\t\t\t\t\"lastName\": \"Fuller\",\n\t\t\t\t\"firstName\": \"Andrew\",\n\t\t\t\t\"title\": \"Vice President Sales\",\n\t\t\t\t\"titleOfCourtesy\": \"Dr.\",\n\t\t\t\t\"birthDate\": \"1952-02-19 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1992-08-14 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"908 W. Capital Way\",\n\t\t\t\t\t\"city\": \"Tacoma\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98401,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-9482\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Andrew received his BTS commercial in 1974 and a Ph.D. in international marketing from the University of Dallas in 1981.  He is fluent in French and Italian and reads German.  He joined the company as a sales representative was promoted to sales manager\",\n\t\t\t\t\"reportsTo\": \"NULL\",\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t1730,\n\t\t\t\t\t1833,\n\t\t\t\t\t2116,\n\t\t\t\t\t2139,\n\t\t\t\t\t2184,\n\t\t\t\t\t40222,\n\t\t\t\t\t1581\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 5,\n\t\t\t\t\"lastName\": \"Buchanan\",\n\t\t\t\t\"firstName\": \"Steven\",\n\t\t\t\t\"title\": \"\",\n\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\"birthDate\": \"1955-03-04 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1993-10-17 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"14 Garrett Hill\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"SW1 8JR\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-4848\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Steven Buchanan graduated from St. Andrews University in Scotland with a BSC degree in 1976.  Upon joining the company as a sales representative in 1992 he spent 6 months in an orientation program at the Seattle office.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t2903,\n\t\t\t\t\t7960,\n\t\t\t\t\t8837,\n\t\t\t\t\t10019,\n\t\t\t\t\t10038,\n\t\t\t\t\t11747,\n\t\t\t\t\t14450\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 1,\n\t\t\t\t\"lastName\": \"Davolio\",\n\t\t\t\t\"firstName\": \"Nancy\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1948-12-08 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1992-05-01 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"507 20th Ave. E. Apt. 2A\",\n\t\t\t\t\t\"city\": \"Seattle\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98122,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-9857\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Education includes a BA in psychology from Colorado State University in 1970.  She also completed The Art of the Cold Call.  Nancy is a member of Toastmasters International.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t6897,\n\t\t\t\t\t19713\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 3,\n\t\t\t\t\"lastName\": \"Leverling\",\n\t\t\t\t\"firstName\": \"Janet\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1963-08-30 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1992-04-01 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"722 Moss Bay Blvd.\",\n\t\t\t\t\t\"city\": \"Kirkland\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98033,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-3412\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Janet has a BS degree in chemistry from Boston College (1984). She has also completed a certificate program in food retailing management.  Janet was hired as a sales associate in 1991 and promoted to sales representative in February 1992.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t30346,\n\t\t\t\t\t31406,\n\t\t\t\t\t32859,\n\t\t\t\t\t33607\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 4,\n\t\t\t\t\"lastName\": \"Peacock\",\n\t\t\t\t\"firstName\": \"Margaret\",\n\t\t\t\t\"title\": \"\",\n\t\t\t\t\"titleOfCourtesy\": \"Mrs.\",\n\t\t\t\t\"birthDate\": \"1937-09-19 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1993-05-03 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"4110 Old Redmond Rd.\",\n\t\t\t\t\t\"city\": \"Redmond\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98052,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-8122\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Margaret holds a BA in English literature from Concordia College (1958) and an MA from the American Institute of Culinary Arts (1966).  She was assigned to the London office temporarily from July through November 1992.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t20852,\n\t\t\t\t\t27403,\n\t\t\t\t\t27511\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 6,\n\t\t\t\t\"lastName\": \"Suyama\",\n\t\t\t\t\"firstName\": \"Michael\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\"birthDate\": \"1963-07-02 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1993-10-17 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"Coventry House Miner Rd.\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"EC2 7JR\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-7773\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Michael is a graduate of Sussex University (MA Economics 1983) and the University of California at Los Angeles (MBA marketing 1986).  He has also taken the courses Multi-Cultural Selling and Time Management for the Sales Professional.\",\n\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t85014,\n\t\t\t\t\t85251,\n\t\t\t\t\t98004,\n\t\t\t\t\t98104,\n\t\t\t\t\t98052\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 7,\n\t\t\t\t\"lastName\": \"King\",\n\t\t\t\t\"firstName\": \"Robert\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\"birthDate\": \"1960-05-29 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1994-01-02 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"Edgeham Hollow Winchester Way\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"RG1 9SP\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-5598\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Robert King served in the Peace Corps and traveled extensively before completing his degree in English at the University of Michigan in 1992 the year he joined the company.\",\n\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t60601,\n\t\t\t\t\t80202,\n\t\t\t\t\t80909,\n\t\t\t\t\t90405,\n\t\t\t\t\t94025,\n\t\t\t\t\t94105,\n\t\t\t\t\t95008,\n\t\t\t\t\t95054,\n\t\t\t\t\t95060,\n\t\t\t\t\t60179\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 8,\n\t\t\t\t\"lastName\": \"Callahan\",\n\t\t\t\t\"firstName\": \"Laura\",\n\t\t\t\t\"title\": \"Inside Sales Coordinator\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1958-01-09 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1994-03-05 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"4726 11th Ave. N.E.\",\n\t\t\t\t\t\"city\": \"Seattle\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98105,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-1189\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Laura received a BA in psychology from the University of Washington.  She has also completed a course in business French.  She reads and writes French.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t19428,\n\t\t\t\t\t44122,\n\t\t\t\t\t45839,\n\t\t\t\t\t53404\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 9,\n\t\t\t\t\"lastName\": \"Dodsworth\",\n\t\t\t\t\"firstName\": \"Anne\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1966-01-27 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1994-11-15 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"7 Houndstooth Rd.\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"WG2 7LT\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-4444\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Anne has a BA degree in English from St. Lawrence College.  She is fluent in French and German.\",\n\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t3049,\n\t\t\t\t\t3801,\n\t\t\t\t\t48075,\n\t\t\t\t\t48084,\n\t\t\t\t\t48304,\n\t\t\t\t\t55113,\n\t\t\t\t\t55439\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\t------------------------------------","points":70,"extras":"","systemWhenCreated":"2020-06-12 16:58:20","systemWhoCreated":"systemUnknown"},{"id":94,"category":"gimp","title":"How to make perspective, gradient-colored text","body":"- example:##thecongrats\n- create text in one layer\n- create empty layer below\n- select text layer\n- Layer > Transparency > Alpha to selection\n- hide text layer\n- select empty layer\n- \"g\" for gradiant\n- choose foreground and background colors\n- drag\n- ENTER\n- CTRL-SHIFT-a\n- layer > crop to content\n- then \"t\" for transfrm","points":50,"extras":"","systemWhenCreated":"2020-06-14 21:54:12","systemWhoCreated":"systemUnknown"},{"id":95,"category":"gimp","title":"Outline around text","body":"- example:##thethetext\n- create text\n- layer > text to path\n- paths tab\n- paint-along-the-paths button\n- change foreground color\n- [[Stroke]]","points":40,"extras":"","systemWhenCreated":"2020-06-14 22:38:33","systemWhoCreated":"systemUnknown"},{"id":96,"category":"JavaScript","title":"Sorting array of objects ascending and descending","body":"- note that you can pass in the appropriate sorting function:\n\t------------------------\n\tconst employees = getEmployees();\n\n\tconst ascendingLastName = (a,b) => a.last > b.last;\n\tconst descendingLastName = (a,b) => a.last < b.last;\n\n\tconsole.log(employees.map(x => {\n\t\treturn {\n\t\t\tfirst: x.firstName,\n\t\t\tlast: x.lastName\n\t\t};\n\t}).sort(descendingLastName));\n\n\n\t// data\n\tfunction getEmployees() {\n\t\treturn [\n\t\t\t{\n\t\t\t\t\"employeeID\": 2,\n\t\t\t\t\"lastName\": \"Fuller\",\n\t\t\t\t\"firstName\": \"Andrew\",\n\t\t\t\t\"title\": \"Vice President Sales\",\n\t\t\t\t\"titleOfCourtesy\": \"Dr.\",\n\t\t\t\t\"birthDate\": \"1952-02-19 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1992-08-14 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"908 W. Capital Way\",\n\t\t\t\t\t\"city\": \"Tacoma\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98401,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-9482\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Andrew received his BTS commercial in 1974 and a Ph.D. in international marketing from the University of Dallas in 1981.  He is fluent in French and Italian and reads German.  He joined the company as a sales representative was promoted to sales manager\",\n\t\t\t\t\"reportsTo\": \"NULL\",\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t1730,\n\t\t\t\t\t1833,\n\t\t\t\t\t2116,\n\t\t\t\t\t2139,\n\t\t\t\t\t2184,\n\t\t\t\t\t40222,\n\t\t\t\t\t1581\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 5,\n\t\t\t\t\"lastName\": \"Buchanan\",\n\t\t\t\t\"firstName\": \"Steven\",\n\t\t\t\t\"title\": \"\",\n\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\"birthDate\": \"1955-03-04 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1993-10-17 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"14 Garrett Hill\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"SW1 8JR\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-4848\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Steven Buchanan graduated from St. Andrews University in Scotland with a BSC degree in 1976.  Upon joining the company as a sales representative in 1992 he spent 6 months in an orientation program at the Seattle office.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t2903,\n\t\t\t\t\t7960,\n\t\t\t\t\t8837,\n\t\t\t\t\t10019,\n\t\t\t\t\t10038,\n\t\t\t\t\t11747,\n\t\t\t\t\t14450\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 1,\n\t\t\t\t\"lastName\": \"Davolio\",\n\t\t\t\t\"firstName\": \"Nancy\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1948-12-08 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1992-05-01 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"507 20th Ave. E. Apt. 2A\",\n\t\t\t\t\t\"city\": \"Seattle\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98122,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-9857\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Education includes a BA in psychology from Colorado State University in 1970.  She also completed The Art of the Cold Call.  Nancy is a member of Toastmasters International.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t6897,\n\t\t\t\t\t19713\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 3,\n\t\t\t\t\"lastName\": \"Leverling\",\n\t\t\t\t\"firstName\": \"Janet\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1963-08-30 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1992-04-01 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"722 Moss Bay Blvd.\",\n\t\t\t\t\t\"city\": \"Kirkland\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98033,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-3412\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Janet has a BS degree in chemistry from Boston College (1984). She has also completed a certificate program in food retailing management.  Janet was hired as a sales associate in 1991 and promoted to sales representative in February 1992.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t30346,\n\t\t\t\t\t31406,\n\t\t\t\t\t32859,\n\t\t\t\t\t33607\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 4,\n\t\t\t\t\"lastName\": \"Peacock\",\n\t\t\t\t\"firstName\": \"Margaret\",\n\t\t\t\t\"title\": \"\",\n\t\t\t\t\"titleOfCourtesy\": \"Mrs.\",\n\t\t\t\t\"birthDate\": \"1937-09-19 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1993-05-03 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"4110 Old Redmond Rd.\",\n\t\t\t\t\t\"city\": \"Redmond\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98052,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-8122\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Margaret holds a BA in English literature from Concordia College (1958) and an MA from the American Institute of Culinary Arts (1966).  She was assigned to the London office temporarily from July through November 1992.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t20852,\n\t\t\t\t\t27403,\n\t\t\t\t\t27511\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 6,\n\t\t\t\t\"lastName\": \"Suyama\",\n\t\t\t\t\"firstName\": \"Michael\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\"birthDate\": \"1963-07-02 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1993-10-17 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"Coventry House Miner Rd.\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"EC2 7JR\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-7773\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Michael is a graduate of Sussex University (MA Economics 1983) and the University of California at Los Angeles (MBA marketing 1986).  He has also taken the courses Multi-Cultural Selling and Time Management for the Sales Professional.\",\n\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t85014,\n\t\t\t\t\t85251,\n\t\t\t\t\t98004,\n\t\t\t\t\t98104,\n\t\t\t\t\t98052\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 7,\n\t\t\t\t\"lastName\": \"King\",\n\t\t\t\t\"firstName\": \"Robert\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\"birthDate\": \"1960-05-29 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1994-01-02 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"Edgeham Hollow Winchester Way\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"RG1 9SP\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-5598\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Robert King served in the Peace Corps and traveled extensively before completing his degree in English at the University of Michigan in 1992 the year he joined the company.\",\n\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t60601,\n\t\t\t\t\t80202,\n\t\t\t\t\t80909,\n\t\t\t\t\t90405,\n\t\t\t\t\t94025,\n\t\t\t\t\t94105,\n\t\t\t\t\t95008,\n\t\t\t\t\t95054,\n\t\t\t\t\t95060,\n\t\t\t\t\t60179\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 8,\n\t\t\t\t\"lastName\": \"Callahan\",\n\t\t\t\t\"firstName\": \"Laura\",\n\t\t\t\t\"title\": \"Inside Sales Coordinator\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1958-01-09 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1994-03-05 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"4726 11th Ave. N.E.\",\n\t\t\t\t\t\"city\": \"Seattle\",\n\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\"postalCode\": 98105,\n\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\"phone\": \"(206) 555-1189\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Laura received a BA in psychology from the University of Washington.  She has also completed a course in business French.  She reads and writes French.\",\n\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t19428,\n\t\t\t\t\t44122,\n\t\t\t\t\t45839,\n\t\t\t\t\t53404\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"employeeID\": 9,\n\t\t\t\t\"lastName\": \"Dodsworth\",\n\t\t\t\t\"firstName\": \"Anne\",\n\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\"birthDate\": \"1966-01-27 00:00:00.000\",\n\t\t\t\t\"hireDate\": \"1994-11-15 00:00:00.000\",\n\t\t\t\t\"address\": {\n\t\t\t\t\t\"street\": \"7 Houndstooth Rd.\",\n\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\"postalCode\": \"WG2 7LT\",\n\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\"phone\": \"(71) 555-4444\"\n\t\t\t\t},\n\t\t\t\t\"notes\": \"Anne has a BA degree in English from St. Lawrence College.  She is fluent in French and German.\",\n\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t3049,\n\t\t\t\t\t3801,\n\t\t\t\t\t48075,\n\t\t\t\t\t48084,\n\t\t\t\t\t48304,\n\t\t\t\t\t55113,\n\t\t\t\t\t55439\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\t------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-15 18:03:00","systemWhoCreated":"systemUnknown"},{"id":97,"category":"HTML","title":"Basic responsive form with fieldset and legends","body":"- the responsive element is that the legends have a smaller size on narrow screens:##thehtmlformok33\n- notice that the radio buttons and checkboxes do not allow user to click on text:\n\t-------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, minimum-scale=1.0\">\n\t\t<title>Fieldset and Legend</title>\n\n\t\t<style>\n\t\t\t@import url('https://fonts.googleapis.com/css?family=Lato:300,400,400i,700,900&display=swap');\n\n\t\t\t* {\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tfont-family: 'Lato', sans-serif;\n\t\t\t}\n\n\t\t\tfieldset {\n\t\t\t\tmargin: 2em;\n\t\t\t\tpadding: 1em 2em 2em 2em;\n\t\t\t\tborder: solid 1px #ccc;\n\t\t\t\tborder-radius: 6px;\n\t\t\t\twidth: 30%;\n\t\t\t\tmin-width: 200px;\n\t\t\t}\n\n\t\t\tfieldset:last-of-type {\n\t\t\t\tmargin-bottom: 1em;\n\t\t\t}\n\n\t\t\tlegend {\n\t\t\t\tpadding: 0 .25em;\n\t\t\t\tcolor: #999;\n\t\t\t}\n\n\t\t\tlabel {\n\t\t\t\tdisplay: block;\n\t\t\t\tpadding-top: .5em;\n\t\t\t}\n\n\t\t\tlabel:first-of-type {\n\t\t\t\tmargin-top: 0;\n\t\t\t}\n\n\t\t\tinput {\n\t\t\t\tpadding: .5em;\n\t\t\t\tborder: 1px solid #999;\n\t\t\t}\n\n\t\t\ttextarea {\n\t\t\t\tmin-height: 8em;\n\t\t\t\tmin-width: 16em;\n\t\t\t\tpadding: .5em;\n\t\t\t}\n\n\t\t\tinput[type=\"checkbox\"],\n\t\t\tinput[type=\"radio\"] {\n\t\t\t\tmargin: .5em 0;\n\t\t\t}\n\n\t\t\tinput[type=\"submit\"] {\n\t\t\t\tmargin: 0 2.75em 1em;\n\t\t\t\tpadding: .25em;\n\t\t\t\tdisplay: block;\n\t\t\t}\n\n\t\t\t/* smartphone view */\n\t\t\t@media (max-width: 577px) {\n\t\t\t\tlegend {\n\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* computer/table view */\n\t\t\t@media (min-width: 578px) {\n\t\t\t\tlegend {\n\t\t\t\t\tfont-size: 1.75em;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<section>\n\t\t\t<form action=\"#\"\n\t\t\t\t  method=\"post\"\n\t\t\t\t  id=\"contact\">\n\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Your contact details:</legend>\n\t\t\t\t\t<label for=\"fullName\">Name:</label>\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t   name=\"fullName\"\n\t\t\t\t\t\t   id=\"fullName\">\n\n\t\t\t\t\t<label for=\"email\">Email:</label>\n\t\t\t\t\t<input type=\"email\"\n\t\t\t\t\t\t   name=\"email\"\n\t\t\t\t\t\t   id=\"email\">\n\n\t\t\t\t\t<label for=\"phone\">Phone:</label>\n\t\t\t\t\t<input type=\"tel\"\n\t\t\t\t\t\t   name=\"phone\"\n\t\t\t\t\t\t   id=\"phone\">\n\t\t\t\t</fieldset>\n\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Food Preference:</legend>\n\t\t\t\t\t<input type=\"radio\"\n\t\t\t\t\t\t   name=\"food\"\n\t\t\t\t\t\t   id=\"noPref\"\n\t\t\t\t\t\t   value=\"noPreference\"> No preference<br>\n\t\t\t\t\t<input type=\"radio\"\n\t\t\t\t\t\t   name=\"food\"\n\t\t\t\t\t\t   value=\"Vegetarians\"> Vegetarians <br>\n\t\t\t\t\t<input type=\"radio\"\n\t\t\t\t\t\t   name=\"food\"\n\t\t\t\t\t\t   value=\"Vegan\"> Vegan<br>\n\t\t\t\t\t<input type=\"radio\"\n\t\t\t\t\t\t   name=\"food\"\n\t\t\t\t\t\t   value=\"Pescetarians\"> Pescetarians<br>\n\t\t\t\t</fieldset>\n\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Activities</legend>\n\t\t\t\t\t<p>Please select the activities you are interested in:</p>\n\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t   name=\"activity\"\n\t\t\t\t\t\t   value=\"yoga\"> Yoga<br>\n\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t   name=\"activity\"\n\t\t\t\t\t\t   value=\"pilates\"> Pilates<br>\n\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t   name=\"activity\"\n\t\t\t\t\t\t   value=\"strength\"> Strength Training<br>\n\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t   name=\"activity\"\n\t\t\t\t\t\t   value=\"boxing\"> Boxing<br>\n\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t   name=\"activity\"\n\t\t\t\t\t\t   value=\"cardio\"> Cardio<br>\n\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t   name=\"activity\"\n\t\t\t\t\t\t   value=\"meditation\"> Meditation<br>\n\t\t\t\t</fieldset>\n\n\t\t\t\t<input type=\"submit\"\n\t\t\t\t\t   id=\"submit\"\n\t\t\t\t\t   value=\"Sign up now\">\n\n\t\t\t</form>\n\t\t</section>\n\t</body>\n\n\t</html>\n\t-------------------------------","points":100,"extras":"","systemWhenCreated":"2020-06-16 04:28:18","systemWhoCreated":"systemUnknown"},{"id":98,"category":"Flexbox","title":"Responsive menu buttons along top that justify space","body":"- notice that `flex: 1 0 auto;` is the same as the three lines below it##themenuokokkj\n\t----------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Document</title>\n\t\t<style>\n\t\t\tul {\n\t\t\t\tmargin: 0 0 0 -2em;\n\t\t\t\tdisplay: flex;\n\t\t\t\tlist-style: none;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t}\n\n\t\t\tul li {\n\t\t\t\tborder: 1px solid green;\n\t\t\t\tpadding: 1em;\n\t\t\t\tmargin: .5em;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tbackground-color: #eee;\n\n\t\t\t\t/* flex: 1 0 auto; */\n\t\t\t\tflex-grow: 1;\n\t\t\t\tflex-shrink: 0;\n\t\t\t\tflex-basis: auto;\n\n\t\t\t\ttext-align: center;\n\n\t\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<ul>\n\t\t\t<li>About</li>\n\t\t\t<li>Items</li>\n\t\t\t<li>Reports</li>\n\t\t\t<li>More Information</li>\n\t\t\t<li>Other Information</li>\n\t\t\t<li>Some Other Information</li>\n\t\t\t<li>Help</li>\n\t\t\t<li>Logout</li>\n\t\t</ul>\n\t</body>\n\n\t</html>\n\t----------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-16 05:19:21","systemWhoCreated":"systemUnknown"},{"id":99,"category":"JavaScript","title":"How to use .reduce()","body":"- note that when you compute the product (multiplying numbers), you need to start with 1 instead of 0:\n\t-------------------------\n\tconst numbers = [5, 4, 1, 7, 3];\n\n\tconst sum = numbers.reduce((acc, x) => {\n\t\tconsole.log(`acc is ${acc}`);\n\t\tconsole.log(`x is ${x}`);\n\t\treturn acc + x;\n\t}, 0);\n\n\tconsole.log(sum);\n\n\t// send functions\n\n\tconst addNumbers = (acc, x) => acc + x;\n\tconst multiplyNumbers = (acc, x) => acc * x;\n\n\tconst sum2 = numbers.reduce(addNumbers, 0);\n\tconsole.log(sum2);\n\tconst product = numbers.reduce(multiplyNumbers, 1);\n\tconsole.log(product);\n\t-------------------------","points":40,"extras":"","systemWhenCreated":"2020-06-16 11:22:34","systemWhoCreated":"systemUnknown"},{"id":100,"category":"JavaScript","title":"How to write a custom .map() function","body":"- note that this isn't an extension function:\n\t------------------------------\n\tconst customMap = (arr, func) => {\n\t\tlet ra = [];\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tconst item = func(arr[i]);\n\t\t\tra.push(item);\n\t\t}\n\t\treturn ra;\n\t};\n\n\tconst monitors = [\n\t\t{\n\t\t\tname: \"Dell\",\n\t\t\tprice: 432,\n\t\t\tdate: '2020-03-23'\n\t\t},\n\t\t{\n\t\t\tname: \"Samsung\",\n\t\t\tprice: 323,\n\t\t\tdate: '2020-03-22'\n\t\t},\n\t\t{\n\t\t\tname: \"Dell\",\n\t\t\tprice: 112,\n\t\t\tdate: '2020-04-23'\n\t\t},\n\t\t{\n\t\t\tname: \"Dell\",\n\t\t\tprice: 543,\n\t\t\tdate: '2020-03-12'\n\t\t},\n\t];\n\tconst titles = customMap(monitors, x => `${x.name} (${x.price},00 €)`);\n\tconsole.log(titles);\n\t------------------------------","points":60,"extras":"","systemWhenCreated":"2020-06-16 14:08:37","systemWhoCreated":"systemUnknown"},{"id":101,"category":"JavaScript","title":"Example of currying (partial application)","body":"- note that the ES6 arrow syntax makes currying possible, but we use the lodash curry method here since it is convenient (npm i lodash):\n\t--------------------------\n\tconst _ = require('lodash');\n\n\t// theory\n\n\tconst add = (x, y, z) => x + y + z;\n\tconsole.log(add(1, 4, 3));\n\n\tconst addPartial = x => (y, z) => add(x, y, z);\n\tconst add5 = addPartial(5);\n\tconsole.log(add5(3, 2));\n\n\tconst addCurry = x => y => z => add(x, y, z);\n\tconsole.log(addCurry(1)(4)(3));\n\n\n\t// example\n\n\tfunction log(date, importance, message) {\n\t\tconsole.log(`[${_.padStart(date.getHours(), 2, '0')}:${_.padStart(date.getMinutes(), 2, '0')}] [${importance}] ${message}`);\n\t}\n\tlog(new Date(), 'high', 'acceXssed text.txt');\n\tlog = _.curry(log);\n\tlog(new Date('2020-01-31 02:15:00'))('low')('ok');\n\tconst logNow = log(new Date());\n\tlogNow('medium', 'logging test');\n\tlogNow('DEBUG', 'before loading');\n\tlogNow('DEBUG', 'after loading');\n\tconst logDebug = logNow('DEBUG');\n\tlogDebug('during loading');\n\t--------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-19 14:35:40","systemWhoCreated":"systemUnknown"},{"id":102,"category":"JavaScript","title":"How to make an independent copy of an array","body":"- when you assign array to another array, you simply make a pointer to it\n- to copy an array, you can use the rest function (...)\n\t---------------------------------------\n\tconst numbers = [1, 2, 3, 4, 5];\n\n\tconst [first] = numbers;\n\tconsole.log(first);\n\tconst [theFirst, theSecond, ...rest] = numbers;\n\tconsole.log(theFirst);\n\tconsole.log(theSecond);\n\tconsole.log(rest);\n\n\tconst copy1 = numbers; // copy1 and numbers point to the same array\n\tconst copy2 = [...numbers]; // copy2 is an independent copy of the array\n\tconsole.log(copy1);\n\tconsole.log(copy2);\n\tnumbers.reverse();\n\tnumbers.push(999);\n\tconsole.log(numbers);\n\tconsole.log(copy1);\n\tconsole.log(copy2);\n\t---------------------------------------","points":30,"extras":"","systemWhenCreated":"2020-06-19 14:55:54","systemWhoCreated":"systemUnknown"},{"id":103,"category":"JavaScript","title":"Simple example of recursion","body":"- make sure that recusive function can exit in every case:\n\t--------------------------------\n\tconst countDown = x => {\n\t\tif (x < 0) return;\n\t\tconsole.log(x);\n\t\tcountDown(x - 1);\n\t};\n\tcountDown(10);\n\n\tconst countUp = (x, max) => {\n\t\tif(x > max) return;\n\t\tconsole.log(x);\n\t\tcountUp(x + 1, max);\n\t};\n\tcountUp(0, 10);\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-19 15:23:35","systemWhoCreated":"systemUnknown"},{"id":104,"category":"Underscore","title":"Basics of Underscore.js","body":"- `npm i -D underscore`\n- note most of this functionality is superseded by ES6\n\t--------------------------------\n\tconst _ = require('underscore');\n\tconst { map } = require('underscore');\n\n\tconst numbers = [2, 5, 8, 9];\n\tconst squares = _.map(numbers, x => x * x);\n\tconsole.log(squares);\n\n\t// object-oriented\n\tconsole.log(_([1, 2, 3]).map(x => x + 10));\n\tconsole.log(_([1, 2, 3]).map(x => x + 10).filter(x => x >= 12));\n\n\t// each\n\t_.each(numbers, x => {\n\t\tconsole.log(`x is ${x}`);\n\t});\n\n\t//template (like ES6 string literals)\n\tconst createOutput = _.template(`\n\t<h1><%=name%></h1>\n\t<p>This person is <%=age%> years old.</p>\n\t`);\n\tconst html = createOutput({ name: \"Charles\", age: 45 });\n\tconsole.log(html);\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-23 11:59:37","systemWhoCreated":"systemUnknown"},{"id":105,"category":"JavaScript","title":"Basic use of useful Lodash functions","body":"- note much of Lodash is replaced by ES6+\n\t--------------------------------\n\tconst _ = require('lodash');\n\n\t// .map() requires .value() to get the value, enables chaining\n\tconst r1 = _([1, 2, 3]).map(x => 2 * x).value();\n\tconsole.log(r1);\n\n\t// notes that .reduce() does not enable chaining, i.e. no .value()\n\tconst r2 = _([1, 2, 3]).map(x => 2 * x).reduce((a, b) => a + b, 0);\n\tconsole.log(r2);\n\n\tconst person = {\n\t\tname: 'Charles',\n\t\tage: 45,\n\t\tgetInfo: function () {\n\t\t\treturn `The person ${this.name} is ${this.years} years old.`;\n\t\t}\n\t}\n\tconst person2 = _.clone(person);\n\n\tperson.name = 'James';\n\tconsole.log(person.name);\n\tconsole.log(person.getInfo());\n\n\tconsole.log(person2.name);\n\tconsole.log(person2.getInfo());\n\n\t// ._keyBy()\n\tconst computers = [\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: \"PC323\",\n\t\t\tos: 'Windows 10'\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: \"PC113\",\n\t\t\tos: 'Windows Server 2016'\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: \"PC221\",\n\t\t\tos: 'Ubuntu'\n\t\t}\n\t];\n\tconst lookupComputers = _.keyBy(computers, 'id');\n\tconsole.log(lookupComputers[2]);\n\n\t// _.deburr()\n\tconst persons = [\n\t\t{\n\t\t\tname: 'Émile Zola',\n\t\t\tage: 45\n\t\t},\n\t\t{\n\t\t\tname: 'Camille Saint-Saëns',\n\t\t\tage: 46\n\t\t}\n\t];\n\t_.each(persons, person => {\n\t\tconsole.log(`save info on ${person.name} to: ${_.deburr(person.name).toLowerCase().split(' ').join('').split('-').join('')}.txt`);\n\t})\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-23 14:17:57","systemWhoCreated":"systemUnknown"},{"id":106,"category":"JavaScript","title":"Basics of lazy.js including reading website line-by-line with .each()","body":"- `npm i -D lazy.js` (note: not `lazy` but `lazy.js`)\n\t--------------------------------\n\tconst _ = require('lazy.js');\n\n\tconst numbers = [3, 4, 2];\n\n\tlet count = 1;\n\tconsole.log(numbers.map(x => {\n\t\treturn {\n\t\t\tid: count++,\n\t\t\tnumber: x,\n\t\t\tdouble: x * 2\n\t\t}\n\t}));\n\n\t_.makeHttpRequest('http://localhost:29900/howtos?id=100')\n\t\t.lines()\n\t\t.take(10)\n\t\t.each(line => console.log(line));\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-06-23 15:10:46","systemWhoCreated":"systemUnknown"},{"id":107,"category":"JavaScript","title":"JavaScript Pattern: Singleton","body":"- install moment.js like this: `npm i moment`\n- to see this work, comment out the if-statement in the constructor to see that each logger instance will then have its own count number\n\t--------------------------------\n\tconst moment = require('moment');\n\n\tlet loggerInstance = null;\n\n\tclass Logger {\n\t\tconstructor() {\n\t\t\tthis.count = 1;\n\t\t\tif (!loggerInstance) {\n\t\t\t\tloggerInstance = this;\n\t\t\t} else {\n\t\t\t\treturn loggerInstance;\n\t\t\t}\n\t\t}\n\n\t\tlog(message) {\n\t\t\tconst d = moment(new Date());\n\t\t\tconsole.log(`${d.format('YYYY-MM-DD HH:mm:ss')}: ${message} (Log Message #${String(this.count).padStart(5, '0')})`);\n\t\t\tthis.count++;\n\t\t}\n\t}\n\n\tconst logger1 = new Logger();\n\tlogger1.log(\"printed report\");\n\tlogger1.log(\"saved file\");\n\n\tconst logger2 = new Logger();\n\tlogger2.log(\"transferred data\");\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-24 11:46:58","systemWhoCreated":"systemUnknown"},{"id":108,"category":"JavaScript","title":"Javascript Pattern: Factory ","body":"- note the use of .forEach()\n\t--------------------------------\n\tclass Building {\n\t\tconstructor(name = '(unknown)') {\n\t\t\tthis.name = name;\n\t\t}\n\t\tdisplay() { }\n\t}\n\n\tclass BuildingFactory {\n\t\tcreate(type, options = {}) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'house':\n\t\t\t\t\tconst house = new House();\n\t\t\t\t\thouse.name = options.name ? options.name : house.name;\n\t\t\t\t\thouse.neighborhood = options.neighborhood ? options.neighborhood : house.neighborhood;\n\t\t\t\t\thouse.numberOfGarages = options.numberOfGarages ? options.numberOfGarages : house.numberOfGarages;\n\t\t\t\t\treturn house;\n\t\t\t\tcase 'school':\n\t\t\t\t\tconst school = new School();\n\t\t\t\t\tschool.name = options.name ? options.name : school.name;\n\t\t\t\t\tschool.district = options.district ? options.district : school.district;\n\t\t\t\t\tschool.numberOfSportsFields = options.numberOfSportsFields ? options.numberOfSportsFields : school.numberOfSportsFields;\n\t\t\t\t\treturn school;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tclass House extends Building {\n\t\tconstructor(name, neighborhood, numberOfGarages) {\n\t\t\tsuper(name);\n\t\t\tthis.neighborhood = '';\n\t\t\tthis.numberOfGarages = 0;\n\t\t}\n\t\tdisplay() {\n\t\t\treturn `The house \"${this.name}\" is in the neighborhood \"${this.neighborhood}\" and has ${this.numberOfGarages} garages.`;\n\t\t}\n\t}\n\n\tclass School extends Building {\n\t\tconstructor(name, district, numberOfSportsFields) {\n\t\t\tsuper(name);\n\t\t\tthis.district = '';\n\t\t\tthis.numberOfSportsFields = 0;\n\t\t}\n\t\tdisplay() {\n\t\t\treturn `The school \"${this.name}\" is in district \"${this.neighborhood}\" and has ${this.numberOfSportsFields} sports fields.`;\n\t\t}\n\t}\n\n\tconst buildingFactory = new BuildingFactory();\n\tconst buildings = [\n\t\tbuildingFactory.create('house', { name: 'Family Smith', neighborhood: 'East Side', numberOfGarages: 1 }),\n\t\tbuildingFactory.create('house', { name: 'Family Ackerson', neighborhood: 'West Side', numberOfGarages: 2 }),\n\t\tbuildingFactory.create('school', { name: 'Goethe Gymnasium', district: '23', numberOfSportsFields: 2 }),\n\t\tbuildingFactory.create('school', { name: 'Schiller Gymnasium', district: '25', numberOfSportsFields: 3 })\n\t]\n\tbuildings.forEach(x => console.log(x.display()));\n\t--------------------------------","points":80,"extras":"","systemWhenCreated":"2020-06-24 13:31:02","systemWhoCreated":"systemUnknown"},{"id":109,"category":"Windows","title":"How to make a Windows task to start a PC at a certain time each week","body":"- command line\n- `taskschd`\n- click on task plan library (second level)\n- (on right) create task\n- give name, set time\n- `C:\\Windows\\System32\\shutdown.exe`\n- don't forget the -r argument","points":30,"extras":"","systemWhenCreated":"2020-06-24 13:52:01","systemWhoCreated":"systemUnknown"},{"id":110,"category":"JavaScript","title":"Basic examples for both CommonJS/require and ES6/import module loading in Node.js","body":"- CommonJS/require\n\t- calc.js\n\t\t--------------------------------\n\t\texports.add = (a, b) => {\n\t\t\treturn a + b;\n\t\t};\n\n\t\texports.multiply = (a, b) => a * b;\n\t\t--------------------------------\n\t- server.js\n\t\t--------------------------------\n\t\tconst calc = require('./calc');\n\n\t\tfor (let x = 0; x <= 10; x++) {\n\t\t\tconsole.log(calc.add(x, x));\n\t\t\tconsole.log(calc.multiply(x, x));\n\t\t}\n\t\t--------------------------------\n- ES6/import\n\t- calc.js\n\t\t--------------------\n\t\tconst add = (a, b) => {\n\t\t\treturn a + b;\n\t\t};\n\n\t\tconst multiply = (a, b) => a * b;\n\n\t\texport default add;\n\t\texport { multiply, add };\n\t\t--------------------\n\t- server.js\n\t\t----------------------\n\t\timport { add, multiply as times} from './calc';\n\n\t\tfor (let x = 0; x <= 10; x++) {\n\t\t\tconsole.log(add(x, x));\n\t\t\tconsole.log(times(x, x));\n\t\t}\n\t\t----------------------\n\t- note that Node.js doesn't yet support ES6/import syntax, so you need to load esm\n\t\t- `npm i esm`\n\t\t- and run your Node file as: `node -r esm server.js`\n\t\t- which you could put in an NPM script:\n\t\t\t- `\"start\": \"node -r esm server.js\"`\n\t\t\t- then start it with `npm start`\n\t\t- or you can make a start file:\n\t\t\t- start.js\n\t\t\t\t------------------------------\n\t\t\t\trequire = require(\"esm\")(module /*, options*/);\n\t\t\t\tmodule.exports = require(\"./server.js\");\n\t\t\t\t------------------------------","points":100,"extras":"","systemWhenCreated":"2020-06-24 16:48:32","systemWhoCreated":"systemUnknown"},{"id":111,"category":"JavaScript","title":"Basic Express/Node HTML server","body":"- install Express with `npm i express`\n\t--------------------------------\n\tconst express = require('express');\n\n\tconst app = express();\n\tconst port = 3000;\n\n\tapp.get('/', (req, res) => {\n\t\tres.send(`<p>Hello <b>HTML</b> page showing on port ${port}.</p>`);\n\t});\n\n\tapp.listen(port, () => {\n\t\tconsole.log(`Express app is now listening at: http://localhost:${port}`);\n\t});\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-06-24 17:06:55","systemWhoCreated":"systemUnknown"},{"id":112,"category":"JavaScript","title":"JavaScript Pattern: Mixin","body":"- a mixin is functionality that you add to existing classes\n- in this case, we add the ability to log information about the class to two classes\n\t--------------------------------\n\tconst moment = require('moment');\n\n\tclass Book {\n\t\tconstructor(title, author) {\n\t\t\tthis.title = title;\n\t\t\tthis.author = author;\n\t\t}\n\t\tdisplay() {\n\t\t\treturn `The book \"${this.title}\" was written by ${this.author}.`;\n\t\t}\n\t}\n\n\tclass CapitalCity {\n\t\tconstructor(name, country) {\n\t\t\tthis.name = name;\n\t\t\tthis.country = country;\n\t\t}\n\t\tdisplay() {\n\t\t\treturn `The capital of ${this.country} is ${this.name}.`;\n\t\t}\n\t}\n\n\tconst items = [\n\t\tnew Book('Hillbilly Elegy', 'J.D. Vance'),\n\t\tnew Book('Homo Deus', 'Yuval Harari'),\n\t\tnew Book('On Liberty', 'John Stuart Mill'),\n\t\tnew CapitalCity('Caracas', 'Venezuela'),\n\t\tnew CapitalCity('Belmopan', 'Belize'),\n\t]\n\titems.forEach(x => console.log(x.display()));\n\n\tconst loggingMixin = {\n\t\tdisplayLogEntry() {\n\t\t\tconst d = moment(new Date());\n\t\t\treturn `${d.format('YYYY-MM-DD HH:mm:ss')}: Printed: [${this.display()}]`;\n\t\t}\n\t}\n\tObject.assign(Book.prototype, loggingMixin);\n\tObject.assign(CapitalCity.prototype, loggingMixin);\n\titems.forEach(x => console.log(x.displayLogEntry()));\n\t--------------------------------","points":70,"extras":"","systemWhenCreated":"2020-06-25 11:16:38","systemWhoCreated":"systemUnknown"},{"id":113,"category":"JavaScript","title":"How to count totals of entries in an array","body":"- notes that 3.1 is the answer to how to count totals of entries in this array\n- the other examples help one to understand the `.reduce()` method\n- the `()` around the brackets in 3.1 enable an object to be returned as a value and forces the braces to be interpreted as object-braces and not function-braces, see [related question asked on StackOverflow](https://stackoverflow.com/questions/62574150/why-are-the-role-of-the-parentheses-in-this-reduce-syntax-which-creates-a-jav)\n\t--------------------------------\n\tconst languages = ['french', 'french', 'spanish', 'polish', 'spanish', 'german', 'spanish', 'polish', 'spanish', 'spanish', 'french', 'spanish', 'spanish', 'french', 'spanish', 'spanish', 'french', 'french', 'french', 'french', 'french', 'polish', 'spanish', 'german', 'spanish', 'polish', 'spanish', 'spanish', 'french', 'spanish', 'english', 'french', 'spanish', 'spanish', 'french', 'german', 'french', 'french', 'french', 'polish', 'spanish', 'german', 'spanish', 'polish', 'spanish', 'spanish', 'french', 'german', 'spanish', 'french', 'english', 'spanish', 'french', 'french', 'french', 'french', 'french', 'polish', 'spanish', 'german', 'spanish', 'polish', 'spanish', 'spanish', 'french', 'spanish', 'spanish', 'german', 'spanish', 'spanish', 'french', 'french', 'french', 'french', 'french', 'polish', 'spanish', 'german', 'spanish', 'polish', 'spanish', 'spanish', 'french', 'german', 'spanish', 'french', 'spanish', 'spanish', 'french', 'french', 'french', 'french', 'french', 'french'];\n\n\t// 1. iterating while adding a sum\n\tconst sum = languages.reduce((acc, language) => {\n\t\tacc++;\n\t\treturn acc;\n\t}, 0);\n\t// const sum = languages.reduce((acc, language) => ++acc, 0);\n\tconsole.log(`There are ${sum} entries.`);\n\n\t// 2. iterating while building an array\n\tconst initials = languages.reduce((acc, language) => {\n\t\tacc.push(language.substring(0, 1));\n\t\treturn acc;\n\t}, []);\n\tconsole.log(initials);\n\n\t// 3.1 iterating while building a JavaScript object\n\tconst totals = languages.reduce((acc, language) => ({\n\t\t...acc,\n\t\t[language]: acc[language] ? acc[language] + 1 : 1\n\t}), {});\n\tconsole.log(totals);\n\n\t// 3.2 iterating while building a JavaScript object\n\tconst totals2 = languages.reduce((acc, language) => {\n\t\treturn {\n\t\t\t...acc,\n\t\t\t[language]: acc[language] ? acc[language] + 1 : 1\n\t\t}\n\t}, {});\n\tconsole.log(totals2);\n\t--------------------------------","points":150,"extras":"","systemWhenCreated":"2020-06-25 13:43:36","systemWhoCreated":"systemUnknown"},{"id":114,"category":"JavaScript","title":"Using .reduce() to create JavaScript object with sequenced keys","body":"- note that `[name]` is the way to specify a dynamic key \n\t--------------------------------\n\tconst numbers = [3, 6, 8, 4, 78, 8, 4, 4, 78, 8, 4, 4, 3, 3];\n\n\tconst sum = numbers.reduce((acc, x) => {\n\t\tacc += x;\n\t\treturn acc;\n\t}, 0);\n\n\tlet count = 0;\n\tconst totals = numbers.reduce((acc, x) => {\n\t\tconst name = `entry${String(\"00000\" + count).slice(-5)}`;\n\t\tcount++;\n\t\tacc = { \n\t\t\t...acc,\n\t\t\t[name]: x\n\t\t };\n\t\treturn acc;\n\t}, {});\n\n\tconsole.log(sum);\n\tconsole.log(totals);\n\t--------------------------------","points":60,"extras":"","systemWhenCreated":"2020-06-25 15:14:14","systemWhoCreated":"systemUnknown"},{"id":115,"category":"JavaScript","title":"Load and search arrays of words from English, German and French","body":"- to get this, first use `npm i array-of-english-words` etc.\n\t--------------------------------\n\tconst englishWords = require('an-array-of-english-words');\n\tconst germanWords = require('an-array-of-german-words');\n\tconst frenchWords = require('an-array-of-french-words');\n\n\tconst randomEnglishWordIndex = Math.floor(Math.random() * englishWords.length);\n\tconst randomGermanWordIndex = Math.floor(Math.random() * germanWords.length);\n\tconst randomFrenchWordIndex = Math.floor(Math.random() * frenchWords.length);\n\n\tconsole.log(`Random English word ${randomEnglishWordIndex} of ${englishWords.length} is: \"${englishWords[randomEnglishWordIndex]}\"`);\n\tconsole.log(`Random German word ${randomGermanWordIndex} of ${germanWords.length} is: \"${germanWords[randomGermanWordIndex]}\"`);\n\tconsole.log(`Random French word ${randomFrenchWordIndex} of ${frenchWords.length} is: \"${frenchWords[randomFrenchWordIndex]}\"`);\n\n\tconsole.log(englishWords.filter(x => x.startsWith('b') && x.endsWith('tion')));\n\tconsole.log(englishWords.filter(x => x.includes('kar')));\n\tconsole.log(germanWords.filter(x => x.includes('schlum')));\n\t--------------------------------","points":20,"extras":"","systemWhenCreated":"2020-06-25 15:57:24","systemWhoCreated":"systemUnknown"},{"id":116,"category":"JavaScript","title":"Display all countries and capitals with Node and Express","body":"- `npm i express`\n- `npm i world-countries-capitals`\n- `npm i nodemon`\n\t--------------------------------\n\tconst express = require('express');\n\tconst wcc = require('world-countries-capitals');\n\tconst countries = wcc.getAllCountryDetails();\n\n\tconst app = express();\n\tconst port = 3000;\n\n\tString.prototype.capitalize = function () {\n\t\treturn this.charAt(0).toUpperCase() + this.slice(1)\n\t}\n\tString.prototype.capitalizeAllWords = function () {\n\t\treturn this.split(' ').map(x => x.capitalize()).join(' ');\n\t}\n\t//console.log(countries[4]);\n\n\tconst getHtml = () => {\n\t\treturn countries.reduce((acc, x) => {\n\t\t\tacc += `<p>${x.country.capitalizeAllWords()} - ${x.capital.capitalizeAllWords()} </p>`;\n\t\t\treturn acc;\n\t\t}, '');\n\t};\n\n\tapp.get('/', (req, res) => {\n\t\tres.send(getHtml());\n\t});\n\n\tapp.listen(port, () => {\n\t\tconsole.log(`Express app is now listening at: http://localhost:${port}`);\n\t});\n\t--------------------------------","points":100,"extras":"","systemWhenCreated":"2020-06-25 16:55:19","systemWhoCreated":"systemUnknown"},{"id":117,"category":"JavaScript","title":"Find all anagrams of any word","body":"- `npm i an-array-of-english-words`\n\t--------------------------------\n\tconst englishWords = require('an-array-of-english-words');\n\n\tconst countOccurances = arr =>\n\t\tarr.reduce((acc, str) => ({\n\t\t\t...acc,\n\t\t\t[str]: acc[str] ? acc[str] + 1 : 1\n\t\t}), {});\n\n\tconst hasSameLetterCount = (word1, word2) => {\n\t\tconst word1Count = countOccurances(word1.split(''));\n\t\tconst word2Count = countOccurances(word2.split(''));\n\t\treturn Object.keys(word1Count).length == Object.keys(word2Count).length &&\n\t\t\tObject.keys(word1Count).every(letter => word1Count[letter] === word2Count[letter]);\n\t};\n\n\tconst findAnagrams = (word, words) => {\n\t\treturn `The word \"${word}\" has these anagrams: ` + (words\n\t\t.filter(entry => hasSameLetterCount(word, entry))\n\t\t.filter(x => x !== word)).join(', ');\n\t};\n\n\tconsole.log(findAnagrams(\"cinema\", englishWords));\n\tconsole.log(findAnagrams(\"tar\", englishWords));\n\tconsole.log(findAnagrams(\"live\", englishWords));\n\t--------------------------------","points":90,"extras":"","systemWhenCreated":"2020-06-25 17:41:00","systemWhoCreated":"systemUnknown"},{"id":118,"category":"JavaScript","title":"Responsive double-title menu iconed-items with Flexbox","body":"- displays long in browser, stacked on mobile phone##menudoubleok\n- all in one file:\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Flex Menu Two-Layered</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t.menu-section {\n\t\t\t\tpadding-bottom: 2em;\n\t\t\t\tmargin-bottom: 2em;\n\t\t\t\tborder-bottom: 1px solid hsl(0, 0%, );\n\t\t\t}\n\n\t\t\t.menu ul {\n\t\t\t\tlist-style-type: none;\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t\tbackground: hsl(0, 0%, 15%);\n\t\t\t}\n\n\t\t\t.menu li a {\n\t\t\t\tdisplay: block;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tcolor: white;\n\t\t\t\tpadding: .6em 1em;\n\t\t\t}\n\n\t\t\t.menu li a:hover {\n\t\t\t\tbackground: hsl(0, 0%, 25%);\n\t\t\t}\n\n\t\t\t.advanced-nav li a {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: flex-start;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\n\t\t\t.icon {\n\t\t\t\tfont-size: 1.8em;\n\t\t\t\tflex: 0 0 1.5em;\n\t\t\t}\n\n\t\t\t.button-text {\n\t\t\t\tfont-size: 1.2em;\n\t\t\t}\n\n\t\t\t.button-text span {\n\t\t\t\tfont-size: .5em;\n\t\t\t\tfont-weight: lighter;\n\t\t\t\tfont-style: italic;\n\t\t\t\tdisplay: block;\n\t\t\t}\n\n\t\t\t@media screen and (min-width: 30em) {\n\t\t\t\t.advanced-nav ul {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t}\n\n\t\t\t\t.advanced-nav ul li {\n\t\t\t\t\tflex: 1 0 12em;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<nav id=\"advanced-nav\"\n\t\t\t class=\"advanced-nav menu\"\n\t\t\t role=\"navigation\">\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t\t\t<i class=\"fa fa-home\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"button-text\">\n\t\t\t\t\t\t\txL'accueil\n\t\t\t\t\t\t\t<span>pour se sentir bien dès le départ</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t\t\t<i class=\"fa fa-cutlery\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"button-text\">\n\t\t\t\t\t\t\tLa nourriture\n\t\t\t\t\t\t\t<span>pour le corps et l'esprit</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t\t\t<i class=\"fa fa-file-text\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"button-text\">\n\t\t\t\t\t\t\tLes recettes\n\t\t\t\t\t\t\t<span>pour guider votre aventure</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t\t\t<i class=\"fa fa-paper-plane\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"button-text\">\n\t\t\t\t\t\t\tLes nouvelles\n\t\t\t\t\t\t\t<span>pour se tenir au courant</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t</body>\n\n\t</html>\n\t--------------------------------","points":100,"extras":"","systemWhenCreated":"2020-06-25 23:39:16","systemWhoCreated":"systemUnknown"},{"id":119,"category":"JavaScript","title":"Check form fields for errors with collection of functions","body":"- note that only the error is returned, not the field and the error\n\t--------------------------------\n\tconst currentInputValues = {\n\t\tfirstName: 's',\n\t\tlastName: 'Smith',\n\t\tzipCode: '',\n\t\tstate: 'AR'\n\t}\n\n\tconst inputCriteria = {\n\t\tfirstName: [\n\t\t\tvalue => value.length >= 2 ? '' : 'First name must be at least 2 characters.'\n\t\t\tvalue => value.length < 50 ? '' : 'First name must be less than 50 characters.'\n\t\t],\n\t\tlastName: [\n\t\t\tvalue => value.length >= 2 ? '' : 'Last name must be at least 2 characters.'\n\t\t],\n\t\tzipCode: [\n\t\t\tvalue => value.length == 5 ? '' : 'Zip code must be 5 characters.'\n\t\t],\n\t\tstate: [\n\t\t\tvalue => value.length == 2 ? '' : 'Zip code must be 2 characters.'\n\t\t]\n\t};\n\n\tconst getErrorMessages = (input, criteria) => {\n\t\treturn Object.keys(input).reduce((acc, fieldName) => [\n\t\t\t...acc,\n\t\t\t...criteria[fieldName].map(test => test(input[fieldName]))\n\t\t], []).filter(m => m.length > 0);\n\t};\n\n\tconst errorMessages = getErrorMessages(currentInputValues, inputCriteria);\n\tconsole.log(errorMessages);\n\t--------------------------------","points":120,"extras":"","systemWhenCreated":"2020-06-26 14:32:25","systemWhoCreated":"systemUnknown"},{"id":120,"category":"SASS","title":"Compile SASS with Gulp","body":"- make directory `mainsite`\n- open VSCode to this directory\n- install gulp\n\t- `npm init -y`\n\t- `npm i -D gulp`\n\t- `npm i -D gulp-cli`\n- install files for SASS\n\t- `npm i -D gulp-sass`\n\t- `npm i -D del`\n\t\t- this deletes files, needed for gulp\n- setup folders\n\t- `mkdir scss css`\n- index.html \n\t---------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>SASS Base</title>\n\t\t<link rel=\"stylesheet\"\n\t\t\t  href=\"css/main.css\">\n\t</head>\n\n\t<body>\n\t\t<main>\n\t\t\t<h1>Web Browsers</h1>\n\t\t\t<article class=\"browser\">\n\t\t\t\t<h2>Firefox</h2>\n\t\t\t\t<p>Firefox is an open-source web browser developed by Mozilla, released in <span class=\"year\">2002</span>.\n\t\t\t\t\tIt uses the <strong>Gecko</strong> browser\n\t\t\t\t\trendering engine and the <strong>SpiderMonkey</strong> JavaScript rendering engine.</p>\n\t\t\t</article>\n\t\t\t<article class=\"browser\">\n\t\t\t\t<h2>Safari</h2>\n\t\t\t\t<p>Safari is a web browser developed by Apple, released in <span class=\"year\">2003</span>. It uses the\n\t\t\t\t\t<strong>WebKit</strong> browser\n\t\t\t\t\trendering engine and the <strong>JavaScriptCore</strong> rendering engine.\n\t\t\t\t</p>\n\t\t\t</article>\n\t\t\t<article class=\"browser\">\n\t\t\t\t<h2>Chrome</h2>\n\t\t\t\t<p>Chrome is a web browser developed by Google, released in <span class=\"year\">2008</span>. It uses the\n\t\t\t\t\t<strong>Blink</strong> rendering\n\t\t\t\t\tengine and the <strong>V8</strong> JavaScript rendering engine.\n\t\t\t\t</p>\n\t\t\t</article>\n\t</body>\n\n\t</html>\n\t---------------\n- scss/main.scss\n\t-------------------------\n\t$mainHeaderColor: rgb(158, 77, 77); \n\n\tbody {\n\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\tmain {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0.8rem;\n\t\t\tbackground-color: lightgray;\n\t\t\th1 {\n\t\t\t\tcolor: $mainHeaderColor;\n\t\t\t}\n\t\t\th1,\n\t\t\tarticle.browser {\n\t\t\t\tmargin: 10px; \n\t\t\t\tpadding: 0.8rem;\n\t\t\t}\n\t\t\tarticle.browser {\n\t\t\t\tbackground: white;\n\t\t\t\th2 {\n\t\t\t\t\tcolor: $mainHeaderColor;\n\t\t\t\t}\n\t\t\t\th2,\n\t\t\t\tp {\n\t\t\t\t\tmargin: 0.5rem;\n\t\t\t\t}\n\t\t\t\tp {\n\t\t\t\t\tcolor: rgb(141, 25, 25);\n\t\t\t\t\t.year {\n\t\t\t\t\t\tfont-size: 1.3rem;\n\t\t\t\t\t\tbackground-color: #eee;\n\t\t\t\t\t\tcolor: navy;\n\t\t\t\t\t}\n\t\t\t\t\tstrong {\n\t\t\t\t\t\tbackground-color: lightyellow;\n\t\t\t\t\t\tcolor: black;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t---------------\n- gulpfile.js\n\t-----------------------\n\tconst gulp = require('gulp');\n\tconst sass = require('gulp-sass');\n\tconst del = require('del');\n\n\tgulp.task('styles', () => {\n\t\treturn gulp.src('sass/**/*.scss')\n\t\t\t.pipe(sass().on('error', sass.logError))\n\t\t\t.pipe(gulp.dest('./css/'));\n\t});\n\n\tgulp.task('clean', () => {\n\t\treturn del([\n\t\t\t'css/main.css',\n\t\t]);\n\t});\n\n\tgulp.task('watch', () => {\n\t\tgulp.watch('sass/**/*.scss', (done) => {\n\t\t\tgulp.series(['clean', 'styles'])(done);\n\t\t});\n\t});\n\n\t//gulp.task('default', gulp.series(['clean', 'styles']));\n\tgulp.task('default', gulp.series(['watch']));\n\t--------------------------------\n- start gulp watching with: `gulp`","points":150,"extras":"","systemWhenCreated":"2020-06-26 15:23:02","systemWhoCreated":"systemUnknown"},{"id":121,"category":"JavaScript","title":"FIX: Function with single and multiple callbacks","body":"- synchronous\n\t------------------------------\n\tconst shop = (items) => {\n\t\tconst p = [];\n\t\titems.forEach(x => {\n\t\t\tp.push(`[${x} project]`);\n\t\t});\n\t\treturn p;\n\t}\n\n\tconsole.log('sent shopper shopping');\n\tconst projects = shop(['milk', 'cheese', 'salami']);\n\tconsole.log(`shopper is back and delivered: ${projects.join(', ')}`);\n\t------------------------------\n- synchronous showing problem of time\n\t------------------------------------\n\twait = function (ms) {\n\t\tvar start = new Date().getTime();\n\t\tlet now = 0;\n\t\tlet difference = 0;\n\t\tfor (var i = 0; i < 1e17; i++) {\n\t\t\tnow = new Date().getTime();\n\t\t\tdifference = now - start;\n\t\t\tif (difference > ms) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst shop = (items) => {\n\t\tconst p = [];\n\t\titems.forEach(x => {\n\t\t\tp.push(`[${x} project]`);\n\t\t\twait(2000);\n\t\t});\n\t\treturn p;\n\t}\n\n\tconsole.log('sent shopper shopping');\n\tconst projects = shop(['milk', 'cheese', 'salami']);\n\tconsole.log(`shopper is back and delivered: ${projects.join(', ')}`);\n\t------------------------------------\n- **FIX FROM HERE DOWN TO CONTINUE EXAMPLE ABOVE**\n- base\n\t----------------------\n\tconst shop = (items, callback) => {\n\t\tconsole.log(items);\n\t\titems.forEach(x => console.log(`finding ${x}`));\n\t\tif (items.length > 3) {\n\t\t\tcallback('that was difficult');\n\t\t} else {\n\t\t\tcallback('that was easy');\n\t\t}\n\t}\n\n\tshop(['milk', 'cheese', 'bread', 'salt'], (message) => console.log('done, ' + message));\n\t----------------------\n- what one sends back in a callback is only data, one has no control over what actually happens\n\t-------------------------\n\tshop(['milk', 'cheese', 'salt'], (message) => {\n\t\tif(message.includes('difficult')) {\n\t\t\tconsole.log(`they are finished and had a hard time`);\n\t\t} else {\n\t\t\tconsole.log(`they are done and said ${message}`);\n\t\t}\n\t});\n\t-------------------------\n- multiple callbacks\n\t-----------------------------------\n\tconst shop = (items, cbFound, cbFinished) => {\n\t\titems.forEach(x => {\n\t\t\tcbFound(x);\n\t\t});\n\t\tif (items.length > 3) {\n\t\t\tcbFinished('that was difficult');\n\t\t} else {\n\t\t\tcbFinished('that was easy');\n\t\t}\n\t}\n\n\tconst foundTheItem = (item) => console.log(`They found ${item}`);\n\n\tshop(['milk', 'cheese', 'salt'], foundTheItem, (message) => {\n\t\tif(message.includes('difficult')) {\n\t\t\tconsole.log('done for the day');\n\t\t} else {\n\t\t\tconsole.log('done, ' + message);\n\t\t}\n\t});\t\n\t-----------------------------------\n- demonstrate non-blocking aspect of asynchronous callbacks\n\t------------------------------------\n\tconst shop = (items, cbFound, cbFinished) => {\n\t\tlet i = 0;\n\t\tconst id = setInterval(() => {\n\t\t\tcbFound(items[i]);\n\t\t\ti++;\n\t\t\tif (i == items.length) {\n\t\t\t\tcbFinished('now finished');\n\t\t\t\tclearInterval(id);\n\t\t\t}\n\t\t}, 2000);\n\n\t}\n\n\tconst foundTheItem = (item) => console.log(`They found ${item}`);\n\n\tconsole.log('sending backend shopping for data');\n\tshop(['milk', 'cheese', 'salt'], foundTheItem, (message) => {\n\t\tif (message.includes('difficult')) {\n\t\t\tconsole.log('done for the day');\n\t\t} else {\n\t\t\tconsole.log('done, ' + message);\n\t\t}\n\t});\n\tconsole.log('the user can continue to use the interface, i.e. shop() is non-blocking');\n\t------------------------------------","points":120,"extras":"","systemWhenCreated":"2020-06-26 16:47:02","systemWhoCreated":"systemUnknown"},{"id":122,"category":"JavaScript","title":"Create React app with create-react-app that uses TypeScript","body":"- these are fast-track instructions to set up a React site with TypeScript including a TypeScript component##setupTypeScriptAndReact\n- setup create-react-app\n\t- goto directory where you build your apps\n\t- type `npx create-react-app app001` where app001 is the name of your app\n\t- type `npm start` to make sure it runs\n- simplify App.js\n\t--------------------------\n\timport './App.css';\n\n\tfunction App() {\n\t  return (\n\t\t<div className=\"App\">\n\t\t  <header className=\"App-header\">\n\t\t\t<p>\n\t\t\t  Hello.\n\t\t\t</p>\n\t\t  </header>\n\t\t</div>\n\t  );\n\t}\n\n\texport default App;\n\t--------------------------\n- simplify App.css\n\t------------------------------\n\t.App-header {\n\t\tbackground-color: #282c34;\n\t\tmin-height: 100vh;\n\t\tdisplay: flex;\n\t\tcolor: white;\n\t\tpadding: 5px 20px;\n\t}\n\t------------------------------\n- install TypeScript\n\t- `npm i typescript @types/node @types/react-dom @types/jest`\n\t- rename `App.js` and `index.js` to `.tsx`\n\t- `npm start`\n\t\t- note that `tsconfig.json` is automatically created for you\n- add TypeScript, `App.tsx`:\n\t---------------------------\n\tfunction App() {\n\t\tlet name: string = \"Christoph\";\n\t\tlet age: number = 43;\n\t\tlet isDeveloper: boolean = true;\n\t\tlet scores: number[] = [2, 2, 6, 2, 6, 2];\n\t\tlet groups: string[] = ['developers', 'members', 'employees'];\n\n\t\tconst companyInfo: [number, string, boolean] = [23, \"Anton Inc.\", false];\n\n\t\tenum Position { first, second };\n\t\tconst position: Position = Position.first;\n\n\t\tconst displayGreeting = (name: string): void => {\n\t\t\tconsole.log(`Hello ${name}`);\n\t\t}\n\t\tdisplayGreeting('Christopher');\n\n\t\tlet companyMessage: string = '';\n\t\tif (companyInfo[0]) {\n\t\t\tcompanyMessage = `Company is id=${companyInfo[0]} and name=${companyInfo[1]}`;\n\t\t} else {\n\t\t\tcompanyMessage = `Company info not shown`;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<p>Name: <span className=\"data\">{name}</span></p>\n\t\t\t\t\t<p>Age: <span className=\"data\">{age}</span></p>\n\t\t\t\t\t<p>Is a developer: <span className=\"data\">{isDeveloper ? 'yes' : 'no'}</span></p>\n\t\t\t\t\t<p>Scores: <span className=\"data\">{scores.join(', ')}</span></p>\n\t\t\t\t\t<p>Groups: <span className=\"data\">{groups.join(', ')}</span></p>\n\t\t\t\t\t<p>Company: <span className=\"data\">{companyMessage}</span></p>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n\texport default App;\n\t---------------------------\n- replace App.css again for TypeScript site\n\t------------------------------\n\tbody {\n\t\tpadding: 5px 20px; \n\t}\n\t.data {\n\t\tfont-family: 'Courier New', Courier, monospace;\n\t\tcolor: brown;\n\t\tfont-weight: 600;\n\t\tbackground-color: #eee;\n\t\tdisplay: inline-block;\n\t\tpadding: 4px 6px;\n\t}\n\t------------------------------\n- add component: `src/components/MoreInfo.tsx`\n\t----------------------\n\timport * as React from 'react';\n\n\tinterface AllInfo {\n\t\tstatus: string,\n\t\tapproved: true,\n\t\tnumberOfErrors: number,\n\t\textraInfo?: string\n\t}\n\n\t//const MoreInfo = (prop: { status: string }) => {\n\tconst MoreInfo = (props: AllInfo) => {\n\n\t\tconst extraInfo = props.extraInfo === undefined ? '(none)' : props.extraInfo;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<p>More Info: <span className=\"data\">{props.status}</span></p>\n\t\t\t\t<p>Approved: <span className=\"data\">{props.approved ? 'yes' : 'no'}</span></p>\n\t\t\t\t<p>Errors: <span className=\"data\">{props.numberOfErrors}</span></p>\n\t\t\t\t<p>Extra Info: <span className=\"data\">{extraInfo}</span></p>\n\t\t\t</>\n\t\t);\n\t}\n\n\texport default MoreInfo;\n\t----------------------\n- add to `App.tsx`:\n\t-------------------------\n\timport MoreInfo from './components/MoreInfo'\n\n\t<MoreInfo status={\"finished\"} approved={true} numberOfErrors={3} />\n\t-------------------------","points":150,"extras":"","systemWhenCreated":"2020-12-21 23:55:44","systemWhoCreated":"systemUnknown"},{"id":123,"category":"JavaScript","title":"Install and setup ESLint","body":"- `npm init -y`\n- `main.js`\n\t--------------------------------\n\tconst city = 'town';\n\tconsole.log(city);\n\n\tlet name = 'Win10';\n\tconsole.log(name);\n\n\tvar name2 = 'kdjf';\n\n\tvar name234 = 'sjkdfdsf';\n\n\tconst server1 = 'kdjfkdjf', server2 = 'iejfeife';\n\n\tconsole.log(server1);\n\tconsole.log(server2);\n\n\tconst previous_year_total = 243234.34;\n\tconst current_year_total = 274838.22;\n\n\tconst firstTotal = 5;\n\tlet subtotal = 0;\n\tlet total = 0;\n\n\ttotal = subtotal = firstTotal;\n\n\tconsole.log('total: ' + total);\n\tconsole.log('subtotal: ' + subtotal);\n\n\tconst serverName = \"Windows 2016 Server\";\n\tconsole.log('server: ' + serverName);\n\n\tconst days = new Array('Sunday', 'Monday', 'Wednesday');\n\tconsole.log('days: ' + days.join(', '));\n\n\tconst person = new Object();\n\tperson = {\n\t\t'firstName': 'Harry',\n\t\t'lastName': 'Hopkins',\n\t\t'first-role': 'unknown',\n\t\t'second-role': 'missing'\n\t};\n\tconsole.log('person: ', person);\n\t--------------------------------\n- `npm i eslint`\n- `eslintrc.js`\n\t------------------------\n\t'use strict';\n\tmodule.exports = {\n\t\tenv: {\n\t\t\tes6: true\n\t\t},\n\t\trules: {\n\t\t},\n\t};\n\t------------------------\n- add rules one at a time:\n\t----------------------\n\t'strict': ['error', 'global'],\n\t'no-var': 'error',\n\t'prefer-const' : 'error', \n\t'one-var': ['error', 'never'],\n\t'camelcase': 'error',\n\t'no-unused-vars': 'error',\n\t'no-multi-assign': 'error',\n\t'quotes': ['error', 'single'],\n\t'no-array-constructor': 'error',\n\t'no-new-object': 'error'\n\t----------------------","points":70,"extras":"","systemWhenCreated":"2020-07-03 14:25:11","systemWhoCreated":"systemUnknown"},{"id":124,"category":"Windows","title":"How to restart a Windows server at a certain time in the night","body":"- command line: `taskschd`\n\t- create task\n\t- define trigger\n\t- action:\n\t\t- `C:\\Windows\\System32\\shutdown.exe`\n\t\t- parameter: `-r`","points":10,"extras":"","systemWhenCreated":"2020-07-06 14:08:07","systemWhoCreated":"systemUnknown"},{"id":125,"category":"JavaScript","title":"How to use an API to get the current temperature of cities","body":"- get account at `https://openweathermap.org`\n- install with `npm i openweather-apis`\n- create `weather.js` and replace `keykeykeykey` with your API key\n\t--------------------------------\n\tconst weather = require('openweather-apis');\n\tweather.setLang('de');\n\tweather.setCity('Berlin');\n\tweather.setUnits('metric');\n\tweather.setAPPID('keykeykeykey');\n\tweather.getTemperature((err, temp) => console.log(temp));\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-07-07 11:37:56","systemWhoCreated":"systemUnknown"},{"id":126,"category":"JavaScript","title":"Simple example of delay with callback and promise","body":"- `delay.js`\n\t--------------------------------\n\tconst delay = (callback, seconds) => {\n\t\tsetTimeout(() => { callback(seconds)}, seconds * 1000);\n\t};\n\n\tconsole.log('stand');\n\tdelay((seconds) => { console.log(`and now this after ${seconds} seconds`) }, 4);\n\tdelay((seconds) => { console.log(`done with delay after ${seconds} seconds`) }, 2);\n\tdelay((seconds) => { console.log(`${seconds} seconds over`) }, 3);\n\tconsole.log('end');\n\t--------------------------------- \n- `promise.js`\n\t--------------------------------\n\tconst delay = (seconds) => new Promise((resolves, rejects) => {\n\tsetTimeout(() => {resolves(seconds)}, seconds * 1000);\n});\n\ndelay(4).then((seconds) => console.log(`another delay ended after ${seconds} seconds`));\ndelay(2).then((seconds) => console.log(`delay ended after ${seconds} seconds`));\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-07-08 16:44:11","systemWhoCreated":"systemUnknown"},{"id":127,"category":"JavaScript","title":"How to use rejects/catch with Promises","body":"- note that you can throw or reject an error, both handled by catch:\n\t--------------------------------\n\tconst delay = (seconds) => new Promise((resolves, rejects) => {\n\t\tif (seconds > 3) {\n\t\t\t//throw new Error('bad data error');\n\t\t\trejects(new Error(`${seconds} is too long`));\n\t\t} else {\n\t\t\tsetTimeout(() => { resolves(seconds) }, seconds * 1000);\n\t\t}\n\t});\n\n\tdelay(3)\n\t\t.then((text) => {\n\t\t\tconsole.log(text);\n\t\t\treturn 'output from processing step 1';\n\t\t})\n\t\t.then((text) => {\n\t\t\tconsole.log(text);\n\t\t\treturn 'output from processing step 2';\n\t\t})\n\t\t.then(console.log)\n\t\t.catch((error) => console.log(`err: ${error.message}`));\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-07-09 20:08:27","systemWhoCreated":"systemUnknown"},{"id":128,"category":"JavaScript","title":"Chaining promise and async/await examples to avoid callback hell","body":"- note that you pass a value from one then() to another:\n\t--------------------------------\n\tconst fs = require('fs');\n\tconst { promisify } = require('util');\n\tconst writeFile = promisify(fs.writeFile);\n\tconst unlink = promisify(fs.unlink);\n\tconst delay = (seconds) => new Promise((resolves) => {\n\t\tsetTimeout(resolves, seconds * 1000);\n\t});\n\tconst beep = () => process.stdout.write(\"\\x07\");\n\n\n\tconst sequentialManager = () => Promise.resolve()\n\t\t.then(() => console.log('waiting 1 second'))\n\t\t.then(() => delay(1))\n\t\t//.then(beep)\n\t\t.then(() => 'creating file')\n\t\t.then(console.log)\n\t\t.then(() => writeFile('temp004.txt', 'testing'))\n\t\t.then(() => console.log('waiting 4 seconds before deleting'))\n\t\t.then(() => delay(4))\n\t\t.then(() => unlink('temp004.txt'))\n\t\t.then(() => console.log('file deleted'));\n\n\tconst squentialManager2 = async () => {\n\t\tconsole.log('waiting 1 second');\n\t\tawait delay(1);\n\t\tconsole.log('creating file');\n\t\tawait writeFile('temp004.txt', 'testing');\n\t\tconsole.log('waiting 4 seconds before deleting');\n\t\tawait delay(4);\n\t\tawait unlink('temp004.txt');\n\t\tconsole.log('file deleted');\n\t};\n\n\t(() => Promise.resolve()\n\t\t.then(() => sequentialManager())\n\t\t.then(() => squentialManager2())\n\t)();\n\t--------------------------------","points":60,"extras":"","systemWhenCreated":"2020-07-09 20:08:27","systemWhoCreated":"systemUnknown"},{"id":129,"category":"JavaScript","title":"Example of using Node's promisify on writeFile","body":"- note that the error is output before the file-created messages since it takes time to create the files\n\t--------------------------------\n\tconst fs = require('fs');\n\tconst { promisify } = require('util');\n\n\tconst writeFile = promisify(fs.writeFile);\n\n\tconst texts = [\n\t\t{\n\t\t\tfileName: 'test001.txt',\n\t\t\tcontent: 'this is the content of 001.'\n\t\t},\n\t\t{\n\t\t\tfileName: 'badfolder/test002.txt',\n\t\t\tcontent: 'this is the content of 002.'\n\t\t},\n\t\t{\n\t\t\tfileName: 'test003.txt',\n\t\t\tcontent: 'this is the content of 003.'\n\t\t}\n\t];\n\n\ttexts.forEach(text => {\n\t\twriteFile(text.fileName, text.content)\n\t\t\t.then(() => console.log('file created'))\n\t\t\t.catch((error) => console.log(`error creating file: ` + error.message));\n\t});\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-07-09 20:08:27","systemWhoCreated":"systemUnknown"},{"id":130,"category":"JavaScript","title":"How to create and consume async methods","body":"- note that simply getting the result back from `getFiles()` would return a Promise:\n\t--------------------------------\n\tconst fs = require('fs');\n\tconst { promisify } = require('util');\n\tconst readdir = promisify(fs.readdir);\n\n\tasync function getFiles() {\n\t\tconst files = await readdir(__dirname);\n\t\treturn files;\n\t}\n\n\tgetFiles()\n\t\t.then((files) => {\n\t\t\tconsole.log(`We got ${files.length} files:`);\n\t\t\tlet count = 1;\n\t\t\tfiles.forEach(file => {\n\t\t\t\tconsole.log(`>>> ${count}. ${file}`);\n\t\t\t\tcount++;\n\t\t\t});\n\t\t});\n\t--------------------------------","points":60,"extras":"","systemWhenCreated":"2020-07-09 20:08:27","systemWhoCreated":"systemUnknown"},{"id":131,"category":"JavaScript","title":"How to set up simple TypeScript with Gulp","body":"- setup basics\n\t- `mkdir src dist`\n\t- `npm init -y`\n\t- package.json: `\"main\": \"main.js\",`\n- install Gulp\t\n\t- `npm i -g gulp-cli`\t\n\t- `npm i -D gulp`\n- install TypeScript\n\t- npm i -D typescript gulp-typescript\n- configure Gulp\n\t- create `gulpfile.js`\n\t- go to: `https://github.com/ivogabe/gulp-typescript`\n\t- Basic Usage\n\t- change `gulpfile.js` to:\n\t\t------------------------\n\t\tconst gulp = require('gulp');\n\t\tconst ts = require('gulp-typescript');\n\n\t\tgulp.task('default', function () {\n\t\t\treturn gulp.src('src/**/*.ts')\n\t\t\t\t.pipe(ts({\n\t\t\t\t\tnoImplicitAny: true,\n\t\t\t\t\toutFile: 'main.js'\n\t\t\t\t}))\n\t\t\t\t.pipe(gulp.dest('dist'));\n\t\t});\n\t\t------------------------\n- test\n\t- create `displayName.ts`\n\t\t--------------------\n\t\texport function displayName(name: string): void {\n\t\t\tconsole.log('Name: ' + name);\n\t\t}\n\t\t--------------------\n\t- create `src/main.ts`\n\t\t-----------------------\n\t\timport { displayName } from './displayName';\n\n\t\tdisplayName('Charles');\n\t\t-----------------------\n\t- terminal: `gulp`\n\t- `node dist/main.js`\n- bundle it for the browser\n\t- create `index.html`\n\t\t-------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta name=\"viewport\"\n\t\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>Test</title>\n\t\t</head>\n\n\t\t<body>\n\t\t\t<p>Testing</p>\n\t\t\t<script src=\"bundle.js\"></script>\n\t\t</body>\n\n\t\t</html>\n\t\t-------------------\n\t- `npm i -D browserify tsify vinyl-source-stream`\n\t- add to `gulpfile.js`\n\t\t-----------------------\n\t\tconst browserify = require('browserify');\n\t\tconst source = require('vinyl-source-stream');\n\t\tconst tsify = require('tsify');\n\t\t-----------------------\n\t- replace in `gulpfile.js`:\n\t\t--------------------------\n\t\tgulp.task('default', function () {\n\t\t\treturn browserify({\n\t\t\t\tbasedir: '.',\n\t\t\t\tdebug: true,\n\t\t\t\tentries: ['src/main.ts'],\n\t\t\t\tcache: {},\n\t\t\t\tpackageCache: {}\n\t\t\t})\n\t\t\t\t.plugin(tsify)\n\t\t\t\t.bundle()\n\t\t\t\t.pipe(source('bundle.js'))\n\t\t\t\t.pipe(gulp.dest('dist'));\n\t\t});\n\t\t--------------------------\n\t- and add this\n\t\t-------------------------------\n\t\tgulp.task('html', function () {\n\t\t\treturn gulp.src('src/*.html')\n\t\t\t\t.pipe(gulp.dest('dist'));\n\t\t});\n\t\t-------------------------------\n\t- change this:\n\t\t--------------------------------\n\t\tgulp.task('default', gulp.series('html', function () {\n\t\t--------------------------------","points":200,"extras":"","systemWhenCreated":"2020-07-14 23:50:12","systemWhoCreated":"systemUnknown"},{"id":132,"category":"TypeScript","title":"How to make a function with a generic parameter","body":"- note that this function will return an array of any type\n\t--------------------------------\n\t// converts only strings\nlet convertToStringArray: (v: string) => string[] = (value) => [value];\nlet name = \"Charles Messier\";\nlet names = convertToStringArray2(name);\nconsole.log(names);\n\n// same code written out as function\nfunction convertToStringArray2(value: string) : string[] {\n\treturn [value];\n}\nlet name1 = \"Richard Francis Burton\";\nlet names1 = convertToStringArray2(name1);\nconsole.log(names1);\n\n// generic converter for any type\nlet convertToArray: <T>(v: T) => T[] = (value) => [value];\n\nlet name2 = \"Dean Acheson\";\nlet names2 = convertToArray(name2);\nconsole.log(names2);\n\nlet number = 66;\nlet numbers = convertToArray(number);\nconsole.log(numbers);\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-07-18 16:29:29","systemWhoCreated":"systemUnknown"},{"id":133,"category":"TypeScript","title":"How to use generics with interfaces","body":"- note you can use any type, not just string\n\t--------------------------------\n\tinterface TransportCollection<T> {\n\t\tsingle: T\n\t\tgroup: T[]\n\t}\n\n\tconst collection: TransportCollection<string> = {\n\t\tsingle: \"Titus Flavius Josephus\",\n\t\tgroup: [\"Peter Abelard\", \"Petrarch\"]\n\t}\n\n\tconsole.log(collection);\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-07-19 17:20:56","systemWhoCreated":"systemUnknown"},{"id":134,"category":"TypeScript","title":"How to create a class with generic parameters","body":"- note how the commented lines would also work and would be more explicit:\n\t--------------------------------\n\tclass Utility<T> {\n\t\tconstructor(private arg1: T, private arg2: T) { }\n\n\t\ttoArray: () => T[] = () => [this.arg1, this.arg2];\n\t}\n\n\tlet utility1 = new Utility (\"one\", \"two\");\n\t//let utility1 = new Utility <string>(\"one\", \"two\");\n\tconsole.log(utility1.toArray());\n\n\tlet utility2 = new Utility (111, 222);\n\t//let utility2 = new Utility <number>(111, 222);\n\tconsole.log(utility2.toArray());\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-07-20 12:04:54","systemWhoCreated":"systemUnknown"},{"id":135,"category":"JavaScript","title":"Define variables from objects","body":"- note that the variables have to have the same names as the properties\n\t--------------------------------\n\tconst user = {\n\t  name: 'Pierre Bayle',\n\t  age: 59,\n\t  country: 'France'\n\t}\n\n\tconst { name, age } = user;\n\n\tconsole.log(`The person ${name} is ${age}.`);\n\n\t// note that this syntax makes sense even when you only have one variable, e.g.\n\tconst { country } = user;\n\t--------------------------------","points":10,"extras":"","systemWhenCreated":"2020-07-21 21:41:45","systemWhoCreated":"systemUnknown"},{"id":136,"category":"JavaScript","title":"How to use concat with arrays","body":"- note that you are created a new variable and not mutating one\n\t--------------------------------\n\tlet people = [];\n\tconst newPeople = [];\n\n\tconst person1 = {\n\t  name : 'Ferdinand de Saussure',\n\t  country : 'Switzerland',\n\t  age : 56\n\t}\n\tpeople.push(person1);\n\n\tconst person2 = {\n\t  name : 'Pierre de Fermat',\n\t  country : 'France',\n\t  age : 64\n\t}\n\tconst person3 = {\n\t  name : 'John Adams Whipple',\n\t  country : 'USA',\n\t  died: 1891\n\t}\n\tnewPeople.push(person2);\n\tnewPeople.push(person3);\n\n\tpeople = people.concat(newPeople);\n\n\tconsole.log(people);\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-07-21 22:50:56","systemWhoCreated":"systemUnknown"},{"id":137,"category":"JavaScript","title":"How to add variable as parameter to JavaScript object","body":"- note that the parameter takes the name of the variable\n\t--------------------------------\n\tconst isLoaded = false;\n\n\tconst state = {\n\t  status: 'on',\n\t  isLoaded,\n\t  count: 343\n\t}\n\n\tconsole.log(state);\n\t--------------------------------","points":20,"extras":"","systemWhenCreated":"2020-07-22 00:38:11","systemWhoCreated":"systemUnknown"},{"id":138,"category":"Atom","title":"How to add a JavaScript snippet","body":"- in menu: **File > Snippets**\n- add this text:\n\t-------------------\n\t'.source.js':\n\t\t'console.log':\n\t\t'prefix': 'cc'\n\t\t'body': 'console.log($1);'\n\t-------------------","points":10,"extras":"","systemWhenCreated":"2020-07-22 11:25:33","systemWhoCreated":"systemUnknown"},{"id":139,"category":"JavaScript","title":"How to display console.log() data as a table","body":"- note that if properties with the same name will appear as one column\n\t--------------------------------\n\t'use strict';\n\n\t//const formData = [55, undefined];\n\tconst formData = [55];\n\n\tformData.forEach((el) => {\n\t\tconsole.log(`\\n${el}:`);\n\t\tconsole.table({\n\t\t\t'new String()': {\n\t\t\t\tresult: `${new String(el)}`,\n\t\t\t\t'data type': `${typeof new String(el)}`,\n\t\t\t},\n\t\t\ttoString: {\n\t\t\t\tresult: `${el.toString()}`,\n\t\t\t\t'data type': `${typeof el.toString()}`,\n\t\t\t},\n\t\t\t'String()': {\n\t\t\t\tresult: `${String(el)}`,\n\t\t\t\t'data type': `${typeof String(el)}`,\n\t\t\t},\n\t\t});\n\t});\n\t--------------------------------","points":20,"extras":"","systemWhenCreated":"2020-07-27 13:09:46","systemWhoCreated":"systemUnknown"},{"id":140,"category":"JavaScript","title":"How to use promise.all()","body":"- note promisify doesn't need to be required since it is a part of node.js\n- note that one `then` passes output to next `then` in chain:\n\t--------------------------------\n\tconst fs = require('fs');\n\tconst { promisify } = require('util');\n\tconst writeFile = promisify(fs.writeFile);\n\tconst readdir = promisify(fs.readdir);\n\n\tPromise.all([\n\t\twriteFile('readme.md', 'this is the first line'),\n\t\twriteFile('readme.txt', 'this is the first line'),\n\t\twriteFile('readme.json', 'this is the first line')\n\t]).then(() => readdir(__dirname))\n\t.then(console.log);\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-07-28 11:58:13","systemWhoCreated":"systemUnknown"},{"id":141,"category":"JavaScript","title":"How to use the .map() function","body":"- note that you can pass in any function as the map parameter\n\t--------------------------------\n\tconst starScores = [4, 5, 3, 3, 3, 3, 2, 1, 5];\n\n\tconst starTexts = starScores.map(num => {\n\t\treturn '*'.repeat(num) + '∙'.repeat(5-num);\n\t});\n\n\tconsole.log(starScores);\n\tconsole.log(starTexts);\n\t--------------------------------","points":25,"extras":"","systemWhenCreated":"2020-07-28 16:08:09","systemWhoCreated":"systemUnknown"},{"id":142,"category":"JavaScript","title":"Example of parameter destructuring","body":"- note that both of these classes function identically\n\t--------------------------------\n\tclass Person {\n\t\tconstructor({ firstName, lastName, age = 0 }) {\n\t\t\tthis.firstName = firstName;\n\t\t\tthis.lastName = lastName;\n\t\t\tthis.age = age;\n\t\t}\n\t}\n\n\t// class Person {\n\t// \tconstructor(person) {\n\t// \t\tthis.firstName = person.firstName;\n\t// \t\tthis.lastName = person.lastName;\n\t// \t\tthis.age = person.age || 0;\n\t// \t}\n\t// }\t\n\n\tconst employee = {\n\t\tfirstName: 'George',\n\t\tlastName: 'Martin'\n\t};\n\n\tconst person = new Person(employee);\n\tconsole.log(person);\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-07-28 20:33:28","systemWhoCreated":"systemUnknown"},{"id":143,"category":"JavaScript","title":"How to generate a random idCode","body":"- idCode will be something like this: `c06ec7c98afbc4d7a2f0` or `5fffae05dd793958a897`\n\t--------------------------------\n\tlet people = [\n\t\t{\n\t\t\t\"firstName\": \"James\",\n\t\t\t\"lastName\": \"Cook\",\n\t\t\t\"language\": \"English\",\n\t\t},\n\t\t{\n\t\t\t\"firstName\": \"Wilfred\",\n\t\t\t\"lastName\": \"Owen\",\n\t\t\t\"language\": \"English\",\n\t\t},\n\t\t{\n\t\t\t\"firstName\": \"Henry\",\n\t\t\t\"lastName\": \"Hopkins\",\n\t\t\t\"language\": \"English\",\n\t\t}\n\t]\n\n\tpeople = people.map(p => {\n\t\tp.idCode = require('crypto').randomBytes(10).toString('hex');\n\t\treturn p;\n\t})\n\n\tconsole.log(people);\n\t--------------------------------","points":20,"extras":"","systemWhenCreated":"2020-07-28 20:49:36","systemWhoCreated":"systemUnknown"},{"id":144,"category":"JavaScript","title":"How to create an object database as a class","body":"- note that the name of the key in the key/value is the unique idCode, e.g. `5c764c9b2f64254282dc`\n\t--------------------------------\n\tclass Database {\n\t\tobjects = {};\n\t\taddObject(obj) {\n\t\t\tconst idCode = require('crypto').randomBytes(10).toString('hex');\n\t\t\tthis.objects[idCode] = obj;\n\t\t}\n\t\toutput() {\n\t\t\treturn this.objects;\n\t\t}\n\t}\n\n\tconst person = {\n\t\titemType: 'persons',\n\t\tfirstName: 'Karl',\n\t\tlastName: 'Popper'\n\t};\n\n\tconst building = {\n\t\titemType: 'buildings',\n\t\tname: 'hospital',\n\t\tcity: 'London',\n\t\tyearBuild: 1971\n\t}\n\n\tconst db = new Database();\n\tdb.addObject(person);\n\tdb.addObject(building);\n\n\tconsole.log(db.output());\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-07-28 21:17:09","systemWhoCreated":"systemUnknown"},{"id":145,"category":"JavaScript","title":"How to get a random item out of an array","body":"- note this produces a number from 0 to length-1 (for 1-length, add 1)\n\t--------------------------------\n\tconst nums = [5,26,3,6,4,3,3];\n\tconst num = nums[Math.floor(Math.random() * nums.length)];\n\tconsole.log(num);\n\t--------------------------------","points":5,"extras":"$rank=4.83","systemWhenCreated":"2020-07-29 10:12:01","systemWhoCreated":"systemUnknown"},{"id":146,"category":"JavaScript","title":"How to left-pad zeros or other characters on numbers","body":"- note that `String()` is better practice than `.toString()`\n\t--------------------------------\n\tconst nums = [245, 3, 7232, 82, 3, 0, 232];\n\tconst padZeros = (num, digits = 5, pad = '0') => String(pad.repeat(digits) + num).slice(digits * -1);\n\n\tconsole.log(nums);\n\n\tconsole.log(nums.map(n => padZeros(n)));\n\tconsole.log(nums.map(n => padZeros(n, 10)));\n\tconsole.log(nums.map(n => padZeros(n, 10, '•')));\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-07-29 12:45:31","systemWhoCreated":"systemUnknown"},{"id":147,"category":"JavaScript","title":"Make NPM script for extensive git logging","body":"- run this with `run npm gg`\n--------------------------------\n\"gg\" : \"git log --graph --decorate -30 --all --date-order --date=format:\\\"%Y-%m-%d %H:%M:%S\\\" --pretty=format:\\\"%C(cyan)%h%Creset %C(black bold)%ad%Creset%C(auto)%d %s\\\"\",\n--------------------------------","points":10,"extras":"","systemWhenCreated":"2020-07-29 17:35:24","systemWhoCreated":"systemUnknown"},{"id":148,"category":"angular","title":"Set up a simple Angular site","body":"- `npm i -g @angular/cli`\n- `ng new angularrxjs` which creates a directory at that point\n\t- accept default answers (2x)\n- `cd angularrxjs`\n- `ng serve`\n- in browser: `http://localhost:4200`\n- in `src\\app\\app.component.html`, search for and change \"Next Steps\" to \"Next Steps2\" and it is updated in the browser immediately","points":50,"extras":"","systemWhenCreated":"2020-07-30 17:01:20","systemWhoCreated":"systemUnknown"},{"id":149,"category":"Notepad++","title":"Add autosave functionality","body":"- plugins\n- manage\n- search: `autosave` (not autosave2)\n- [[Install]]\n- Plugins > Autosave > Options\n\t- check: Notepad++ loses focus\n\t- check: interval = 1 minute\n\t- Unnamed files: ask for filename\n- best to not have more tabs open then fit across the screen, otherwise they shift on save\n- also useful: Plugins > Autosave > Create a copy of current file with timestamp","points":20,"extras":"","systemWhenCreated":"2020-07-31 13:51:25","systemWhoCreated":"systemUnknown"},{"id":150,"category":"Notepad++","title":"How to use regex to search and replace with variables","body":"- copy in this text:\n-----------------------------\n1. 5 + 10 = 15\n\n2. 21 + 3 = 24\n\n3. 81 + 23 = 104\n-----------------------------\n- you want to convert these addition equations into minus equations\n- CTRL-H to search and replace\n- Search mode: Regular Expressions\n- Search for: `(\\d*) \\+ (\\d*) = (\\d*)`\n- Replace with: `$3 - $2 = $1`","points":50,"extras":"","systemWhenCreated":"2020-07-31 17:35:22","systemWhoCreated":"systemUnknown"},{"id":151,"category":"JavaScript","title":"Use regex to replace only exact variable name but not that name within a word","body":"- note that only the variable name will be replaced\n\t--------------------------------\n\tconst line = \"const name = name + '- (named)';\"\n\tconst regex = /\\bname\\b/gi;\n\n\tconst newLine = line.replace(regex, 'lastName');\n\n\tconsole.log(newLine);\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-08-03 14:40:10","systemWhoCreated":"systemUnknown"},{"id":152,"category":"JavaScript","title":"Example of promise as standard database method to get information","body":"- Note that in order to send the parameter (id), you have to write the promise in a function:\n\t--------------------------------\n\tconst getPerson = function (id) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst errorOccurred = Math.floor(Math.random() * 2) + 1 == 1 ? true : false;\n\t\t\tif (errorOccurred) {\n\t\t\t\treject(`Sorry, person not found with id ${id}.`);\n\t\t\t} else {\n\t\t\t\tconst person = {\n\t\t\t\t\tid: id,\n\t\t\t\t\tfirstName: 'Christiaan',\n\t\t\t\t\tlastName: 'Huygens'\n\t\t\t\t};\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve(person);\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPerson(222).then((person) => {\n\t\tconsole.log(`We received ${person.firstName} ${person.lastName} (${person.id}).`);\n\t}).catch((message) => {\n\t\tconsole.log(`Error: ${message}`);\n\t});\n\t--------------------------------","points":100,"extras":"","systemWhenCreated":"2020-08-04 13:03:48","systemWhoCreated":"systemUnknown"},{"id":153,"category":"JavaScript","title":"How to chain promises","body":"- Note that you can chain as many promises as you want by adding `.then()` blocks:\n\t--------------------------------\n\tconst getPerson = function (id) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst errorOccurred = Math.floor(Math.random() * 2) + 1 == 1 ? true : false;\n\t\t\tif (errorOccurred) {\n\t\t\t\treject(`Sorry, person not found with id ${id}.`);\n\t\t\t} else {\n\t\t\t\tconst person = {\n\t\t\t\t\tid: id,\n\t\t\t\t\tfirstName: 'Christiaan',\n\t\t\t\t\tlastName: 'Huygens'\n\t\t\t\t};\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve(person);\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst changeId = function (id) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve(id + 1);\n\t\t\t}, 1000);\n\t\t});\n\t}\n\n\tgetPerson(222).then((person) => {\n\t\tconsole.log(`We received ${person.firstName} ${person.lastName} (${person.id}).`);\n\t\treturn person.id;\n\t}).then((id) => {\n\t\tchangeId(id).then((newId) => {\n\t\t\tconsole.log(`Id was changed from ${id} to ${newId}.`);\n\t\t})\n\t}).catch((message) => {\n\t\tconsole.log(`Error: ${message}`);\n\t});\n\t--------------------------------","points":100,"extras":"","systemWhenCreated":"2020-08-04 13:23:52","systemWhoCreated":"systemUnknown"},{"id":154,"category":"JavaScript","title":"How to use Promise.all() to handle multiple promises","body":"- Note that it seems to always process the promises in order:\n\t--------------------------------\n\tconst getPerson = function (id) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst errorOccurred = Math.floor(Math.random() * 11) + 1 == 1 ? true : false;\n\t\t\tconst seconds = (Math.floor(Math.random() * 3) + 1) * 1000;\n\t\t\tconsole.log(seconds);\n\t\t\tif (errorOccurred) {\n\t\t\t\treject(`Sorry, there was some problem and so nothing can be displayed.`);\n\t\t\t} else {\n\t\t\t\tlet persons = {\n\t\t\t\t\t111: {\n\t\t\t\t\t\tid: 111,\n\t\t\t\t\t\tfirstName: 'Christiaan',\n\t\t\t\t\t\tlastName: 'Huygens'\n\t\t\t\t\t},\n\t\t\t\t\t222: {\n\t\t\t\t\t\tid: 222,\n\t\t\t\t\t\tfirstName: 'Augustus',\n\t\t\t\t\t\tlastName: 'Pugin'\n\t\t\t\t\t},\n\t\t\t\t\t333: {\n\t\t\t\t\t\tid: 333,\n\t\t\t\t\t\tfirstName: 'George',\n\t\t\t\t\t\tlastName: 'Marshall'\n\t\t\t\t\t},\n\t\t\t\t\t444: {\n\t\t\t\t\t\tid: 444,\n\t\t\t\t\t\tfirstName: 'Milton',\n\t\t\t\t\t\tlastName: 'Friedman'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve(persons[id]);\n\t\t\t\t}, seconds);\n\t\t\t}\n\t\t});\n\t}\n\n\tPromise.all([\n\t\tgetPerson(111),\n\t\tgetPerson(222),\n\t\tgetPerson(333),\n\t\tgetPerson(444)\n\t]).then((persons) => {\n\t\tpersons.map((person) => {\n\t\t\tconsole.log(`We received ${person.firstName} ${person.lastName} (${person.id}).`);\n\t\t});\n\t}).catch((message) => {\n\t\tconsole.log(message);\n\t});\n\t\t--------------------------------","points":100,"extras":"","systemWhenCreated":"2020-08-04 14:20:08","systemWhoCreated":"systemUnknown"},{"id":155,"category":"JavaScript","title":"How to use async/await instead of promises","body":"- Note that async/await can emulate the functionality of promises, including error handling\n\t--------------------------------\n\tconst fs = require('fs');\n\tconst { promisify } = require('util');\n\tconst writeFile = promisify(fs.writeFile);\n\tconst unlink = promisify(fs.unlink);\n\tconst delay = (seconds) => new Promise((resolve, reject) => {\n\t\tconst errorOccurred = Math.floor(Math.random() * 5) + 1 == 1 ? true : false;\n\t\tif (errorOccurred) {\n\t\t\treject({\n\t\t\t\tentity: 'error',\n\t\t\t\tseverity: 'severe',\n\t\t\t\tmessage: 'there was an error'\n\t\t\t});\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve('finished');\n\t\t\t}, seconds * 1000);\n\t\t}\n\t});\n\n\t(async () => {\n\t\ttry {\n\t\t\tconsole.log('waiting 1 second');\n\t\t\tconst message = await delay(1);\n\t\t\tconsole.log('The returned message was: ' + message);\n\t\t\tconsole.log('creating file');\n\t\t\tawait writeFile('temp004.txt', 'testing');\n\t\t\tconsole.log('waiting 4 seconds before deleting');\n\t\t\tawait delay(4);\n\t\t\tawait unlink('temp004.txt');\n\t\t\tconsole.log('file deleted');\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log('ERROR: ' + e.message);\n\t\t}\n\t\tfinally {\n\t\t\tconsole.log('clean up in all cases');\n\t\t}\n\t})();\n\t--------------------------------","points":100,"extras":"","systemWhenCreated":"2020-08-04 15:50:31","systemWhoCreated":"systemUnknown"},{"id":156,"category":"JavaScript","title":"How to use async/await in for-loop to access data from promise","body":"- Notice that each call is executed in order\n\t--------------------------------\n\tconst getServer = (idCode) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst seconds = Math.floor(Math.random() * 4) + 1;\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve({\n\t\t\t\t\tidCode: idCode,\n\t\t\t\t\tname: 'Server ' + idCode.toUpperCase(),\n\t\t\t\t\tseconds: seconds\n\t\t\t\t});\n\t\t\t}, seconds * 1000);\n\t\t});\n\t};\n\n\tconst accessServers = async (serverIdCodes) => {\n\t\tlet count = 0;\n\t\tfor (const serverIdCode of serverIdCodes) {\n\t\t\tconst server = await getServer(serverIdCode);\n\t\t\tcount++;\n\t\t\tconsole.log(`Got server #${count} called \"${server.name}\" which took ${server.seconds} seconds.`);\n\t\t}\n\t};\n\n\tconst serverIdCodes = ['internal003', 'internal002', 'external011'];\n\taccessServers(serverIdCodes);\n\n\taccessServers(['internal033', 'internal011', 'internal012', 'external141', 'external117']);\n\t--------------------------------","points":100,"extras":"","systemWhenCreated":"2020-08-04 16:35:51","systemWhoCreated":"systemUnknown"},{"id":157,"category":"Node","title":"Method that recursively gets files from directory","body":"- note this allows you to specify directories you don't want to have search, and you can pass in a keyword to search\n\t--------------------------------\n\tvar fs = require('fs');\n\tvar path = require('path');\n\tvar getFilesRecursive = function (dir, done, options = { excludeDirs: [], searchWord: null }) {\n\t\tvar results = [];\n\t\tfs.readdir(dir, function (err, list) {\n\t\t\tif (err) return done(err);\n\t\t\tvar i = 0;\n\t\t\t(function next() {\n\t\t\t\tvar file = list[i++];\n\t\t\t\tif (!file) return done(null, results);\n\t\t\t\tfile = path.resolve(dir, file);\n\t\t\t\tfs.stat(file, function (err, stat) {\n\t\t\t\t\tconst numberOfFinds = options.excludeDirs.reduce((acc, excludeDir) => {\n\t\t\t\t\t\tif (file.endsWith(excludeDir)) {\n\t\t\t\t\t\t\tacc++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, 0);\n\t\t\t\t\tif (numberOfFinds == 0) {\n\t\t\t\t\t\tif (stat && stat.isDirectory()) {\n\t\t\t\t\t\t\tgetFilesRecursive(file, function (err, res) {\n\t\t\t\t\t\t\t\tresults = results.concat(res);\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t}, options);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (options.searchWord == null || (options.searchWord != null && file.toUpperCase().includes(options.searchWord.toUpperCase()))) {\n\t\t\t\t\t\t\t\tresults.push(file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})();\n\t\t});\n\t};\n\n\tgetFilesRecursive('c:/edward/nwo', function (err, pathAndFileNames) {\n\t\tif (err) {\n\t\t\tconsole.log('sorry, there was a problem: ' + err);\n\t\t}\n\t\tpathAndFileNames.forEach(pathAndFileName => console.log(pathAndFileName));\n\t}, { excludeDirs: ['node_modules', '.git'], searchWord: 'config' });\n\n\t// OPTIONS:\n\t//console.dir(files, { 'maxArrayLength': null });\n\t//console.dir(files);\n\t//const fileItems = pathAndFileNames.map(pathAndFileName => ({ pathAndFileName: pathAndFileName, file: path.basename(pathAndFileName) }));\n\t//const fileItems = files.forEach(console.log(file));\n\t//}, { excludeDirs: ['node_modules', '.git'] });\n\t//}, { excludeDirs: ['node_modules', '.git'], searchWord: 'bs-' });\n\t--------------------------------","points":110,"extras":"","systemWhenCreated":"2020-08-05 17:30:03","systemWhoCreated":"systemUnknown"},{"id":158,"category":"Node","title":"Create large JSON file with easy-and-fast access via ids","body":"- write.js\n\t--------------------------------\n\tconst fs = require('fs');\n\n\tconst servers = {\n\t\t\"62732\": {\n\t\t\tname: 'External_83743',\n\t\t\ttype: 'Linux',\n\t\t\twhenCreated: '2020-01-01',\n\t\t\tdrives: 3\n\t\t},\n\t\t\"893472\": {\n\t\t\tname: 'External_32333',\n\t\t\ttype: 'Windows',\n\t\t\twhenCreated: '2020-04-01',\n\t\t\tdrives: 2\n\t\t}\n\t};\n\n\tfor (let x = 1; x <= 10000; x++) {\n\t\tservers[x] = {\n\t\t\t'type': 'test',\n\t\t\t'identifier': x\n\t\t}\n\t}\n\n\tfs.writeFile('servers.json', JSON.stringify(servers), err => {\n\t\tif (err) throw err;\n\t\tconsole.log('finished');\n\t});\n\t--------------------------------\n- read.js\n\t---------------------------------\n\tconst servers = require('./servers.json');\n\n\tconsole.log(servers[9755]);\n\t---------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-05 17:30:03","systemWhoCreated":"systemUnknown"},{"id":159,"category":"Node","title":"How to access data from a JSON file synchonously and asychronously","body":"- note that in the asynchronous version, the data is the last to be displayed\n\t--------------------------------\n\tconst fs = require('fs');\n\tconst data = require('./data.json');\n\n\t// synchronous data access to JSON files\n\tconsole.log('--- before 1');\n\tconsole.log(data.name);\n\tconsole.log(data.server);\n\tconsole.log('--- after 1');\n\n\t// asynchronous data access to JSON files\n\tconsole.log('--- before 2');\n\tfs.readFile('./data.json', 'utf-8', (err, rawData) => {\n\t\tconst data = JSON.parse(rawData);\n\t\tconsole.log(data.name);\n\t});\n\tconsole.log('--- after 2');\n\t--------------------------------\n- data.json:\n\t-----------------------\n\t{\n\t\t\"name\": \"Isaac\",\n\t\t\"server\": {\n\t\t\t\"name\": \"Apache\",\n\t\t\t\"whenSetup\": \"2020-01-01\",\n\t\t\t\"location\": \"external\"\n\t\t}\n\t}\n\t\t-----------------------","points":40,"extras":"","systemWhenCreated":"2020-08-05 17:30:47","systemWhoCreated":"systemUnknown"},{"id":160,"category":"Node","title":"Datalayer to easily query a JSON file, including emulated join","body":"- this is a small Node example of using `.map()`, `.reduce()`, `.filter()`, and `.find()` to query a JSON file of data\n- note that `fetch_orders_for_employee` searches with a emulated join on two files `orders.json` and `employees.json`\n- app.js\n\t--------------------------------\n\tconst dpod = require('./dpod.js');\n\n\tconst list = dpod.fetch_short_phone_list();\n\tconst num = dpod.fetch_number_of_territories();\n\tconst cities = dpod.fetch_city_list();\n\tconst titles = dpod.fetch_field_list('title');\n\tconst employee = dpod.fetch_employee_by_id(5);\n\tconst notes = dpod.fetch_notes_by_keyword('1992');\n\tconst orders = dpod.fetch_orders_for_employee(6);\n\n\tconsole.log(list);\n\tconsole.log(num);\n\tconsole.log(cities);\n\tconsole.log(titles);\n\tconsole.log(employee);\n\tconsole.log(notes);\n\tconsole.log(orders);\n\tconsole.log(orders.length);\n\t--------------------------------\n- dpod.js\n\t----------------------------\n\tconst fs = require('fs');\n\tconst employees = require('./employees.json');\n\tconst orders = require('./orders.json');\n\tconst dpod = require('./dpod.js');\n\n\texports.fetch_short_phone_list = () => {\n\t\treturn employees.map(emp => ({ \"name\": `${emp.firstName} ${emp.lastName}`, \"city\": emp.address.city, \"phone\": emp.address.phone }));\n\t};\n\n\texports.fetch_number_of_territories = () => {\n\t\treturn employees.reduce((acc, emp) => {\n\t\t\tacc += emp.territoryIDs.length;\n\t\t\treturn acc;\n\t\t}, 0);\n\t};\n\n\texports.fetch_city_list = () => {\n\t\treturn employees.map(emp => emp.address.city);\n\t};\n\n\texports.fetch_field_list = (field) => {\n\t\treturn employees.map(emp => emp[field]);\n\t};\n\n\texports.fetch_employee_by_id = (id) => {\n\t\treturn employees.find(emp => emp.employeeID == id);\n\t};\n\n\texports.fetch_notes_by_keyword = (keyword) => {\n\t\tconst emps = employees.filter(emp => emp.notes.includes(keyword));\n\t\treturn emps.map(emp => ({ \"name\": `${emp.firstName} ${emp.lastName}`, \"notes\": emp.notes }));\n\t};\n\n\texports.fetch_orders_for_employee = (empId) => {\n\t\tconst empOrders = orders.filter(ord => ord.employeeID == empId);\n\t\treturn empOrders.map(ord => {\n\t\t\tconst emp = dpod.fetch_employee_by_id(ord.employeeID);\n\t\t\treturn {\n\t\t\t\tid: ord.orderID, date: ord.orderDate.substr(0, 10), customer: ord.shipName,\n\t\t\t\tsalesperson: `${emp.firstName} ${emp.lastName}`\n\t\t\t}\n\t\t});\n\t};\n\t----------------------------\n- data files\n\t- for files `orders.json` and `employees.json`, copy data from here: https://github.com/graphql-compose/graphql-compose-examples/tree/master/examples/northwind/data/json","points":70,"extras":"","systemWhenCreated":"2020-08-05 17:30:47","systemWhoCreated":"systemUnknown"},{"id":161,"category":"Jekyll","title":"How to set up a Jekyll site","body":"- make sure you have Ruby\n\t- `ruby -v`\n\t- if not, install Ruby\n\t\t- go to: https://rubyinstaller.org\n\t\t- [[Download]]\n\t\t- I downloaded `Ruby+Devkit 2.6.6-1 (x64)`\n\t\t- install it\n\t\t- make sure you run the `ridk install` step on the last stage of the installation wizard\n\t\t- exit command line, enter again, and `ruby -v`, it should be installed now\n\t\t\t- I got `Ruby 2.6.p146`\n- install Jekyll\n\t- `gem install jekyll bundle` (5 minutes)\n\t- `jekyll -v`\n\t\t- I got `jekyll 4.1.1`\n- create Jekyll site\n\t- goto you web directory, e.g. `webs`\n\t- `jekyll new jekyllsite`\n\t- open jekyllsite directory with VSCode\n\t- `git init`\n\t- `git status`\n\t- `git add *`\n\t- `git commit -m \"first commit\"\n\t- `bundle lock --add-platform ruby`\n\t- `bundle lock --add-platform x86_64-linux`\n- preview the site\n\t- `bundle exec jekyll serve`\n\t- site works at: http://127.0.0.1:4000\n\t- doesn't seem to update immediately, you have to refresh the browser\n- add a theme\n\t- http://jekyllthemes.org\n\t- https://jekyllthemes.io\n\t- open file `Gemfile`\n\t- comment out `gem \"minima\", \"~> 2.5\"`\n\t- add `gem \"jekyll-athena\"`\n\t- in `_config.yml`\n\t\t- `theme: jekyll-athena`\n\t- at command line: `bundle`\n\t- `bundle exec jekyll serve`\n- config changes:\n\t- `_config.yml`\n\t\t- change title\n\t\t- add: `destination: public`\n\t\t- stop server and start again: `bundle exec jekyll serve`\n\t- `.gitignore`\n\t\t- add: `public`\n- add a post\n\t- add plugin to create posts\n\t\t- `Gemfile`\n\t\t\tadd: `gem 'jekyll-compose', group: [:jekyll_plugins]`\n\t\t- command line: \n\t\t\t- `bundle`\n\t- `bundle exec jekyll post \"Regarding future errors\"`\n- edit post\n\t- in the `_posts` directory, find your post \n\t- add some text at the bottom\n\t- in the front matter:\n\t\t- `category: philosophy`\n\t\t- `tags: edward`\n- make a new page\n\t- `bundle exec jekyll page \"Projects\"`\n\t- add text below front matter\n\t- `bundle exec jekyll serve`\n- .. adding content","points":50,"extras":"","systemWhenCreated":"2020-08-06 00:08:04","systemWhoCreated":"systemUnknown"},{"id":162,"category":"Notepad++","title":"How to record a macro","body":"- keys you need should be in the top task bar here:##notepadmacrook\n- move cursor to where you want to start, then press the red-dot button\n- make a long macro, e.g. move cursor, delete characters, add, etc.\n- then click stop\n- then click the save icon, (last icon on right)\n- add name and hotkey, [[CTRL-ALT-SHIFT-J]] works for me\n- to edit macros, click in menu Macro and last entry: change shortcut","points":25,"extras":"","systemWhenCreated":"2020-08-06 10:12:43","systemWhoCreated":"systemUnknown"},{"id":163,"category":"JavaScript","title":"Simple example of callback (shopping)","body":"- note how each caller of the function with callback can individually process what the callback returned\n\t--------------------------------\n\tconst shopping = (list, cbFound = null) => {\n\t\tlet count = 0;\n\t\tlist.forEach(item => {\n\t\t\tcbFound(item, ++count);\n\t\t})\n\t\treturn `bought ${list.length} things`;\n\t}\n\n\tconst message = shopping(['aaa', 'bbb', 'ccc', 'nnn'], (item, count) => {\n\t\tconsole.log(`${'*'.repeat(count)} they just found: ${item}`);\n\t});\n\tconsole.log(message);\n\n\n\tconst message2 = shopping(['aaa', 'bbb', 'ccc', 'nnn'], (item, count) => {\n\t\tconsole.log(`.`);\n\t});\n\tconsole.log(message2);\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-10 10:55:55","systemWhoCreated":"systemUnknown"},{"id":165,"category":"JavaScript","title":"Simple example (shopping) of asynchronous function with multiple callbacks","body":"- note that you can have as many callbacks which send back information on various events during the process\n\t--------------------------------\n\tconst goShopping = (list, cbItemReport, cbFinished, cbError) => {\n\t\tlet count = 0;\n\t\tlet numberFound = 0;\n\n\t\tconst randomError = Math.floor(Math.random() * 3);\n\t\tif (randomError == 0) {\n\t\t\tcbError('Something went wrong, trip aborted.');\n\t\t} else {\n\t\t\tlist.forEach(item => {\n\t\t\t\tconst randomFound = Math.floor(Math.random() * 4);\n\t\t\t\tif (randomFound > 0) {\n\t\t\t\t\tcbItemReport(item, true, ++count);\n\t\t\t\t\tnumberFound++;\n\t\t\t\t} else {\n\t\t\t\t\tcbItemReport(item, false, ++count);\n\t\t\t\t}\n\t\t\t})\n\t\t\tcbFinished(`Bought ${numberFound} things.`);\n\t\t}\n\t}\n\n\tconst message = goShopping(['milk', 'eggs', 'sugar', 'bread'],\n\t\t(item, found, count) => {\n\t\t\tconsole.log(`Item #${count} \"${item}\" was ${found ? 'found' : 'not found'}.`);\n\t\t},\n\t\t(message) => {\n\t\t\tconsole.log(\"Returned from shopping: \" + message);\n\t\t},\n\t\t(error) => {\n\t\t\tconsole.log(\"ERROR: \" + error);\n\t\t});\n\tconsole.log(message);\n\t--------------------------------","points":70,"extras":"","systemWhenCreated":"2020-08-10 11:43:17","systemWhoCreated":"systemUnknown"},{"id":166,"category":"Express","title":"Simple express site that reads a file about.html and outputs it to /about","body":"- note you need Babel for the ES6 module syntax, otherwise use Node/CommonJS syntax\n- server.js\n\t--------------------------------\n\timport fs from 'fs';\n\timport config from './config';\n\n\timport express from 'express';\n\tconst server = express();\n\n\tserver.get('/', (req, res) => {\n\t\tres.send('on browser2 <a href=\"about\">about</a>.');\n\t});\n\tserver.get('/about', (req, res) => {\n\t\tfs.readFile('./about.html', (err, data) => {\n\t\t\tres.send(data.toString());\n\t\t});\n\t});\n\n\tserver.listen(config.port, () => {\n\t\tconsole.log('Express listening on port', config.port);\n\t});\n\t--------------------------------\n- config.js\n\t-------------------\n\tconst env = process.env;\n\n\texport default {\n\t\tport: env.PORT || 3001\n\t};\n\t-------------------","points":40,"extras":"","systemWhenCreated":"2020-08-11 14:47:08","systemWhoCreated":"systemUnknown"},{"id":167,"category":"Node","title":"Syntax for reading in ES6/Babel modules","body":"- `npm i -D babel-loader @babel/cli @babel/core @babel/preset-env @babel/preset-react @babel/plugin-proposal-class-properties @babel-node`\n- `qstr.js`:\n\t---------------------\n\texport const putInBrackets = (message) => {\n\t\treturn `[${message}]`;\n\t};\n\t---------------------\n- `server.js`:\n\t----------------------\n\timport * as qstr from './qstr';\n\n\tconsole.log(qstr.putInBrackets('nnn'));\n\t----------------------\n- `./node_modules/.bin/babel-node server.js`","points":30,"extras":"","systemWhenCreated":"2020-08-11 15:16:46","systemWhoCreated":"systemUnknown"},{"id":168,"category":"React","title":"How to add emmet support to React files","body":"- [[CTRL-,]]\n- click on **Extensions**\n- scroll down and click on: **Edit in settings.json**\n- add this:\n\t--------------------------------\n\t\"emmet.includeLanguages\": {\n\t\t\"javascript\": \"javascriptreact\"\n}\n\t--------------------------------","points":10,"extras":"","systemWhenCreated":"2020-08-12 12:59:59","systemWhoCreated":"systemUnknown"},{"id":170,"category":"Webpack","title":"How to get Webpack to copy static files","body":"- `npm i -D copy-webpack-plugin`\n- add to `webpack.config.js`\n\t- `const CopyWebpackPlugin = require('copy-webpack-plugin');`\n\t- add `new CopyWebpackPlugin` block to `plugins`:\n\t\t------------------------------\n\t\tnew CopyWebpackPlugin(\n\t\t\t[\n\t\t\t\t{ from: 'src/html', to: '.' }\n\t\t\t]\n\t\t)\n\t\t------------------------------\n\t- note this will recursively copy all contents in `src/html` to your output directory (`.`) defined in `output`, in this case to `dist`:\n\t\t--------------------------\n\t\toutput: {\n\t\t\tpath: path.resolve(__dirname, 'dist'),\n\t\t\tfilename: 'bundle.js'\n\t\t}\n\t\t--------------------------\n\t- then to run this, simply do:\n\t\t-----------------------\n\t\t\"scripts\": {\n\t\t\t\"dev\": \"webpack -wd\",\n\t\t\t\"build\": \"webpack\"\n\t\t}\n\t\t-----------------------","points":30,"extras":"","systemWhenCreated":"2020-08-13 14:00:52","systemWhoCreated":"systemUnknown"},{"id":171,"category":"React","title":"How to enable SASS in a create-react-app site","body":"- create and start React site\n\t- in your webs directory: `npx create-react-app sasstest`\n\t- `cd sasstest`\n\t- `code .` (to open VSCode in this directory)\n\t- `npm start`\n\t- CTRL-C React beenden\n- install and enable SASS\n\t- `npm i sass`\n\t- in `src\\App.js` \n\t\t- change `import './App.css';` to `import './App.scss';`\t\n\t\t- replace the entire `<div className=\"App\">` with this new content:\n\t\t\t--------------------------------------------------\n\t\t\t<div className=\"App\">\n\t\t\t\t<main>\n\t\t\t\t\t<h1>Web Browsers</h1>\n\t\t\t\t\t<article class=\"browser\">\n\t\t\t\t\t\t<h2>Firefox</h2>\n\t\t\t\t\t\t<p>Firefox is an open-source web browser developed by Mozilla, released in <span class=\"year\">2002</span>.\n\t\t\t\t\t\t\tIt uses the <strong>Gecko</strong> browser\n\t\t\t\t\t\t\trendering engine and the <strong>SpiderMonkey</strong> JavaScript rendering engine.</p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<article class=\"browser\">\n\t\t\t\t\t\t<h2>Safari</h2>\n\t\t\t\t\t\t<p>Safari is a web browser developed by Apple, released in <span class=\"year\">2003</span>. It uses the\n\t\t\t\t\t\t\t<strong>WebKit</strong> browser\n\t\t\t\t\t\t\trendering engine and the <strong>JavaScriptCore</strong> rendering engine.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<article class=\"browser\">\n\t\t\t\t\t\t<h2>Chrome</h2>\n\t\t\t\t\t\t<p>Chrome is a web browser developed by Google, released in <span class=\"year\">2008</span>. It uses the\n\t\t\t\t\t\t\t<strong>Blink</strong> rendering\n\t\t\t\t\t\t\tengine and the <strong>V8</strong> JavaScript rendering engine.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</article>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t\t--------------------------------------------------\n\t- rename `src\\App.css` to `src\\App.scss`\n\t\t- replace content with:\n\t\t\t-------------------------\n\t\t\t@use 'variables';\n\t\t\t@use 'layout';\n\t\t\t-------------------------\n\t- add `src\\_variables.scss`\n\t\t--------------------------\n\t\t$mainHeaderColor: rgb(42, 134, 34); \n\t\t--------------------------\n\t- add `src\\_layout.scss`\n\t\t--------------------------\n\t\t@use 'variables' as v;\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t\t\tmain {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tpadding: 0.8rem;\n\t\t\t\t\tbackground-color: lightgray;\n\t\t\t\t\th1 {\n\t\t\t\t\t\tcolor: v.$mainHeaderColor;\n\t\t\t\t\t}\n\t\t\t\t\th1,\n\t\t\t\t\tarticle.browser {\n\t\t\t\t\t\tmargin: 10px;\n\t\t\t\t\t\tpadding: 0.8rem;\n\t\t\t\t\t}\n\t\t\t\t\tarticle.browser {\n\t\t\t\t\t\tbackground: white;\n\t\t\t\t\t\th2 {\n\t\t\t\t\t\t\tcolor: v.$mainHeaderColor;\n\t\t\t\t\t\t}\n\t\t\t\t\t\th2,\n\t\t\t\t\t\tp {\n\t\t\t\t\t\t\tmargin: 0.5rem;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp {\n\t\t\t\t\t\t\tcolor: rgb(141, 25, 25);\n\t\t\t\t\t\t\t.year {\n\t\t\t\t\t\t\t\tfont-size: 1.3rem;\n\t\t\t\t\t\t\t\tbackground-color: #eee;\n\t\t\t\t\t\t\t\tcolor: navy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstrong {\n\t\t\t\t\t\t\t\tbackground-color: lightyellow;\n\t\t\t\t\t\t\t\tcolor: black;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t--------------------------\n- reinstall all packages (necessary after .scss change)\n\t- `npm i`\n- restart app\n\t- `npm start`","points":30,"extras":"","systemWhenCreated":"2020-08-14 21:01:33","systemWhoCreated":"systemUnknown"},{"id":172,"category":"JavaScript","title":"How to use the spread operator to count number of occurances of letters in a word","body":"- notice that the `...acc` keeps passing the \"spread\" contents of the array to the next reduce step:\n\t--------------------------------\n\tconst countOccurances = arr =>\n\t\tarr.reduce((acc, str) => ({\n\t\t\t...acc,\n\t\t\t[str]: acc[str] ? acc[str] + 1 : 1\n\t\t}), {});\n\n\tconst sentence = \"Let's assume you want to create a new object with a different name and website, but the same occupation and age.\";\n\tconst letterArray = sentence.split('');\n\tconst letterCount = countOccurances(letterArray);\n\tconsole.log(letterCount); // unsorted object parameters\n\n\tconst sortable = [];\n\tfor(const key in letterCount) {\n\t\tsortable.push([key, letterCount[key]]);\n\t}\n\tsortable.sort((a,b) => b[1] - a[1]);\n\tconsole.log(sortable);\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-17 11:24:19","systemWhoCreated":"systemUnknown"},{"id":173,"category":"JavaScript","title":"How to use the spread operator create a new object from another object, overwriting some of the properties","body":"- note that the two properties are overwritten:\n\t--------------------------------\n\tconst oldPerson = {\n\t\tfirstName: \"Jim\",\n\t\tlastName: \"Thompson\",\n\t\tdepartment: 52,\n\t\taccessLevel: \"high\"\n\t}\n\n\tconst newPerson = {\n\t\t...oldPerson,\n\t\tfirstName: \"Lisa\",\n\t\tlastName: \"Anderson\"\n\t}\n\n\tconsole.log(newPerson);\n\t--------------------------------","points":20,"extras":"","systemWhenCreated":"2020-08-17 11:34:32","systemWhoCreated":"systemUnknown"},{"id":174,"category":"React","title":"How to add Bootstrap to Create-React-App","body":"- `npm i bootstrap`\n- add at the top of your .js or .tsx files: `import 'bootstrap/dist/css/bootstrap.css';`\n- as test: `<p className=\"text-success\">test of bootstrap</p>`, should be green","points":20,"extras":"","systemWhenCreated":"2020-08-18 06:56:59","systemWhoCreated":"systemUnknown"},{"id":175,"category":"React","title":"How to use a React Component class with TypeScript","body":"- note that you probably want to define `flashcards` in this instance with a custom type, not just `any`:\n\t--------------------------------\n\tinterface MainState {\n\t\tflashcards: any[]\n\t}\n\n\tclass Main extends Component<{}, MainState> {\n\t\tconstructor(props: any) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tflashcards: []\n\t\t\t};\n\t\t}\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-08-18 10:11:13","systemWhoCreated":"systemUnknown"},{"id":176,"category":"React","title":"How to use a React Component function with TypeScript","body":"- note that you probably want to define `flashcards` in this instance with a custom type, not just `any`:\n\t--------------------------------\n\tinterface FlashcardListProps {\n\t\tflashcards: any[]\n\t}\n\n\tconst FlashcardList = ({ flashcards }: FlashcardListProps) => (\n\t\t<div className=\"content\">\n\t\t\ttest of flashcard-list: {flashcards.length} flashcards available\n\t\t</div>\n\t);\n\t--------------------------------","points":25,"extras":"","systemWhenCreated":"2020-08-18 11:21:40","systemWhoCreated":"systemUnknown"},{"id":177,"category":"React","title":"How to get absolute paths to work in a Create-React-App with TypeScript","body":"- in the `tsconfig.json` file, in the `compilerOptions` section, add `\"baseUrl\": \"src\"`\n- then e.g. `const greenBox = require('custom/images/green_box.png');` where `custom` is a directory under `src`","points":20,"extras":"","systemWhenCreated":"2020-08-18 16:32:08","systemWhoCreated":"systemUnknown"},{"id":178,"category":"React","title":"Setup Routes in Create-React-App","body":"- working through [this tutorial](https://www.kirupa.com/react/creating_single_page_app_react_using_react_router.htm)\n- in web directory\n\t- `npx create-react-app testcraroute`\n- in VSCode \n\t- open `testcraroute` as project\n\t- `npm start` to check it\n- install React Router\n\t- `npm i react-router-dom`\n- set up basics\n\t- delete all in `/src`\n\t- delete all in `/public`\n- make basic pages:\n\t- `/public/index.html`\n\t\t-----------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\t\t  <head>\n\t\t\t<meta charset=\"utf-8\">\n\t\t\t<meta name=\"viewport\"\n\t\t\t\t  content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\t\t\t<title>React Router Example</title>\n\t\t  </head>\n\t\t  <body>\n\t\t\t<div id=\"root\"></div>\n\t\t  </body>\n\t\t</html>\n\t\t-----------------------\n\t- `/src/index.js`\n\t\t----------------------\n\t\timport React from \"react\";\n\t\timport ReactDOM from \"react-dom\";\n\t\timport Main from \"./Main\";\n\n\t\tReactDOM.render(\n\t\t  <Main/>, \n\t\t  document.getElementById(\"root\")\n\t\t);\n\t\t----------------------\n\t- '/src/Main.js`\n\t\t-------------------------\n\t\timport React, { Component } from \"react\";\n\n\t\tclass Main extends Component {\n\t\t  render() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t  <h1>Simple SPA</h1>\n\t\t\t\t  <ul className=\"header\">\n\t\t\t\t\t<li><a href=\"/\">Home</a></li>\n\t\t\t\t\t<li><a href=\"/stuff\">Stuff</a></li>\n\t\t\t\t\t<li><a href=\"/contact\">Contact</a></li>\n\t\t\t\t  </ul>\n\t\t\t\t  <div className=\"content\">\n\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t  }\n\t\t}\n\n\t\texport default Main;\n\t\t-------------------------\n\t- `/src/Home.js`\n\t\t-------------------------\n\t\timport React, { Component } from \"react\";\n\n\t\tclass Home extends Component {\n\t\t  render() {\n\t\t\treturn (\n\t\t\t  <div>\n\t\t\t\t<h2>HELLO</h2>\n\t\t\t\t<p>Cras facilisis urna ornare ex volutpat, et\n\t\t\t\tconvallis erat elementum. Ut aliquam, ipsum vitae\n\t\t\t\tgravida suscipit, metus dui bibendum est, eget rhoncus nibh\n\t\t\t\tmetus nec massa. Maecenas hendrerit laoreet augue\n\t\t\t\tnec molestie. Cum sociis natoque penatibus et magnis\n\t\t\t\tdis parturient montes, nascetur ridiculus mus.</p>\n\n\t\t\t\t<p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\n\t\t\t  </div>\n\t\t\t);\n\t\t  }\n\t\t}\n\n\t\texport default Home;\n\t\t-------------------------\n\t- `/src/Stuff.js`\n\t\t--------------------------\n\t\timport React, { Component } from \"react\";\n\n\t\tclass Stuff extends Component {\n\t\t  render() {\n\t\t\treturn (\n\t\t\t  <div>\n\t\t\t\t<h2>STUFF</h2>\n\t\t\t\t<p>Mauris sem velit, vehicula eget sodales vitae,\n\t\t\t\trhoncus eget sapien:</p>\n\t\t\t\t<ol>\n\t\t\t\t  <li>Nulla pulvinar diam</li>\n\t\t\t\t  <li>Facilisis bibendum</li>\n\t\t\t\t  <li>Vestibulum vulputate</li>\n\t\t\t\t  <li>Eget erat</li>\n\t\t\t\t  <li>Id porttitor</li>\n\t\t\t\t</ol>\n\t\t\t  </div>\n\t\t\t);\n\t\t  }\n\t\t}\n\n\t\texport default Stuff;\n\t\t--------------------------\n\t- `/src/Contact.js`\n\t\t----------------------\n\t\timport React, { Component } from \"react\";\n\n\t\tclass Contact extends Component {\n\t\t  render() {\n\t\t\treturn (\n\t\t\t  <div>\n\t\t\t\t<h2>GOT QUESTIONS?</h2>\n\t\t\t\t<p>The easiest thing to do is post on\n\t\t\t\tour <a href=\"http://forum.kirupa.com\">forums</a>.\n\t\t\t\t</p>\n\t\t\t  </div>\n\t\t\t);\n\t\t  }\n\t\t}\n\n\t\texport default Contact;\n\t\t----------------------\n- Add router in to Main.js\n\t- add:\n\t\t-----------------------\n\t\timport {\n\t\t  Route,\n\t\t  NavLink,\n\t\t  HashRouter\n\t\t} from \"react-router-dom\";\n\t\timport Home from \"./Home\";\n\t\timport Stuff from \"./Stuff\";\n\t\timport Contact from \"./Contact\";\n\t\t-----------------------\n\t- add `<HashRouter>` around main div\n\t- replace links with:\n\t\t-----------------------\n\t\t<li><NavLink to=\"/\">Home</NavLink></li>\n\t\t<li><NavLink to=\"/stuff\">Stuff</NavLink></li>\n\t\t<li><NavLink to=\"/contact\">Contact</NavLink></li>\n\t\t-----------------------\n\t- add content:\n\t\t----------------------\n\t\t<Route path=\"/\" component={Home}/>\n\t\t<Route path=\"/stuff\" component={Stuff}/>\n\t\t<Route path=\"/contact\" component={Contact}/>\n\t\t----------------------\n- Fix routing\n\t- in Main.js add `exact` to Home route\n\t\t---------------------\n\t\t<Route exact path=\"/\" component={Home} />\n\t\t---------------------\n\t- add `main.css`\n\t\t-------------------------\n\t\tbody {\n\t\t  background-color: #eee;\n\t\t  padding: 20px;\n\t\t  margin: 0;\n\t\t}\n\t\th1, h2, p, ul, li {\n\t\t  font-family: sans-serif;\n\t\t}\n\t\tul.header li {\n\t\t  display: inline;\n\t\t  list-style-type: none;\n\t\t  margin: 0;\n\t\t}\n\t\tul.header {\n\t\t  background-color: #111;\n\t\t  padding: 0;\n\t\t}\n\t\tul.header li a {\n\t\t  color: #fff;\n\t\t  font-weight: bold;\n\t\t  text-decoration: none;\n\t\t  padding: 20px;\n\t\t  display: inline-block;\n\t\t}\n\t\t.content {\n\t\t  background-color: #fff;\n\t\t  padding: 20px;\n\t\t}\n\t\t.content h2 {\n\t\t  padding: 0;\n\t\t  margin: 0;\n\t\t}\n\t\t.content li {\n\t\t  margin-bottom: 10px;\n\t\t}\n\t\t-------------------------\n\t- in `index.js` add:\n\t\t-----------------------\n\t\timport \"./main.css\";\n\t\t-----------------------\n\t- to highlight active link\n\t\t- add a style\n\t\t\t----------------------\n\t\t\t.active {\n\t\t\t  background-color: #ccc;\n\t\t\t}\n\t\t\t----------------------\n\t\t- in Main.js, add exact\n\t\t\t----------------------\n\t\t\t<li><NavLink exact to=\"/\">Home</NavLink></li>\n\t\t\t----------------------\n\t- take the hash out of the URL\n\t\t- in Main.js, replace all `HashRouter` with `BrowserRouter`\n- replace CSS with SASS\n\t- `npm i node-sass`\n\t- rename `src\\main.css` to `src\\main.scss`\n\t- in `src\\index.js` change `import './main.css';` to `import './main.scss';`\n\t- replace the contents of `main.scss` with:\n\t\t--------------------------------\n\t\t$standard-padding: 20px;\n\n\t\tbody {\n\t\t\tbackground-color: #eee;\n\t\t\tpadding: $standard-padding;\n\t\t\tmargin: 0;\n\t\t\tfont-family: sans-serif;\n\t\t}\n\n\t\tul.header {\n\t\t\tbackground-color: #ccc;\n\t\t\tpadding: 0;\n\t\t\tli {\n\t\t\t\tdisplay: inline;\n\t\t\t\tlist-style-type: none;\n\t\t\t\tmargin: 0;\n\t\t\t\ta {\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\tpadding: 20px;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t}\n\t\t\t\ta.active {\n\t\t\t\t\tbackground-color: #aaa;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.content {\n\t\t\tbackground-color: #fff;\n\t\t\tpadding: $standard-padding;\n\t\t\th2 {\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\tli {\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t}\t\t\n\t\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-19 13:35:02","systemWhoCreated":"systemUnknown"},{"id":179,"category":"React","title":"How to change the favicon.ico","body":"- create new one here: https://realfavicongenerator.net\n- download e.g. `globe.png`\n- copy to `/public`\n- change section in `manifest.json` to: \n\t---------------------\n\t\"icons\": [\n\t\t{\n\t\t\t\"src\": \"globe.png\",\n\t\t\t\"type\": \"image/png\",\n\t\t\t\"sizes\": \"64x64 32x32 24x24 16x16\"\n\t\t}\n\t],\n\t---------------------\n- change line in index.html to:\n\t- `<link rel=\"icon\" href=\"%PUBLIC_URL%/globe.png\" />`","points":40,"extras":"","systemWhenCreated":"2020-08-19 14:46:35","systemWhoCreated":"systemUnknown"},{"id":180,"category":"TypeScript","title":"How to add JQuery to React/TypeScript applications","body":"- `npm i jquery @types/jquery`\n- at top of React Component\n\t-----------------------\n\timport $ from 'jquery';\n\t-----------------------\n- within `return (` area\n\t----------------------\n\t<div className=\"test\">This text should be changed.</div>\n\t----------------------\n- after `extends Component` and before `render() {`\n\t------------------------------\n\tcomponentDidMount() {\n\t\t$('.test').html('this was changed').css('background-color', 'yellow');\n\t}\n\t------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-20 05:52:40","systemWhoCreated":"systemUnknown"},{"id":181,"category":"React","title":"How to display date/time as yyyy-mm-dd in React (with moment and live-clock)","body":"- for time calculations:\n\t- `npm i moment`\n\t- at top of component:\n\t\t--------------\n\t\timport moment from 'moment';\n\t\tconst d = moment(new Date());\n\t\tconst currentDateTime = d.format('YYYY-MM-DD HH:mm:ss');\n\t\t--------------\n\t- `<div className=\"left\">{currentDateTime}</div>`\n- for live time display with time zone\n\t- `npm i react-live-clock`\n\t- at top of component:\n\t\t----------------------------\n\t\timport Clock from 'react-live-clock';\n\t\t----------------------------\n\t- add to HTML:\n\t\t--------------------------\n\t\t<div className=\"left\"> <Clock format=\"YYYY-MM-DD HH:mm:ss\" ticking timezone=\"Berlin\" /> </div>\n\t\t--------------------------","points":40,"extras":"","systemWhenCreated":"2020-08-21 15:05:17","systemWhoCreated":"systemUnknown"},{"id":182,"category":"TypeScript","title":"How to get TypeScript command line scripts in Node including ES6-style import modules","body":"- `npm init -y`\n- `npm i -g typescript ts-node`\n- `npm i @types/node`\n- create `qtools/qstr.ts`:\n\t--------------------------\n\timport * as qstr from './qstr';\n\n\t/**\n\t * Capitalize the first letter of a string.\n\t * \n\t * qstr.capitalizeFirstLetter(\"this is a sentence.\"); \n\t * \n\t * \"This is a sentence.\"\n\t */\n\texport const capitalizeFirstLetter = (line: string) => {\n\t\treturn line.charAt(0).toUpperCase() + line.slice(1);\n\t}\n\n\t/**\n\t * Replace all occurances in a string. \n\t * \n\t * qstr.replaceAll(\"This is a tost.\", \"o\", \"e\");\n\t * \n\t * \"This is a test.\"\n\t */\n\texport const replaceAll = (text: string, search: string, replace: string) => {\n\t\treturn text.split(search).join(replace);\n\t};\n\t--------------------------\n- create `test.ts`:\n\t---------------------------\n\timport * as qstr from './qtools/qstr';\n\n\tfunction hello(person: string) {\n\t\treturn `hello, ${person}.`;\n\t}\n\n\tlet test: string = qstr.capitalizeFirstLetter('nnn');\n\n\tlet user: string = \"James Russel\";\n\tconst message = hello(user);\n\tconsole.log(qstr.capitalizeFirstLetter(message));\n\t---------------------------","points":60,"extras":"","systemWhenCreated":"2020-08-21 17:10:22","systemWhoCreated":"systemUnknown"},{"id":183,"category":"React","title":"How to get Jest unit tests running in React","body":"- go to web directory\n- `npx create-react-app testjest`\n- VSCode, open directory\n- look at `/src/App.test.js`\n- `npm test`\n\t- you see that the test passes\n- an example of an `App.test.js` file is:\n\t----------------------\n\timport React from 'react';\n\timport { render } from '@testing-library/react';\n\timport App from './App';\n\timport * as qstr from '../src/qtools/qstr';\n\timport * as qarr from '../src/qtools/qarr';\n\n\ttest('site loads', () => {\n\t\tconst { getByText } = render(<App />);\n\t\tconst linkElement = getByText(/to this site/i);\n\t\texpect(linkElement).toBeInTheDocument();\n\t});\n\n\ttest('qstr.capitalizeFirstLetter() with lowercase works', () => {\n\t\texpect(qstr.capitalizeFirstLetter('this')).toBe('This');\n\t});\n\n\ttest('qstr.capitalizeFirstLetter() with uppercase works', () => {\n\t\texpect(qstr.capitalizeFirstLetter('This')).toBe('This');\n\t});\n\n\ttest('qstr.replaceAll() replacing all characters works', () => {\n\t\texpect(qstr.replaceAll('xxxxx', 'x', 'a')).toBe('aaaaa');\n\t});\n\n\ttest('qstr.replaceAll() replacing some characters works', () => {\n\t\texpect(qstr.replaceAll('This is a test.', 'i', 'x')).toBe('Thxs xs a test.');\n\t});\n\n\ttest('qstr.contains() positive-find works', () => {\n\t\texpect(qstr.contains('This is a test.', 'is a')).toBeTruthy();\n\t});\n\n\ttest('qstr.contains() negative-find works', () => {\n\t\texpect(qstr.contains('This is a test.', 'nnn')).toBeFalsy();\n\t});\n\n\ttest('qstr.endsWith() positive-find works', () => {\n\t\texpect(qstr.endsWith('This is a test.', 'test.')).toBeTruthy();\n\t});\n\n\ttest('qstr.endsWith() negative-find works', () => {\n\t\texpect(qstr.endsWith('This is a test.', 'nnn')).toBeFalsy();\n\t});\n\n\ttest('qarr.hasDuplicateNumbers() positive test work', () => {\n\t\texpect(qarr.hasDuplicateNumbers([1, 2, 3, 4, 5, 6, 3])).toBeTruthy();\n\t});\n\n\ttest('qarr.hasDuplicateNumbers() positive test work', () => {\n\t\texpect(qarr.hasDuplicateNumbers([1, 2, 3, 4, 5, 6])).toBeFalsy();\n\t});\n\t----------------------\n- and you can put a test file in e.g. `/data` to test the integrity of a `.json` file, with e.g. `Flashcards.test.js`:\n\t--------------------------\n\timport * as qarr from 'qtools/qarr';\n\n\tconst flashcards = require('../data/flashcards.json');\n\n\ttest('Have enough flashcards in the datasource', () => {\n\t\texpect(flashcards.length).toBeGreaterThan(150);\n\t});\n\n\ttest('Each flashcard has an id that is a number', () => {\n\t\tflashcards.map(m => {\n\t\t\texpect(typeof m.id).toBe('number');\n\t\t});\n\t});\n\n\ttest('Each flashcard has a unique id.', () => {\n\t\tconst ids = flashcards.map(m => m.id);\n\t\texpect(qarr.hasDuplicateNumbers(ids)).toBeFalsy();\n\t});\n\t--------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-21 23:49:58","systemWhoCreated":"systemUnknown"},{"id":184,"category":"React","title":"How to display HTML from a variable (similar to v-html in Vue.js)","body":"- `npm i react-html-parser`\n- If you use TypeScript, also: `npm i @types/react-html-parser`\n- after `render() {`:\n\t--------------------------------\n\tconst html = 'This is a <b>test</b>.';\n\t--------------------------------\n- in JSX:\n\t------------------------------------\n\t<div>{ ReactHtmlParser(test) }</div>\n\t------------------------------------","points":40,"extras":"","systemWhenCreated":"2020-08-26 13:52:31","systemWhoCreated":"systemUnknown"},{"id":185,"category":"React","title":"How to change the document title of pages in a React/TypeScript app","body":"- `npm i react-helmet @types/react-helmet`\n- at top of page:\n\t----------------------\n\timport { Helmet } from 'react-helmet';\n\tconst pageTitle = 'Flashcards';\n\t----------------------\n- in component:\n\t--------------------------\n\t<Helmet>\n\t\t<title>{ pageTitle }</title>\n\t</Helmet>\n\t--------------------------","points":40,"extras":"","systemWhenCreated":"2020-08-26 13:53:25","systemWhoCreated":"systemUnknown"},{"id":186,"category":"React","title":"How to make a click event that changes screen text in TypeScript","body":"- Note also the `showContent()` method that shows dynamic content based on the state variable:\n\t--------------------------------\n\timport React, { Component } from 'react';\n\n\tclass Info extends Component<{}, { message: string }> {\n\t\tconstructor(props: string[]) {\n\t\t\tsuper(props)\n\t\t\tthis.state = {\n\t\t\t\tmessage: 'original text'\n\t\t\t}\n\t\t}\n\n\t\tchangeMessage = () => {\n\t\t\tthis.setState({ message: 'changed text' })\n\t\t};\n\n\t\tshowContent() {\n\t\t\tif (this.state.message.includes('original')) {\n\t\t\t\treturn 'the original message is showing';\n\t\t\t} else {\n\t\t\t\treturn 'now a second message is showing';\n\t\t\t}\n\t\t}\t\t\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div><button onClick={this.changeMessage}>Change Message</button></div>\n\t\t\t\t\t<div>Message: <code>{this.state.message}</code></div>\n\t\t\t\t\t<div>{this.showContent()}</div> \n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\texport default Info;\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-26 21:46:26","systemWhoCreated":"systemUnknown"},{"id":187,"category":"React","title":"How to pass a parameter to a method from an onClick in JSX","body":"- Note this is a TypeScript example, and also note the `() =>` syntax in the `onClick` attribute:\n\t--------------------------------\n\tclass Flashcards extends Component<{}, MainState> {\n\t\t...\n\t\tshowItemsInCategory = (category: string) => {\n\t\t\tthis.setState({\n\t\t\t\tfilteredFlashcards: flashcards.filter((m: any) => m.category.includes(category))\n\t\t\t});\n\t\t};\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>{pageTitle}</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t\t<div className=\"searchArea\">\n\t\t\t\t\t\t<div className=\"buttonRow\">\n\t\t\t\t\t\t\t<button type=\"button\" onClick={() => this.showItemsInCategory('git')}>Git</button>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={() => this.showItemsInCategory('linux')}>Linux</button>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={() => this.showItemsInCategory('npm')}>npm</button>\n\t\t\t\t\t\t</div>\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-28 13:23:15","systemWhoCreated":"systemUnknown"},{"id":188,"category":"JavaScript","title":"How to get a list of unique values of a property of an array","body":"- Note that you have to use the spread operator to get the values out of the Set object\n\t--------------------------------\n\tconst data = [\n\t\t{ group: 'A', name: 'SD' },\n\t\t{ group: 'B', name: 'FI' },\n\t\t{ group: 'A', name: 'MM' },\n\t\t{ group: 'D', name: 'MM' },\n\t\t{ group: 'A', name: 'MM' },\n\t\t{ group: 'B', name: 'CO' }\n\t];\n\n\tconst unique = [...new Set(data.map(item => item.name))]; // [ 'SD', 'FI', 'MM', 'CO' ]\n\tconsole.log(unique);\n\n\t// Note: you have to spread out the Set object with [...]\n\tconst set = new Set(data.map(item => item.name)); // Set { 'SD', 'FI', 'MM', 'CO' }\n\tconsole.log(set);\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-08-28 14:25:22","systemWhoCreated":"systemUnknown"},{"id":189,"category":"RxJS","title":"How to create a Observable and subscribe to it","body":"- `npm i rxjs`\n- note that you can subscribe as many times as you want: \n\t------------------------------\n\timport { interval } from 'rxjs';\n\n\tconst source = interval(1000);\n\n\tsource.subscribe(val => console.log(val));\n\tsource.subscribe(m => console.log('and this is it plus one: ' + (m + 1)));\n\tsource.subscribe(m => {\n\t\tif (m === 5) {\n\t\t\tconsole.log('We were waiting for the number FIVE and here it is.')\n\t\t}\n\t});\n\t------------------------------","points":40,"extras":"","systemWhenCreated":"2020-08-28 16:30:10","systemWhoCreated":"systemUnknown"},{"id":190,"category":"TypeScript","title":"How to use ES6 modules in TypeScript","body":"- NOTE: this project is available at: https://github.com/edwardtanguay/typescript-node\n- create directory `testts3`\n- enter it with VSCode\n- `npm -y init`\n- `npm i -D typescript`\n- add to `package.json`:\n\t------------------\n\t\"type\": \"module\",\n\t------------------\n- `main.ts` (note the `qstr.js` here)\n\t------------------------\n\timport * as qstr from './qstr.js';\n\n\tconst message = qstr.chopRight('message-version11', '-version11');\n\tconsole.log(message);\n\t------------------------\n- `qstr.ts`\n\t------------------------------\n\texport const chopRight = (main: string, textToChop: string) => {\n\t\tif (main.endsWith(textToChop)) {\n\t\t\tconst len = textToChop.length;\n\t\t\tconst mainLen = main.length;\n\t\t\tif (len <= mainLen) {\n\t\t\t\treturn main.substring(0, mainLen - len);\n\t\t\t}\n\t\t}\n\t\treturn main;\n\t};\n\t------------------------------\n- `node_modules/.bin/tsc --target ES6 main.ts`\n\t- this will create two .js files with the same names: `main.js` and `qstr.js`\n- `node main.js`","points":50,"extras":"","systemWhenCreated":"2020-08-29 12:27:06","systemWhoCreated":"systemUnknown"},{"id":191,"category":"JavaScript","title":"How to apply async/await to synchronous functions","body":"- synchronous functions:\n\t--------------------------------\n\tconst getText = (id) => {\n\t\treturn {\n\t\t\tid: id,\n\t\t\tname: 'Text #' + id,\n\t\t\tseconds: 0\n\t\t}\n\t}\n\n\tconst getTexts = (ids) => {\n\t\tfor (const id of ids) {\n\t\t\tconst text = getText(id);\n\t\t\tconsole.log(`Got ${text.name} with id #${text.id} which took ${text.seconds} seconds.`);\n\t\t};\n\t}\n\n\tgetTexts([1, 2, 3, 4]);\n\tgetTexts([5, 6, 7, 8]);\n\t--------------------------------\n- OUTPUT:\n\t---------------------------\n\tGot Text #1 with id #1 which took 0 seconds.\n\tGot Text #2 with id #2 which took 0 seconds.\n\tGot Text #3 with id #3 which took 0 seconds.\n\tGot Text #4 with id #4 which took 0 seconds.\n\tGot Text #5 with id #5 which took 0 seconds.\n\tGot Text #6 with id #6 which took 0 seconds.\n\tGot Text #7 with id #7 which took 0 seconds.\n\tGot Text #8 with id #8 which took 0 seconds.\n\t---------------------------\n- asynchronous functions:\n\t----------------------------------------\n\tconst getText = (id) => {\n\t\treturn new Promise((resolve, rejects) => {\n\t\t\tconst seconds = Math.floor(Math.random() * 4) + 1;\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve({\n\t\t\t\t\tid: id,\n\t\t\t\t\tname: 'Text #' + id,\n\t\t\t\t\tseconds: seconds\n\t\t\t\t});\n\t\t\t}, seconds * 1000);\n\t\t});\n\t}\n\n\tconst getTexts = async (ids) => {\n\t\tfor (const id of ids) {\n\t\t\tconst text = await getText(id);\n\t\t\tconsole.log(`Got ${text.name} with id #${text.id} which took ${text.seconds} seconds.`);\n\t\t}\n\t}\n\n\tgetTexts([1, 2, 3, 4]);\n\tgetTexts([5, 6, 7, 8]);\n\t----------------------------------------\n- OUTPUT:\n\t--------------------------\n\tGot Text #1 with id #1 which took 3 seconds.\n\tGot Text #5 with id #5 which took 3 seconds.\n\tGot Text #2 with id #2 which took 1 seconds.\n\tGot Text #6 with id #6 which took 1 seconds.\n\tGot Text #3 with id #3 which took 1 seconds.\n\tGot Text #7 with id #7 which took 2 seconds.\n\tGot Text #8 with id #8 which took 1 seconds.\n\tGot Text #4 with id #4 which took 4 seconds.\n\t--------------------------","points":70,"extras":"","systemWhenCreated":"2020-08-31 12:41:02","systemWhoCreated":"systemUnknown"},{"id":192,"category":"JavaScript","title":"Simplest example of Promise with .then(), .catch(), and .finally()","body":"- notes that the code in finally always runs:\n\t--------------------------------\n\tconst getName = (idCode) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst chance = Math.floor(Math.random() * 3) + 1;\n\t\t\tif (chance == 1) {\n\t\t\t\tresolve(`Found record for \"${idCode}\".`);\n\t\t\t} else {\n\t\t\t\treject('ERROR #' + chance);\n\t\t\t}\n\t\t});\n\t};\n\n\n\tgetName('james')\n\t\t.then((result) => console.log('SUCCESS: ' + result))\n\t\t.catch((error) => console.log(error))\n\t\t.finally(() => {\n\t\t\tconsole.log('(close all connections)');\n\t\t});\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-08-31 13:35:37","systemWhoCreated":"systemUnknown"},{"id":193,"category":"Node.js","title":"How to debug a simple Node program in VSCode","body":"- simple debugging of one-page Node programs\n\t- bring up VSCode\n\t- click a break point on\n\t- press `F5` to debug the current program\n\t\t- click \"Node\"\n\t- press `Shift-F5` to stopp debugging \n- to always debug the same file regardless of what file is open (e.g. server.js)\n\t- in menu, Run, Add Configuration, Node\n\t- change in `launch.json` the line to `\"program\": \"${workspaceFolder}\\\\server.js\"`\n\t- then regardess of what file you have open, the file `server.js` will be debugged","points":35,"extras":"","systemWhenCreated":"2020-08-31 15:06:05","systemWhoCreated":"systemUnknown"},{"id":194,"category":"JavaScript","title":"Simple tests with Jasmine","body":"- note this code is also here: https://github.com/edwardtanguay/testjasmine\n- new directory\n- VSCode\n- `npm init -y`\n- `npm i jasmine -D`\n- `node_modules/.bin/jasmine init`\n- in package.json: `\"test\": \"jasmine\"`\n- `run test`\n\t- it runs but says \"no specs found\"\n- create `server.js`\n- create `qtools/qstr.js`\n\t-------------------------\n\texports.chopLeft = function (main, textToChop) {\n\t\tif (main.startsWith(textToChop)) {\n\t\t\tconst len = textToChop.length;\n\t\t\tconst mainLen = main.length;\n\t\t\tif (len <= mainLen) {\n\t\t\t\treturn main.substring(len, mainLen);\n\t\t\t}\n\t\t}\n\t\treturn main;\n\t}\n\t-------------------------\n- create `spec/server.spec.js`\n\t------------------------\n\tconst qstr = require('../qtools/qstr');\n\n\tdescribe('chopLeft', () => {\n\t\tit('should remove text from left side', () => {\n\t\t\texpect(qstr.chopLeft('002-filename.txt', '002-')).toBe('filename.txt');\n\t\t});\n\t});\n\t------------------------\n- create `server.js`\n\t------------------------\n\tconst qstr = require('./qtools/qstr');\n\n\tconst test = qstr.chopLeft('001-title', '001-');\n\tconsole.log(test);\n\t------------------------\n- then `node server.js` to run the app\n- and `npm test` to run the test","points":50,"extras":"","systemWhenCreated":"2020-08-31 16:17:33","systemWhoCreated":"systemUnknown"},{"id":195,"category":"JavaScript","title":"How to get the status code of a website, e.g. 200 or 502, etc.","body":"- `npm i request`\n- create `test.js`\n\t--------------------\n\tconst request = require('request');\n\n\trequest.get('http://google.com', (err, res) => {\n\t\tconsole.log(res.statusCode);\n\t});\n\t--------------------\n- `node test.js`","points":25,"extras":"","systemWhenCreated":"2020-08-31 16:45:45","systemWhoCreated":"systemUnknown"},{"id":196,"category":"Express","title":"How to set up Node/Express/EJS site with custom urls","body":"- create `public` folder with two HTML files, `main.html` and `info.html`\n- `npm i express`\n- server.js\n\t--------------------------------\n\tconst express = require('express');\n\tconst path = require('path');\n\n\tconst app = express();\n\tconst port = 3001;\n\n\tconst staticDirectory = path.join(__dirname, './public');\n\tapp.use(express.static(staticDirectory));\n\n\tapp.get('/info', (req, res) => {\n\t\tres.sendFile(path.join(__dirname, './public/info.html'));\n\t});\n\n\tapp.listen(port, () => {\n\t\tconsole.log(`Listening on port ${port}.`);\n\t});\n\t--------------------------------\n- add Nodemon to automatically load the site after changes in .js files\n\t- `npm i -D nodemon`\n\t- in `package.json`, add in scripts:\n\t\t- `\"start\": \"node_modules/.bin/nodemon server.js\"`\n\t- then `npm start` to start the app\n- add EJS as a templating language\n\t- `npm i ejs`\n\t- create `public/views` directory\n\t- in `server.js`, add after require block:\n\t\t---------------------\n\t\tapp.set('view engine', 'ejs');\n\t\tapp.et('views', path.join(__dirname, './public/views'));\n\t\t---------------------\n\t- (you don't have to require ejs as express will cover it)\n\t- add extension in VSCode: ejs language support by Qassim Farid\n\t- move and rename `public/index.html` to `public/views/pages/index.ejs`\n\t- in `server.js` add:\n\t\t--------------------------\n\t\tapp.get('/', (req, res) => {\n\t\t\tres.render('pages/index', { pageTitle: 'The Main Page' });\n\t\t});\n\t\t--------------------------\n\t- then in the `index.ejs` file add:\n\t\t------------------------\n\t\t<title><%=pageTitle%></title>\n\t\t<h1><%=pageTitle%></h1>\n\t\t------------------------","points":50,"extras":"","systemWhenCreated":"2020-09-01 10:40:38","systemWhoCreated":"systemUnknown"},{"id":197,"category":"JavaScript","title":"How to call a class method dynamically with a variable name","body":"- note there is no period after `this`:\n\t--------------------------------\n\tclass Test {\n\n\t\tgetItems() {\n\t\t\treturn 'items';\n\t\t}\n\n\t\tgetDynamic(functionName) {\n\t\t\treturn this[functionName]();\n\t\t}\n\n\t}\n\n\tconst test = new Test();\n\tconsole.log(test.getItems());\n\tconsole.log(test.getDynamic('getItems'));\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-09-02 15:34:38","systemWhoCreated":"systemUnknown"},{"id":198,"category":"PHP","title":"How to set up Composer and use a package","body":"- setup XAMPP\n- setup local website\n- https://getcomposer.org\n\t- click on: Download\n\t- click on: Composer-Setup.exe \n\t- install\n\t- no developer mode\n\t- choose latest PHP version: 7.4.9\n\t- at proxy question, click next\n- test\n\t- open command window\n\t- type `php -v`\n\t\t- I get: PHP 7.4.6 (cli)...\n\t- type: `composer`\n\t\t- I get computer menu\n- make composer.json file\n\t- `composer init`, answer questions\n- get package\n\t- https://packagist.org/packages/league/color-extractor\n\t- copy command: composer require league/color-extractor\n- copy a picture here: images/somepic.jpg\n- use the package\n\t- `test.php`:\n\t\t---------------------------------\n\t\t<?php\n\t\trequire 'vendor/autoload.php';\n\n\t\tuse League\\ColorExtractor\\Color;\n\t\tuse League\\ColorExtractor\\ColorExtractor;\n\t\tuse League\\ColorExtractor\\Palette;\n\n\t\t$palette = Palette;fromFilename('images/somepic.jpg');\n\n\t\t$colors = $palette->getMostUsedColors(335);\n\n\t\tforeach( $colors as $color => $count) {\n\t\t\t$current = Color;fromIntToHex($color);\n\t\t\techo '<div style=\"background-color: ' .$current . '\">test</div>';\n\t\t}\n\t\t---------------------------------","points":100,"extras":"","systemWhenCreated":"2020-09-04 16:48:47","systemWhoCreated":"systemUnknown"},{"id":199,"category":"PHP","title":"How to force integers in parameters and return variable in PHP7","body":"- will return 3x \"integer\", and the result for each is 3, i.e. strings are converted to integers\n\t--------------------------------\n\t<?php\n\tfunction add(int $a, int $b) : int {\n\t\treturn $a + $b;\n\t}\n\n\techo gettype(add(1, 2)) . '<hr/>';\n\techo gettype(add('1', '2')) . '<hr/>';\n\techo gettype(add(1.0, 2.0)) . '<hr/>';\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-09-05 16:30:01","systemWhoCreated":"systemUnknown"},{"id":200,"category":"ES6","title":"How to destructure a date into variables using regex","body":"- note the all is the first variable\n\t--------------------------------\n\tconst [all, year, month, day] =\n\t\t/^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/\n\t\t\t.exec('2020-12-31');\n\n\tconsole.log(all);\n\tconsole.log(year);\n\tconsole.log(month);\n\tconsole.log(day);\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-09-05 17:10:07","systemWhoCreated":"systemUnknown"},{"id":201,"category":"ES6","title":"Object literals for variables and functions","body":"- note this is simplified from ES5\n\t--------------------------------\n\tconst firstName = 'Simon';\n\tconst lastName = 'Marius';\n\tconst country = 'Germany';\n\tconst password = 'awefwe';\n\n\tconst user = {\n\t\tfirstName,\n\t\tlastName,\n\t\tcountry,\n\t\tpassword,\n\t\tsetPassword(password) {\n\t\t\tthis.password = password;\n\t\t}\n\t};\n\n\tconsole.log(user);\n\tuser.setPassword('newpassword');\n\tconsole.log(user);\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-09-05 17:27:32","systemWhoCreated":"systemUnknown"},{"id":202,"category":"ES6","title":"Example of rest parameters and spread operator","body":"- with rest parameters, you can send as many parameters you want\n\t--------------------------------\n\t// example of rest parameters\n\tfunction sumAll(...args) {\n\t\tlet sum = 0;\n\t\tconsole.log(`There are ${arguments.length} arguments.`);\n\t\tconsole.log(`The first argument is ${arguments[0]}.`);\n\t\tfor (const num of args) sum += num;\n\t\treturn sum;\n\t}\n\n\tconsole.log(sumAll(1, 2, 3, 4, 5));\n\tconsole.log(sumAll(1, 2, 3, 4, 5, 6, 7, 8));\n\n\tconst numbers = [6, 5, 8, 3, 2, 1];\n\n\t// example of spread operator\n\tconsole.log(sumAll(...numbers));\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-09-05 17:39:06","systemWhoCreated":"systemUnknown"},{"id":203,"category":"ES6","title":"Example of ES6 iterator and generator","body":"- note that a generator is simplified code for an iterator, use this generator code:\n\t--------------------------------\n\tfunction* makeRangeIterator(start = 0, end = 100, step = 1) {\n\t\tlet iterationCount = 0;\n\t\tfor (let i = start; i < end; i += step) {\n\t\t\titerationCount++;\n\t\t\tyield i;\n\t\t}\n\t\treturn iterationCount;\n\t}\n\n\tconst it = makeRangeIterator(1, 10, 2);\n\n\tlet result = it.next();\n\twhile (!result.done) {\n\t\tconsole.log(result.value); \n\t\tresult = it.next();\n\t}\n\n\tconsole.log(\"Iterated over sequence of size: \", result.value); \n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-09-05 17:47:44","systemWhoCreated":"systemUnknown"},{"id":204,"category":"ES6","title":"Simplest ES6 promise/async/await example","body":"- note that await can only be used in an async function\n\t--------------------------------\n\tfunction resolveAfter2Seconds() {\n\t\treturn new Promise(resolve => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve('resolved');\n\t\t\t}, 2000);\n\t\t});\n\t}\n\n\tasync function asyncCall() {\n\t\tconsole.log('calling');\n\t\tconst result = await resolveAfter2Seconds();\n\t\tconsole.log(result);\n\t}\n\n\tasyncCall();\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-09-05 17:50:43","systemWhoCreated":"systemUnknown"},{"id":205,"category":"Vue.js","title":"Basics syntax of global and local custom components","body":"- Note that custom components should be hyphenated\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t\t<title>Vue Basic</title>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div>[{{message}}]</div>\n\t\t\t<div><flashcard-component></flashcard-component></div>\n\t\t\t<dp-notice message=\"Press the A key.\"></dp-notice>\n\t\t\t<dp-notice message=\"Log out when finished.\"></dp-notice>\n\t\t\t<dp-notice></dp-notice>\n\t\t</div> \n\t\t<script>\n\n\t\t\tconst flashcardComponent = {\n\t\t\t\tdata: function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfront: 'house',\n\t\t\t\t\t\tback: 'Haus'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttemplate: '<div><div>{{front}} / {{back}}</div></div>'\n\t\t\t};\n\n\t\t\tVue.component('dp-notice', {\n\t\t\t\tprops: ['message'],\n\t\t\t\ttemplate: '<div>This is the notice: {{message || \"(no message)\"}}</div>'\n\t\t\t});\n\n\t\t\tconst app = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tcomponents: {\n\t\t\t\t\t'flashcard-component': flashcardComponent\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'hello'\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize() {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.message = 'changed';\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tapp.initialize();\n\t\t</script>\n\t</body>\n\t</html>\n\t--------------------------------","points":70,"extras":"","systemWhenCreated":"2020-09-05 23:18:42","systemWhoCreated":"systemUnknown"},{"id":206,"category":"Vue.js","title":"How to use slots in Vue.js","body":"- note that you can have several slots, see \"header\" and footer\"\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\n\t\t<head name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t\t\t<title>Vue Basic</title>\n\t\t\t<style>\n\t\t\t\t.statusOn {\n\t\t\t\t\tcolor: green;\n\t\t\t\t}\n\n\t\t\t\t.statusOff {\n\t\t\t\t\tcolor: tomato;\n\t\t\t\t}\n\n\t\t\t\t.insideInfo {\n\t\t\t\t\tborder: 1px solid #ccc;\n\t\t\t\t\tbackground-color: #eee;\n\t\t\t\t}\n\n\t\t\t\t.itemCard {\n\t\t\t\t\tborder: 1px solid #ccc;\n\t\t\t\t\tmargin: 10px 0 10px 0;\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t\tbackground-color: #ddd;\n\t\t\t\t}\n\t\t\t</style>\n\t\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div>[{{message}}]</div>\n\t\t\t<div>\n\t\t\t\t<flashcard-component></flashcard-component>\n\t\t\t</div>\n\t\t\t<dp-notice message=\"Press the A key.\" status=\"off\"></dp-notice>\n\t\t\t<dp-notice message=\"Log out when finished.\"></dp-notice>\n\t\t\t<dp-notice message=\"A third.\" status=\"off\"></dp-notice>\n\n\t\t\t<dp-notice>\n\t\t\t\t<h2 slot=\"header\">Customer Header</h2>\n\t\t\t\tThis is the slot info.\n\t\t\t\t<div slot=\"footer\">\n\t\t\t\t\t<b>another kind of footer: {{message}}</b>\n\t\t\t\t</div>\n\t\t\t</dp-notice>\n\t\t\t<dp-notice></dp-notice>\n\t\t</div>\n\t\t<script>\n\n\t\t\tconst flashcardComponent = {\n\t\t\t\tdata: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfront: 'house',\n\t\t\t\t\t\tback: 'Haus'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttemplate: '<div><div>{{front}} / {{back}}</div></div>'\n\t\t\t};\n\n\t\t\tVue.component('dp-notice', {\n\t\t\t\tprops: ['message', 'status'],\n\t\t\t\ttemplate: `<div :class=\"[status === 'off' ? 'statusOff' : 'statusOn']\">This is the notice: {{message || \"(no message)\"}}\n\t\t\t\t\t<div class=\"itemCard\">\n\t\t\t\t\t\t<slot name=\"header\">\n\t\t\t\t\t\t\t<h3>HEADER</h3>\n\t\t\t\t\t\t</slot>\n\t\t\t\t\t\t<span class=\"insideInfo\">\n\t\t\t\t\t\t\t<slot>This is where info would go.</slot>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<slot name=\"footer\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<i>footer</i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</slot>\n\t\t\t\t\t</div>\n\t\t\t\t</slot>`\n\t\t\t});\n\n\t\t\tconst app = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tcomponents: {\n\t\t\t\t\t'flashcard-component': flashcardComponent\n\t\t\t\t},\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'hello'\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize() {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.message = 'changed';\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tapp.initialize();\n\t\t</script>\n\t</body>\n\n\t</html>\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-09-07 13:20:25","systemWhoCreated":"systemUnknown"},{"id":207,"category":"Vue.js","title":"How to emit events in a component and consume them in the parent","body":"- now that the emitted event name has to be example the same, e.g. \"message-shown\"\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\n\t\t<head name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t\t\t<title>Vue Event</title>\n\t\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<dp-notice message=\"this is the first component\" @message-shown=\"recordMessage\"></dp-notice>\n\t\t\t<dp-notice message=\"this is the second component\" @message-shown=\"recordMessage\"></dp-notice>\n\t\t\t<hr />\n\t\t\t<h3>These messages have been shown:</h3>\n\t\t\t<ul>\n\t\t\t\t<li v-for=\"message in messages\">{{message}}</li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<script>\n\n\t\t\tVue.component('dp-notice', {\n\t\t\t\tdata: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tshowMessage: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tprops: ['message'],\n\t\t\t\tmethods: {\n\t\t\t\t\tshowTheMessage() {\n\t\t\t\t\t\tthis.showMessage = !this.showMessage;\n\t\t\t\t\t\tif (this.showMessage) {\n\t\t\t\t\t\t\tthis.$emit('message-shown', this.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tprops: ['message', 'status'],\n\t\t\t\ttemplate: `<div>\n\t\t\t\t\t<button @click=\"showTheMessage()\">Show Message</button> \n\t\t\t\t\t<span v-show=\"showMessage\">\n\t\t\t\t\t\t{{message}}\n\t\t\t\t\t</span>\n\t\t\t\t</div>`\n\t\t\t});\n\n\t\t\tconst app = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tmessages: []\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\trecordMessage(message) {\n\t\t\t\t\t\tthis.messages.push(message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t</script>\n\t</body>\n\n\t</html>\n\t--------------------------------","points":70,"extras":"$rank=1.992","systemWhenCreated":"2020-09-07 17:23:24","systemWhoCreated":"systemUnknown"},{"id":208,"category":"Regex","title":"Make a JavaScript function to humanize a URL","body":"- note that it finds `http` and `https`\n\t--------------------------------\n\tconst humanizeURL = (url) => {\n\t\treturn url\n\t\t\t.replace(/^https?:\\/\\//, '')\n\t\t\t.replace(/\\/$/, '')\n\t}\n\n\tconsole.log(humanizeURL('https://google.com/translate'));\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-09-07 21:45:01","systemWhoCreated":"systemUnknown"},{"id":209,"category":"Vue.js","title":"How to set up a vue-cli project and publish at Netlify","body":"- `npm i -g @vue/cli`\n\t- `vue -V` (4.5.4)\n- `vue create vuetest22`\n\t- open with VSCode at `vuetest22`\n\t- `npm run serve`\n- (`vue ui` is an extensive graphical user interface for the setup and management of the site)\n- create and push to GitHub\n\t- make change, e.g. `App.vue`, change msg `<HelloWorld msg=\"Welcome to Your Vue.js App\"/>`\n\t- `git add .`\n\t- `git commit -m \"second commit\"`\n\t- at GitHub, created `vuetest22`\n\t\t- copy and paste lines under: `…or push an existing repository from the command line`\n\n- publish at Netlify\n\t- log in at netlify.com\n\t- [[New Site from Git]]\n\t- [[GitHub]]\n\t- type in `vuetest22`\n\t- [[Deploy Site]]\n\t- [[Site Settings]]\n\t\t- Build command: `npm run build`\n\t\t- Publish directory: `dist`\n\t- [[Change Site Name]] \n\t\t- `vuetest22`\n\t- goto: https://vuetest22.netlify.app","points":70,"extras":"$rank=4.9","systemWhenCreated":"2020-09-07 23:16:18","systemWhoCreated":"systemUnknown"},{"id":210,"category":"JavaScript","title":"Understand closures","body":"- The point here is that outerParam is `outer`, not `outer-2`\n\t--------------------------------\n\tvar globalVar = \"global\";\n\tvar outerVar = \"outer\"\n\n\tfunction outerFunc(outerParam) {\n\t\tfunction innerFunc(innerParam) {\n\t\t\tconsole.log(globalVar, outerParam, innerParam);\n\t\t}\n\t\treturn innerFunc;\n\t}\n\n\tconst x = outerFunc(outerVar);\n\touterVar = \"outer-2\";\n\tglobalVar = \"guess\"\n\tx(\"inner\");\n\t--------------------------------","points":40,"extras":"$rank=0.7","systemWhenCreated":"2020-09-08 00:02:17","systemWhoCreated":"systemUnknown"},{"id":211,"category":"Redis","title":"How to set up Redis on Ubuntu","body":"- go to: https://redis.io\n- download e.g. redis-6.0.7.tar.gz\n- move to e.g. `/home/redisdb`\n- `tar xzf redis-6.0.7.tar.gz`\n- `cd redis-6.0.7`\n- `make`\n- `src/redis-server`\n- new command-window tab\n- `src/redis-cli`\n\t- `set name test`\n\t- `get name`","points":50,"extras":"","systemWhenCreated":"2020-09-09 10:52:00","systemWhoCreated":"systemUnknown"},{"id":212,"category":"CSS","title":"How to give list bullets a different size and color","body":"- note that width and margin-left are complements\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<head>\n\t\t<head>\n\t\t\t<style>\n\t\t\t\tul li {\n\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\tlist-style: none;\n\t\t\t\t}\n\n\t\t\t\tul li::before {\n\t\t\t\t\tcontent: \"\\2022\";\n\t\t\t\t\tcolor: green;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 10px;\n\t\t\t\t\tmargin-left: -10px;\n\t\t\t\t}\n\t\t\t</style>\n\t\t</head>\n\n\t<body>\n\t\t<ul>\n\t\t\t<li>This is a test.</li>\n\t\t\t<li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nulla eligendi nobis ipsum tempora mollitia odit\n\t\t\t\tiure, quos molestias voluptate voluptates vero praesentium minima possimus recusandae repudiandae nesciunt\n\t\t\t\tullam? Delectus, doloribus.</li>\n\t\t\t<li>This is another test.</li>\n\t\t</ul>\n\t</body>\n\n\t</html>\n\t--------------------------------\n- find [more symbols](https://www.htmlsymbols.xyz/games-symbols) here","points":20,"extras":"$rank=3.934","systemWhenCreated":"2020-09-09 14:55:44","systemWhoCreated":"systemUnknown"},{"id":213,"category":"VSCode","title":"How to format PHP pages in VSCode","body":"- create unformated `test.php`:\n\t-------------------------\n\t<?php\n\n\t$servers = [\n\t[ 'name' => 'Server 001', 'space' => 53454544],\n\t[ 'name' => 'Server 002', 'space' => 87687687],\n\t[ 'name' => 'Server 003', 'space' => 32233243],\n\t];\n\n\tfunction sortBySpace($item1, $item2) {\n\treturn $item1['space'] <=> $item2['space'];\n\t}\n\n\tfunction displayServers($servers) {\n\tforeach($servers as $server) {\n\techo $server['name'] . PHP_EOL;\n\t}\n\t}\n\t-------------------------\n- ALT-SHIFT-F to see that it does not format\n- install extension `phpfmt` (\"phpfmt - PHP formatter\")\n- right-click on document, \"Configure default formatter\", \"phpfmt\"\n- ALT-SHIFT-F and it works","points":40,"extras":"","systemWhenCreated":"2020-09-09 22:12:05","systemWhoCreated":"systemUnknown"},{"id":214,"category":"PHP","title":"How to use the PHP comparison operator","body":"- sorting is a particularly good use case for the comparison operator\n\t--------------------------------\n\t<?php\n\n\t$servers = [\n\t\t['name' => 'Server 001', 'space' => 53454544],\n\t\t['name' => 'Server 002', 'space' => 87687687],\n\t\t['name' => 'Server 003', 'space' => 32233243],\n\t];\n\n\tfunction sortBySpace($item1, $item2)\n\t{\n\t\treturn $item1['space'] <=> $item2['space'];\n\t}\n\n\tfunction displayServers($servers)\n\t{\n\t\tforeach ($servers as $server) {\n\t\t\techo \"$server[name] $server[space]\" . PHP_EOL;\n\t\t}\n\t\techo \"---\" . PHP_EOL;\n\t}\n\n\tdisplayServers($servers);\n\tusort($servers, 'sortBySpace');\n\tdisplayServers($servers);\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-09-09 22:26:54","systemWhoCreated":"systemUnknown"},{"id":215,"category":"ES6","title":"Examples of ES6 destructing assignment","body":"- notice that when destructing assignments for objects, you have to declare and assign the variables beforehand, unless you don't have \"use strict\":\n\t--------------------------------\n\t\"use strict\";\n\n\t// classic\n\tconst person = [\"van Dyck\", \"Anthony\", 57, 52, 75, 21];\n\tconst [lastName, firstName, ...numbers] = person;\n\tconsole.log(`The person ${firstName} ${lastName} has ${numbers.length} numbers: ${numbers.join(', ')}, which total ${numbers.reduce((a, b) => a + b, 0)}.`)\n\n\t// function on string\n\tconst [fname, lname] = \"Henri Poincaré\".split(' ');\n\tconsole.log(`${lname}, ${fname}`);\n\n\t// swap values\n\tlet primary = 'chocolate';\n\tlet secondary = 'vanilla';\n\t[primary, secondary] = [secondary, primary]\n\tconsole.log(`primary=${primary}, secondary=${secondary}`);\n\n\t// default values\n\tlet [name = \"(name unknown)\", surname = \"(surname unknown)\"] = [\"Sam\"];\n\tconsole.log(`${name} ${surname}`);\n\n\t// objects\n\tconst server = {\n\t\tlocation: \"Berlin\",\n\t\toperatingSystem: \"Ubuntu\",\n\t\tcode: \"ubunt001\",\n\t\tversion: \"20.04\"\n\t};\n\tlet operatingSystem = '';\n\tlet version = '';\n\t({ operatingSystem, version } = server);\n\tconsole.log(`${operatingSystem} ${version}`);\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-09-10 14:36:59","systemWhoCreated":"systemUnknown"},{"id":216,"category":"ES6","title":"Examples of ES6 for-loops","body":"- for arrays, if you will not be prematurely exiting, use `forEach()` for speed, otherwise use `for..of`\n\t--------------------------------\n\t// loop through parameters with for..in\n\tfunction Mobile(model_no) {\n\t\tthis.Model = model_no;\n\t\tthis.Color = 'Black';\n\t\tthis.RAM = '8GB';\n\t}\n\tvar phone = new Mobile(\"Galaxy\");\n\tfor (var prop in phone) {\n\t\tconsole.log(prop + \" -- \" + phone[prop]);\n\t}\n\n\t// loop through array with for..of\n\tconst numbers = [1, 2, 5, 78, 564];\n\tfor (const number of numbers) {\n\t\tconsole.log(number);\n\t}\n\n\t// loop through array with for..of with index\n\tconst colors = ['brown', 'black', 'orange', 'yellow', 'green'];\n\tfor (const [index, color] of colors.entries()) {\n\t\tconsole.log(`Color #${index + 1} is ${color}.`);\n\t}\n\n\t// forEach with index (faster than for..of)\n\tcolors.forEach((color, index) => {\n\t\tconsole.log(`FOREACH: Color #${index + 1} is ${color}.`);\n\t});\n\t--------------------------------","points":60,"extras":"$rank=4.73","systemWhenCreated":"2020-09-10 14:57:25","systemWhoCreated":"systemUnknown"},{"id":217,"category":"ES6","title":"How to get name and version from package.json","body":"- notice we are using destructuring assignment\n\t--------------------------------\n\tconst packageJson = require('./package.json');\n\tconst { name, version } = packageJson;\n\t--------------------------------","points":20,"extras":"","systemWhenCreated":"2020-09-15 20:42:18","systemWhoCreated":"systemUnknown"},{"id":218,"category":"VSCode","title":"How to change display language from English to French in VSCode","body":"- [[CTRL-SHIFT-P]]\n- type `config`\n- choose *Configure Display Language*\n- click *Install additional languages...*\n- choose French, and click to restart","points":10,"extras":"","systemWhenCreated":"2020-09-15 22:14:52","systemWhoCreated":"systemUnknown"},{"id":219,"category":"Bootstrap","title":"How to use float right/left in Bootstrap","body":"- note the class names are e.g. `float-left` and not `left`\n\t--------------------------------\n\t<div class=\"clearfix\">\n\t\t<div class=\"float-left\">left</div>\n\t\t<div class=\"float-right\">right</div>\n\t</div>\n\t--------------------------------","points":10,"extras":"","systemWhenCreated":"2020-09-17 13:04:46","systemWhoCreated":"systemUnknown"},{"id":220,"category":"Vue.js","title":"How to use the method lifecycle hook to load API data","body":"- tested in Chrome, Firefox, Edge (doesn't work in Explorer 11)\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html>\n\n\t<head>\n\t\t<title>vue.js api test</title>\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<ul>\n\t\t\t\t<li v-for=\"item in products\">\n\t\t\t\t\t<b>{{item.id}}</b> - {{item.description}}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<script>\n\n\t\t\tconst app = new Vue({\n\t\t\t\tel: '#app',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'exterior test',\n\t\t\t\t\tmainImage: 'images/card_back.png',\n\t\t\t\t\ttotal: 14,\n\t\t\t\t\tproducts: []\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize() {\n\t\t\t\t\t\tthis.message = 'changed message';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmounted() {\n\t\t\t\t\tfetch('https://hplussport.com/api/products/order/price')\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tthis.products = data;\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t\t\tapp.initialize();\n\t\t</script>\n\t</body>\n\t--------------------------------","points":50,"extras":"$rank=4.6999","systemWhenCreated":"2020-09-17 14:35:41","systemWhoCreated":"systemUnknown"},{"id":221,"category":"Bootstrap","title":"Bootstrap page with top and bottom fixed bars","body":"- note you have to make a few more Lorem ipsum paragraphs to text the scrolling\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>nav top/bottom</title>\n\t\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n\t\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n\t\t<style>\n\t\t\t.custom-nav {\n\t\t\t\tbackground-color: #ddd !important;\n\t\t\t}\n\n\t\t\t.badge-normal {\n\t\t\t\tbackground-color: #ccc;\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tpadding: 70px 0;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<nav class=\"navbar navbar-light bg-light fixed-top custom-nav\">\n\t\t\t<div class=\"navbar-text\">\n\t\t\t\t<b>Status:</b>\n\t\t\t\t<span class=\"badge badge-pill badge-normal\">online</span>\n\t\t\t</div>\n\t\t</nav>\n\t\t<div class=\"container\">\n\t\t\t<p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quasi laborum autem blanditiis nobis itaque ratione\n\t\t\t\tporro ipsam, quae provident, nesciunt doloribus fuga aut dicta possimus quis eos voluptatum. Alias earum\n\t\t\t\tbeatae\n\t\t\t\tsequi odit voluptas ipsa expedita, cumque ducimus fuga voluptatem explicabo sit, nemo consequatur ea\n\t\t\t\tvoluptates\n\t\t\t\tquod repellat doloribus reprehenderit.</p>\n\t\t\t<p>Amet consectetur, adipisicing elit. Culpa eos beatae itaque minus totam dolorem eligendi aliquid possimus\n\t\t\t\tfuga\n\t\t\t\tatque laboriosam quasi placeat enim ipsa, recusandae ab. Eveniet magnam suscipit adipisci! Laudantium nemo\n\t\t\t\texcepturi cum, laboriosam, obcaecati commodi quisquam dolor, maxime ab corporis quaerat veritatis molestias\n\t\t\t\tid\n\t\t\t\tquia quasi! Consequuntur?</p>\n\t\t</div>\n\n\t\t<nav class=\"navbar navbar-light bg-light fixed-bottom custom-nav\">\n\t\t\t<div class=\"navbar-text\">\n\t\t\t\t<b>Name:</b>\n\t\t\t\t<span>Anders Wellkjim</span>\n\t\t\t</div>\n\t\t</nav>\n\t</body>\n\n\t</html>\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-09-17 15:38:28","systemWhoCreated":"systemUnknown"},{"id":222,"category":"JavaScript","title":"Self-invoking JavaScript on HTML page","body":"- note you could also make a function called e.g. `init()` and then call it:\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>simple single-file TypeScript/Vue.js</title>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">this is original text</div>\n\t</body>\n\t<script>\n\t\t(function () {\n\t\t\tvar app = document.getElementById('app');\n\t\t\tapp.innerHTML = 'new text';\n\t\t}()) ;\n\n\t</script>\n\n\t</html>\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-09-26 09:01:50","systemWhoCreated":"systemUnknown"},{"id":223,"category":"JavaScript","title":"Change variable name when using IIFE","body":"- IIFE = Immediately Invoked Function Expression\n\t--------------------------------\n\tconst jQuery = {\n\t\tversion: 1.21,\n\t\tfn: {}\n\t};\n\n\t(function defineType($) {\n\t\tif ($.version < 1.15) {\n\t\t\tthrow 'plugin requires version 1.15+';\n\t\t} else {\n\t\t\t$.fn.thePlugin = () => {\n\t\t\t\tconsole.log('inside plugin');\n\t\t\t}\n\t\t\tconsole.log('pluging added');\n\t\t}\n\t})(jQuery);\n\n\tjQuery.fn.thePlugin();\n\t--------------------------------","points":30,"extras":"","systemWhenCreated":"2020-09-27 09:18:10","systemWhoCreated":"systemUnknown"},{"id":224,"category":"JavaScript","title":"Plain vanilla web page to add users to list","body":"- index.html\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>module_history_001</title>\n\t</head>\n\t<body>\n\t\t<h1>Users</h1>\n\t\t<ul id=\"users\"></ul>\n\t\t<input type=\"text\" id=\"newUser\" placeholder=\"new user\">\n\t\t<button id=\"addUser\">Add user</button>\n\t\t<script src=\"users.js\"></script>\n\t\t<script src=\"dom.js\"></script>\n\t</body>\n\t</html>\n\t--------------------------------\n- users.js\n\t--------------------------------\n\tvar users = ['Jim', 'John', 'Joe'];\n\n\tfunction getUsers() {\n\t\treturn users;\n\t}\n\t--------------------------------\n- dom.js\n\t--------------------------------\n\tfunction addUserToDOM(name) {\n\t\tvar elemLi = document.createElement('li');\n\t\tvar elemText = document.createTextNode(name);\n\t\telemLi.append(elemText);\n\n\t\tdocument.getElementById('users').appendChild(elemLi);\n\t}\n\n\tdocument.getElementById('addUser').addEventListener('click', function () {\n\t\tvar newUser = document.getElementById('newUser');\n\t\taddUserToDOM(newUser.value);\n\t\tnewUser.value = '';\n\t});\n\n\tvar users = window.getUsers();\n\tfor (var i = 0; i < users.length; i++) {\n\t\taddUserToDOM(users[i]);\n\t}\n\t--------------------------------","points":80,"extras":"","systemWhenCreated":"2020-09-27 13:34:14","systemWhoCreated":"systemUnknown"},{"id":225,"category":"JavaScript","title":"How to use ES6 modules in Node","body":"- `npm i esm`\n- app.mjs\n\t--------------------------------\n\timport * as qmat from './qmat.mjs';\n\n\tconsole.log(qmat.add(3, 4));\n\tconsole.log(qmat.subtract(3, 5));\n\tconsole.log(qmat.getRandomNumbers(5,1,10));\n\t--------------------------------\n- qmat.mjs\n\t----------------------------------\n\texport function subtract(a, b) { return a - b };\n\nexport function add(a, b) { return a + b; }\n\nexport function getRandomNumbers(total, begin, end) {\n\tconst nums = [];\n\tfor (let x = 1; x <= total; x++) {\n\t\tnums.push(Math.floor((Math.random() * end) + begin));\n\t}\n\treturn nums;\n}\n\t----------------------------------\n- `node -r esm app.mjs`","points":30,"extras":"","systemWhenCreated":"2020-09-27 14:07:49","systemWhoCreated":"systemUnknown"},{"id":226,"category":"JavaScript","title":"Simple example of ES6 JavaScript modules without Webpack","body":"- index.html\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>module_history_001</title>\n\t</head>\n\t<body>\n\t\t<h1>Users</h1>\n\t\t<ul id=\"users\"></ul>\n\t\t<input type=\"text\" id=\"newUser\" placeholder=\"new user\">\n\t\t<button id=\"addUser\">Add user</button>\n\t\t<script src=\"dom.js\" type=\"module\"></script>\n\t</body>\n\t</html>\n\t--------------------------------\n- users.js\n\t------------------------\n\tvar users = ['Jim', 'John', 'Joe'];\n\n\texport default function getUsers() {\n\t\treturn users;\n\t}\n\t------------------------\n- dom.js\n\t--------------------------------\n\timport getUsers from './users.js';\n\n\tfunction addUserToDOM(name) {\n\t\tvar elemLi = document.createElement('li');\n\t\tvar elemText = document.createTextNode(name);\n\t\telemLi.append(elemText);\n\n\t\tdocument.getElementById('users').appendChild(elemLi);\n\t}\n\n\tdocument.getElementById('addUser').addEventListener('click', function () {\n\t\tvar newUser = document.getElementById('newUser');\n\t\taddUserToDOM(newUser.value);\n\t\tnewUser.value = '';\n\t});\n\n\tvar users = getUsers();\n\tfor (var i = 0; i < users.length; i++) {\n\t\taddUserToDOM(users[i]);\n\t}\n\t--------------------------------","points":90,"extras":"","systemWhenCreated":"2020-09-27 15:42:09","systemWhoCreated":"systemUnknown"},{"id":227,"category":"ES6","title":"The difference between for..in, for..of, and forEach()","body":"- note that you can technically also do a for..in on an array, but you get the keys (not very useful)\n\t--------------------------------\n\t// for-in for parameters\n\tconst person = {\n\t\tid: 34,\n\t\tfirstName: \"George\",\n\t\tlastName: \"Ramones\",\n\t}\n\tfor (const key in person) {\n\t\tconst value = person[key];\n\t\tconsole.log(`${key} = ${value}`);\n\t}\n\n\t// for-of for arrays\n\tconst colors = ['red', 'blue', 'green', 'yellow', 'orange', 'purple'];\n\tfor (const color of colors) {\n\t\tconsole.log(color);\n\t}\n\n\t// forEach for arrays with index\n\tcolors.forEach((color, index) => console.log(`${index} = ${color}`));\n\t--------------------------------","points":40,"extras":"","systemWhenCreated":"2020-09-28 13:21:37","systemWhoCreated":"systemUnknown"},{"id":228,"category":"ES6","title":"Use of ES6 Symbol","body":"- to attach a unique identifier key to a collection of objects so that you are guaranteed that this identifier key does not conflict, these are also semi-private (won't appear in for..in on parameters, etc.)\n\t--------------------------------\n\tconst courses = [\n\t\t{\n\t\t\tid: 34,\n\t\t\ttitle: \"ECMAScript 6 Essentials\",\n\t\t\ttopics: [\n\t\t\t\t'const/let declaration',\n\t\t\t\t'default parameters',\n\t\t\t\t'arrow functions',\n\t\t\t\t'string literals',\n\t\t\t\t'object literals',\n\t\t\t\t'spread operators',\n\t\t\t\t'rest parameters'\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 543,\n\t\t\ttitle: \"Node.js Basics\",\n\t\t\ttopics: [\n\t\t\t\t'installation',\n\t\t\t\t'file access',\n\t\t\t\t'Express',\n\t\t\t\t'Socket.io',\n\t\t\t\t'Cookies'\n\t\t\t]\n\t\t}\n\t];\n\tcourses.forEach((course, index) => {\n\t\tconst id = Symbol();\n\t\tcourse[id] = index;\n\t\tconsole.log('id: ' + course.id);\n\t\tconsole.log('unique id: ' + course[id]);\n\t});\n\t--------------------------------","points":20,"extras":"","systemWhenCreated":"2020-09-28 16:00:01","systemWhoCreated":"systemUnknown"},{"id":229,"category":"ES6","title":"Simple of loading array of objects into a Map object","body":"- you can see [more info on maps here](comparisons?id=13)\n\t--------------------------------\n\tconst employees = new Map();\n\t\tfor (const employee of getEmployees()) {\n\t\t\temployees.set(employee.employeeID, employee);\n\t\t}\n\n\t\t// iterate\n\t\tfor (const employee of employees) {\n\t\t\tconsole.log(employee[0]);\n\t\t}\n\n\t\t// iterate forEach\n\t\temployees.forEach((employee, key) => {\n\t\t\tconsole.log(`${key} = ${employee.lastName}`);\n\t\t})\n\n\t\t// values\n\t\tempObjs = employees.values();\n\t\tlet result = empObjs.next();\n\t\twhile (!result.done) {\n\t\t\tconsole.log(result.value.firstName);\n\t\t\tresult = empObjs.next();\n\t\t}\n\t\tconsole.log(result);\n\n\t\t// Map.get()\n\t\tconsole.log(employees.get(6).lastName);\n\n\t\t// Map.delete()\n\t\tconsole.log(employees.size);\n\t\temployees.delete(6);\n\t\tconsole.log(employees.size);\n\n\n\t\tfunction getEmployees() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 2,\n\t\t\t\t\t\"lastName\": \"Fuller\",\n\t\t\t\t\t\"firstName\": \"Andrew\",\n\t\t\t\t\t\"title\": \"Vice President Sales\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Dr.\",\n\t\t\t\t\t\"birthDate\": \"1952-02-19 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1992-08-14 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"908 W. Capital Way\",\n\t\t\t\t\t\t\"city\": \"Tacoma\",\n\t\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\t\"postalCode\": 98401,\n\t\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\t\"phone\": \"(206) 555-9482\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Andrew received his BTS commercial in 1974 and a Ph.D. in international marketing from the University of Dallas in 1981.  He is fluent in French and Italian and reads German.  He joined the company as a sales representative was promoted to sales manager\",\n\t\t\t\t\t\"reportsTo\": \"NULL\",\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t1730,\n\t\t\t\t\t\t1833,\n\t\t\t\t\t\t2116,\n\t\t\t\t\t\t2139,\n\t\t\t\t\t\t2184,\n\t\t\t\t\t\t40222,\n\t\t\t\t\t\t1581\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 5,\n\t\t\t\t\t\"lastName\": \"Buchanan\",\n\t\t\t\t\t\"firstName\": \"Steven\",\n\t\t\t\t\t\"title\": \"\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\t\"birthDate\": \"1955-03-04 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1993-10-17 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"14 Garrett Hill\",\n\t\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\t\"postalCode\": \"SW1 8JR\",\n\t\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\t\"phone\": \"(71) 555-4848\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Steven Buchanan graduated from St. Andrews University in Scotland with a BSC degree in 1976.  Upon joining the company as a sales representative in 1992 he spent 6 months in an orientation program at the Seattle office.\",\n\t\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t2903,\n\t\t\t\t\t\t7960,\n\t\t\t\t\t\t8837,\n\t\t\t\t\t\t10019,\n\t\t\t\t\t\t10038,\n\t\t\t\t\t\t11747,\n\t\t\t\t\t\t14450\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 1,\n\t\t\t\t\t\"lastName\": \"Davolio\",\n\t\t\t\t\t\"firstName\": \"Nancy\",\n\t\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\t\"birthDate\": \"1948-12-08 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1992-05-01 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"507 20th Ave. E. Apt. 2A\",\n\t\t\t\t\t\t\"city\": \"Seattle\",\n\t\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\t\"postalCode\": 98122,\n\t\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\t\"phone\": \"(206) 555-9857\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Education includes a BA in psychology from Colorado State University in 1970.  She also completed The Art of the Cold Call.  Nancy is a member of Toastmasters International.\",\n\t\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t6897,\n\t\t\t\t\t\t19713\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 3,\n\t\t\t\t\t\"lastName\": \"Leverling\",\n\t\t\t\t\t\"firstName\": \"Janet\",\n\t\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\t\"birthDate\": \"1963-08-30 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1992-04-01 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"722 Moss Bay Blvd.\",\n\t\t\t\t\t\t\"city\": \"Kirkland\",\n\t\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\t\"postalCode\": 98033,\n\t\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\t\"phone\": \"(206) 555-3412\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Janet has a BS degree in chemistry from Boston College (1984). She has also completed a certificate program in food retailing management.  Janet was hired as a sales associate in 1991 and promoted to sales representative in February 1992.\",\n\t\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t30346,\n\t\t\t\t\t\t31406,\n\t\t\t\t\t\t32859,\n\t\t\t\t\t\t33607\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 4,\n\t\t\t\t\t\"lastName\": \"Peacock\",\n\t\t\t\t\t\"firstName\": \"Margaret\",\n\t\t\t\t\t\"title\": \"\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Mrs.\",\n\t\t\t\t\t\"birthDate\": \"1937-09-19 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1993-05-03 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"4110 Old Redmond Rd.\",\n\t\t\t\t\t\t\"city\": \"Redmond\",\n\t\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\t\"postalCode\": 98052,\n\t\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\t\"phone\": \"(206) 555-8122\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Margaret holds a BA in English literature from Concordia College (1958) and an MA from the American Institute of Culinary Arts (1966).  She was assigned to the London office temporarily from July through November 1992.\",\n\t\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t20852,\n\t\t\t\t\t\t27403,\n\t\t\t\t\t\t27511\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 6,\n\t\t\t\t\t\"lastName\": \"Suyama\",\n\t\t\t\t\t\"firstName\": \"Michael\",\n\t\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\t\"birthDate\": \"1963-07-02 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1993-10-17 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"Coventry House Miner Rd.\",\n\t\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\t\"postalCode\": \"EC2 7JR\",\n\t\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\t\"phone\": \"(71) 555-7773\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Michael is a graduate of Sussex University (MA Economics 1983) and the University of California at Los Angeles (MBA marketing 1986).  He has also taken the courses Multi-Cultural Selling and Time Management for the Sales Professional.\",\n\t\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t85014,\n\t\t\t\t\t\t85251,\n\t\t\t\t\t\t98004,\n\t\t\t\t\t\t98104,\n\t\t\t\t\t\t98052\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 7,\n\t\t\t\t\t\"lastName\": \"King\",\n\t\t\t\t\t\"firstName\": \"Robert\",\n\t\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Mr.\",\n\t\t\t\t\t\"birthDate\": \"1960-05-29 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1994-01-02 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"Edgeham Hollow Winchester Way\",\n\t\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\t\"postalCode\": \"RG1 9SP\",\n\t\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\t\"phone\": \"(71) 555-5598\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Robert King served in the Peace Corps and traveled extensively before completing his degree in English at the University of Michigan in 1992 the year he joined the company.\",\n\t\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t60601,\n\t\t\t\t\t\t80202,\n\t\t\t\t\t\t80909,\n\t\t\t\t\t\t90405,\n\t\t\t\t\t\t94025,\n\t\t\t\t\t\t94105,\n\t\t\t\t\t\t95008,\n\t\t\t\t\t\t95054,\n\t\t\t\t\t\t95060,\n\t\t\t\t\t\t60179\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 8,\n\t\t\t\t\t\"lastName\": \"Callahan\",\n\t\t\t\t\t\"firstName\": \"Laura\",\n\t\t\t\t\t\"title\": \"Inside Sales Coordinator\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\t\"birthDate\": \"1958-01-09 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1994-03-05 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"4726 11th Ave. N.E.\",\n\t\t\t\t\t\t\"city\": \"Seattle\",\n\t\t\t\t\t\t\"region\": \"WA\",\n\t\t\t\t\t\t\"postalCode\": 98105,\n\t\t\t\t\t\t\"country\": \"USA\",\n\t\t\t\t\t\t\"phone\": \"(206) 555-1189\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Laura received a BA in psychology from the University of Washington.  She has also completed a course in business French.  She reads and writes French.\",\n\t\t\t\t\t\"reportsTo\": 2,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t19428,\n\t\t\t\t\t\t44122,\n\t\t\t\t\t\t45839,\n\t\t\t\t\t\t53404\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"employeeID\": 9,\n\t\t\t\t\t\"lastName\": \"Dodsworth\",\n\t\t\t\t\t\"firstName\": \"Anne\",\n\t\t\t\t\t\"title\": \"Sales Representative\",\n\t\t\t\t\t\"titleOfCourtesy\": \"Ms.\",\n\t\t\t\t\t\"birthDate\": \"1966-01-27 00:00:00.000\",\n\t\t\t\t\t\"hireDate\": \"1994-11-15 00:00:00.000\",\n\t\t\t\t\t\"address\": {\n\t\t\t\t\t\t\"street\": \"7 Houndstooth Rd.\",\n\t\t\t\t\t\t\"city\": \"London\",\n\t\t\t\t\t\t\"region\": \"NULL\",\n\t\t\t\t\t\t\"postalCode\": \"WG2 7LT\",\n\t\t\t\t\t\t\"country\": \"UK\",\n\t\t\t\t\t\t\"phone\": \"(71) 555-4444\"\n\t\t\t\t\t},\n\t\t\t\t\t\"notes\": \"Anne has a BA degree in English from St. Lawrence College.  She is fluent in French and German.\",\n\t\t\t\t\t\"reportsTo\": 5,\n\t\t\t\t\t\"territoryIDs\": [\n\t\t\t\t\t\t3049,\n\t\t\t\t\t\t3801,\n\t\t\t\t\t\t48075,\n\t\t\t\t\t\t48084,\n\t\t\t\t\t\t48304,\n\t\t\t\t\t\t55113,\n\t\t\t\t\t\t55439\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t--------------------------------","points":50,"extras":"","systemWhenCreated":"2020-09-28 17:04:31","systemWhoCreated":"systemUnknown"},{"id":230,"category":"TypeScript","title":"Example of TypeScript interfaces","body":"- note that `get front()` satisfies the interface's `front: string;`\n\t--------------------------------\n\tinterface IFlashcard {\n\t\tfront: string;\n\t\tback: string;\n\t\tdisplayAsFlashcard(): void;\n\t}\n\n\tclass Flashcard implements IFlashcard {\n\t\tpublic front: string = '';\n\t\tpublic back: string = '';\n\n\t\tconstructor(front: string, back: string) {\n\t\t\tthis.front = front;\n\t\t\tthis.back = back;\n\t\t}\n\n\t\tdisplayAsFlashcard() {\n\t\t\treturn this.front + ' / ' + this.back;\n\t\t}\n\t}\n\n\tclass Book implements IFlashcard {\n\t\tpublic title: string = '';\n\t\tpublic description: string = '';\n\t\tpublic author: string = '';\n\n\t\tconstructor(title: string, description: string, author: string) {\n\t\t\tthis.title = title;\n\t\t\tthis.description = description;\n\t\t\tthis.author = author;\n\t\t}\n\n\t\tget front() {\n\t\t\treturn this.title;\n\t\t}\n\n\t\tget back() {\n\t\t\treturn this.author;\n\t\t}\n\n\t\tdisplayAsFlashcard() {\n\t\t\treturn 'BOOK: ' + this.front + ' / AUTHOR: ' + this.back;\n\t\t}\n\t}\n\t--------------------------------","points":60,"extras":"","systemWhenCreated":"2020-09-28 22:08:20","systemWhoCreated":"systemUnknown"},{"id":232,"category":"VBA","title":"How to create a simple VBA program that changes text when you click a button","body":"- open developer tools:\n\t- right-click on menu, \"Menüband anpassen\"\n\t- Entwicklertools, OK\n- save as: **test.xlsm ** (\"m\" for macros)\n- Developer Tools, [[Visual Basic]]\n\t- Insert, Module\n\t- rename in settings window: main\n\t- enter code\n\t\t---------------------\n\t\tSub TurnOn()\n\t\t\tRange(\"B1\").Value = \"On\"\n\t\tEnd Sub\n\n\t\tSub ChangeTextBack()\n\t\tRange(\"B1\").Value = \"Off\"\n\t\tEnd Sub\n\t\t---------------------\n- Developer Tools, [[Insert]], button\n\t- connect to ChangeText()\n- Developer Tools, [[Insert]], button\n\t- connect to ChangeTextBack()","points":100,"extras":"$rank=4.9343","systemWhenCreated":"2020-09-29 15:23:55","systemWhoCreated":"systemUnknown"},{"id":233,"category":"regex","title":"Switch names around first/last","body":"- tested in Notepad++ and Google Sheets\n- you have a list of names\n\t--------------------------------\n\tTaylor, James\n\tAnderson, Mary\n\tWharton, Robert\n\tNettles, Andy\n\t--------------------------------\n- search: `^(.*), (.*?)$`\n- replace: `Name: $2 $1`","points":30,"extras":"$rank=4.9","systemWhenCreated":"2020-09-29 23:39:39","systemWhoCreated":"systemUnknown"},{"id":234,"category":"Google Docs","title":"How to define and use styles in Google Docs","body":"- ##thestoryconflusdf\n- write text with style \"title\" and \"normal\" paragaphs\n- change style of title and save\n- change style of normal and save\n- ##mystoryokok\n- options: save as my default styles","points":50,"extras":"$rank=4.9757","systemWhenCreated":"2020-09-30 00:36:40","systemWhoCreated":"systemUnknown"},{"id":235,"category":"Wordpress","title":"Install Wordpress site running at A2Hosting","body":"- cPanel\n\t- SOFTACULOUS APPS INSTALLER\n\t- WordPress A2 Optimized\n\t- Install > Custom Install\n\t\t- fill in information\n\t- create\n\t\t- progress bar took about 5 minutes, stayed at 95% for about 2 minutes\n\t- message\n\t\t-----------------------------\n\t\tWordPress - A2 Optimized has been successfully installed at : http://tanguay.info/blog\n\t\tAdministrative URL : http://tanguay.info/blog/?ilwv\n\t\t-----------------------------","points":70,"extras":"$rank=4.9","systemWhenCreated":"2020-09-30 11:21:53","systemWhoCreated":"systemUnknown"},{"id":236,"category":"Google Docs","title":"How to use outline mode to navigate easier","body":"- make document with Title, Header 1 and Normal\n- view > show document outline\n- add more headers, show updating in real time\n- add underlined and bold\n- delete a Header 1 (on side)\n\t- add it again","points":30,"extras":"$rank=4.9","systemWhenCreated":"2020-09-30 15:45:35","systemWhoCreated":"systemUnknown"},{"id":237,"category":"Google Docs","title":"Add more fonts","body":"- fonts\n- trending\n- handwriting\n- serif, sans serif","points":20,"extras":"$rank=4.9","systemWhenCreated":"2020-09-30 15:57:02","systemWhoCreated":"systemUnknown"},{"id":238,"category":"Google Docs","title":"Make a table of contents for your document","body":"- create document with title, heading 1, heading 2\n- insert > table of contents > page numbers (other ones if you only have e.g. two pages)\n- change, reformat\n- make links back to top with bookmarks\n\t- (back to top)","points":40,"extras":"$rank=4.9","systemWhenCreated":"2020-09-30 17:42:11","systemWhoCreated":"systemUnknown"},{"id":239,"category":"Google Docs","title":"All styles same except first","body":"- in CSS it works \n\t- http://localhost:29900/howtos?id=3\n- but in Google Docs\n\t- style all\n\t- change first manually","points":20,"extras":"$rank=4.9","systemWhenCreated":"2020-09-30 17:46:15","systemWhoCreated":"systemUnknown"},{"id":240,"category":"Google Sheets","title":"Import a JSON URL to Google Sheets","body":"- import from web\n\t- create Google Sheet\n\t- *Tools > Script editor*\n\t- delete code content\n\t- replace with [this code](https://gist.githubusercontent.com/paulgambill/cacd19da95a1421d3164/raw/047b04a1c321b697533adad5828e6df8748b5e54/import_json_appsscript.js)\n\t- rename sheet `ImportJSON`\n\t- close code, go back to Google Sheet\n\t- goto [JSON online examples](https://github.com/graphql-compose/graphql-compose-examples/tree/master/examples/northwind/data/json)\n\t- in A1 type e.g. =ImportJSON(\"https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/customers.json\")\n\t- in left-top corner, copy\n\t- in left-top corner, paste special, values only\n- export from database\n\t- sqlite\n\t- *File > Export > Table(s) to JSON*\n\t- creates *flashcards.json* and *howtos.json*\n\t- upload to website\n- import from website\n\t- goto: https://tanguay.info/data\n\t- load both *flashcards* and *howtos* in separate worksheets","points":50,"extras":"$rank=4.9454","systemWhenCreated":"2020-10-01 00:36:11","systemWhoCreated":"systemUnknown"},{"id":241,"category":"Excel","title":"Import a Database-exported JSON file to worksheet","body":"- export JSON file from Database\n\t- e.g. DB Browser for SQLite\n\t- *File > Export > File to JSON*\n\t- exports to e.g. `flashcards.json`\n- in Excel\n\t- *Data > New Query > From File > From Text*\n\t- navigate to directory with JSON file\n\t- change to `*.*` to see it\n\t- select JSON file\n\t- [[Convert to table]]\n\t- [[OK]]\n\t- click on the two-arrow button##twoarrorbuttonskj\n\t- choose the fields you want\n- query the data\n\t- click on down arrow\n\t- search","points":70,"extras":"$rank=4.898723","systemWhenCreated":"2020-10-01 12:01:56","systemWhoCreated":"systemUnknown"},{"id":242,"category":"Google Scripts","title":"How to write a Google Apps script","body":"- set up scripting\n\t- settings\n\t- Manage Apps\n\t- connect apps to drive\n\t- search for: `script`\n\t- connect more apps\n- *New > More > Google Apps Script*\n- name file: `FirstTest`\n- replace code:\n\t----------------------\n\tfunction myFunction() {\n\t  const test = \"hello\";\n\t  Logger.log(test);\n\n\t  const employee = {\n\t\tname: \"Jim\",\n\t\tscore: 34\n\t  }\n\t  Logger.log(employee);\n\t}\n\t----------------------\n- *View > Logs*\n- debug\n\t- set debug points\n\t- step over\n- *File > New > Script file*: `Utils.gs`\n\t---------------------\n\tfunction getMessage() {\n\t\treturn \"Message from utils\";\n}\n\t---------------------\n- change Code.gs:\n\t----------------------------\n\tconst test = getMessage();\n\t----------------------------\n- note all functions in any file are global","points":20,"extras":"$rank=4.9","systemWhenCreated":"2020-10-01 14:12:38","systemWhoCreated":"systemUnknown"},{"id":243,"category":"Google Sheets","title":"Use simple formulas: SUM and AVERAGE","body":"- open sheet: [yearly revenue example](https://docs.google.com/spreadsheets/d/1EDI-B_Yfr5FrvUjOKNEC-lLbW9zwfSXn/edit#gid=964685063) \n- enter `=SUM(B4:B5)`\n- enter `=AVERAGE(B4:B5)`","points":20,"extras":"$rank=4.9","systemWhenCreated":"2020-10-02 11:56:46","systemWhoCreated":"systemUnknown"},{"id":244,"category":"Google Sheets","title":"Automatically translate a vocabulary list","body":"- in A-column type list of works, e.g.\n\t- ENGLISH\n\t- yearly revenue\n\t- liability\n\t- expense\n\t- cash flow\n\t- profit and loss\n- make a GERMAN and FRENCH column\n- do German column\n\t- `=GOOGLETRANSLATOR(A1, \"en\", \"de\")` and drag down past list\n\t- you will get errors\n\t- fix: `=IF(ISBLANK(A2),\"\",GOOGLETRANSLATE(A2, \"en\", \"de\"))`\n- do French column\n\t- `=IF(ISBLANK(A2),\"\",GOOGLETRANSLATE(A2, \"en\", \"de\"))`","points":30,"extras":"$rank=4.999999999","systemWhenCreated":"2020-10-02 13:48:34","systemWhoCreated":"systemUnknown"},{"id":245,"category":"Google Sheets","title":"Understand relative and absolute references in cells","body":"- [Growth-Rate Google sheet](https://docs.google.com/spreadsheets/d/1AsZsDaPwF1rq-GstDL7UmUwnaqQzzgZ5/edit#gid=2075471117)\n- show pull-down, smart-copy\n\t- create row of years 10 years in future: `=A3 + 10`\n\t\t- pull down\n\t\t- erase\n- show more complex pull-down, smart-copy\n\t- for 2018, enter: `=B2 * (1+B1)`\n\t- pull down, show error\n\t- fix error: `$B$1` (or [[F4]])\n- also show that double-click works instead of pull-down\n- show why this is useful: change 7% to 8% etc.\n- how to show formulas:\n\t- *View > Show Formulae*\n\t- also with single quote in front of pasted algorithm\n- how to make a hard-copy of the formula results\n\t- select\n\t- [[CTRL-C]]\n\t- click where you want to paste\n\t- *Edit > Paste special > Paste values only*","points":25,"extras":"$rank=4.923","systemWhenCreated":"2020-10-02 14:57:53","systemWhoCreated":"systemUnknown"},{"id":246,"category":"Google Sheets","title":"How to make named range","body":"- load [Google sheet](https://docs.google.com/spreadsheets/d/10Uryq9IPGVwb9MB-mY2VdkP-mLCQMY3N/edit#gid=1573045487)\n- create named range out of data in column C\n\t- select\n\t- *Data > Named ranges*\n\t- call it `YearlyRevenue`\n- make sum: `=SUM(YearlyRevenue)`\n\t- quiz: why is it called *Cities!C2:C13*\n- edit named range\n\t- expand to *C999*\n\t- show the little grid icon\n- delete named range\n\t- show that it still shows value but no longer value\n\t- fix with manual range","points":25,"extras":"$rank=4.832","systemWhenCreated":"2020-10-02 15:25:12","systemWhoCreated":"systemUnknown"},{"id":247,"category":"SQLite","title":"How to get sample data in SQLite form","body":"- go to [this GitHub account](https://github.com/jpwhite3/northwind-SQLite3/blob/master/Northwind_large.sqlite.zip)\n- download the zip file\n- unpack\n- open in DB Browser for SQLite: https://sqlitebrowser.org","points":30,"extras":"$rank=4.55","systemWhenCreated":"2020-10-02 16:42:28","systemWhoCreated":"systemUnknown"},{"id":248,"category":"Google Sheets","title":"How to import data from databases, analyze and publish to web","body":"- output data from database to CSV file\n\t- get sample data from [SQLite database](https://github.com/jpwhite3/northwind-SQLite3/blob/master/Northwind_large.sqlite.zip)\n\t- download the zip file\n\t- unpack\n\t- open in DB Browser for SQLite: https://sqlitebrowser.org\n\t- rightclick on *Customer > Export to CSV file*: customer.csv\n- examine file\n\t- look at file in Notepad++\n\t\t- notice non-English characters are correct (UTF-8)\n\t- load into Excel\n\t\t- notice that double-click sadly doesn't work\n\t\t- so open blank Excel sheet##onthapariter\n\t\t\t- *New query > from file > from CSV file*\n\t\t\t- edit\n\t\t\t- choose first line as headers\n\t\t\t- notice non-English characters are broken: *24, place KlÃ©ber*\n\t\t\t\t- in Notepad++, convert the file to UTF-8 BOM\n- in Google Sheets\n\t- make new sheet\n\t- *File > Import > Upload*\n\t- drag file in (without BOM)\n\t\t- *Replace current sheet*\n\t\t- [[Import Data]]\n\t- note that Google Drive has no problem with UTF-8 without BOM\n\t\t- (it also has no problem with UTF-8 BOM)\n- analyze sheet\n\t- make header line bold/green\n\t- *Data > Create a filter*\n\t- show only *Western Europe*\n\t- sort by country to count\n- create selection on new sheet\n\t- remove filter\n\t- mark some lines with color\n\t- filter by color\n\t- copy to new sheet (paste special, only values)\n- publish to web\n\t- fix both sheets so they look the way you want (add notes)\n\t- *File > Publish to web*\n\t- view in various browsers, on smart phone","points":100,"extras":"$rank=4.8338","systemWhenCreated":"2020-10-02 17:14:29","systemWhoCreated":"systemUnknown"},{"id":249,"category":"Google Sheets","title":"How to use and calculate dates and date duration","body":"- make new Google Sheet\n- change to Germany\n\t- *File > Spreadsheet settings > Germany*\n- make headers: *Date\tFull Date\tFile Name\tDays till end of year*\n- date column\n\t- enter `10.02.2020` and drag down ten cells\n- full date column\n\t- `=CONCATENATE(TEXT(A2; \"dddd\"); \", \"; DAY(A2); \" \"; TEXT(A2; \"mmmm\"))`\n\t- show: `ddd` and `mmm`\n- file name column\n\t- `=CONCATENATE(\"Report_\"; TEXT(A2; \"yyyy-mm-dd\"); \".txt\")`\n- days till end of year column\n\t- make sheet called \"data\"\n\t\t- enter `31.12.2020` in A1\n\t- `=(goto cell) - A2`\n\t- [[F4]] to put in $$\n\t- NOTE: you can also just do this: `=DAYS(\"31.12.2020\";A2)`\n- highlight today\n\t- select column\n\t- *Format > Conditional Formatting*\n\t- if date is today\n- de-highlight weekends\n\t- select column\n\t- *Format > Conditional Formatting*\n\t- if text contains \"Samstag\" or \"Sonntag\"\n- highlight Monday report files\n\t- *Custom Formula*\n\t- `=COUNTIF(B2; \"*Montag*\")`","points":100,"extras":"$rank=4.923","systemWhenCreated":"2020-10-03 01:04:13","systemWhoCreated":"systemUnknown"},{"id":250,"category":"Google Sheets","title":"Calculate times and time duration","body":"- go to [Google Sheet: Times](https://docs.google.com/spreadsheets/d/1oRbPoB0NGTRG62_h9tMT32o_7D6OfRUPlATR7w10IVs/edit#gid=173756615)\n- show all formulas\n- make chart","points":30,"extras":"$rank=4.9","systemWhenCreated":"2020-10-03 01:18:30","systemWhoCreated":"systemUnknown"},{"id":251,"category":"Excel VBA","title":"How to provide real-time functionality in an Excel file","body":"- description\n\t- This code shows you how to program real time events into Excel. I used this to build a little \"observer\" file which constantly monitored a directory and sent an e-mail when a certain file was present. In this way your Excel file can play the part of a Windows service, i.e. running on some extra, unused machine on a network. Another interesting use for this is be able to give your Excel user live information, i.e. by checking the database, the file system, the date/time, or perhaps webservices. Interestingly, the updates happen silently in the background so that the user is not interrupted at all, can use his Excel file as usual all the while cells in his Excel file are being observed/updated by this service. \n- open blank Excel sheet\n- save as `MainObserver.xlsm`\n- [[ALT-F11]]\n- for all instructions below, make sure you work in the VBAProject *MainObserver.xlsm* and not *PERSONAL.XLSB*##dontPersonalXlsb\n- double-click *ThisWorkbook*, copy in this code:\n\t-----------------------\n\tPrivate Sub Workbook_Open()\n\t\tqexc_Observer\n\tEnd Sub\n\t-----------------------\n- create Module1 `qexc` and save this code in it:\n\t------------\n\tSub qexc_Observer()\n\n\t\t'declarations\n\t\tDim intHours As Integer\n\t\tDim intMinutes As Integer\n\t\tDim intSectonds As Integer\n\n\t\t'config\n\t\tintHours = 0\n\t\tintMinutes = 0\n\t\tintSeconds = 1\n\n\t\t'do action that should be performed regularly\n\t\ttool_ObserverAction\n\n\t\t'observe again regularly\n\t\tApplication.OnTime Now + TimeSerial(intHours, intMinutes, intSeconds), \"qexc_Observer\"\n\n\tEnd Sub\n\t----------------\n- create a second module called `tools` and save this code in it:\n\t-----------------\n\tSub tool_ObserverAction()\n\t\tSheets(\"Main\").Range(\"A1\").Value = Time\n\tEnd Sub\n\t-----------------\n- [[ALT-F11]]\n- rename worksheet to `Main`\n- close and save\n- open and you will see the time ticking in A1","points":150,"extras":"$rank=4.8933","systemWhenCreated":"2020-10-03 10:42:51","systemWhoCreated":"systemUnknown"},{"id":252,"category":"Excel VBA","title":"Create button that takes user to another worksheet","body":"- in VBA editor (ALT-F11)\n\t- in VBAProject (theFileName.xslm)\n\t\t- ThisWorkbook\n\t\t\t-----------------------\n\t\t\tPublic Sub GotoWorksheet(theWorksheet As String)\n\t\t\t\tSheets(theWorksheet).Activate\n\t\t\t\tSheets(theWorksheet).Range(\"A1\").Select\n\t\t\tEnd Sub\n\t\t\t-----------------------\n- Excel\n\t- rename first worksheet \"Main\"\n\t- create second worksheet \"Reports\"\n\t- on Main, make button\n\t\t- right-click button, *Assign macro*\n\t- *GotoWorksheet* won't be listed\n\t- type in: `'ThisWorkbook.GotoWorksheet(\"Reports\")'`\n\t- [[OK]]","points":30,"extras":"$rank=4.789","systemWhenCreated":"2020-10-05 13:58:46","systemWhoCreated":"systemUnknown"},{"id":253,"category":"Excel VBA","title":"How to create a button that pops up a window with buttons","body":"- VBA Editor\n\t- create UserForm\n\t- add buttons: Clear, OK\n\t- add interaction, e.g.\n\t\t-----------------------------\n\t\tPrivate Sub ButtonShowInfo_Click()\n\t\t\tLabelMessage.Caption = Main.Range(\"B2\").Value\n\t\t\tMe.Caption = \"Information\"\n\t\t\tMsgBox \"You clicked OK.\", vbInformation\n\t\t\tUnload Me\n\t\tEnd Sub\n\n\t\tPrivate Sub cmdCancel_Click()\n\t\t\tUnload Me\n\t\tEnd Sub\n\n\t\tPrivate Sub UserForm_Initialize()\n\t\t\tMe.Caption = \"Information (\" & Time() & \")\"\n\t\tEnd Sub\n\t\t-----------------------------\n\t- name: frmInfo\n- Excel\n\t- Developer Panel\n\t- Insert\n\t- Active-X controls\n\t- draw button\n\t- settings\n\t\t- name: `cmdGetInfo`\n\t\t- caption: `Get Info`\n\t- double-click\n\t\t- VBA Editor\n\t\t- frmInfo.Show\n- Excel\n\t- text Button","points":50,"extras":"$rank=4.85","systemWhenCreated":"2020-10-05 15:13:37","systemWhoCreated":"systemUnknown"},{"id":254,"category":"Excel VBA","title":"Put a picture on a user form","body":"- get image in jpg or gif format (not png)\n- VBA Code Editor\n- create user form\n- in tools, click on image icon\n- make enough space for image\n- in properties, click on image and load it\n\t- autosize = true","points":20,"extras":"$rank=4.767","systemWhenCreated":"2020-10-05 16:15:32","systemWhoCreated":"systemUnknown"},{"id":255,"category":"Excel VBA","title":"Add personalized ribbon with two buttons to filter information on sheet, and pops up general information window","body":"- note:\n\t- While it is easy to make ribbon buttons in Excel, note that they will appear in other worksheets, and you will have worksheets calling macros in other worksheets, opening them up first.\n\t- \"I was hoping to make things simpler in my Excel worksheets by replacing my buttons with ribbon commands, but it seems like the ribbon is associated with a user rather than a workbook. I guess it's back to the ugly gray buttons.\"\n\t- Since one can think of few reasons why you would want this to be the case, except for extremely general functionality, you have to solve this if you want to have buttons available in only the current worksheet, see:\n\t\t- https://gregmaxey.com/word_tip_pages/customize_ribbon_main.html\n\t\t- https://andypope.info/vba/ribboneditor_2010.htm\n- create LaunchInfoWindow subroutine\n\t- VBA Editor\n\t- create UserForm *frmInformation*\n\t- create module `General` and add:\n\t\t-------------------------\n\t\tPublic Sub LaunchInfoWindow()\n\t\t\tfrmInformation.Show\n\t\tEnd Sub\n\t\t-------------------------\n- create FilterCostTable subroutine\n\t- Excel worksheet, rename both names \"Main\"\n\t- enter table with headers and years\n\t- VBA Editor\n\t- create in worksheet Main\n\t\t---------------------------\n\t\tSub Multiple_Fields()\n\n\t\t\tDim strAddress As String\n\n\t\t\tstrAddress = ActiveCell.CurrentRegion.Address\n\t\t\tSheets(\"Main\").Activate\n\t\t\tRange(\"A4\").Activate\n\t\t\tSelection.AutoFilter\n\t\t\tActiveSheet.Range(strAddress).AutoFilter Field:=1, Criteria1:=\"2020\"\n\n\t\tEnd Sub\n\t\t---------------------------\n- add buttons in ribbon\n\t- Developer Tools\n\t\t- right-click *customize ribbon*\n\t\t- new ribbon\n\t\t\t- rename \"Personal\"\n\t\t- new group\n\t\t\t- rename \"General\"\n\t\t- left: macros\n\t\t\t- move both macros into group on right\n\t\t\t- rename and give icon\n\t\t\t\t- LaunchInfoWindow = \"Info\"\n\t\t\t\t- FilterCostTable = \"2020\"\n- use buttons\n\t- notice Info will pop up on any worksheet\n\t- notice 2020 goes to sheet and then filters","points":50,"extras":"$rank=3.5","systemWhenCreated":"2020-10-05 16:56:03","systemWhoCreated":"systemUnknown"},{"id":256,"category":"Excel VBA","title":"How to read data into an Excel sheet from an SQLite database","body":"- on Windows 10, download and install sqliteodbc_w64.exe which you can download [here](http://www.ch-werner.de/sqliteodbc)\n- download [DB Browser for SQLite](https://sqlitebrowser.org)\n\t- create *c:\\data\\main.sqlite*\n\t- create table with:\n\t\t----------------------\n\t\tCREATE TABLE \"infos\" (\n\t\t\t\"id\"\tINTEGER NOT NULL,\n\t\t\t\"title\"\tTEXT,\n\t\t\tPRIMARY KEY(\"id\" AUTOINCREMENT)\n\t\t)\n\t\t----------------------\n\t- add two records\n- Excel\n\t- make sheet called \"Main\"\n\t- make sure C16 is free\n\t- Developer tab\n\t- creation mode\n\t- add Active-X button\n\t- properties\n\t\t- name: btnGetData\n\t\t- caption: Get Data\n\t- double-click\n\t\t- insert into *btnGetData_Click*\n\t\t\t--------------------------------------\n\t\t\tDim conn As Object, rst As Object\n\t\t\tDim strSQL As String\n\n\t\t\tSet conn = CreateObject(\"ADODB.Connection\")\n\t\t\tSet rst = CreateObject(\"ADODB.Recordset\")\n\n\t\t\tconn.Open \"DRIVER=SQLite3 ODBC Driver;Database=C:\\data\\main.sqlite\"\n\n\t\t\tstrSQL = \"SELECT * FROM infos\"\n\n\t\t\trst.Open strSQL, conn, 1, 1\n\n\t\t\tWorksheets(\"Main\").Range(\"C16\").CopyFromRecordset rst\n\t\t\trst.Close\n\n\t\t\tSet rst = Nothing: Set conn = Nothing\n\t\t\t--------------------------------------","points":80,"extras":"$rank=4.7897","systemWhenCreated":"2020-10-05 23:04:26","systemWhoCreated":"systemUnknown"},{"id":257,"category":"Excel VBA","title":"Make button that creates an HTML page based on data in worksheet","body":"- make data to read for HTML page\n\t- three text fields from C22 to C24\n- make button\n\t- developer tools\n\t- insert Active-X button\n\t- Name: btnCreateHtmlPage\n\t- Caption: \"Create HTML Page\"\n\t- double-click, enter code: \n\t\t------------------------------\n\t\tPrivate Sub btnCreateHtmlPage_Click()\n\n\t\t\tDim lngFileNumber As Long\n\t\t\tDim rngMain As Range\n\n\t\t\tSet rngMain = Range(\"C22:C24\")\n\t\t\tlngFileNumber = FreeFile()\n\n\t\t\tOpen ThisWorkbook.Path & \"\\test.htm\" For Output As #lngFileNumber\n\n\t\t\tPrint #lngFileNumber, \"<head><body>\"\n\t\t\tPrint #lngFileNumber, \"<h3>This is the data:</h3>\"\n\n\t\t\tPrint #lngFileNumber, \"<ul>\"\n\t\t\tFor Each rngMain In rngMain\n\t\t\t\tPrint #lngFileNumber, \"<li>\" & rngMain.Value & \"</li>\"\n\t\t\tNext\n\t\t\tPrint #lngFileNumber, \"</ul>\"\n\n\t\t\tPrint #lngFileNumber, \"</body></head>\"\n\n\t\t\tClose #lngFileNumber\n\n\t\tEnd Sub\n\t\t------------------------------\n- make it live\n\t- in Visual Studio Code\n\t- right-click on Live Server","points":100,"extras":"$rank=4.943","systemWhenCreated":"2020-10-06 13:52:19","systemWhoCreated":"systemUnknown"},{"id":258,"category":"Excel VBA","title":"Create a button that asks if it should delete a file","body":"- create file in same directory as Excel file: `test.htm`\n- make button\n\t- developer tools\n\t- insert Active-X button\n\t- Name: btnCreateHtmlPage\n\t- Caption: \"Create HTML Page\"\n\t- double-click, enter code: \n\t\t------------------------------\n\t\tPrivate Sub btnDeleteHtmlPage_Click()\n\t\t\tDim pathAndFileName As String\n\n\t\t\tpathAndFileName = ThisWorkbook.Path & \"\\test.htm\"\n\n\t\t\tIf MsgBox(\"Delete web page?\", vbQuestion + vbOKCancel + vbDefaultButton1, \"Delete\") = vbOK Then\n\t\t\t\tKill pathAndFileName\n\t\t\tEnd If\n\t\tEnd Sub\n\t\t------------------------------","points":30,"extras":"","systemWhenCreated":"2020-10-06 14:15:37","systemWhoCreated":"systemUnknown"},{"id":259,"category":"Excel VBA","title":"How to read data out of a text file into an Excel worksheet","body":"- create text file in same directory as your worksheet: data.txt\n\t-----------------------\n\tfirst line\n\tsecond line\n\tthis is the third line\n\t-----------------------\n- make button\n\t- developer tools\n\t- insert Active-X button\n\t- Name: btnReadTextFile\n\t- Caption: \"Read text file\"\n\t- double-click, enter code: \n\t\t------------------------------\n\t\tPrivate Sub btnReadTextFile_Click()\n\n\t\t\tDim lngFileNumber As Long\n\t\t\tDim strContent As String\n\t\t\tDim lngLineNumber As Long\n\n\t\t\tlngFileNumber = FreeFile()\n\t\t\tlngLineNumber = 1\n\n\t\t\tOpen ThisWorkbook.Path & \"\\data.txt\" For Input As #lngFileNumber\n\t\t\tDo Until EOF(lngFileNumber)\n\t\t\t\tInput #lngFileNumber, strContent\n\t\t\t\tWorksheets(\"Main\").Cells(27 + lngLineNumber, 3).Value = strContent\n\t\t\t\tlngLineNumber = lngLineNumber + 1\n\t\t\tLoop\n\n\t\t\tClose #lngFileNumber\n\n\t\tEnd Sub\n\t\t------------------------------","points":90,"extras":"$rank=4.94566","systemWhenCreated":"2020-10-06 15:29:10","systemWhoCreated":"systemUnknown"},{"id":260,"category":"Excel VBA","title":"Display directory listing in UserForm scroll box and in worksheet","body":"- make ActiveX buton\n- make form\n\t- two buttons\n\t\t- btnCancel\n\t\t- btnReadDirectory\n\t- list box\n\t\t- lstDirectoryListing\n- double-click, replace with this code: \n\t-----------------------------------\n\tPrivate Sub btnCancel_Click()\n\t\tUnload Me\n\tEnd Sub\n\n\tPrivate Sub btnReadDirectory_Click()\n\t\tConst strDirectory = \"C:\\edward\\nwo\\excelvba22\"\n\t\tDim strFile As String\n\t\tDim lngRow As Long\n\n\t\tstrFile = Dir(strDirectory & \"\\*.*\")\n\t\tlngRow = 11\n\n\t\tWith Me.lstDirectoryListing\n\t\t\tDo Until strFile = \"\"\n\t\t\t\t.AddItem strFile\n\t\t\t\tWorksheets(\"Main\").Cells(lngRow, 9).Value = strFile\n\t\t\t\tstrFile = Dir()\n\t\t\t\tlngRow = lngRow + 1\n\t\t\tLoop\n\t\t\tMe.Caption = .ListCount & \" Files Found in \" & strDirectory\n\t\tEnd With\n\n\tEnd Sub\n\t-----------------------------------","points":60,"extras":"$rank=4.865","systemWhenCreated":"2020-10-06 16:39:18","systemWhoCreated":"systemUnknown"},{"id":261,"category":"Excel Sheets","title":"How to create and use a Type","body":"- in module named *Types*:\n\t------------------------\n\tType employee\n\t\tFirstName As String\n\t\tLastName As String\n\t\tScore As Integer\n\tEnd Type\n\t------------------------\n- in worksheet, make subroutine:\n\t-----------------------------\n\tSub DemonstrateTypes()\n\t\tDim employee As employee\n\n\t\temployee.FirstName = \"Jim\"\n\t\temployee.LastName = \"Smith\"\n\n\t\tWorksheets(\"oop\").Range(\"A5\").Value = employee.FirstName & \" \" & employee.LastName\n\n\tEnd Sub\n\t-----------------------------","points":30,"extras":"$rank=4.4954","systemWhenCreated":"2020-10-06 23:41:46","systemWhoCreated":"systemUnknown"},{"id":262,"category":"Excel VBA","title":"How to create a new .xlsm file with custom content","body":"- create this subroutine in *ThisWorkbook*:\n\t---------------------\n\tPublic Sub CreateNewExcelFileInDirectory()\n\t\tDim currentPath As String\n\t\tDim pathAndFileName As String\n\t\tDim wbkExtra As Workbook\n\t\tDim mainWorksheet As Worksheet\n\n\t\tSet mainWorksheet = ThisWorkbook.Worksheets(\"Main\")\n\t\tpathAndFileName = currentPath & Range(\"C48\").Value & \".xlsm\"\n\t\tSet wbkExtra = Workbooks.Add()\n\t\twbkExtra.Worksheets(1).Range(\"A1\").Value = mainWorksheet.Range(\"D48\").Value\n\t\twbkExtra.SaveAs pathAndFileName, FileFormat:=xlOpenXMLWorkbookMacroEnabled\n\t\twbkExtra.Close\n\tEnd Sub\n\t---------------------\n- Developer Tools > Insert > Form Button\n- add text in C48 and D48","points":50,"extras":"$rank=4.9111","systemWhenCreated":"2020-10-12 14:59:32","systemWhoCreated":"systemUnknown"},{"id":263,"category":"Access","title":"How to import an SQLite table into Access","body":"- open DB Browser für SQLite\n\t- load database\n\t- right-click table e.g. *flashcards*\n\t- export as CSV file\n\t- field-separator (change to `|`)\n\t- save as e.g. *flashcards.csv*\n- open Access e.g. 2016\n\t- External Data\n\t- Import: Text File\n\t- find file\n\t- specify: `|` as separator\n\t- specify: first line are headers\n\t- specify: primary key as *id*\n\t- finish\n\t- examing and delete error table","points":50,"extras":"$rank=4.9","systemWhenCreated":"2020-10-13 13:24:33","systemWhoCreated":"systemUnknown"},{"id":264,"category":"Access VBA","title":"How to use Domain-functions","body":"- note that in DCount, you need a field as well:\t\n\t---------------------------------------\n\tSub Test()\n\t\tDim lngSum As Long\n\n\t\tDebug.Print DMax(\"rank\", \"flashcards\")\n\t\tDebug.Print DMin(\"rank\", \"flashcards\")\n\t\tDebug.Print DMax(\"rank\", \"flashcards\", \"id < 50\")\n\t\tDebug.Print DSum(\"rank\", \"flashcards\")\n\n\t\tlngSum = DSum(\"rank\", \"flashcards2\", \"rank < 40\")\n\n\t\tDebug.Print lngSum\n\t\tDebug.Print lngSum + 1\n\n\t\tDebug.Print DSum(\"rank\", \"flashcards2\", \"category = 'git'\")\n\t\tDebug.Print DCount(\"rank\", \"flashcards2\", \"id < 1000\")\n\n\tEnd Sub\n\t---------------------------------------","points":30,"extras":"$rank=4.787","systemWhenCreated":"2020-10-13 15:39:10","systemWhoCreated":"systemUnknown"},{"id":265,"category":"Excel VBA","title":"Create sortable, searchable table","body":"- open this CSV file in Excel:\n\t-----------------------------\n\tYear;State;Sales;;;;;\n\t2020;Washington; $12 293 ;;;;;\n\t2019;Arizona; $12 425 ;;;;;\n\t2020;Montana; $13 523 ;;;;;\n\t2020;Idaho; $13 783 ;;;;;\n\t2019;Nevada; $15 965 ;;;;;\t\n\t2019;Idaho; $16 391 ;;;;;\n\t2020;Arizona; $18 565 ;;;;;\n\t2019;California; $26 520 ;;;;;\n\t2020;Oregon; $27 898 ;;;;;\n\t2020;California; $30 631 ;;;;;\n\t2019;Washington; $31 891 ;;;;;\n\t2019;Oregon; $32 876 ;;;;;\n\t2020;Nevada; $35 001 ;;;;;\n\t2019;Montana; $35 100 ;;;;;\n\t-----------------------------\n- put cursor inside and click format as table\n- sort and search","points":30,"extras":"$rank=4.983838","systemWhenCreated":"2020-10-14 00:26:16","systemWhoCreated":"systemUnknown"},{"id":266,"category":"Access VBA","title":"Get number of records in table with Recordset","body":"- note that we use dbOpenDynaset (\"dbOpenDynaset pretty much always works, I use that most always, allows movement back and forth in the recordset.\")\n\t------------------------------\n\tSub GetNumberOfRecordsInTableWithRecordset()\n\t\tDim rcsTests As DAO.Recordset\n\t\tSet rcsTests = CurrentDb.OpenRecordset(\"tblTests\", dbOpenDynaset)\n\t\trcsTests.MoveLast\n\t\tDebug.Print rcsTests.RecordCount\n\t\trcsTests.Close\n\tEnd Sub\n\t------------------------------","points":30,"extras":"$rank=4.76","systemWhenCreated":"2020-10-14 15:16:40","systemWhoCreated":"systemUnknown"},{"id":267,"category":"VBA Access","title":"Loop through table and display fields from each record","body":"- don't forget *MoveNext* or it will hang:\n\t-----------------------------\n\tSub DisplayAllRecords()\n\n\t\tDim rcsTests As DAO.Recordset\n\t\tSet rcsTests = CurrentDb.OpenRecordset(\"SELECT * FROM tblTests WHERE category='git'\", dbOpenDynaset)\n\n\t\tDo While Not rcsTests.EOF\n\t\t\tIf rcsTests.Fields(\"category\") <> \"\" Then\n\t\t\t\tDebug.Print rcsTests.Fields(\"category\") & \"-\" & rcsTests.Fields(\"kind\")\n\t\t\tEnd If\n\t\t\trcsTests.MoveNext\n\t\tLoop\n\n\t\trcsTests.Close\n\tEnd Sub\n\t-----------------------------","points":50,"extras":"$rank=4.934","systemWhenCreated":"2020-10-14 15:32:56","systemWhoCreated":"systemUnknown"},{"id":268,"category":"Access","title":"Use an Excel sheet as a database table in Access","body":"- Excel \n\t- create table with headers and data\n- Access\n\t- External Data\n\t- Excel\n\t- select .xls or .xlsm file\n\t- Create a link (3rd option)\n\t- choose headers","points":50,"extras":"$rank=4.911","systemWhenCreated":"2020-10-14 16:12:58","systemWhoCreated":"systemUnknown"},{"id":269,"category":"Google Sheets","title":"How to create a pivot table","body":"- fill sheet with this JSON: https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/customers.json\n\t- use [these instructions](howtos?id=240)\n- cursor in table > Data > Pivot table\n- rows: country\n- new row: number of children, `RANDBETWEEN(1,4)`, then recopy values\n- columns: Number of children\n- Values: Number of children, COUNT","points":50,"extras":"$rank=4.796565","systemWhenCreated":"2020-10-14 20:06:22","systemWhoCreated":"systemUnknown"},{"id":270,"category":"Google Sheets","title":"Delete all unused rows and columns","body":"- select first empty line \n- CTRL-SHIFT-down-arrow\n- right-click, delete\n- same for columns\n- to add rows bottom, type in number\n- to add columns, select three, right click, add three","points":20,"extras":"$rank=4.8777","systemWhenCreated":"2020-10-14 21:12:50","systemWhoCreated":"systemUnknown"},{"id":271,"category":"Access VBA","title":"How to query various fields in VBA Access","body":"- note that fields with spaces need brackets\n- note that boolean types (Yes/No) have Yes = -1 and No = 0\n\t-------------------------------\n\tSub GetTestCustomers()\n\t\tDim rcsTests As DAO.Recordset\n\t\t'Set rcsTests = CurrentDb.OpenRecordset(\"SELECT * FROM tblExampleCustomers WHERE Customerid = 'AROUT'\", dbOpenDynaset)\n\t\t'Set rcsTests = CurrentDb.OpenRecordset(\"SELECT * FROM tblExampleCustomers WHERE [Address Country] = 'UK'\", dbOpenDynaset)\n\t\t'Set rcsTests = CurrentDb.OpenRecordset(\"SELECT * FROM tblExampleCustomers WHERE Attending = 0\", dbOpenDynaset)\n\t\tSet rcsTests = CurrentDb.OpenRecordset(\"SELECT * FROM tblExampleCustomers WHERE Attending = -1\", dbOpenDynaset)\n\t\trcsTests.MoveLast\n\t\tDebug.Print rcsTests.RecordCount\n\t\trcsTests.Close\n\tEnd Sub\n\t-------------------------------","points":20,"extras":"$rank=4.67","systemWhenCreated":"2020-10-15 10:53:30","systemWhoCreated":"systemUnknown"},{"id":272,"category":"Access VBA","title":"Edit a field in a specific record","body":"- note that *rcsTests* is a collection of one record\n\t----------------------------------\n\tSub ChangeFieldsOfRecord()\n\t\tDim rcsTests As DAO.Recordset\n\t\tSet rcsTests = CurrentDb.OpenRecordset(\"SELECT * FROM tblTests WHERE id = 1660\", dbOpenDynaset)\n\t\tWith rcsTests\n\t\t\t.Edit\n\t\t\t.Fields(\"kind\").Value = \"rule\"\n\t\t\t.Update\n\t\tEnd With\n\t\trcsTests.Close\n\tEnd Sub\n\t----------------------------------","points":40,"extras":"$rank=4.8623","systemWhenCreated":"2020-10-15 11:23:16","systemWhoCreated":"systemUnknown"},{"id":273,"category":"Access VBA","title":"Single class example: Person","body":"- put this in a module:\n\t---------------------------\n\tSub TestClass()\n\t\tDim person As person\n\t\tSet person = New person\n\n\t\tperson.Constructor \"Henri\", \"Dunant\"\n\t\tperson.Rank = 232\n\t\tperson.Display\n\tEnd Sub\n\t---------------------------\n- put this in a class module named *Person*\n- note that you define default values in Class_Initialize\n\t----------------------------\n\tOption Compare Database\n\tOption Explicit\n\n\tDim m_firstName As String\n\tDim m_lastName As String\n\tDim m_rank As Variant\n\n\t'FirstName\n\tProperty Get FirstName() As String\n\t\tFirstName = m_firstName\n\tEnd Property\n\tProperty Let FirstName(strFirstName As String)\n\t\tm_firstName = strFirstName\n\tEnd Property\n\n\t'LastName\n\tProperty Get LastName() As String\n\t\tLastName = m_lastName\n\tEnd Property\n\tProperty Let LastName(strLastName As String)\n\t\tm_lastName = strLastName\n\tEnd Property\n\n\t'Rank\n\tProperty Get Rank() As Variant\n\t\tRank = m_rank\n\tEnd Property\n\tProperty Let Rank(decRank As Variant)\n\t\tm_rank = decRank\n\tEnd Property\n\n\tPublic Sub Constructor(strFirstName As String, strLastName As String)\n\t\tm_firstName = strFirstName\n\t\tm_lastName = strLastName\n\tEnd Sub\n\n\tPrivate Sub Class_Initialize()\n\t\tm_firstName = \"\"\n\t\tm_lastName = \"\"\n\t\tm_rank = CDec(0.1)\n\tEnd Sub\n\n\tPublic Sub Display()\n\t\tDim strRank As String\n\t\tstrRank = qstr_ForceFormatPeriodInDecimal(m_rank)\n\t\tDebug.Print m_firstName & \" \" & m_lastName & \" (\" & strRank & \")\"\n\tEnd Sub\n\t----------------------------\n- save this as a module called *qstr*\n\t--------------------------\n\t' 343,2 --> 343.2\n\tFunction qstr_ForceFormatPeriodInDecimal(decValue As Variant)\n\t\tDim strValue As String\n\n\t\tstrValue = CStr(decValue)\n\t\tstrValue = Replace(strValue, \",\", \".\")\n\n\t\tqstr_ForceFormatPeriodInDecimal = strValue\n\tEnd Function\t\n\t--------------------------","points":100,"extras":"$rank=4.62","systemWhenCreated":"2020-10-15 14:36:20","systemWhoCreated":"systemUnknown"},{"id":274,"category":"Excel VBA","title":"Create a function with an optional parameter with default value","body":"- note that you can also use `Optional ByVal`:\n\t----------------------\n\tSub TestCallOptional()\n\t\tDebug.Print AddText(\"Test\")\n\t\tDebug.Print AddText()\n\tEnd Sub\n\n\tFunction AddText(Optional strText As String = \"DEFAULT\")\n\t\tAddText = strText & \"--added\"\n\tEnd Function\n\t----------------------","points":20,"extras":"$rank=4.4545","systemWhenCreated":"2020-10-15 16:11:24","systemWhoCreated":"systemUnknown"},{"id":275,"category":"Access VBA","title":"Single and plural classes that read a database table","body":"- create database table with appropriate fields\n- put this in a module:\n\t---------------------------\n\tSub TestPluralClass()\n\t\tDim Persons As Persons\n\t\tSet Persons = New Persons\n\t\t'Persons.Constructor\n\t\tPersons.Constructor \"SELECT * FROM tblPersons WHERE rank > 3.5\"\n\t\tPersons.Display\n\tEnd Sub\n\t---------------------------\n- put this in a class module called \"Person\"\n\t----------------------------------\n\tOption Compare Database\n\tOption Explicit\n\n\tDim m_firstName As String\n\tDim m_middleName As String\n\tDim m_lastName As String\n\tDim m_rank As Variant\n\n\t'FirstName\n\tProperty Get FirstName() As String\n\t\tFirstName = m_firstName\n\tEnd Property\n\tProperty Let FirstName(strFirstName As String)\n\t\tm_firstName = strFirstName\n\tEnd Property\n\n\t'MiddleName\n\tProperty Get MiddleName() As String\n\t\tMiddleName = m_middleName\n\tEnd Property\n\tProperty Let MiddleName(strMiddleName As String)\n\t\tm_middleName = strMiddleName\n\tEnd Property\n\n\t'LastName\n\tProperty Get LastName() As String\n\t\tLastName = m_lastName\n\tEnd Property\n\tProperty Let LastName(strLastName As String)\n\t\tm_lastName = strLastName\n\tEnd Property\n\n\t'Rank\n\tProperty Get Rank() As Variant\n\t\tRank = m_rank\n\tEnd Property\n\tProperty Let Rank(decRank As Variant)\n\t\tm_rank = decRank\n\tEnd Property\n\n\tPublic Sub Constructor(strFirstName As String, strLastName As String)\n\t\tm_firstName = strFirstName\n\t\tm_lastName = strLastName\n\tEnd Sub\n\n\tPrivate Sub Class_Initialize()\n\t\tm_firstName = \"\"\n\t\tm_middleName = \"\"\n\t\tm_lastName = \"\"\n\t\tm_rank = CDec(0)\n\tEnd Sub\n\n\tPublic Sub Display()\n\t\tDim strRank As String\n\t\tDim strSmartMiddleName As String\n\n\t\tstrRank = qstr_ForceFormatPeriodInDecimal(m_rank)\n\t\tIf m_middleName = \"\" Then\n\t\t\tstrSmartMiddleName = \"\"\n\t\tElse\n\t\t\tstrSmartMiddleName = \" \" & m_middleName\n\t\tEnd If\n\t\tDebug.Print m_firstName & strSmartMiddleName & \" \" & m_lastName & \" (\" & strRank & \")\"\n\tEnd Sub\n\t----------------------------------\n- put this in a class module called \"Persons\":\n\t----------------------------------\n\tOption Compare Database\n\tOption Explicit\n\n\tDim m_collection As ObjectArrayList\n\tDim m_sql As String\n\n\tPublic Sub Constructor(Optional strSql As String = \"\")\n\t\tIf strSql <> \"\" Then\n\t\t\tm_sql = strSql\n\t\tEnd If\n\t\tFillCollection\n\tEnd Sub\n\n\tPrivate Sub Class_Initialize()\n\t\tm_sql = \"SELECT * FROM tblPersons\"\n\t\tSet m_collection = New ObjectArrayList\n\tEnd Sub\n\n\tPrivate Sub FillCollection()\n\n\t\tDim objPerson As Person\n\t\tDim intCount As Integer\n\n\t\tDim rcsPersons As DAO.Recordset\n\t\tSet rcsPersons = CurrentDb.OpenRecordset(m_sql, dbOpenDynaset)\n\n\t\tDo While Not rcsPersons.EOF\n\n\t\t\tDim strMiddleName As String\n\n\t\t\tIf IsNull(rcsPersons.Fields(\"middleName\")) Then\n\t\t\t\tstrMiddleName = \"\"\n\t\t\tElse\n\t\t\t\tstrMiddleName = rcsPersons.Fields(\"middleName\")\n\t\t\tEnd If\n\n\t\t\tSet objPerson = New Person\n\t\t\tobjPerson.FirstName = rcsPersons.Fields(\"firstName\")\n\t\t\tobjPerson.MiddleName = strMiddleName\n\t\t\tobjPerson.LastName = rcsPersons.Fields(\"lastName\")\n\t\t\tobjPerson.Rank = rcsPersons.Fields(\"rank\")\n\n\t\t\tCall m_collection.Add(objPerson)\n\n\t\t\trcsPersons.MoveNext\n\t\tLoop\n\n\t\trcsPersons.Close\n\n\tEnd Sub\n\n\tPublic Sub Display()\n\n\t\tDim objPerson As Person\n\t\tDim intIndex As Integer\n\n\t\tFor intIndex = 0 To m_collection.NumberOfItems - 1\n\t\t\tSet objPerson = m_collection.GetItem(intIndex)\n\t\t\tobjPerson.Display\n\t\tNext\n\n\tEnd Sub\n\t----------------------------------\n- put this in a class module called \"ObjectArrayList\":\n\t----------------------------------\n\t'2 - PublicNotCreatable\n\tOption Compare Database\n\tOption Explicit\n\n\t'internal variables\n\tDim m_arrContainer() As Variant\n\tDim m_intNumberOfItems As Integer\n\n\n\t'method: add an item\n\tPublic Sub Add(varItem As Variant)\n\n\t\t'increment internal counter\n\t\tm_intNumberOfItems = m_intNumberOfItems + 1\n\n\t\t'redimension container\n\t\tReDim Preserve m_arrContainer(m_intNumberOfItems)\n\n\t\t'now add the item\n\t\tSet m_arrContainer(m_intNumberOfItems - 1) = varItem\n\n\tEnd Sub\n\n\t'method: returns the number of items for for/next loops\n\tFunction NumberOfItems() As Integer\n\t\tNumberOfItems = m_intNumberOfItems\n\tEnd Function\n\n\t'method: return a specific item\n\tFunction GetItem(intIndexNumber As Integer) As Variant\n\t\tSet GetItem = m_arrContainer(intIndexNumber)\n\tEnd Function\n\n\t'method: returns whether or not item exists\n\tFunction ItemExists(varDesiredItem As Variant) As Boolean\n\n\t\t'declarations\n\t\tDim intIndex As Integer\n\t\tDim varItem As Variant\n\n\t\t'loop through and check\n\t\tFor intIndex = 0 To m_intNumberOfItems - 1\n\n\t\t\t'variables\n\t\t\tvarItem = Me.GetItem(intIndex)\n\n\t\t\t'if this is it, then return true\n\t\t\tIf varItem = varDesiredItem Then\n\t\t\t\tItemExists = True\n\t\t\t\tExit Function\n\t\t\tEnd If\n\n\t\tNext\n\n\t\t'if we are here, it was not found\n\t\tItemExists = False\n\n\tEnd Function\n\t----------------------------------","points":150,"extras":"$rank=4.93232","systemWhenCreated":"2020-10-15 17:40:38","systemWhoCreated":"systemUnknown"},{"id":276,"category":"Google Sheets","title":"Turn total cell red if above a certain amount","body":"- column of numbers\n- make sum cell\n- Format > Conditional formatting","points":20,"extras":"$rank=4.98733","systemWhenCreated":"2020-10-15 22:16:55","systemWhoCreated":"systemUnknown"},{"id":277,"category":"Google Sheets","title":"Count how many cells in a column are above a certain amount and include in string","body":"- make table with column \"number of children\"\n- change sheets\n- `=\"There are \" & countif('Data Table'!K2:K92, \">= 3\") & \" states with three or more children.\"`","points":20,"extras":"$rank=4.9234","systemWhenCreated":"2020-10-15 23:05:14","systemWhoCreated":"systemUnknown"},{"id":278,"category":"Google Sheets","title":"Highlight double values in a column","body":"- first way with second column\n\t- make column of unique values\n\t- make second column: doubles\n\t- first cell: `=COUNTIF($B$2:$B$92,B2)`\n\t- copy it down\n\t- Format > Conditional formatting: if greater than one then red\n- second way with one column\n\t- on column itself, Format > Conditional formatting: `=COUNTIF(A$1:A$92,A1)>1`\n\t- delete first column","points":240,"extras":"$rank=4.965456","systemWhenCreated":"2020-10-15 23:18:20","systemWhoCreated":"systemUnknown"},{"id":279,"category":"Google Sheets","title":"Make total bar above table","body":"- create classic table\n- two lines above headers, create sum row, e.g.\n\t- the reason you have two lines is for the Filter view to be created right\n\t- `=sum(K3:K)` (\"K\" for the whole column)\n- in table: Data > Filter views > Create new filter view\n- sort, search, etc.\n- then delete second line\n- sort, search, etc.\n- **Note**: you can also move the table down afterward with [[CTRL-X]] [[CTRL-V]]","points":40,"extras":"$rank=4.9234234","systemWhenCreated":"2020-10-16 00:12:12","systemWhoCreated":"systemUnknown"},{"id":280,"category":"TypeScript","title":"How to sort a JSON array based on a field","body":"- note descendingRank returns a number, not boolean\n\t-------------------------------------\n\tconst descendingRank: any = (a: any, b: any) => a.text < b.text ? -1 : a.text > b.text ? 1 : 0;\n\tconst filteredQuotes = quotes.sort(descendingRank);\n\t-------------------------------------","points":20,"extras":"$rank=4.6773","systemWhenCreated":"2020-10-17 08:23:53","systemWhoCreated":"systemUnknown"},{"id":281,"category":"Excel VBA","title":"How to highlight cells that have specific content","body":"- note that you should put the qexc (quick tools - Excel) and qarr (quick tools - arrays) in their own modules for organizational purposes\n\t---------------------------------------------\n\tFunction ProcessCells(status As String)\n\t\tDim row As Integer\n\t\tDim column As Integer\n\t\tDim cell As Range\n\t\tDim theValue As String\n\t\tDim total As Integer\n\n\t\tDim Identifiers(6) As String\n\n\t\tIdentifiers(0) = \"G\"\n\t\tIdentifiers(1) = \"G/C\"\n\t\tIdentifiers(2) = \"G, C\"\n\t\tIdentifiers(3) = \"C   G\"\n\t\tIdentifiers(4) = \"G  MARX\"\n\t\tIdentifiers(5) = \"G?\"\n\n\t\tFor column = 3 To 39\n\n\t\t\tFor row = 2 To 32\n\t\t\t\tSet cell = Cells(row, column)\n\t\t\t\ttheValue = Trim(cell.Value)\n\n\t\t\t\tIf qarr_IsInArray(theValue, Identifiers) Then\n\t\t\t\t\tIf status = \"highlight\" Then\n\t\t\t\t\t\tqexc_HighlightCell cell\n\t\t\t\t\t\ttotal = total + 1\n\t\t\t\t\tEnd If\n\t\t\t\t\tIf status = \"unhighlight\" Then\n\t\t\t\t\t\tqexc_UnhighlightCell cell\n\t\t\t\t\tEnd If\n\t\t\t\tEnd If\n\t\t\tNext\n\n\t\tNext\n\n\t\tProcessCells = total\n\tEnd Function\n\n\tPublic Sub qexc_HighlightCell(cell As Range)\n\t\tWith cell.Interior\n\t\t\t.Pattern = xlSolid\n\t\t\t.PatternColor = 16777215\n\t\t\t.Color = 65535\n\t\t\t.TintAndShade = 0\n\t\t\t.PatternTintAndShade = 0\n\t\tEnd With\n\t\tcell.Font.Bold = True\n\tEnd Sub\n\n\tPublic Sub qexc_UnhighlightCell(cell As Range)\n\t\tWith cell.Interior\n\t\t\t.Pattern = xlSolid\n\t\t\t.PatternColor = 16777215\n\t\t\t.ThemeColor = xlThemeColorDark1\n\t\t\t.TintAndShade = 0\n\t\t\t.PatternTintAndShade = 0\n\t\tEnd With\n\t\tcell.Font.Bold = False\n\tEnd Sub\n\n\n\tPublic Function qarr_IsInArray(stringToBeFound As String, arr As Variant) As Boolean\n\t\tIf stringToBeFound = \"\" Then\n\t\t\tqarr_IsInArray = False\n\t\t\tExit Function\n\t\tEnd If\n\t\tDim i\n\t\tFor i = LBound(arr) To UBound(arr)\n\t\t\tIf arr(i) = stringToBeFound Then\n\t\t\t\tqarr_IsInArray = True\n\t\t\t\tExit Function\n\t\t\tEnd If\n\t\tNext i\n\t\tqarr_IsInArray = False\n\tEnd Function\n\t---------------------------------------------","points":50,"extras":"$rank=4.923","systemWhenCreated":"2020-10-17 20:40:55","systemWhoCreated":"systemUnknown"},{"id":282,"category":"Excel VBA","title":"How to comment and uncomment blocks of code","body":"- You have to make these buttons display first\n- right-click top area\n- customize\n- commands\n- on left: edit\n- on right, scroll down: \n\t- drag both buttons to top area","points":20,"extras":"$rank=4.78787","systemWhenCreated":"2020-10-19 15:09:37","systemWhoCreated":"systemUnknown"},{"id":283,"category":"Excel VBA","title":"Create buttons that filter a table based on one or more criteria","body":"- note that you can also use `Operator:=xlOr`\n\t----------------------------------\n\tSub Table_PreFilter()\n\t\tSheets(\"Filter\").Activate\n\t\tRange(\"A3\").Activate\n\t\tSelection.AutoFilter\n\tEnd Sub\n\n\tSub Table_PostFilter()\n\t  Range(\"BB100\").Select\n\t  ActiveWindow.SmallScroll up:=100\n\t  ActiveWindow.SmallScroll ToLeft:=44\n\tEnd Sub\n\n\tPrivate Sub btnAll_Click()\n\t\tDim strAddress As String\n\n\t\tTable_PreFilter\n\n\t\tstrAddress = ActiveCell.CurrentRegion.Address\n\t\tActiveSheet.Range(strAddress).AutoFilter\n\n\t\tTable_PostFilter\n\tEnd Sub\n\n\tPrivate Sub btnNode_Click()\n\t\tDim strAddress As String\n\n\t\tTable_PreFilter\n\n\t\tstrAddress = ActiveCell.CurrentRegion.Address\n\t\tActiveSheet.Range(strAddress).AutoFilter Field:=2, Criteria1:=\"=node\"\n\n\t\tTable_PostFilter\n\tEnd Sub\n\n\tPrivate Sub btnThree_Click()\n\t\tDim strAddress As String\n\n\t\tTable_PreFilter\n\n\t\tstrAddress = ActiveCell.CurrentRegion.Address\n\t\tActiveSheet.Range(strAddress).AutoFilter Field:=2, Criteria1:=Array(\"=vi\", \"node\", \"npm\"), Operator:=xlFilterValues\n\n\t\tTable_PostFilter\n\tEnd Sub\n\t----------------------------------","points":60,"extras":"$rank=4.97328","systemWhenCreated":"2020-10-19 16:03:07","systemWhoCreated":"systemUnknown"},{"id":284,"category":"Excel VBA","title":"Determine if a file or directory exists in current or absolute directory","body":"- note that file names are not case-sensitive:\n\t--------------------------------\n\tFunction qfil_FileExists(strPathAndFileName As String) As Boolean\n\n\t\tqfil_FileExists = Dir(strPathAndFileName) <> \"\"\n\n\tEnd Function\n\n\tFunction qfil_FileExistsInCurrentDirectory(strFileName As String) As Boolean\n\n\t\tDim strPathAndFileName As String\n\n\t\tstrPathAndFileName = qfil_AddPathForCurrentDirectory(strFileName)\n\n\t\tqfil_FileExistsInCurrentDirectory = Dir(strPathAndFileName) <> \"\"\n\n\tEnd Function\n\n\tFunction qfil_AddPathForCurrentDirectory(fileName As String)\n\t\tqfil_AddPathForCurrentDirectory = ThisWorkbook.Path & \"\\\" & fileName\n\tEnd Function\n\n\tFunction qfil_DirectoryExists(strPathAndDirectoryName As String) As Boolean\n\n\t\tqfil_DirectoryExists = Dir(strPathAndDirectoryName, vbDirectory) <> \"\"\n\n\tEnd Function\n\n\tFunction qfil_DirectoryExistsInCurrentDirectory(strDirectoryName As String) As Boolean\n\t\tDim strPathAndDirectoryName As String\n\n\t\tstrPathAndDirectoryName = qfil_AddPathForCurrentDirectory(strDirectoryName)\n\n\t\tqfil_DirectoryExistsInCurrentDirectory = Dir(strPathAndDirectoryName, vbDirectory) <> \"\"\n\n\tEnd Function\n\t--------------------------------","points":30,"extras":"$rank=4.787","systemWhenCreated":"2020-10-19 17:49:09","systemWhoCreated":"systemUnknown"},{"id":285,"category":"npm","title":"How to send parameters to an npm script that runs a TypeScript file","body":"- `npm i minimist`\n- create `script_dpod.ts`\n\t-----------------------------\n\tconst argv = require('minimist')(process.argv.slice(2));\n\n\tconsole.log(argv);\n\t-----------------------------\n- in *package.json* add:\n\t--------------------------------\n\t\"dpod\": \"./node_modules/.bin/ts-node --skip-project dev/scripts/script_dpod.ts\"\n\t--------------------------------\n- `npm run dpod -- --command=createPage --name=\"More Information\" --status=lowProfile` returns:\n\t---------------------------\n\t{ \n\t\t_: [],\n\t\tcommand: 'createPage',\n\t\tname: 'More Information',\n\t\tstatus: 'lowProfile' \n\t}\n\t---------------------------\n- the abbreviated version `npm run dpod -- -c createPage -n \"More Information\" -s lowProfile` returns:\n\t---------------------------\n\t{ \n\t\t_: [], \n\t\tc: 'createPage', \n\t\tn: 'More Information', \n\t\ts: 'lowProfile' \n\t}\n\t---------------------------\n- you can then define commands like this:\n\t-----------------------------------\n\tconst argv = require('minimist')(process.argv.slice(2));\n\nconsole.log(argv);\nconst command = argv['c'];\n\nconsole.log(\"command = \" + command);\n\t-------------------------------------","points":50,"extras":"$rank=4.9","systemWhenCreated":"2020-10-20 13:22:53","systemWhoCreated":"systemUnknown"},{"id":286,"category":"Excel VBA","title":"How to determine if a worksheet exists","body":"- note `On Error Resume Next` ignores the error that happens if `.Name` is called on a non-object\n\t-------------------------------\n\tFunction qfil_worksheetExists(strWorksheetName) As Boolean\n\n\t\tOn Error Resume Next\n\n\t\tqfil_worksheetExists = Sheets(strWorksheetName).Name <> \"\"\n\n\t\tOn Error GoTo 0\n\n\tEnd Function\n\n\tSub TEST_qfil_worksheetExists()\n\n\t\tDim test As Boolean\n\n\t\ttest = qfil_worksheetExists(\"March2\")\n\t\tDebug.Print test\n\n\tEnd Sub\n\t-------------------------------","points":20,"extras":"$rank=4.862525","systemWhenCreated":"2020-10-20 17:35:30","systemWhoCreated":"systemUnknown"},{"id":287,"category":"Google Sheets","title":"How to change text based on language of a cell.","body":"- `=DETECTLANGUAGE(F9)`\n- `=switch(F10, \"en\", \"You seem to speak English.\", \"de\", \"Ich sehe, dass du Deutsch sprichst.\", \"fr\", \"Nous pouvons parlez en français.\", \"I can't tell what language you are writing.\")`\n- [example](https://docs.google.com/spreadsheets/d/1kLUd4hXgI-VwOLbiAHRph7ucP2gwhCD5f7sqah7f6Eo/edit#gid=1719766225)","points":10,"extras":"$rank=4.9232","systemWhenCreated":"2020-10-20 20:32:28","systemWhoCreated":"systemUnknown"},{"id":288,"category":"Google Sheets","title":"How to include cell values in text","body":"- make a table with a column \"Number of Children\"\n- `=\"There are \" & countif('Data Table'!K3:K93, \">= 3\") & \" states with three or more children.\"`","points":5,"extras":"$rank=4.9343","systemWhenCreated":"2020-10-20 20:32:28","systemWhoCreated":"systemUnknown"},{"id":289,"category":"Google Sheets","title":"How to mark duplicates in a column as red","body":"- use this when you have a column of unique values:##theduplicksjdf\n- select column\n- Format > Conditional formating\n- Custom formula is\n- `=COUNTIF(A$3:$A,A3) > 1`\n- choose light red\n- [example](https://docs.google.com/spreadsheets/d/1kLUd4hXgI-VwOLbiAHRph7ucP2gwhCD5f7sqah7f6Eo/edit#gid=1876590311&range=A2:A22)","points":50,"extras":"$rank=4.921","systemWhenCreated":"2020-10-20 22:31:17","systemWhoCreated":"systemUnknown"},{"id":290,"category":"Google Sheets","title":"How to use Google Sheets to remove duplicates from a text file","body":"- you have a list of duplicates in Notepad++##removdupppsdf\n- copy them into a Google Sheet column\n\t-------------------------\n\tCharlotte\n\tAmelia\n\tMia\n\tHarper\n\tEvelyn\n\tAbigail\n\tEmily\n\tElla\n\tHarper\n\tElizabeth\n\tCamila\n\tLuna\n\t-------------------------\n- highlight column\n- select column\n- **Data > Remove duplicates**\n- copy back into Notepad++","points":10,"extras":"$rank=4.93434","systemWhenCreated":"2020-10-20 22:43:49","systemWhoCreated":"systemUnknown"},{"id":291,"category":"Google Sheets","title":"How to make the cells in a column only allow certain values defined from a custom list on another sheet","body":"- you want to allow the user to click on a drop down and select from a list of values you have defined on another sheet:##tehgoogldropdop\n- make list of values on a sheet called *DataSources*\n- highlight column\n- **Data > Data valiation**\n- select range and save\n- [example](https://docs.google.com/spreadsheets/d/1kLUd4hXgI-VwOLbiAHRph7ucP2gwhCD5f7sqah7f6Eo/edit#gid=2034832682&fvid=1715948524)\n- note this doesn't seem to work in Edge or Opera\n- **works in Firefox and Chrome**\n- TIP: create a *named range* for the source data in case you want to use it for another cell","points":50,"extras":"$rank=4.912323","systemWhenCreated":"2020-10-20 23:05:47","systemWhoCreated":"systemUnknown"},{"id":292,"category":"Google Sheets","title":"Import character-separated text list into Google Sheets with copy-and-paste","body":"- you have a list of text that has data which is separated by semicolons, commas, spaces, etc.##fromtexttotablekj\n- copy-and-paste text into first cell of Google Sheet\n- **Data > Split text to columns**\n- set filter on it: **Data > Create a filter**\n- sort, search, etc.","points":30,"extras":"$rank=4.9123","systemWhenCreated":"2020-10-21 01:04:53","systemWhoCreated":"systemUnknown"},{"id":293,"category":"Google Sheets","title":"How to show begin and end date of project with number of work days available","body":"- you want to track how many work days you have in projects##theprojectdayskj\n- enter days: if you will be switching between languages (e.g. English/German) which have different date formats, it's best to use the ISO format of *yyyy-mm-dd*\n\t- double-click dates to get calendar popup\n- Number of days: `=DAYS(B3,B2-1)`\n- Number of work days: `=NETWORKDAYS(B2-1, B3, D6:D15)`\n- [example](https://docs.google.com/spreadsheets/d/1kLUd4hXgI-VwOLbiAHRph7ucP2gwhCD5f7sqah7f6Eo/edit#gid=1571454146)\n- also: send link to smart phone and see how easy it is to change dates etc.\n","points":40,"extras":"$rank=4.8847384","systemWhenCreated":"2020-10-21 13:32:18","systemWhoCreated":"systemUnknown"},{"id":294,"category":"Google Sheets","title":"How to make a lookup field to enter ID and display customer name","body":"- when you have a table and want to (e.g. on another worksheet) make a simple search field that displays the content of one of the columns in the table:##thelookupaddd\n- [example](https://docs.google.com/spreadsheets/d/1kLUd4hXgI-VwOLbiAHRph7ucP2gwhCD5f7sqah7f6Eo/edit#gid=1303210697)\n- make table\n- field that displays data: `=IF(ISBLANK(C3),\"Enter a Customer ID.\",IFERROR(VLOOKUP(C3,A8:D,2, false), \"(Customer ID not valid)\"))`","points":40,"extras":"$rank=4.9","systemWhenCreated":"2020-10-21 15:01:05","systemWhoCreated":"systemUnknown"},{"id":295,"category":"React","title":"How to show HTML code based on value of variable","body":"- note this the equivalent of *v-show* in Vue:\n\t-------------------------\n\t{this.state.filteredItems.length > 1 &&\n\t\t(\n\t\t\t<div>multiple items are being displayed</div>\n\t\t)\n\t}\n\t-------------------------\n- if you have an either or, then use the tertiary:\n\t-----------------------------\n\t{this.state.filteredItems.length > 1 ?\n\t\t(\n\t\t\t<div>multiple items are being displayed</div>\n\t\t) : (\n\t\t\t<div>only 1 item is being displayed</div>\n\t\t)\n\t}\n\t-----------------------------","points":30,"extras":"$rank=4.637","systemWhenCreated":"2020-10-22 16:03:35","systemWhoCreated":"systemUnknown"},{"id":296,"category":"Google Sheets","title":"Make a total of revenues for each item in list that is checked","body":"- you have a list of companies and revenues:##therevenuon\n- C2 is `=SUMIFS(C3:C13,A3:A13, true)`\n- C3, *Format > Conditional Formating*\n\t- C3:C13\n\t- Custom formula is: `=A3=TRUE`\n\t- yellow background\n- [example here](https://docs.google.com/spreadsheets/d/1kLUd4hXgI-VwOLbiAHRph7ucP2gwhCD5f7sqah7f6Eo/edit#gid=1750358913)","points":40,"extras":"$rank=4.911232","systemWhenCreated":"2020-10-22 19:46:21","systemWhoCreated":"systemUnknown"},{"id":297,"category":"Google Scripts","title":"Read text from a Google Document file and write it to a log","body":"- note the `/edit` is necessary in the URL:\n\t-------------------------------------\n\tfunction readTextFromFile() {\n\t\tconst doc = DocumentApp.openByUrl(\"https://docs.google.com/document/d/11XNLYbY2z_eZv6pzx4mPph6teXAYCusm6bN_FKYb-dE/edit\");\n\t\tconst activeSection = doc.getActiveSection();\n\t\tconst text = activeSection.getText();\n\t\tLogger.log(text);\n\t}\n\t-------------------------------------\n- click *Run*\n- [[CTRL-Enter]] to view log","points":40,"extras":"$rank=4.5","systemWhenCreated":"2020-10-22 22:22:01","systemWhoCreated":"systemUnknown"},{"id":298,"category":"Google Scripts","title":"Create a text file that is downloadable","body":"- note that you can use ES6 features:\n\t------------------------------\n\tfunction createDocument() {\n\t\tconst timeStamp = getTimeStamp();\n\n\t\tlet content = \"\";\n\t\tfor(let x = 1; x <= 100; x++) {\n\t\t\tcontent += `Report #${x}\\n`;\n\t\t}\n\n\t\tconst doc = DriveApp.createFile(`report003_${timeStamp}.txt`, content, MimeType.PLAIN_TEXT);\n\t}\n\t------------------------------\n- in Utils.gs:\n\t----------------------------------\n\tfunction getTimeStamp() {\n\t\treturn Math.round(new Date().getTime()/1000);\n\t}\n\t----------------------------------\n- find file, download##thedownlagscripfile","points":50,"extras":"$rank=4.875757","systemWhenCreated":"2020-10-22 22:47:11","systemWhoCreated":"systemUnknown"},{"id":299,"category":"React","title":"How to add Font Awesome icons to your React application","body":"- npm's **react-icons** allows you easily include thousands of icons in your application from *Font Awesome* and other collections##thefontsksjdf\n- `npx create-react-app testspin`\n- `npm start`\n- `npm i react-icons`\n\t- October 2020, I got: **\"react-icons\": \"^3.11.0\"**\n- replace `App.js` with:\n\t----------------------\n\timport './App.css';\n\timport { FiInbox } from 'react-icons/fi';\n\timport { FaSpinner } from 'react-icons/fa';\n\n\tfunction App() {\n\t  return (\n\t\t  <div className=\"App\">\n\t\t\t  <div><FiInbox /> Inbox</div>\n\t\t\t  <div><FaSpinner className=\"spinner\" /> Spinner</div>\n\t\t</div>\n\t  );\n\t}\n\n\texport default App;\n\t----------------------\n- for spinners, you have to rotate them manually with CSS, add to `App.css`:\n\t--------------------\n\t.spinner {\n\t\tanimation: spin infinite 2s linear;\n\t}\n\n\t@keyframes spin {\n\t\tfrom {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\tto {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t--------------------\n- find more icons here: https://react-icons.github.io/react-icons","points":60,"extras":"$rank=4.782","systemWhenCreated":"2020-10-24 03:24:14","systemWhoCreated":"systemUnknown"},{"id":300,"category":"React","title":"How to create and run the build version of a create-react-app","body":"- you can test the build version of your React locally by creating the build and then running it with the *serve* tool:##runthebuildreact\n- `npm run build`\n- `npm i -g serve`\n- `serve -s build`\n- in browser go to `http://localhost:5000`","points":20,"extras":"$rank=3.8","systemWhenCreated":"2020-10-24 17:17:22","systemWhoCreated":"systemUnknown"},{"id":301,"category":"React","title":"How to make class and function components","body":"- there are three ways of writing a React component:##classFunctionComponentsljk\n- class component:\n\t-------------------------------\n\timport React, { Component } from 'react';\n\timport Main from 'datapod/components/main';\n\n\tclass App extends Component{\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Main />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\texport default App;\n\t-------------------------------\n- **2015-10:** [Stateless function components](https://reactjs.org/blog/2015/10/07/react-v0.14.html)\n- function component\n\t---------------------------------------\n\timport React from 'react';\n\timport Main from 'datapod/components/main';\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Main />\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t---------------------------------------\n- function components with ES6 arrow notation\n\t---------------------------\n\timport React from 'react';\n\timport Main from 'datapod/components/main';\n\n\tconst App = () => {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Main />\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t---------------------------\n- **2019-02:** Hooks are a new addition in React 16.8. State hook allows you to add states in the function component.","points":20,"extras":"$rank=4.3","systemWhenCreated":"2020-10-25 02:44:37","systemWhoCreated":"systemUnknown"},{"id":302,"category":"React","title":"How to make a toggle state: click on logo to make it spin","body":"- add this to CSS file:\n\t----------------------------------\n\t.static-logo {\n\t\theight: 100px;\n\t}\n\n\t.animated-logo {\n\t\tanimation: App-logo-spin infinite 20s linear;\n\t\theight: 100px;\n\t}\n\n\t@keyframes App-logo-spin {\n\t\tfrom {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\tto {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t----------------------------------\n- define toggle variable in constructor, bind it, create event handler (toggleLogo), then add *addClick* and react to the toggle variable (`className={this.state.toggleLogo ? 'static-logo' : 'animated-logo'}`)\n\t--------------------------------------\n\timport { Component } from 'react';\n\timport logo from './logo.png';\n\timport './App.css';\n\n\tclass App extends Component {\n\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\ttoggleLogo: true\n\t\t\t};\n\n\t\t\t// need for ES6\n\t\t\tthis.toggleLogo = this.toggleLogo.bind(this);\n\t\t}\n\n\t\ttoggleLogo(event) {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\ttoggleLogo: !prevState.toggleLogo\n\t\t\t}));\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t<img src={logo}\n\t\t\t\t\t\t\tclassName={this.state.toggleLogo ? 'static-logo' : 'animated-logo'}\n\t\t\t\t\t\t\tonClick={this.toggleLogo}\n\t\t\t\t\t\t\talt=\"logo\" />\n\t\t\t\t\t\t<div><span className=\"mainHeader\">Welcome to React</span></div>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\texport default App;\n\t--------------------------------------","points":100,"extras":"$rank=4.7834","systemWhenCreated":"2020-10-25 03:39:39","systemWhoCreated":"systemUnknown"},{"id":303,"category":"CSS","title":"Minimal responsive template for three-menu single-page site","body":"- note it widens and centers on browsers but is full width on mobile devices##thewidenokok\n- index.html\n\t----------------------------------\n\t<!DOCTYPE html>\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Center Div</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tpadding: 20px;\n\t\t\t\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\n\t\t\t}\n\n\t\t\t.container {\n\t\t\t\tmargin: 0 auto;\n\t\t\t\tmax-width: 700px;\n\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\tpadding: 10px;\n\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tbackground-color: #eee;\n\t\t\t}\n\n\t\t\th2 {\n\t\t\t\tmargin: 0 auto;\n\t\t\t\tmax-width: 700px;\n\t\t\t\tpadding-left: 10px;\n\t\t\t}\n\n\t\t\t.menu {\n\t\t\t\tmargin: 0 auto;\n\t\t\t\tmax-width: 700px;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<h2>Information</h2>\n\t\t<div class=\"menu\">News | Info | More settings</div>\n\t\t<div class=\"container\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo mollitia aspernatur in tempore porro non. Recusandae temporibus incidunt, eius quod neque optio quidem, nam illum ducimus cupiditate unde rem suscipit voluptas blanditiis ipsa porro saepe dignissimos corporis possimus quos! Fugit, maxime? Molestiae, distinctio consequuntur! Eius in, voluptas facilis temporibus quia ad omnis, quos facere porro atque ratione minus sit? Voluptatibus nobis repellat voluptatem ipsam cupiditate vitae sed delectus facere distinctio, nesciunt esse labore dolores est perspiciatis perferendis? Quibusdam iusto sed repellendus voluptates accusamus, fugiat expedita unde quos necessitatibus vitae maiores tempore, corporis iure rerum at repudiandae facilis ut perferendis ea?</div>\n\t</body>\n\n\t</html>\n\t----------------------------------","points":20,"extras":"$rank=4.9","systemWhenCreated":"2020-10-25 15:15:20","systemWhoCreated":"systemUnknown"},{"id":304,"category":"CSS","title":"Card design with image, title, price, and description","body":"- notice the shadow text and also transition, e.g. if resized##thejuiccecard\n- HTML:\n\t--------------------------------\n\t<div className=\"card\">\n\t\t<img src=\"juice.jpg\" alt=\"Juice\" className=\"card-image\" />\n\t\t<div className=\"container\">\n\t\t\t<h3>Vitamin Juice <span className=\"price\">$3.99</span></h3>\n\t\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptates dignissimos cumque soluta id repellat error non perspiciatis vero ad facilis mollitia delectus, iste consequuntur quaerat, minus ab eligendi? Vero rem quos maxime et, eius repellat earum.</p>\n\t\t</div>\n\t</div>\n\t--------------------------------\n- CSS:\n\t------------------------------------\n\t.card {\n\t\tbox-shadow: 0 4px 8px 0 black;\n\t\ttransition: 1s;\n\t\twidth: 20%;\n\t\tbackground-color: white;\n\t\tmargin: 5px;\n\t\tborder-radius: 10px;\n\t}\n\n\t.price {\n\t\tcolor: red;\n\t\tfont-weight: 800;\n\t\tfont-size: 35px;\n\t\ttext-shadow: 0px 0px 5px #ccc;\n\n\t}\n\n\t.container {\n\t\tpadding: 2px 16px;\n\t\tbackground-color: white;\n\t\tborder-radius: 0 0 10px 10px;\n\t\ttext-align: center;\n\t}\n\n\t.card-image {\n\t\twidth: 100%;\n\t}\n\t------------------------------------","points":30,"extras":"$rank=4.2","systemWhenCreated":"2020-10-25 17:41:45","systemWhoCreated":"systemUnknown"},{"id":305,"category":"SketchUp Free","title":"Animate between numerous perspectives","body":"- you can create numerous perspectives (scenes) and then animate between them##sketchupScenesOk\n- click on scene-cutter icon on the right\n- click the [[+]] symbol\n- change your perspective \n- click the [[+]] symbol again\n- then you can manually click on them or press the play button","points":10,"extras":"$rank=4.9222","systemWhenCreated":"2020-10-29 00:45:45","systemWhoCreated":"systemUnknown"},{"id":306,"category":"SketchUp Free","title":"How to apply styles to a  drawing for publication, demonstration, etc.","body":"- if you want to show your architectural drawings to clients or include in plans, etc. there are a number of default styles you can choose from##sketchupfourstyles\n- click on the styles button on the right side, and experiment with various styles, or create your own##theStylesIcon\n- while in the style, you can continue to fully navigate and change your drawing","points":20,"extras":"$rank=4.923","systemWhenCreated":"2020-10-29 07:56:41","systemWhoCreated":"systemUnknown"},{"id":307,"category":"Node","title":"Read data from SQLite database in Node using promises instead of callbacks","body":"- a more straight-forward way to access an SQLite database file in Node is to use ES6 promises when using the sqlite3 npm module##theNodeSqlitePromise\n- create directory: `nodeSqlite`\n- copy file to `data/main.sqlite` \n- `npm init -y`\n- `npm i sqlite3`\n- make `sqlManager.js`:\n\t----------------------------------\n\tconst sqlite3 = require('sqlite3').verbose();\n\n\tclass SqliteManager {\n\t\tdbPathAndFileName;\n\n\t\tconstructor(dbPathAndFileName) {\n\t\t\tthis.dbPathAndFileName = dbPathAndFileName;\n\t\t}\n\n\t\tgetRecordWithSql(sql) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst db = new sqlite3.Database(this.dbPathAndFileName);\n\t\t\t\tdb.all(sql, function (err, records) {\n\t\t\t\t\tif (records === undefined) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else if (records.length === 0) {\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(records[0]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdb.close();\n\t\t\t});\n\t\t}\n\n\t\tgetRecordsWithSql(sql) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst db = new sqlite3.Database(this.dbPathAndFileName);\n\t\t\t\tdb.all(sql, function (err, records) {\n\t\t\t\t\tif (records === undefined) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else if (records.length === 0) {\n\t\t\t\t\t\tresolve([]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(records);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdb.close();\n\t\t\t});\n\t\t}\n\n\t}\n\n\tmodule.exports = SqliteManager;\n\t----------------------------------\n- make `app.js`\n\t---------------------------------\n\tconst SqliteManager = require('./sqliteManager');\n\n\tconst sqliteManager = new SqliteManager('data/main.sqlite');\n\n\tsqliteManager.getRecordWithSql(`SELECT * FROM howtos WHERE id=1`)\n\t\t.then((record) => {\n\t\t\tif (record !== null) {\n\t\t\t\tconsole.log(record);\n\t\t\t}\n\t\t})\n\t\t.catch((error) => console.log(error));\n\n\tsqliteManager.getRecordsWithSql(`SELECT * FROM howtos LIMIT 5`)\n\t\t.then((records) => {\n\t\t\tfor (const record of records) {\n\t\t\t\tconsole.log(record.title);\n\t\t\t}\n\t\t})\n\t\t.catch((error) => console.log(error));\n\t---------------------------------\n- `node app.js`","points":70,"extras":"$rank=4.9123","systemWhenCreated":"2020-10-29 20:27:21","systemWhoCreated":"systemUnknown"},{"id":308,"category":"SketchUp Free","title":"Create structured shapes","body":"- create simple structures in 3D space##theStructureInSpace\n- press [[L]] to choose the line tool##sketchLineTool\n- click then move to the right, and simply type `50` for 50 centimeters (will appear lower right)\n- click again in another direction, use the perpendicular and parallel line hints\n- complete a square\n- then create other sides connected to it in same fashion","points":30,"extras":"$rank=4.9234;$generalRank=4.3","systemWhenCreated":"2020-10-30 23:19:52","systemWhoCreated":"systemUnknown"},{"id":309,"category":"Nx","title":"Setup Angular and React apps in Nx monorepo workspace","body":"- Nrwl's nx is a tool to develop multiple full-stack applications that share code between them all in the same workspace\n- These instructions show you how to set up an Nx workspace and in it, create an Angular and a React application which share a method from a utilities library.##nxbothkj\n- make workspace\n\t- `npx create-nx-workspace@latest nxworkspace001`\n\t\t- angular\n\t\t- `AngularApp`\n\t\t- SASS\n\t\t- ESLint instead of TSLint (ESLint supports both JavaScript and TypeScript)\n\t\t- use nx-cloud for hosting later\n- open in VSCode\n\t- install Angular Console VSCode plugin\n\t\t- VSCode should suggest it\n- install nx to install other components\n\t- `npm i -g nx`\n- add Node\n\t- `nx add @nrwl/node`\n\t\t- had to fix with:\n\t\t- `rm -rf node_modules`\n\t\t- `npm cache verify`\n\t\t- `npm install -g @nrwl/cli`\n\t\t- `npm install`\n- add utils\n\t- `nx g @nrwl/node:lib utils`\n\t- libs\\utils\\src\\lib\\utils.ts\n\t\t--------------------\n\t\texport function getTestMessage(message: string): string {\n\t\t\treturn `Test Message: ${message}.`;\n\t\t}\n\t\t--------------------\n- use in Angular app:\n\t- apps\\angular-app\\src\\app\\app.component.ts\n\t\t- `import { getTestMessage } from '@nxworkspace001/utils';`\n\t\t- in AppComponent\n\t\t\t- `message = getTestMessage(\"test of utils from Angular\");`\n\t- apps\\angular-app\\src\\app\\app.component.html\n\t\t- `<h1>Welcome to {{ title }}!<br/>{{message}}</h1>`\n- run application\n\t- `ng serve`\n\t\t- command not found, fixed with: `npm i -g @angular/cli`\n- create React application\n\t- `nx add @nrwl/react`\n\t\t- (app doesn't exist as directory yet)\n\t- `nx g @nrwl/react:app`\n\t\t- ReactApp\n\t\t- SASS\n\t\t- Router: yes\n- edit React application\n\t- apps\\react-app\\src\\app\\app.tsx\n\t\t- `import * from '@typescriptmono33/utils';\n\t\t- `const message = getTestMessage(\"test of utils from React\");`\n\t\t- `<h1>Welcome to react-app!<br /><br />{message }</h1>`\n- run React application\n\t- nx serve react-app\n\t- go to: http://localhost:4200","points":100,"extras":"$rank=4.2;$generalRank=4.9545","systemWhenCreated":"2020-11-01 11:00:53","systemWhoCreated":"systemUnknown"},{"id":310,"category":"CSS","title":"Responsive image cards with text","body":"- This template is good for overviews of articles or products where each has a related image. The resizing from computer-width to smartphone-width is smooth with this html/css code although I had trouble getting to to transition smoothly in a React/SASS site.##responsiveCardsText\n- index.html\n\t-------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"fr-FR\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\t\t<title>Showcase: Responsive image columns with text</title>\n\n\t\t<link rel=\"stylesheet\" href=\"css/reset.css\" type=\"text/css\" media=\"all\">\n\t\t<link rel=\"stylesheet\" href=\"css/main.css\" type=\"text/css\" media=\"all\">\n\n\t</head>\n\n\t<body>\n\n\t\t<header class=\"masthead\">\n\t\t\t<h1 class=\"site-title\">Showcase: Responsive image cards with text</h1>\n\t\t</header>\n\n\t\t<main class=\"main-area\">\n\n\t\t\t<div class=\"centered\">\n\n\t\t\t\t<div className=\"description\">\n\t\t\t\t\t<p>This is a responsive site that on computer-width shows three picture cards in a row, and on smartphone-width shows one. The margins work well.</p>\n\t\t\t\t\t<p>Area of improvement: the interim space between computer-width and smartphone-width is quite jump and makes little sense, so it would be good to smooth that out.</p>\n\t\t\t\t</div>\n\n\t\t\t\t<section class=\"cards\">\n\n\t\t\t\t\t<article class=\"card\">\n\t\t\t\t\t\t<div class=\"innerWrapper\">\n\t\t\t\t\t\t\t<figure class=\"thumbnail\">\n\t\t\t\t\t\t\t\t<img src=\"images/testImage.png\" alt=\"Une bananne qui ressemble à un oiseau\">\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t\t\t\t<h2>Test Article</h2>\n\t\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas a mauris quam. Lorem\n\t\t\t\t\t\t\t\t\tipsum dolor sit amet, consectetur adipiscing elit. Nunc eget urna nec massa vehicula\n\t\t\t\t\t\t\t\t\tvulputate.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</article>\n\n\t\t\t\t</section>\n\n\t\t\t</div>\n\n\t\t</main>\n\n\t</body>\n\n\t</html>\n\t-------------------------\n- main.css\n\t-------------------------\n\t.masthead {\n\t\tbackground: hsl(0, 0%, 20%);\n\t\tpadding: 0 30px;\n\t}\n\n\t.centered {\n\t\tmargin: 0 auto;\n\t\tpadding: 0 2em;\n\t\tmax-width: 52em;\n\t}\n\n\t.site-title {\n\t\tmargin: 0 0 1em;\n\t\tpadding: 1em 0;\n\t\tfont-weight: 300;\n\t\ttext-align: center;\n\t\tcolor: white;\n\t}\n\n\tbody {\n\t\tbackground:#ddd;\n\t}\n\n\t.card {\n\t\tbackground: white;\n\t\tmargin-bottom: 1em;\n\t}\n\n\t.card-content {\n\t\tpadding: 1.4em;\n\t}\n\n\t.card-content h2 {\n\t\tmargin-top: 0;\n\t\tmargin-bottom: 0.5em;\n\t\tfont-weight: normal;\n\t}\n\n\t/*Flexbox*/\n\t@media screen and (min-width: 40em) {\n\t\t.cards {\n\t\t\tdisplay: flex;\n\t\t\t/* justify-content: space-between; */\n\t\t\tflex-wrap: wrap;\n\t\t}\n\t\t.card {\n\t\t\tflex: 0 1 calc(50% - 1em);\n\t\t\tdisplay: flex;\n\t\t\tmargin-right: 1em;\n\t\t}\n\t}\n\t@media screen and (min-width: 60em) {\n\t\t.card {\n\t\t\tflex: 0 1 calc(33% - 1em);\n\t\t}\n\t}\n\t-------------------------\n- reset.css\n\t---------------------------\n\thtml {\n\t\tfont-family: sans-serif;\n\t\t-webkit-text-size-adjust: 100%;\n\t\t-ms-text-size-adjust:     100%;\n\t}\n\n\tbody {\n\t\tmargin: 0;\n\t\tbackground-color: tan;\n\t}\n\n\tarticle,\n\taside,\n\tdetails,\n\tfigcaption,\n\tfigure,\n\tfooter,\n\theader,\n\tmain,\n\tmenu,\n\tnav,\n\tsection,\n\tsummary {\n\t\tdisplay: block;\n\t}\n\n\taudio,\n\tcanvas,\n\tprogress,\n\tvideo {\n\t\tdisplay: inline-block;\n\t\tvertical-align: baseline;\n\t}\n\n\taudio:not([controls]) {\n\t\tdisplay: none;\n\t\theight: 0;\n\t}\n\n\t[hidden],\n\ttemplate {\n\t\tdisplay: none;\n\t}\n\n\ta {\n\t\tbackground-color: transparent;\n\t}\n\n\ta:active,\n\ta:hover {\n\t\toutline: 0;\n\t}\n\n\tabbr[title] {\n\t\tborder-bottom: 1px dotted;\n\t}\n\n\tb,\n\tstrong {\n\t\tfont-weight: bold;\n\t}\n\n\tdfn {\n\t\tfont-style: italic;\n\t}\n\n\th1 {\n\t\tfont-size: 2em;\n\t\tmargin: 0.67em 0;\n\t}\n\n\tmark {\n\t\tbackground: #ff0;\n\t\tcolor: #000;\n\t}\n\n\tsmall {\n\t\tfont-size: 80%;\n\t}\n\n\tsub,\n\tsup {\n\t\tfont-size: 75%;\n\t\tline-height: 0;\n\t\tposition: relative;\n\t\tvertical-align: baseline;\n\t}\n\n\tsup {\n\t\ttop: -0.5em;\n\t}\n\n\tsub {\n\t\tbottom: -0.25em;\n\t}\n\n\timg {\n\t\tdisplay: block;\n\t\tborder: 0;\n\t\twidth: 100%;\n\t\theight: auto;\n\t}\n\n\tsvg:not(:root) {\n\t\toverflow: hidden;\n\t}\n\n\tfigure {\n\t\tmargin: 0;\n\t}\n\n\thr {\n\t\tbox-sizing: content-box;\n\t\theight: 0;\n\t}\n\n\tpre {\n\t\toverflow: auto;\n\t}\n\n\tcode,\n\tkbd,\n\tpre,\n\tsamp {\n\t\tfont-family: monospace, monospace;\n\t\tfont-size: 1em;\n\t}\n\n\tbutton,\n\tinput,\n\toptgroup,\n\tselect,\n\ttextarea {\n\t\tcolor: inherit;\n\t\tfont: inherit;\n\t\tmargin: 0;\n\t}\n\n\tbutton {\n\t\toverflow: visible;\n\t}\n\n\tbutton,\n\tselect {\n\t\ttext-transform: none;\n\t}\n\n\tbutton,\n\thtml input[type=\"button\"],\n\tinput[type=\"reset\"],\n\tinput[type=\"submit\"] {\n\t\t-webkit-appearance: button;\n\t\tcursor: pointer;\n\t}\n\n\tbutton[disabled],\n\thtml input[disabled] {\n\t\tcursor: default;\n\t}\n\n\tbutton;-moz-focus-inner,\n\tinput;-moz-focus-inner {\n\t\tborder: 0;\n\t\tpadding: 0;\n\t}\n\n\tinput {\n\t\tline-height: normal;\n\t}\n\n\tinput[type=\"checkbox\"],\n\tinput[type=\"radio\"] {\n\t\tbox-sizing: border-box;\n\t\tpadding: 0;\n\t}\n\n\tinput[type=\"number\"];-webkit-inner-spin-button,\n\tinput[type=\"number\"];-webkit-outer-spin-button {\n\t\theight: auto;\n\t}\n\n\tinput[type=\"search\"] {\n\t\t-webkit-appearance: textfield;\n\t\tbox-sizing: content-box;\n\t}\n\n\tinput[type=\"search\"];-webkit-search-cancel-button,\n\tinput[type=\"search\"];-webkit-search-decoration {\n\t\t-webkit-appearance: none;\n\t}\n\n\tfieldset {\n\t\tborder: 1px solid #c0c0c0;\n\t\tmargin: 0 2px;\n\t\tpadding: 0.35em 0.625em 0.75em;\n\t}\n\n\tlegend {\n\t\tborder: 0;\n\t\tpadding: 0;\n\n\t}\n\n\ttextarea {\n\t\toverflow: auto;\n\t}\n\n\toptgroup {\n\t\tfont-weight: bold;\n\t}\n\n\ttable {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n\t}\n\n\ttd,\n\tth {\n\t\tpadding: 0;\n\t}\n\t---------------------------","points":60,"extras":"$rank=4.7833","systemWhenCreated":"2020-11-02 16:56:41","systemWhoCreated":"systemUnknown"},{"id":311,"category":"CSS","title":"Three-screen responsive CSS Grid layout","body":"- notice we don't use grid-template-areas here (which are visually easier to understand for more complex grids), but that we use e.g. `grid-column: 1 / 3` which is short-hand for `grid-column-start: 1` and `grid-column-end: 3`:##threeWayGridCss\n- CSS:\n\t--------------------------------\n\t.grid-container{\n\t\tdisplay: grid;\n\t\tgrid-gap: 20px;\n\t\tmargin: 20px 10px;\n\t}\n\t@media screen and (min-width: 768px){\n\t\t.grid-container{\n\t\t\tgrid-template-columns: 1fr 350px;\n\t\t}\n\t\theader, footer{\n\t\t\tgrid-column: 1 / 3;\n\t\t}\n\t}\n\t@media screen and (min-width: 1024px){\n\t\t.grid-container{\n\t\t\tgrid-template-columns: 1fr 600px;\n\t\t\tgrid-template-rows: auto repeat(2, 1fr);\n\t\t}\n\t\tmain{\n\t\t\tgrid-row: 2 / 4;\n\t\t}\n\t\tfooter{\n\t\t\tgrid-column: 2 / 3;\n\t\t}\n\t}\n\t--------------------------------\n- HTML:\n\t------------------------------\n\t <section class=\"grid-container\">\n\t\t<header>\n\t\t\t<h1>Lorem ipsum dolor sit.</h1>\n\t\t</header>\n\t\t<main>\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ex, maxime enim alias, illum blanditiis, amet eaque id illo accusantium eius nisi facere rerum? Beatae atque, tempora explicabo repellendus reiciendis consequuntur.</p>\n\t\t\t<p>Quis, porro praesentium pariatur corporis impedit assumenda eum vero quos blanditiis voluptate recusandae odio natus illum similique dolorem optio vitae doloribus mollitia voluptatibus consequuntur nesciunt perferendis aliquid, et nisi. Id.</p>\n\t\t\t<p>Atque ipsum, eos, excepturi optio dolore aliquid error placeat nemo magni, natus fuga! Molestiae modi assumenda sequi ullam velit perferendis eligendi, alias esse recusandae doloribus aut molestias nihil est reprehenderit?</p>\n\t\t\t<p>Eveniet, cupiditate repudiandae molestiae quos. Laboriosam magni, ullam tempore vitae repellendus temporibus possimus. Dolorum corrupti voluptatum, repellat cum praesentium facilis soluta quis porro aliquid itaque perferendis, nostrum libero fuga eaque?</p>\n\t\t</main>\n\t\t<aside>\n\t\t\tAside ipsum dolor sit amet, consectetur adipisicing elit. Dolorem, labore dolorum, fuga explicabo, placeat aliquid facere nesciunt illo animi neque dolores voluptatibus reprehenderit doloribus tenetur amet facilis sit quidem corrupti.\n\t\t</aside>\n\t\t<footer>Footer ipsum dolor sit amet, consectetur.</footer>\n\t</section>\n\t------------------------------","points":100,"extras":"$rank=4.8232;$generalRank=4.9928","systemWhenCreated":"2020-11-03 04:30:58","systemWhoCreated":"systemUnknown"},{"id":312,"category":"CSS","title":"Using Flexbox for left-right items with images","body":"- Back in CSS float-left/float-right days, it was a pain if not impossible to get a background-colored area to extend to full veritcal length of the area of text next to it that was various sizes. Now with Flexbox, it's easy, here an example of doing this as a responsive site with a computer and smartphone view:##sidebysideresponsive\n- HTML:\n\t----------------------------------\n\t<div class=\"item\">\n\t\t<div class=\"imageArea\">\n\t\t\t<div><img src=\"test.png\"></div>\n\t\t\t<p>Twitter</p>\n\t\t\t<p>Website</p>\n\t\t\t<p>LinkedIn</p>\n\t\t\t<p>Facebook</p>\n\t\t</div>\n\t\t<div class=\"description\">\n\t\t\t<div class=\"fullName\">First Lastname</div>\n\t\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, necessitatibus.\n\t\t\t\tAccusamus cupiditate molestiae fugit quaerat omnis error accusantium commodi! Quae earum architecto\n\t\t\t\talias\n\t\t\t\tdolores nemo, incidunt quis quasi voluptas facilis.</p>\n\t\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit.\n\t\t\t\tSequi illo ipsum voluptatem esse? Quia, distinctio blanditiis, nesciunt quos fugiat architecto fugit\n\t\t\t\tquasi\n\t\t\t\tharum obcaecati iusto ducimus excepturi, nostrum perferendis atque doloremque sunt voluptates officia!\n\t\t\t\tCulpa\n\t\t\t\tnam deserunt debitis. Nem quae doloremque nulla ullam, dolorem\n\t\t\t\tconsectetur, vero expedita, magnam sed deserunt voluptatibus omnis obcaecati repellendus!</p>\n\t\t\t<p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Sapiente voluptates perferendis sit optio\n\t\t\t\ttempore doloribus possimus\n\t\t\t\ttempora. Inventore aliquid et accusamus tenetur alias veritatis numquam quisquam quidem, dolores animi\n\t\t\t\tdistinctio veniam laudantium optio recusandae assumenda quos, a vero architecto sapiente vitae qui\n\t\t\t\tmagnam?\n\t\t\t\tQuisquam cum temporibus laborum. Ab, quam dolorum.</p>\n\t\t</div>\n\t</div>\n\t<div class=\"item\">\n\t\t<div class=\"imageArea\"><img src=\"test.png\">\n\t\t\t<p>Twitter</p>\n\t\t\t<p>Website</p>\n\t\t\t<p>LinkedIn</p>\n\t\t\t<p>Facebook</p>\n\t\t</div>\n\t\t<div class=\"description\">\n\t\t\t<div class=\"fullName\">First Lastname</div>\n\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, necessitatibus.\n\t\t\tAccusamus cupiditate molestiae fugit quaerat omnis error accusantium commodi! Quae earum architecto alias\n\t\t\tdolores nemo, incidunt quis quasi.\n\t\t\t<br /><br />\n\t\t\tLorem ipsum, dolor sit amet consectetur adipisicing elit. Ea omnis, natus molestiae a voluptatibus,\n\t\t\trecusandae minima in, minus earum saepe veritatis corporis! Dicta, harum? Excepturi placeat modi, cum\n\t\t\tconsectetur ullam quo numquam, eum qui voluptate perferendis animi voluptas nesciunt ratione molestiae\n\t\t\tofficiis rerum earum. Praesentium, exercitationem? Qui ipsum doloremque ipsa soluta recusandae repellendus\n\t\t\tmagnam, eos beatae velit tempore, nobis rerum optio, iusto provident aperiam enim ratione inventore! Dolore\n\t\t\tnesciunt neque asperiores suscipit vitae, quidem delectus, reprehenderit, nisi error non fugit!\n\t\t</div>\n\t</div>\n\t<div class=\"item\">\n\t\t<div class=\"imageArea\"><img src=\"test.png\">\n\t\t\t<p>Twitter</p>\n\t\t\t<p>Website</p>\n\t\t\t<p>LinkedIn</p>\n\t\t\t<p>Facebook</p>\n\t\t</div>\n\t\t<div class=\"description\">\n\t\t\t<div class=\"fullName\">First Lastname</div>\n\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, necessitatibus.\n\t\t\tAccusamus cupiditate molestiae fugit quaerat omnis error accusantium commodi! Quae earum architecto alias\n\t\t\tdolores nemo, incidunt quis quasi voluptas facilis. Lorem ipsum dolor sit amet consectetur adipisicing elit.\n\t\t\tSequi illo ipsum voluptatem esse? Quia, distinctio blanditiis, nesciunt quos fugiat architecto fugit quasi\n\t\t\tharum obcaecati iusto ducimus excepturi, nostrum perferendis atque doloremque sunt voluptates officia! Culpa\n\t\t\tnam deserunt debitis. Voluptatem, blanditiis. Mollitia suscipit numquam blanditiis vitae inventore optio,\n\t\t\teaque omnis quam, iste maxime.\n\t\t</div>\n\t</div>\n\t----------------------------------\n- CSS: \n\t------------------------------\n\tbody {\n\t\tpadding: 20px;\n\t\tfont-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\n\t}\n\n\t.item {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.item .imageArea {\n\t\tmargin-right: 10px;\n\t\tbackground-color: #eee;\n\t\tpadding: 10px;\n\t\ttext-align: center;\n\t}\n\n\t.item .fullName {\n\t\tfont-weight: bold;\n\t\tmargin-top: 10px;\n\t\tmargin-bottom: 10px;\n\t}\n\n\t/* smartphone view */\n\t@media (max-width: 577px) {\n\t\t.imageArea img {\n\t\t\twidth: 50px;\n\t\t}\n\n\t\t.item .imageArea {\n\t\t\tfont-size: .8em\n\t\t}\n\n\t\t.item .fullName {\n\t\t\tfont-size: 1em;\n\t\t}\n\t\t.item p {\n\t\t\tfont-size: .9em;\n\t\t}\n\t}\n\n\t/* computer/table view */\n\t@media (min-width: 578px) {\n\t\t.imageArea img {\n\t\t\twidth: 100px;\n\t\t}\n\n\t\t.item .imageArea {\n\t\t\tfont-size: 1.1em\n\t\t}\n\n\t\t.item .fullName {\n\t\t\tfont-size: 1.2em;\n\t\t}\n\t\t.item p {\n\t\t\tfont-size: 1.1em;\n\t\t}\n\t}\n\t------------------------------","points":60,"extras":"$rank=4.7883;$generalRank=4.99382","systemWhenCreated":"2020-11-04 17:06:10","systemWhoCreated":"systemUnknown"},{"id":313,"category":"CSS","title":"Responsive screens that show one, two, or three column content","body":"- each of the three sizes has a different number of columns, notice also `column-gap` and the trick that you have to pull the first paragraph up one line with `div.content p:nth-child(1)`:##threeScreensWithColumns\n- CSS:\n\t--------------------------------\n\tbody {\n\t\tbackground-color: rgb(6, 36, 6);\n\t\tpadding-top: 20px;\n\t}\n\n\tdiv.panel {\n\t\tbackground-color: darkgreen;\n\t\tmargin: 0 40px 40px 40px;\n\t\tcolor: rgb(197, 197, 175);\n\t\tfont-family: 'Courier New', Courier, monospace;\n\t\tpadding: 10px 30px 30px 30px;\n\t\tborder: 1px solid #999;\n\t\tborder-radius: 10px;\n\t}\n\n\tdiv.intro {\n\t\tfont-style: italic;\n\t\tfont-size: 1.3em;\n\t\tpadding: 0 40px;\n\t}\n\n\tdiv.content p:nth-child(1) {\n\t\tmargin-top: 0;\n\n\t}\n\n\t@media screen and (max-width: 1023px) {\n\t\tdiv.content {\n\t\t\tmargin-top: 20px;\n\t\t}\n\t\th1 {\n\t\t\tfont-size: 1.4em;\n\t\t}\n\t\tdiv.intro {\n\t\t\tfont-size: .9em;\n\t\t\tpadding: 0;\n\t\t\tcolor: lightyellow;\n\t\t}\n\t}\n\n\t@media screen and (min-width: 1024px) {\n\t\tdiv.content {\n\t\t\tmargin-top: 20px;\n\t\t\tcolumn-count: 2;\n\t\t\tcolumn-gap: 30px;\n\t\t}\n\t}\n\n\t@media screen and (min-width: 1281px) {\n\t\tdiv.content {\n\t\t\tmargin-top: 20px;\n\t\t\tcolumn-count: 3;\n\t\t\tcolumn-gap: 40px;\n\t\t}\n\t}\n\t--------------\n- HTML:\n\t--------------------------------\n\t<div class=\"panel\">\n\t\t<h1>The most important concepts in CSS today</h1>\n\t\t<div class=\"intro\">Lorem ipsum dolor, sit amet consectetur adipisicing elit. Minus eaque nihil, officiis\n\t\t\tadipisci, quo nobis, maxime quasi culpa tempora perferendis expedita exercitationem ratione necessitatibus\n\t\t\teius dolor illum ut fuga recusandae.</div>\n\t\t<div class=\"content\">\n\t\t\t<p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Asperiores nobis tempora eveniet nemo! Animi\n\t\t\t\tnostrum sunt magni libero qui vel inventore et saepe voluptas a velit veritatis quibusdam delectus\n\t\t\t\ttotam, at accusamus corrupti temporibus. Nisi fugit odit, aliquid ipsa itaque pariatur est repellendus\n\t\t\t\tdistinctio aliquam quis nulla sit reprehenderit consequatur numquam quia error, labore asperiores\n\t\t\t\tnecessitatibus! Ut ipsum neque, fuga nam, laboriosam ad temporibus repudiandae voluptas quos deleniti\n\t\t\t\tdolorum ex reprehenderit aperiam ab, saepe dolorem fugit esse omnis corporis perferendis.\n\t\t\t</p>\n\t\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Vel doloribus non neque officia architecto\n\t\t\t\tassumenda ipsam maxime, quasi, quo saepe sunt vero? Amet culpa aut earum necessitatibus laboriosam\n\t\t\t\tpraesentium fugit sit ipsum deserunt veniam reprehenderit ex accusantium ipsam repellendus mollitia\n\t\t\t\tquasi, sed pariatur cum natus iure officiis. Natus id, placeat consequuntur expedita eveniet provident\n\t\t\t\tab incidunt blanditiis dolorem dolores officia dolorum inventore a necessitatibus temporibus eos maiores\n\t\t\t\tquas, minus modi!</p>\n\t\t\t<p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Mollitia dolores, quo facere hic a sapiente\n\t\t\t\tminima velit earum, quia, tenetur rem. Magnam cupiditate dolore non id quas? Esse quibusdam quasi\n\t\t\t\tconsectetur molestiae voluptatibus quo temporibus obcaecati perferendis qui nihil ipsa accusamus, minima\n\t\t\t\taspernatur provident! Fuga deleniti harum tempora illo explicabo blanditiis illum, laudantium incidunt\n\t\t\t\tquae quos obcaecati. Expedita, at, natus adipisci inventore similique quas, non saepe et repellendus ex\n\t\t\t\texcepturi! Est tempore incidunt quo aliquid, inventore consequuntur nemo provident laboriosam earum,\n\t\t\t\tdoloremque quaerat impedit cupiditate eum molestias recusandae odio perspiciatis illum quas magnam!\n\t\t\t\tLaboriosam, optio minima dolor numquam sit consequatur! Beatae eligendi quia aut dolore architecto\n\t\t\t\tsoluta. Facilis provident aut officiis cum voluptate animi enim explicabo magnam placeat adipisci.\n\t\t\t\tInventore.</p>\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Id fugit temporibus a vitae? Explicabo incidunt\n\t\t\t\tcorporis voluptas quis cupiditate aperiam ad ut est suscipit amet, dolore consequuntur porro? Nesciunt\n\t\t\t\tminima tenetur laudantium quaerat nam, alias quas esse inventore iure modi amet dolore eligendi natus\n\t\t\t\tillo cumque tempore delectus et magni beatae id repellat soluta, earum sapiente. Consequatur voluptatem\n\t\t\t\teos tenetur quod ipsam magni minima placeat quos, maiores reprehenderit voluptatum accusantium a! Quia,\n\t\t\t\taut. Obcaecati reprehenderit nulla id eos aspernatur error tenetur minima nam omnis molestiae aliquam\n\t\t\t\tipsa labore nisi, voluptatem amet ex, sapiente praesentium ullam nobis deserunt eius. Dolores eaque\n\t\t\t\tmolestias, suscipit harum inventore eius sit tempora nihil voluptate maxime quod. Placeat ut nihil\n\t\t\t\tbeatae ipsum dolores, saepe iure molestias hic culpa. Consectetur fuga ab repellendus, excepturi, quae\n\t\t\t\toptio facere dicta odit ipsam magni atque! Vero doloremque earum suscipit obcaecati consectetur quaerat\n\t\t\t\tvoluptatibus voluptatum est qui laboriosam, beatae, quasi maiores aperiam excepturi quisquam optio\n\t\t\t\tperferendis eligendi necessitatibus sed dicta perspiciatis.</p>\n\t\t</div>\n\t</div>\n\t--------------------------------","points":100,"extras":"$rank=4.9123;$generalRank=4.95","systemWhenCreated":"2020-11-05 15:12:03","systemWhoCreated":"systemUnknown"},{"id":314,"category":"HTML","title":"Download and use Google fonts on web page","body":"- It's easy to add fonts to websites, particularly if you load them via the web, just search for your font and copy and paste:##fontsAndIntro\n- https://fonts.google.com\n\t- click on desired font\n\t- select style\n\t- View your selected families\n\t- copy into HEAD, e.g.\n\t\t- `<link href=\"https://fonts.googleapis.com/css2?family=Goldman&display=swap\" rel=\"stylesheet\">`\n\t- use font family name listed, full example:\n\t\t-----------------------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<link href=\"https://fonts.googleapis.com/css2?family=Goldman&display=swap\" rel=\"stylesheet\">\n\t\t\t<title>Fonts</title>\n\t\t\t<style>\n\t\t\t\tbody {\n\t\t\t\t\tpadding: 0 20px;\n\t\t\t\t}\n\t\t\t\th1 {\n\t\t\t\t\tfont-family: 'Goldman', cursive;\n\t\t\t\t}\n\t\t\t\tp {\n\t\t\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t\t\t}\n\t\t\t</style>\n\t\t</head>\n\n\t\t<body>\n\t\t\t<h1>Introduction</h1>\n\t\t\t<p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Molestias assumenda sint numquam cupiditate doloribus, dolores itaque sit asperiores ea. Odit, neque magnam! Ipsum autem fugiat obcaecati molestiae ab itaque voluptates facilis dolor quisquam temporibus voluptas quia laudantium eos et placeat nobis quaerat tempora rerum, similique mollitia! Maiores corrupti nesciunt iusto deleniti architecto reprehenderit animi, perspiciatis magnam blanditiis. Ducimus, molestiae eaque. Porro, tenetur! Voluptatem veniam error recusandae facere dolorem consectetur aspernatur? Aut at, nobis quidem aliquid delectus perferendis a quae sunt laborum, doloremque ipsa illum voluptate itaque aspernatur earum impedit reprehenderit sed veniam sit perspiciatis numquam fugit consequuntur blanditiis. Laudantium voluptatibus mollitia consectetur sint voluptate cumque earum facere expedita inventore magnam ullam officiis neque dolorem error, animi eum eveniet autem cupiditate nobis exercitationem adipisci, nostrum excepturi eligendi ratione! Corporis ex vel voluptatibus amet eligendi ipsa, culpa?</p>\n\t\t</body>\n\n\t\t</html>\n\t\t-----------------------------------\n- you can also put the font reference in the style sheet:\n\t- `@import url('https://fonts.googleapis.com/css2?family=Goldman&display=swap');`\n- if you want to download the font files and access them locally:\n\t- download, unpack the main `ttf` file to `/fonts` e.g.\n\t\t- `Goldman-Regular.ttf`\n\t- replace HEAD with this:\n\t\t--------------------------------\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>Fonts</title>\n\t\t\t<style>\n\t\t\t\t@font-face {\n\t\t\t\t\tfont-family: 'Goldman';\n\t\t\t\t\tsrc: url('fonts/Goldman-Regular.ttf') format('truetype');\n\t\t\t\t}\n\n\t\t\t\tbody {\n\t\t\t\t\tpadding: 0 20px;\n\t\t\t\t}\n\n\t\t\t\th1 {\n\t\t\t\t\tfont-family: 'Goldman', cursive;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tfont-family: Arial, Helvetica, sans-serif\n\t\t\t\t}\n\t\t\t</style>\n\t\t</head>\n\t\t--------------------------------","points":40,"extras":"$rank=4.9343","systemWhenCreated":"2020-11-09 16:12:31","systemWhoCreated":"systemUnknown"},{"id":315,"category":"CSS","title":"Syntax for CSS calc() and custom properties","body":"- CSS custom properties are useful if you need SASS variables but don't happen to have SASS\n- notice that `largeSize` is calculated from `normalSize`\n- notice also that you can change the colors and multiple elements change colors:##custompropsandcalc\n- HTML and CSS:\n\t---------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>CSS Properties</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tpadding: 0 20px;\n\t\t\t}\n\t\t\t:root {\n\t\t\t\t--normalSize: 1em;\n\t\t\t\t--largeSize: calc(var(--normalSize) * 1.3);\n\t\t\t\t--colorBad: tomato;\n\t\t\t\t--colorWarn: darkorange;\n\t\t\t\t--colorGood: darkgreen;\n\t\t\t}\n\n\t\t\tp.errorMessage {\n\t\t\t\tfont-size: var(--largeSize);\n\t\t\t\tcolor: var(--colorBad);\n\t\t\t}\n\n\t\t\tp.careful {\n\t\t\t\tfont-size: var(--normalSize);\n\t\t\t\tcolor: var(--colorWarn);\n\t\t\t}\n\n\t\t\tp.success {\n\t\t\t\tfont-size: var(--normalSize);\n\t\t\t\tcolor: var(--colorGood);\n\t\t\t}\n\n\t\t\th1.error {\n\t\t\t\tcolor: var(--colorBad);\n\t\t\t}\n\n\t\t\th1.warning {\n\t\t\t\tcolor: var(--colorWarn);\n\t\t\t}\n\n\t\t\th1.successHeader {\n\t\t\t\tcolor: var(--colorGood);\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<h1 class=\"error\">Message:</h1>\n\t\t<p class=\"errorMessage\">This is an error.</p>\n\t\t<hr>\n\t\t<h1 class=\"warning\">Message:</h1>\n\t\t<p class=\"careful\">This is an warning.</p>\n\t\t<hr>\n\t\t<h1 class=\"successHeader\">Message:</h1>\n\t\t<p class=\"success\">Congratulations.</p>\n\t</body>\n\n\t</html>\n\t---------------------------","points":40,"extras":"$rank=4.9","systemWhenCreated":"2020-11-10 17:02:48","systemWhoCreated":"systemUnknown"},{"id":316,"category":"JavaScript","title":"Use regex to replace starred words in sentence with blanks","body":"- note that that `?` in the regular expression is a non-greedy expression so that the regex only selects each word and not the beginning of the first word to the end of the last word##replaceJavascriptRegexok\n- test.js\n\t----------------------------------\n\tconst regex = /(\\*.*?\\*)/;\n\tconst sentence = \"Using Bootstrap Grid means writing more *HTML*. Using CSS Grid means writing more *CSS*.\";\n\n\tconst replaceAllRegex = (text, regex, replace) => text.replace(new RegExp(regex, 'g'), replace);\n\n\tconst clozeSentence = replaceAllRegex(sentence, regex, '[_________]');\n\n\tconsole.log(regex);\n\tconsole.log(sentence);\n\tconsole.log(clozeSentence);\n\t----------------------------------","points":30,"extras":"$rank=4.838742;$generalRank=4.7823","systemWhenCreated":"2020-11-10 18:08:03","systemWhoCreated":"systemUnknown"},{"id":317,"category":"firefox","title":"Firefox Bookmark Import/Export and Main Password","body":"- it's a good habit to backup your bookmarks in case your computer crashes or Firefox reinstalls and doesn't bring back your passwords (has happened to me)\n- it's a bit hidden in the newest version of Firefox so here's how\n- export passwords:\n\t- right-click on top of Firefox, Menu Bar##ffoxmenu\n\t- Bookmarks\n\t- Show all bookmarks\n\t- Import and Backup\n\t- Export Bookmarks to HTML...\n- it's also a good idea to set a master password so that others can log in as you even on sites for which Firefox has saved your password:\n\t- three-lines button\n\t- options\n\t- type in password","points":20,"extras":"$rank=4.912;$generalRank=3.4","systemWhenCreated":"2020-11-11 10:02:37","systemWhoCreated":"systemUnknown"},{"id":318,"category":"CSS","title":"Make a DIV pop out at the user and rotate on mouseover","body":"- note that multiple transforms are simply separated by a space##aboutbooksokdjf\n- HTML:\n\t-------------------------\n\t<div class=\"message\">If you want more information about these books, be sure to sign up for our newsletter.</div>\n\t-------------------------\n- CSS:\n\t--------------------------------\n\tdiv.message {\n\t\tbackground-color: orange;\n\t\tpadding: 10px;\n\t\twidth: 200px;\n\t}\n\n\tdiv.message:hover {\n\t\ttransform: rotate(5deg) scale(1.1, 1.1);\n\t\tcursor: pointer;\n\t}\n\t--------------------------------","points":20,"extras":"$rank=4.9121;$generalRank=4.9439","systemWhenCreated":"2020-11-11 14:19:43","systemWhoCreated":"systemUnknown"},{"id":319,"category":"CSS","title":"Use Font Awesome icons as UL-list icons in a color box","body":"- note that for the LI element, *margin-left* has to be the negative of *width*##loremWithFontAwesome\n- test.html\n\t---------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n\t\t<link rel=\"stylesheet\" type=\"text/css\"\n\t\t\thref=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t\t<title>Document</title>\n\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tpadding: 10px 20px;\n\t\t\t}\n\n\t\t\tul {\n\t\t\t\tbackground: #ff9999;\n\t\t\t\tpadding: 20px 20px 20px 0;\n\t\t\t\tlist-style-type: none;\n\t\t\t\twidth: 400px;\n\t\t\t}\n\n\t\t\tli:before {\n\t\t\t\tcontent: \"\\f0a9\";\n\t\t\t\tfont-family: FontAwesome;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin-left: -1.6em;\n\t\t\t\twidth: 1.6em;\n\t\t\t}\n\n\t\t\tul li {\n\t\t\t\tbackground: #ffe5e5;\n\t\t\t\tpadding: 5px;\n\t\t\t\tmargin-left: 35px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<ul>\n\t\t\t<li>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Officia ipsa odit harum eum at hic, sit corrupti\n\t\t\t\tasperiores exercitationem ab ea, quae, cumque tempora cum voluptatem facilis aut neque nisi.</li>\n\t\t\t<li>Lorem ipsum dolor sit amis dolorem aspernatur assumenda distinctio. Quia qui quas debitis perspiciatis,\n\t\t\t\tlabore itaque!</li>\n\t\t\t<li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Veniam, animi pariatur culpa porro ea, repudiandae\n\t\t\t\tcum velit ab aut quam ipsum incidunt doloribus non. Et inventore in nulla mollitia sint autem quos atque,\n\t\t\t\trepellat cupiditate voluptatem r ut vero vel. Vel, veniam, nostrum facilis reiciendis optio, corporis magni\n\t\t\t\tdicta repellendus veritatis perferendis omnis.</li>\n\n\t\t</ul>\n\t</body>\n\n\t</html>\n\t---------------------------------------","points":30,"extras":"$rank=4.7283723;$generalRank=4.573434","systemWhenCreated":"2020-11-11 15:23:03","systemWhoCreated":"systemUnknown"},{"id":320,"category":"CSS","title":"Center text vertically and horizontally in a DIV","body":"- centering text horizontally and particularly vertically in a DIV is not trivial\n- the trick is to put the text inside an inner DIV and then use `position: absolute`, `top`, `left` and `transform: translate()` to position it##theCenteredText\n- note sliders with Vue.js are straight-forward\n- test.html\n\t----------------------------\n\t<!DOCTYPE html>\n\t<html>\n\n\t<head>\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t\t<style>\n\t\t\t.center {\n\t\t\t\tposition: relative;\n\t\t\t\tborder: 3px solid green;\n\t\t\t}\n\n\t\t\t.center div {\n\t\t\t\tmargin: 0;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\ttransition: width 1s;\n\t\t\t}\n\n\t\t\t.center:hover {\n\t\t\t\twidth: 600px;\n\t\t\t}\n\n\t\t\t.messageText {\n\t\t\t\twidth: 500px;\n\t\t\t}\n\n\t\t\t.control {\n\t\t\t\tmargin-bottom: 7px;\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.control .label {\n\t\t\t\tmargin-right: 5px;\n\t\t\t\tmargin-top:1px;\n\t\t\t\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\n\t\t\t}\n\t\t\t.control .data {\n\t\t\t\tmargin-right: 5px;\n\t\t\t\tmargin-top:1px;\n\t\t\t\tfont-family: 'Courier New', Courier, monospace;\n\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\n\t\t<div id=\"app\">\n\t\t\t<div class=\"control\"><span class=\"label\">Text:</span><input class=\"messageText\" type=\"text\" v-model=\"message\" /></div>\n\t\t\t<div class=\"control\"><span class=\"label\">Width:</span><input type=\"range\" min=\"100\" max=\"500\" v-model=\"theWidth\" @change=\"changeWidth()\"><span class=\"data\">{{theWidth}}px</span></div>\n\t\t\t<div class=\"control\"><span class=\"label\">Height:</span><input type=\"range\" min=\"100\" max=\"500\" v-model=\"theHeight\" @change=\"changeHeight()\"><span class=\"data\">{{theHeight}}px</span></div>\n\t\t\t<div class=\"control\"><span class=\"label\">Font-Size:</span><input type=\"range\" min=\"15\" max=\"99\" v-model=\"theFontSize\" @change=\"changeFontSize()\"><span class=\"data\">{{theFontSize}}px</span></div>\n\t\t\t<hr />\n\n\t\t\t<!-- { height: theHeight + 'px' } -->\n\t\t\t<div class=\"center\" :style=\"{ width: theWidth + 'px', height: theHeight + 'px', fontSize: theFontSize + 'px' }\">\n\t\t\t\t<div>{{message}}</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<script>\n\t\t\tconst app = new Vue({\n\t\t\t\tel: \"#app\",\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: '',\n\t\t\t\t\ttheWidth: 300,\n\t\t\t\t\ttheHeight: 200,\n\t\t\t\t\ttheFontSize: 25\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize: function () {\n\t\t\t\t\t\tthis.message = 'Centered text.';\n\t\t\t\t\t},\n\t\t\t\t\tchangeWidth: function () {\n\t\t\t\t\t\tconsole.log(this.theWidth);\n\t\t\t\t\t},\n\t\t\t\t\tchangeHeight: function () {\n\t\t\t\t\t\tconsole.log(this.theHeight);\n\t\t\t\t\t},\n\t\t\t\t\tchangeFontSize: function () {\n\t\t\t\t\t\tconsole.log(this.theFontSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tapp.initialize();\n\t\t</script>\n\t</body>\n\n\t</html>\n\t----------------------------","points":20,"extras":"$rank=4.75857;$generalRank=4.8923; $idCode=centeredTextInDiv","systemWhenCreated":"2020-11-13 15:18:27","systemWhoCreated":"systemUnknown"},{"id":321,"category":"CSS","title":"Images that on mouse hover spin out and show info label","body":"- this works by expanding the height of the DIV on hover to show the hidden text:##peopleSpinDivCss\n- index.html\n\t---------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>spin div</title>\n\n\n\t\t<style>\n\t\t\t.item {\n\t\t\t\twidth: 100px;\n\t\t\t\theight: 100px;\n\t\t\t\tmargin: 0 10px 10px 0;\n\t\t\t\tbackground: #333;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 0;\n\t\t\t\ttransition: font-size .3s, width .3s, height .3s, transform .3s, padding .3s;\n\t\t\t}\n\n\t\t\t.item .info {\n\t\t\t\tfont-size: 12px;\n\t\t\t\tcolor: ivory;\n\t\t\t}\n\n\t\t\t.item:hover {\n\t\t\t\twidth: 100px;\n\t\t\t\theight: 120px;\n\t\t\t\tfont-size: 1.6em;\n\t\t\t\ttransform: rotate(360deg);\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\n\t\t\t.wrapper {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\twidth: 500px;\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div class=\"wrapper\">\n\t\t\t<div class=\"item\"><img src=\"person_benjaminrush_large.jpg\" alt=\"\">\n\t\t\t\t<div class=\"info\">Benjamin Rush</div>\n\t\t\t</div>\n\t\t\t<div class=\"item\"><img src=\"person_gustavedore_large.jpg\" alt=\"\">\n\t\t\t\t<div class=\"info\">Gustave Doré</div>\n\t\t\t</div>\n\t\t\t<div class=\"item\"><img src=\"person_jacqueslouisdavid_large.jpg\" alt=\"\">\n\t\t\t\t<div class=\"info\">Jacques Louis David</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n\n\t</html>\n\t---------------------------","points":60,"extras":"$rank=4.912;$generalRank=4.92328;$idCode=cssCenterDivSpinHover","systemWhenCreated":"2020-11-13 17:50:50","systemWhoCreated":"systemUnknown"},{"id":322,"category":"vim","title":"Download, install and customize Vim on Windows","body":"- these instructions help you get vim up and running and customized fast on Windows##vimShowingDarkBackground\n- download and install\n\t- https://www.vim.org\n\t- right-click *gvim82.exe* and save\n\t- execute\n- save icon to task bar\n\t- if it installed *Vim* and *gVim*, then use **gVim** (this is what is loaded with Explorer-right-click-open-with-Vim)\n- customize\n\t- open and see white background with retro font\n\t- Edit > Startup Settings\n\t- File > Save As > c:\\users\\(yourUserName)\n\t- replace contents of file with these custom settings:\n\t--------------------------\n\tset guifont=Courier\\ New:h8\n\thighlight Normal guifg=gray guibg=#1E1E1E\n\tset tabstop=4\n\tset shiftwidth=4\n\tset softtabstop=4\n\tset number\n\n\t\"KEY REMAPPINGS\n\tnoremap <SPACE> <C-F> \" space-bar = page-down\n\tnoremap <TAB> } \"TAB = move to next block\n\tnnoremap <F9> :echo system('python3 \"' . expand('%') . '\"')<cr>\n\n\t\"ABBREVIATIONS\n\tabb _imprea import React, { Component } from 'react';\n\t--------------------------\n- trouble shooting\n\t- if the above customizations don't take effect, then copy them into these files to see if they have an effect:\n\t\t- `C:\\Program Files (x86)\\Vim_vimrc`\n\t\t- `C:\\Program Files (x86)\\Vim\\vim82\\vimrc_example.vim`","points":40,"extras":"$rank=4.1;$generalRank=3.6","systemWhenCreated":"2020-11-15 13:08:11","systemWhoCreated":"systemUnknown"},{"id":323,"category":"Windows","title":"Change default sound on Windows","body":"- this is the sound that you get e.g. when you are in the Vim editor and press ESC too many times\n\t- changing it as described belong makes it a much softer, less irritating sound\n- Settings > Personalize > Themes > Sounds\n- Change *Default Sound* to *ToolTip*##windowsDefaultSound","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2020-11-16 03:12:56","systemWhoCreated":"systemUnknown"},{"id":324,"category":"regex","title":"Get an array of matches from a string with regex","body":"- note that you need the global marker `/g` at the end of regex##thefindinregexok\n- test.js\n\t---------------------------\n\tconst text = 'You can spell it either color or colour if you are talking about color.';\n\tconst regex = /colou?r/g;\n\tconst words = text.match(regex);\n\n\tconsole.log(words)\n\t---------------------------","points":30,"extras":"$rank=4.7834;$generalRank=4.78343","systemWhenCreated":"2020-11-16 11:12:30","systemWhoCreated":"systemUnknown"},{"id":325,"category":"python","title":"Install Python and Tkinter on Ubuntu","body":"- these instructions get you up and running with Python3 on Ubuntu including Tkinter##theubuntupythoninstall\n- install\n\t- `sudo apt update`\n\t- `sudo apt install software-properties-common`\n\t- `sudo add-apt-repository ppa:deadsnakes/ppa`\n\t- `sudo apt update`\n\t- `sudo apt install python3.8`\n\t- `python3 --version`\n\t\t- should show: *Python 3.8.2*\n- test basic program\n\t- test.py\n\t\t-------------------\n\t\tprint(\"hello\")\n\t\t-------------------\n\t- `python3 test.py`\n- test tkinter\n\t- `sudo apt-get install python3-tk`\n\t- testtk.py\n\t\t---------------------\n\t\tfrom tkinter import *\n\t\twindow = Tk()\n\t\twindow.title(\"Test Tkinter App\")\n\t\twindow.mainloop()\n\t\t---------------------\n\t- `python3 testtk.py`","points":30,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2020-11-17 16:49:50","systemWhoCreated":"systemUnknown"},{"id":326,"category":"python","title":"Install Python on Windows","body":"- these instructions will get you up and running with Python and Tkinter on Windows##wintestpythontkinter\n- install\n\t- **NOTE: The easiest way to install Python on Windows 10 is, at the command line, type \"python\", it will take you into an install window, install, and you're done.**\n\t- https://www.python.org/downloads/windows\n\t- click latest version\n\t- download this one: *Windows x86-64 executable installer*\n\t- Install now\n- test basic program\n\t- test.py\n\t\t-------------------\n\t\tprint(\"hello\")\n\t\t-------------------\n\t- `python test.py`\n- test tkinter\n\t- Tkinter should be available by default\n\t- testtk.py (don't call it \"tkinter.py\", there will be a conflict)\n\t\t---------------------\n\t\tfrom tkinter import *\n\t\twindow = Tk()\n\t\twindow.title(\"Test Tkinter App\")\n\t\twindow.mainloop()\n\t\t---------------------\n\t- `python testtk.py`\n- trouble-shooting\n\t- if it can't start Python at the command line, or starts an older version (2.7 in my case)\n\t\t- Windows Settings\n\t\t- App and Features\n\t\t- Aliases for App Execution\n\t\t- turn off both Python entries\n\t\t- delete c:\\Python2.7\n\t\t- reinstall 3.9\n\t\t- modify install: click checkboxes to add environment variables\n\t\t- it then started python","points":30,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2020-11-18 09:50:55","systemWhoCreated":"systemUnknown"},{"id":327,"category":"python","title":"Convert Tkinter .py file to single executable .exe file","body":"- these instructions show you how to convert a Python-Tkinter *.py* file to an .exe file that you can execute by clicking an icon on your taskbar:##tkinterexeapp\n- create `tk_two_buttons_with_class.py`:\n\t--------------------------\n\tfrom tkinter import *\n\tfrom tkinter import ttk\n\n\tclass HelloApp:\n\n\t\tdef __init__(self, master):\n\n\t\t\tself.label = ttk.Label(master, text = \"English: house\")\n\t\t\tself.label.grid(row = 0, column = 0, columnspan = 2)\n\n\t\t\tttk.Button(master, text = \"German\",\n\t\t\t\t\t   command = self.german_hello).grid(row = 1, column = 0)\n\n\t\t\tttk.Button(master, text = \"French\",\n\t\t\t\t\t   command = self.french_hello).grid(row = 1, column = 1)\n\n\t\tdef german_hello(self):\n\t\t\tself.label.config(text = 'das Haus')\n\n\t\tdef french_hello(self):\n\t\t\tself.label.config(text = 'la maison')\n\n\tdef main():            \n\n\t\troot = Tk()\n\t\tapp = HelloApp(root)\n\t\troot.mainloop()\n\n\tif __name__ == \"__main__\": main()\n\t--------------------------\n- `pip install pinstaller`\n- `pyinstaller --onefile --noconsole tk_two-buttons_with_class.py`\n- copy the `dist/tk_two-buttons_with_class.exe` file to e.g. *c:\\apps*\n- right-click, pin to taskbar","points":70,"extras":"$rank=4.91;$generalRank=4.94545","systemWhenCreated":"2020-11-18 14:17:46","systemWhoCreated":"systemUnknown"},{"id":328,"category":"python","title":"Read data from MySQL with Python","body":"- I installed a MySQL 8.0 database and was able to connect to it easily with the following code, note when you install the connector, make sure you are in the command window as administrator:##thepythonmysqlok\n- open CMD as administrator\n\t- `python -m pip install mysql-connector-python`\n- create `test_mysql.py`\n\t---------------------------\n\timport mysql.connector\n\n\tmydb = mysql.connector.connect(\n\t\thost=\"localhost\",\n\t\tuser=\"root\",\n\t\tport=\"3307\",\n\t\tpassword=\"rootroot\",\n\t\tdatabase=\"onespace\"\n\t)\n\n\tmycursor = mydb.cursor()\n\n\tmycursor.execute(\"SELECT * FROM persons\")\n\n\tmyresult = mycursor.fetchall()\n\n\tfor x in myresult:\n\t\tprint(x)\n\t---------------------------","points":60,"extras":"$rank=4.78;$generalRank=4.9545","systemWhenCreated":"2020-11-19 01:55:52","systemWhoCreated":"systemUnknown"},{"id":329,"category":"MySQL","title":"Install MySQL 5.7.32 and MySQL Workbench on Windows and read data out with Python","body":"- these instructions show two failed attempts at installing MySQL, the problem was the Internet connection or proxy, etc. and the solution was to download the full MSI install file instead of the web version that goes back to the Internet to download parts it needs\n- note that MySQL 8.0 should can be installed the same way (with the full MSI file), but I chose the 5.7.32 version since I know it is more compatible with PHP 7.2##mysqlinstallandpython\n- **FAILED:** install MySQL 8.0\n\t- download MSI file\n\t\t- https://www.mysql.com/downloads\n\t\t- scroll down (difficult to find), click **MySQL Community (GPL) Downloads**\n\t\t- MySQL Community Server\n\t\t\t- or just go here: https://dev.mysql.com/downloads/mysql\n\t\t- click [[Go to Download Page]]\n\t\t- choose first option, **Windows (x86, 32-bit), MSI Installer** which is **2.5M**\n\t\t- click **No thanks, just start my download.**\n\t- install MySQL\n\t\t- execute the downloaded MSI file\n\t\t- choose **Developer Default**\n\t\t- click [[Execute]]\n\t\t\t- **error**: Download of package 'MySQL Server 8.0.22' failed with message No valid download found for product MySQL Server 8.0.22\n- **FAILED:** install MySQL 5.7.32 instead \n\t- download MSI file\n\t\t- click **Looking for the latest GA version?**\n\t\t- click **Windows (x86, 32-bit), MSI Installer - 5.7.32 - 2.5M** [[Download]]\n\t\t- click **No thanks, just start my download.**\n\t- install MySQL \n\t\t- double-click: mysql-installer-web-community-5.7.32.0.msi\n\t\t- choose **Developer Default**\n\t\t- [[Next]]\n\t\t- **SAME ERROR AS WITH MYSQL 8.0**##mysqlcantinstallload\n- install MySQL 5.7.32 **LARGER SIZE**\n\t- download MSI file\n\t\t- https://www.mysql.com/downloads\n\t\t- scroll down (difficult to find), click **MySQL Community (GPL) Downloads**\n\t\t- MySQL Community Server\n\t\t\t- or just go here: https://dev.mysql.com/downloads/mysql\n\t\t- click [[Go to Download Page]]\n\t\t- choose first option, **Windows (x86, 32-bit), MSI Installer - 5.7.32** which is **487.5M**\n\t\t- click **No thanks, just start my download.**\n\t- install MySQL\n\t\t- double-click: mysql-installer-community-5.7.32.0 (**499 MB**)\n\t\t- choose **Developer Default** [[Next]]\n\t\t- All products should say \"Ready to Install\": [[Execute]]\n\t\t\t- takes 10 minutes to install\n\t\t- [[Next]]\n\t\t- [[Next]]\n\t\t- Leave as **Development Computer** and **3306** [[Next]]\n\t\t- root password: `rootroot` \n\t\t- [[Next]]\n\t\t- leave name as **MySQL57** [[Next]]\n\t\t- [[Next]]\n\t\t- [[Execute]] etc. (allow it to install everything, e.g. samples etc.)\n- MySQL Workbench \n\t- should be installed installed\n\t- login\n\t- check to make sure it installed the schema (database) \"world\" and has a table \"city\"\n- read MySQL data from Python\n\t- open CMD as administrator\n\t\t- `python -m pip install mysql-connector-python`\n\t- testmysql.py\n\t\t---------------------------\n\t\timport mysql.connector\n\n\t\tmydb = mysql.connector.connect(\n\t\t\thost=\"localhost\",\n\t\t\tuser=\"root\",\n\t\t\tport=\"3306\",\n\t\t\tpassword=\"rootroot\",\n\t\t\tdatabase=\"world\"\n\t\t)\n\n\t\tmycursor = mydb.cursor()\n\n\t\tmycursor.execute(\"SELECT * FROM city\")\n\n\t\tmyresult = mycursor.fetchall()\n\n\t\tfor x in myresult:\n\t\t\tprint(x)\n\t\t---------------------------","points":20,"extras":"$rank=4.783;$generalRank=4.81212","systemWhenCreated":"2020-11-19 10:37:15","systemWhoCreated":"systemUnknown"},{"id":330,"category":"Deno","title":"Install Deno with Chocolately and get running with Oak","body":"- these instructions show you how to install the package manager Chocolately on Windows, and then use it to install Deno##denoChocolately\n- install Chocolately\n\t- open command prompt window as administrator\n\t- `@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"`\n\t- exit command prompt window\n- install Deno\n\t- open command prompt window as administrator again\n\t- `choco install deno`\n- test Deno\n\t- create directory \"deno222\"\n\t- open in VSCode\n\t- create `test.ts`\n\t\t---------------------\n\t\tlet firstName: string = \"Pietro\";\n\t\tconsole.log(firstName);\n\t\t---------------------\n\t- execute it with `deno run test.ts`\n- test Oak\n\t- like Express but inspired by Koa\n\t- create `server.ts`\n\t\t-------------------------------\n\t\timport { Application } from \"https://deno.land/x/oak/mod.ts\";\n\n\t\tconst app = new Application();\n\t\tconst url = \"127.0.0.1:8003\";\n\n\t\tapp.use((ctx) => {\n\t\t\tctx.response.body = \"Hello world.\";\n\t\t});\n\n\t\tconsole.log(`Listening at: http://${url}`);\n\t\tawait app.listen(url);\n\t\t-------------------------------\n\t- execute with `deno run --allow-net server.ts`","points":50,"extras":"$rank=4.54;$generalRank=4.65","systemWhenCreated":"2020-11-21 13:07:29","systemWhoCreated":"systemUnknown"},{"id":331,"category":"PHP","title":"New features in PHP 7.4","body":"- This PHP file demonstrates the major new features in PHP 4.7: arrow functions, typed class properties, typed class properties, improved type variance, null coalescing assignment operator, numeric literal separator, array spread operator, and foreign function interface (FFI)##php74ArrowFunctions\n- index.php \n\t-------------------------------------------\n\t<?php\n\techo '<h1>New in PHP 7.4</h1>';\n\techo '<p>PHP 7.4 was released in November 2019</p>';\n\n\t// ======================================\n\techo '<h2>Arrow Functions</h2>';\n\t// ======================================\n\techo '<pre>';\n\n\t// before PHP 7.4\n\tfunction multiplier($v) {\n\t  return($v*$v);\n\t}\n\t$a=array(1,2,3,4,5);\n\tprint_r(array_map(\"multiplier\",$a));\n\n\t// PHP 7.4\n\tprint_r(array_map(fn($v) => $v*$v, $a));\n\n\techo '</pre>';\n\n\t// ======================================\n\techo '<h2>Typed Class Properties</h2>';\n\t// ======================================\n\techo '<pre>';\n\tclass Person {\n\t\tpublic string $firstName;\n\t\tpublic string $lastName;\n\t\tpublic int $score;\n\t}\n\n\t$person = new Person();\n\t$person->firstName = \"Harry\";\n\t$person->lastName = \"Harlow\";\n\t// Fatal error:  Uncaught TypeError: Typed property Person;$score must be int, string used \n\t// $person->score = \"nnn\";\n\t$person->score = 50;\n\n\tprint_r($person);\n\techo '</pre>';\n\n\n\t// ======================================\n\techo '<h2>Improved Type Variance</h2>';\n\t// ======================================\n\techo '<pre>';\n\n\tabstract class Animal\n\t{\n\t\tprotected string $name;\n\n\t\tpublic function __construct(string $name)\n\t\t{\n\t\t\t$this->name = $name;\n\t\t}\n\n\t\tabstract public function speak();\n\t}\n\n\tclass Dog extends Animal\n\t{\n\t\tpublic function speak()\n\t\t{\n\t\t\techo $this->name . \" barks\";\n\t\t}\n\t}\n\n\tclass Cat extends Animal \n\t{\n\t\tpublic function speak()\n\t\t{\n\t\t\techo $this->name . \" meows\";\n\t\t}\n\t}\n\n\tinterface AnimalShelter\n\t{\n\t\tpublic function adopt(string $name): Animal;\n\t}\n\n\tclass CatShelter implements AnimalShelter\n\t{\n\t\t// we can now return Dog instead of Animal\n\t\tpublic function adopt(string $name): Cat \n\t\t{\n\t\t\treturn new Cat($name);\n\t\t}\n\t}\n\n\tclass DogShelter implements AnimalShelter\n\t{\n\t\t// we can now return Dog instead of Animal\n\t\tpublic function adopt(string $name): Dog \n\t\t{\n\t\t\treturn new Dog($name);\n\t\t}\n\t}\n\n\t$cat = (new CatShelter)->adopt(\"Fluffy\");\n\t$cat->speak();\n\techo \"\\n\";\n\n\t$dog = (new DogShelter)->adopt(\"Spot\");\n\t$dog->speak();\n\techo '</pre>';\n\n\n\t// ======================================\n\techo '<h2>Null Coalescing Assignment Operator</h2>';\n\t// ======================================\n\techo '<pre>';\n\t$messages = [\n\t\t\"warning\" => \"This is a warning.\",\n\t\t\"error\" => \"This is an error.\"\n\t];\n\t$messages['warning'] ??= \"(default message)\";\n\t$messages['title'] ??= \"(default message)\";\n\tprint_r($messages['warning']);\n\tprint_r(\"\\n\");\n\tprint_r($messages['title']);\n\techo '</pre>';\n\n\n\t// ======================================\n\techo '<h2>Numeric Literal Separator</h2>';\n\t// ======================================\n\techo '<pre>';\n\t$number1 = 8374928347;\n\t$number2 = 8_374_928_347; // underlines make it easier to read\n\tprint_r($number1 + 1);\n\tprint_r(\"\\n\");\n\tprint_r($number2 + 1);\n\techo '</pre>';\n\n\n\t// ======================================\n\techo '<h2>Array Spread Operator</h2>';\n\t// ======================================\n\techo '<pre>';\n\t$firstNumbers = [1, 2, 3];\n\t$middleNumbers = [4, 5];\n\t$result = [0, ...$firstNumbers, ...$middleNumbers, 6 ,7];\n\tprint_r($result);\n\techo '</pre>';\n\n\t// ======================================\n\techo '<h2>Foreign Function Interface (FFI)</h2>';\n\t// ======================================\n\techo \"FFI allows the loading of shared libraries (.DLL or .so), calling of C functions, and accessing of C data structures in pure PHP, without having to have deep knowledge of the Zend extension API. Enables PHP extensions could be written in pure PHP and loaded via Composer. See <a href=\\\"https://www.php.net/manual/en/ffi.examples-basic.php\\\">examples</a>.\";\n\t-------------------------------------------","points":100,"extras":"$rank=2.9;$generalRank=3.6","systemWhenCreated":"2020-11-21 18:00:15","systemWhoCreated":"systemUnknown"},{"id":332,"category":"Svelte","title":"Create a Svelte website and publish it at Netlify","body":"- these instructions show you how to set up a basic Svelte website locally, edit it, upload it to GitHub, and publish it to Netlify##svelteInstallNetlify\n- setup and run simple search site\n\t- change to your apps directory\n\t- goto command prompt\n\t- `npx degit sveltejs/template svelte33`\n\t- open VSCode to `svelte33`\n\t- `npm install`\n\t- `npm run dev`\n\t- in browser, go to `http://localhost:5000`\n\t- in VSCode, install extensions: Svelte, Svelte Intellisense, and Svelte 3 Snippets\n- make change to application\n\t- `main.js`\n\t\t- in props, add: `message: \"This is a message.`\n\t- `App.svelte`\n\t\t- in script, add: `export let message`\n\t\t- in <main>, add: `<p>Message: <b>{message}</b></p>`\n- upload to GitHub\n\t- `git add .`\n\t- `git commit -m \"first commit\"`\n\t- at GitHub, create project *svelte33*\n\t- copy and execute code in section **...or push an existing repository from the command line**\n- publish at Netlify\n\t- get account or sign in at http://www.netlify.com\n\t- [[New site from Git]]\n\t- [[GitHub]]\n\t- click on `svelte33`\n\t- Build command: `npm run build`\n\t- Publish directory: `public`\n\t- [[Deploy site]]\n\t- [[Site settings]]\n\t- [[Change site name]]\n\t- `svelte33`\n\t- https://svelte33.netlify.app","points":100,"extras":"$rank=4.6;$generalRank=4.909","systemWhenCreated":"2020-11-22 00:05:03","systemWhoCreated":"systemUnknown"},{"id":333,"category":"Svelte","title":"Add Bootstrap, SASS and PostCSS to a Svelte project","body":"- these instructions will get Boostrap and SASS working in a Svelte project although VSCode shows a non-existent error##theScssSvelteError\n- `npm i -D bootstrap node-sass postcss svelte-preprocess`\n- rollup.config.js\n\t- add: `import autoPreprocess from 'svelte-preprocess'`\n\t- add to Plugins/svelte: `import autoPreprocess from 'svelte-preprocess'`\n- fix problem\n\t- `npm i -D --unsafe-perm node-sass`\n- App.svelte\n\t- add:\t\n\t\t----------------------------\n\t\t<style lang=\"scss\">\n\t\t\t$mainColor: green;\n\t\t\t@import \"../node_modules/bootstrap/scss/bootstrap.scss\";\n\n\t\tcolor: $mainColor;\n\t\tcolor: $primary; // or $warn, etc. the Bootstrap default colors, which can be overridden as well\n\t\t----------------------------\n- it gets an error at `global lang=\"scss\"` in Visual Studio Code, but the code still works","points":30,"extras":"$rank=2.9;$generalRank=3.6","systemWhenCreated":"2020-11-22 12:28:15","systemWhoCreated":"systemUnknown"},{"id":334,"category":"linux","title":"Set up a cronjob that executes a script which writes to a log file","body":"- these instructions show you how to create an executable bash script and set up a cronjob to run execute it every 5 minutes on Ubuntu##cronjobnew22\n- /home/test/scripts/write_mainlog.txt\n\t--------------------------------------\n\ttouch /home/test/logs/mainlog.txt\n\techo \"test\" >> /home/test/logs/mainlog.txt\n\t--------------------------------------\n- make it executable: \n\t- `chmod +x write_mainlog.txt`\n- `sudo vim /etc/crontab`\n\t- add this line\n\t\t- `*/5 * * * * root /home/test/scripts/write_mainlog.sh`\n- monitor it: `sudo tail -f /var/log/syslog`","points":50,"extras":"$rank=4.3;$generalRank=4.896","systemWhenCreated":"2020-11-23 16:29:56","systemWhoCreated":"systemUnknown"},{"id":335,"category":"Vue.js","title":"Upgrade basic Vue.js 2 code to Vue.js 3","body":"- there are a number of differences that you have to be aware of when upgrading Vue.js 2 to 3\n- note in particular that to call methods inside the app class, you have to now call them on the variable returned from mount()##vue2vue3differences\n- Vue.js 2 code:\n\t------------------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t\t<title>test</title>\n\t\t<style>\n\t\t\t.information {\n\t\t\t\tcolor: green;\n\t\t\t\tmargin: 10px; \n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div class=\"information\">{{message}}</div>\n\t\t\t<button @click=\"changeTheText\">Change the Text</button>\n\t\t</div>\n\n\t\t<script>\n\t\t\tconst app = new Vue({\n\t\t\t\tel: \"#app\",\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: ''\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize: function () {\n\t\t\t\t\t\tthis.message = 'original value';\n\t\t\t\t\t},\n\t\t\t\t\tchangeTheText: function () {\n\t\t\t\t\t\tthis.message = 'you clicked the button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tapp.initialize();\n\t\t</script>\n\t</body>\n\n\t</html>\n\t------------------------------------\n- Vue.js 3 code:\n\t------------------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<script src=\"https://unpkg.com/vue@next\"></script>\n\t\t<title>test</title>\n\t\t<style>\n\t\t\t.information {\n\t\t\t\tcolor: green;\n\t\t\t\tmargin: 10px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div class=\"information\">{{message}}</div>\n\t\t\t<button @click=\"changeTheText\">Change the Text</button>\n\t\t</div>\n\n\t\t<script>\n\t\t\tconst app = Vue.createApp({\n\t\t\t\tdata() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessage: ''\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize() {\n\t\t\t\t\t\tthis.message = 'original value';\n\t\t\t\t\t},\n\t\t\t\t\tchangeTheText() {\n\t\t\t\t\t\tthis.message = 'you clicked the button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst vm = app.mount('#app'); \n\t\t\tvm.initialize();\n\t\t</script>\n\t</body>\n\n\t</html>\n\t------------------------------------","points":70,"extras":"$rank=4.81;$generalRank=4.9823","systemWhenCreated":"2020-11-27 18:06:22","systemWhoCreated":"systemUnknown"},{"id":336,"category":"Vue.js","title":"Use Vue.js CSS animations to bounce in an image","body":"- this code shows you how to make an image bounce in when a button is pressed:##theBounceInImage\n- index.html\n\t-----------------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<script src=\"https://unpkg.com/vue@next\"></script>\n\t\t<title>test</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t\t.theImage {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin: 10px 0 0 0;\n\t\t\t}\n\n\t\t\t.bounce-enter-active {\n\t\t\t\tanimation: bounce-in 0.5s;\n\t\t\t}\n\n\t\t\t@keyframes bounce-in {\n\t\t\t\t0% {\n\t\t\t\t\ttransform: scale(0);\n\t\t\t\t}\n\t\t\t\t50% {\n\t\t\t\t\ttransform: scale(1.25);\n\t\t\t\t}\n\t\t\t\t100% {\n\t\t\t\t\ttransform: scale(1);\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<button @click=\"showTheImage()\">Show Akbar</button>\n\t\t\t<transition name=\"bounce\">\n\t\t\t\t<img v-show=\"showImage\" class=\"theImage\" src=\"akbar.jpg\"/>\n\t\t\t</transition>\n\t\t</div>\n\n\t\t<script>\n\t\t\tconst app = Vue.createApp({\n\t\t\t\tdata() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tshowImage: false \n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tshowTheImage() {\n\t\t\t\t\t\tthis.showImage = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst vm = app.mount('#app');\n\t\t</script>\n\t</body>\n\n\t</html>\n\t-----------------------------------","points":60,"extras":"$rank=4.7;$generalRank=4.9544;$idCode=bounceInImage","systemWhenCreated":"2020-11-27 23:06:28","systemWhoCreated":"systemUnknown"},{"id":337,"category":"Parcel","title":"Create Parcel/Vue2/Bootstrap4/Sass/TypeScript Site at Netlify","body":"- these instructions show you how easy Parcel is at enabling and bundling multiple technologies into a site\n- you set up the basic site at CreateApp, then add a TypeScript class, a Sass file, a Vue component, a GitHub repository, and an automatic-publish site at Netlify##parcelandBundle\n- (optional: as comparison to CreateApp below) setup minimal bundling site\n\t- `npm i -g parcel-bundler`\n\t- `npm init -y`\n\t- `git init`\n\t- index.html\t\n\t\t------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\"> \n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> \n\t\t\t<title>parcel test</title>\n\t\t</head>\n\t\t<body>\n\t\t\t<script src=\"./index.js\"></script>\n\t\t</body>\n\t\t</html>\n\t\t------------------\n\t- index.js\n\t\t-----------------------\n\t\tconsole.log('test');\n\t\t-----------------------\n\t- `parcel index.html`\n\t\t- builds to /dist\n\t- in browser: `http://localhost:1234`\n\t- changes to HTML and JavaScript file are reflected immediately\n\t- about.html\n\t\t- with link to index and back\n\t- in package.json\n\t\t-------------------------\n\t\t\"scripts\": {\n\t\t\t\"dev\": \"parcel index.html\",\n\t\t\t\"build\": \"parcel build index.html\"\n\t\t},\n\t\t-------------------------\n\t- `npm run dev`\n\t- `npm run build`\n- use CreateApp to create Vue2/Bootstrap4/Sass/TypeScript site\n\t- create basic site\n\t\t- https://createapp.dev/parcel\n\t\t- Vue, Bootstrap, TypeScript, Sass\n\t\t- download, copy to `parcelvue333`\n\t\t- `npm install`\n\t\t- `npm start`\n\t\t\t- takes few minutes first time\n\t\t- in browser: `http://localhost:1234`\n\t\t- changes are reflected immediately\n\t\t- make it erase dist folder each time\n\t\t\t- `npm i -D parcel-plugin-nuke-dist`\n\t\t\t- `npm start`\n\t- TypeScript\n\t\t- src\\qtools\\qstr.ts\n\t\t\t------------------\n\t\t\timport * as qstr from './qstr';\n\t\t\tconst Markdown = require(\"markdown\").markdown;\n\n\n\t\t\t/**\n\t\t\t * Capitalize the first letter of a string.\n\t\t\t * \n\t\t\t * qstr.capitalizeFirstLetter(\"this is a sentence.\"); \n\t\t\t * \n\t\t\t * \"This is a sentence.\"\n\t\t\t */\n\t\t\texport const capitalizeFirstLetter = (line: string) => {\n\t\t\t\treturn line.charAt(0).toUpperCase() + line.slice(1);\n\t\t\t}\n\t\t\t------------------\n\t\t- src\\App.vue\n\t\t\t---------------------------\n\t\t\t  data: function () {\n\t\t\t\treturn {\n\t\t\t\t  name: qstr.capitalizeFirstLetter('testing')\n\t\t\t\t};\n\t\t\t  },\n\t\t\t---------------------------\n\t- Bootstrap 4\n\t\t- src\\App.vue\n\t\t\t--------------------------\n\t\t\t<div class=\"card m-3 informationArea\">\n\t\t\t  <div class=\"card-header\">Information</div>\n\t\t\t  <div class=\"card-body\">\n\t\t\t\t<h5 class=\"card-title\">New information about this site:</h5>\n\t\t\t\t<p class=\"card-text\">Here is some information.</p>\n\t\t\t\t<a href=\"#\" class=\"btn btn-primary\">More Info</a>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t--------------------------\n\t- Sass\n\t\t- src\\App.vue, change local Sass to dark green\n\t\t\t--------------------------\n\t\t\t<style lang=\"scss\">\n\t\t\t\t$primary-color: white;\n\t\t\t\t$bg: darkgreen\n\t\t\t--------------------------\n\t\t- src\\styles.scss, replace content with \n\t\t\t---------------------------\n\t\t\t.informationArea {\n\t\t\t\t.card-header {\n\t\t\t\t\tbackground-color: #ddd !important;\n\t\t\t\t}\n\t\t\t\t.card-title {\n\t\t\t\t\tfont-variant: small-caps;\n\t\t\t\t}\n\t\t\t\t.card-body {\n\t\t\t\t\ta.btn {\n\t\t\t\t\t\tbackground-color: #ddd !important;\n\t\t\t\t\t\tborder: 1px solid #999;\n\t\t\t\t\t\tcolor: #555;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t---------------------------\n\t- Vue\n\t\t- src\\components\\ShowFlashcard.vue\n\t\t\t------------------------\n\t\t\t<template>\n\t\t\t  <div class=\"showArea\">\n\t\t\t\t<div @click=\"toggleShow()\" class=\"showInfo\">{{ front }}</div>\n\t\t\t\t<div v-show=\"isShowing\" class=\"info\">{{ back }}</div>\n\t\t\t  </div>\n\t\t\t</template>\n\t\t\t<script>\n\t\t\texport default {\n\t\t\t  props: {\n\t\t\t\tfront: String,\n\t\t\t\tback: String,\n\t\t\t  },\n\t\t\t  data() {\n\t\t\t\treturn {\n\t\t\t\t  info: \"This is the info.\",\n\t\t\t\t  isShowing: false,\n\t\t\t\t};\n\t\t\t  },\n\t\t\t  methods: {\n\t\t\t\ttoggleShow() {\n\t\t\t\t  this.isShowing = !this.isShowing;\n\t\t\t\t},\n\t\t\t  },\n\t\t\t};\n\t\t\t</script>\n\n\t\t\t<style lang=\"scss\">\n\t\t\t.showArea {\n\t\t\t  width: 300px;\n\t\t\t  .showInfo {\n\t\t\t\tbackground-color: #ccc;\n\t\t\t\tcursor: pointer;\n\t\t\t\tpadding: 3px;\n\t\t\t  }\n\t\t\t  .info {\n\t\t\t\tbackground-color: #eee;\n\t\t\t\tpadding: 3px;\n\t\t\t  }\n\t\t\t}\n\t\t\t</style>\n\t\t\t------------------------\n\t\t- src\\App.vue\n\t\t\t----------------------------\n\t\t    <show-flashcard\n\t\t\t  class=\"m-3\"\n\t\t\t  v-for=\"(item,index) in flashcards\"\n\t\t\t  :front=\"item.front\"\n\t\t\t  :back=\"item.back\"\n\t\t\t  :key=\"index\"\n\t\t\t></show-flashcard>\n\n\t\t\tdata: function () {\n\t\t\t\treturn {\n\t\t\t\t  name: qstr.capitalizeFirstLetter(\"testing\"),\n\t\t\t\t  flashcards: [\n\t\t\t\t\t{\n\t\t\t\t\t  front: \"house\",\n\t\t\t\t\t  back: \"das Haus\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t  front: \"pen\",\n\t\t\t\t\t  back: \"der Stift\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t  front: \"cup\",\n\t\t\t\t\t  back: \"die Tasse\",\n\t\t\t\t\t},\n\t\t\t\t  ],\n\t\t\t\t};\n\t\t\t  },\n\t\t\t----------------------------\n\t- set up and push to GitHub\n\t\t- `git init`\n\t\t- `git add .`\n\t\t- `git commit -m \"init comment\"`\n\t\t- create at GitHub: `parcelvue333`\n\t\t- copy *push an existing repository* code and paste\n\t\t- \n\t- publish at Netlify\n\t\t- get account or sign in at http://www.netlify.com\n\t\t- [[New site from Git]]\n\t\t- [[GitHub]]\n\t\t- click on `parcelvue333`\n\t\t- Build command: `npm run build-prod`\n\t\t- Publish directory: `dist`\n\t\t- [[Deploy site]]\n\t\t- [[Site settings]]\n\t\t- [[Change site name]]\n\t\t- `parcelvue333`\n\t\t- https://parcelvue333.netlify.app","points":120,"extras":"$rank=4.3;$generalRank=4.98232","systemWhenCreated":"2020-11-30 14:30:04","systemWhoCreated":"systemUnknown"},{"id":338,"category":"NestJS","title":"Set up a NestJS controller","body":"- if you have never set up a NestJS site before, this will get you up to the point where you can test a GET and POST on a controller with Postman##theNextjsAndDo\n- set up basic site\n\t- make sure that Node.js (>= 10.13.0) is installed on your operating system\n\t- go to your apps directory\n\t- `npm i -g @nestjs/cli`\n\t- `nest new nestjs333` (where **nesjs333** is the name of your app/directory/github name)\n\t\t- npm\n\t- in package.json, change to: \"start\": \"nest start --watch\",\n\t- `npm start`\n\t\t- it shows \"Hello world\" but and will recompile on changes, but you have to reload the browser\n- create controller\n\t- `nest g controller flashcards`\n\t- replace content in: src\\flashcards\\flashcards.controller.ts\n\t\t----------------------------\n\t\timport { Controller, Get, Req } from '@nestjs/common';\n\t\timport { Request } from 'express';\n\n\t\t@Controller('flashcards')\n\t\texport class FlashcardsController {\n\t\t  @Get()\n\t\t  findAll(@Req() request: Request): string {\n\t\t\treturn 'This shows all flashcards';\n\t\t  }\n\t\t}\n\t\t----------------------------\n\t- goto: `http://localhost:3000/flashcards`\n- add post and get to controller\n\t- replace content in: src\\flashcards\\flashcards.controller.ts\n\t\t----------------------------\n\t\timport { Controller, Get, Post } from '@nestjs/common';\n\n\t\t@Controller('flashcards')\n\t\texport class FlashcardsController {\n\t\t\t@Post()\n\t\t\tcreate(): string {\n\t\t\t\treturn 'This action adds a new flashcard';\n\t\t\t}\n\n\t\t\t@Get()\n\t\t\tfindAll(): string {\n\t\t\t\treturn 'This action returns all flashcards';\n\t\t\t}\n\n\t\t\t@Get(':id')\n\t\t\tfindOne(@Param('id') id: string) {\n\t\t\t\treturn `This action returns a #${id} flashcard`;\n\t\t\t}\t\t\t\n\t\t}\n\t\t----------------------------\n\t- use Postman to GET and POST to \n\t\t- `http://localhost:3000/flashcards`\n\t\t- `http://localhost:3000/flashcards/34`","points":60,"extras":"$rank=4.2;$generalRank=4.76767","systemWhenCreated":"2020-11-30 17:37:33","systemWhoCreated":"systemUnknown"},{"id":339,"category":"Vue.js","title":"Simple Vue.js 2 example with components in single files","body":"- notes that there are two kinds of components, `Vue.component('dp-notice'...` and `const flashcardComponent =...`:##vue2Components\n- index.html\n\t-----------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.4/vue.js\"></script>\n\t\t<title>Vue Basic</title>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div>[{{message}}]</div>\n\t\t\t<div>\n\t\t\t\t<flashcard-component front=\"fff\"\n\t\t\t\t\t\t\t\t\t back=\"bbb\"></flashcard-component>\n\t\t\t</div>\n\t\t\t<dp-notice message=\"Press the A key.\"></dp-notice>\n\t\t\t<dp-notice message=\"Log out when finished.\"></dp-notice>\n\t\t\t<dp-notice></dp-notice>\n\t\t</div>\n\t\t<script src=\"components/Flashcard.js\"></script>\n\t\t<script src=\"components/DpNotice.js\"></script>\n\t\t<script src=\"main.js\"></script>\n\t</body>\n\n\t</html>\n\t-----------------------------------\n- Flashcard.js\n\t----------------------------------------\n\tconst flashcardComponent = {\n\t\tdata: function () {\n\t\t\treturn {\n\t\t\t\tfront: 'house',\n\t\t\t\tback: 'Haus'\n\t\t\t}\n\t\t},\n\t\tprops: ['front', 'back'],\n\t\ttemplate: '<div><div>{{front}} / {{back}}</div></div>'\n\t};\n\t----------------------------------------\n- DpNotice.js\n\t----------------------------------------\n\tVue.component('dp-notice', {\n\t\tprops: ['message'],\n\t\ttemplate: '<div>This is the notice: {{message || \"(no message)\"}}</div>'\n\t});\n\t----------------------------------------","points":100,"extras":"$rank=4.3454;$generalRank=4.9454;$idCode=components2multipleFiles","systemWhenCreated":"2020-12-01 22:53:36","systemWhoCreated":"systemUnknown"},{"id":340,"category":"D3.js","title":"Interactive bar graph with D3.js, Vue.js 3.0 and Bulma","body":"- Note that after changing the Vue.js variables, you have to reinitialize the drawing of the D3.js graphic, which empties the content of the element and redraws.##vue3d3jsbulma\n- index.html\n\t-----------------------------------\n\t<!DOCTYPE html>\n\n\t<head>\n\t\t<title>test simple bar graph</title>\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n\t\t<script src=\"https://unpkg.com/vue@next\"></script>\n\t\t<script type=\"text/javascript\" src=\"d3v6.2.0.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css\">\n\t\t<style>\n\t\t\t.area {\n\t\t\t\twidth: 600px;\n\t\t\t\theight: 400px;\n\t\t\t\tbackground-color: #eee;\n\t\t\t}\n\n\t\t\t.controls {\n\t\t\t\tmargin: 10px 2px;\n\t\t\t}\n\n\t\t\t.colorControls button {\n\t\t\t\tmargin-right: 5px;\n\t\t\t}\n\n\t\t\t.colorControls {\n\t\t\t\tmargin-bottom: 5px;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: flex-start;\n\t\t\t}\n\n\t\t\t.sliderControls {\n\t\t\t\tmargin-bottom: 5px;\n\t\t\t}\n\n\t\t\t.sliderControls .label {\n\t\t\t\tmargin-right: 5px;\n\t\t\t\tmargin-top: -1px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\n\t\t\t}\n\t\t\t.spaceBetween {\n\t\t\t\tmargin-left: 3px;\n\t\t\t}\n\n\t\t\t.control {\n\t\t\t\tdisplay:flex;\n\t\t\t}\n\n\t\t\tbutton.custom-green {\n\t\t\t\tbackground-color: green !important;\n\t\t\t}\n\n\t\t\tbutton.custom-orange {\n\t\t\t\tbackground-color: orange !important;\n\t\t\t}\n\t\t\tbody {\n\t\t\t\tpadding: 15px 20px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\" class=\"controls\">\n\t\t\t<div class=\"colorControls\">\n\t\t\t\t<button @click=\"changeColor('orange')\" class=\"button is-primary is-small custom-orange\">Orange</button>\n\t\t\t\t<button @click=\"changeColor('green')\" class=\"button is-primary is-small custom-green\">Green</button>\n\t\t\t</div>\n\t\t\t<div class=\"sliderControls\">\n\t\t\t\t<div class=\"control\"><span class=\"label\">Space between columns:</span><input type=\"range\" min=\"2\" max=\"20\"\n\t\t\t\t\t\tv-model=\"spaceBetweenColumns\" @change=\"changeSpaceBetweenColumns()\"> <span class=\"label spaceBetween\">{{spaceBetweenColumns}}</span></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"area\"></div>\n\t\t<script>\n\t\t\tconst app = Vue.createApp({\n\t\t\t\tdata() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tleftIndent: 20,\n\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\tspaceBetweenColumns: 7\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize() {\n\t\t\t\t\t\tthis.message = 'original value';\n\t\t\t\t\t\tvar dataArray = [5, 11, 18, 20, 3, 5, 7];\n\t\t\t\t\t\td3.select(\".area\").html(\"\");\n\t\t\t\t\t\tvar svg = d3.select(\".area\").append(\"svg\").attr(\"height\", \"100%\").attr(\"width\", \"100%\");\n\t\t\t\t\t\tsvg.selectAll(\"rect\")\n\t\t\t\t\t\t\t.data(dataArray)\n\t\t\t\t\t\t\t.enter().append(\"rect\")\n\t\t\t\t\t\t\t.attr(\"height\", function (d, i) { return d * 15; })\n\t\t\t\t\t\t\t.attr(\"width\", \"50\")\n\t\t\t\t\t\t\t.attr(\"fill\", this.color)\n\t\t\t\t\t\t\t.attr(\"x\", (d, i) => ((60 + parseInt(this.spaceBetweenColumns)) * i) + this.leftIndent)\n\t\t\t\t\t\t\t.attr(\"y\", (d, i) => 380 - (d * 15));\n\t\t\t\t\t},\n\t\t\t\t\tchangeColor(color) {\n\t\t\t\t\t\tthis.color = color;\n\t\t\t\t\t\tthis.initialize();\n\t\t\t\t\t},\n\t\t\t\t\tchangeSpaceBetweenColumns() {\n\t\t\t\t\t\tthis.initialize();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst vm = app.mount('#app');\n\t\t\tvm.initialize();\n\n\t\t</script>\n\t</body>\n\n\t</html>\n\t-----------------------------------","points":70,"extras":"$rank=4.5;$generalRank=4.964646;$idCode=d3jsGraph","systemWhenCreated":"2020-12-02 17:05:29","systemWhoCreated":"systemUnknown"},{"id":341,"category":"MongoDB","title":"Install MongoDB on Ubuntu 20.04","body":"- these instructions are a fast track to installing MongoDB 4.2 on Ubuntu 20.04##installMongoUbuntu2004\n- install\n\t- prepare MongoDB install\n\t\t- `sudo apt install curl`\n\t\t- `curl -fsSL https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -`\n\t\t- `echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list`\n\t\t- `sudo apt update`\n\t- install MongoDB\n\t\t- `sudo apt install mongodb-org`\n\t- start and check MongoDB service\n\t\t- `sudo systemctl start mongod.service`\n\t\t- `sudo systemctl status mongod`\n\t- enable to start up at boot\n\t\t- `sudo systemctl enable mongod`\n\t- check version\n\t\t- `mongo --eval 'db.runCommand({ connectionStatus: 1 })'`\n\t- stop and start\n\t\t- `sudo systemctl stop mongod`\n\t\t- `sudo systemctl status mongod`\n\t\t- `sudo systemctl start mongod`\n\t\t- `sudo systemctl status mongod`\n- info\n\t- Mongo files\n\t\t- `ls /var/lib/mongodb`\n\t\t- `sudo cat /var/log/mongodb/mongod.log`\n\t\t- `sudo cat /etc/mongod.conf`\n- add user and security\n\t- `mongo`\n\t- `help`\n\t- `show databases`\n\t- `use admin`\n\t- `show collections`\n\t- add user\n\t\t---------------------------------------\n\t\tdb.createUser(\n\t\t\t{\n\t\t\t\tuser: \"adminuser\",\n\t\t\t\tpwd: \"pass\",\n\t\t\t\troles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" }, \"readWriteAnyDatabase\" ]\n\t\t\t}\n\t\t)\n\t\t---------------------------------------\n\t- `show collections`\n\t- `exit`\n\t- `sudo systemctl stop mongod`\n\t- `sudo vim /etc/mongod.conf`\n\t\t- under \"#security:\"\n\t\t-------------------------\n\t\tsecurity:\n\t\t\tauthorization: enabled\n\t\t-------------------------\n\t- `sudo systemctl start mongod`\n\t- `mongo -u adminuser`\n\t- `use admin`\n\t- `show collections`","points":50,"extras":"$rank=4.9","systemWhenCreated":"2020-12-03 15:24:48","systemWhoCreated":"systemUnknown"},{"id":342,"category":"JavaScript","title":"Four JavaScript Tips for arrays and regex search","body":"- note the rest operator and the use of global in the regex search##tehfourtipsoks\n\t-------------------------\n\t// extract unique values\n\tconst scores = [2,5,6,7,7,8,10,11,11,45,233,244,244];\n\tconst unique_scores = [...new Set(scores)];\n\tconsole.log(unique_scores);\n\n\t// flatten a multidimensional array\n\tconst coordinates = [[0,0], [1,5], [6,6], [9,7]];\n\tconst allPoints = [].concat(...coordinates);\n\tconsole.log(allPoints);\n\n\t// replace all\n\tconst message = \"There are colors and more colors and colors after that.\";\n\tconst britishMessage = message.replace(/color/g, \"colour\");\n\tconsole.log(britishMessage);\n\n\t// resize or empty an array\n\tlet ids = [0,4,6,7,9,11];\n\tconsole.log(ids);\n\tids.length = 3;\n\tconsole.log(ids);\n\tids.length = 0;\n\tconsole.log(ids);\n\t-------------------------","points":30,"extras":"$rank=4.66;$generalRank=4.892","systemWhenCreated":"2020-12-08 14:31:56","systemWhoCreated":"systemUnknown"},{"id":344,"category":"JavaScript","title":"Four syntax variations for JavaScript functions","body":"- note that each of these four syntax variations function identically\n- the last two are ECMAScript 6 arrow notation##javascriptFourFunctions\n\t-----------------------------------------------\n\tfunction add(a, b) {\n\t\treturn a + b;\n\t}\n\n\tconst addv2 = function(a, b) {\n\t\treturn a + b;\n\t}\n\n\tconst addv3 = (a, b) => {\n\t\treturn a + b;\n\t}\n\n\tconst addv4 = (a, b) => a + b;\n\n\tconsole.log(add(2,3));\n\tconsole.log(addv2(2,3));\n\tconsole.log(addv3(2,3));\n\tconsole.log(addv4(2,3));\n\t-----------------------------------------------","points":30,"extras":"$rank=4.8;$generalRank=4.4;$jsfiddle=nd8qfx6L","systemWhenCreated":"2020-12-12 12:19:12","systemWhoCreated":"systemUnknown"},{"id":345,"category":"JavaScript","title":"Local vs. global variables","body":"- variables defined inside a function are not available outside the function##localjajajscript\n\t----------------------------\n\tlet message;\n\tconst theName = 'Joe';\n\tfunction greet(name) {\n\t\tlet message2;\n\t\tconst greeting = \"Hello, \";\n\t\treturn greeting + name;\n\t}\n\n\tconsole.log(greet('Jim'));\n\tconsole.log(theName); // \"Joe\"\n\tconsole.log(message); // undefined\n\tconsole.log(message2); // not defined\n\tconsole.log(greeting); // not defined\n\tconsole.log(name); // not define\n\t----------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2020-12-12 18:10:51","systemWhoCreated":"systemUnknown"},{"id":347,"category":"Node","title":"Read and write file with stream","body":"- note `await` is only possible withing `async`:##theStreamReadit\n\t-----------------------------\n\tconst getStream = require('get-stream');\n\tconst fs = require('fs');\n\n\t// write file with stream\n\tconst fileName = \"data343.txt\";\n\tconsole.time('writeFile');\n\tconst file = fs.createWriteStream(fileName);\n\tfor (let i = 1; i <= 10; i++) {\n\t\tfile.write(String(Math.floor(Math.random() * 999) + 1000) + '\\n');\n\t}\n\tfile.end();\n\tconsole.timeEnd('writeFile');\n\n\t// read file with stream\n\t(async () => {\n\t\tconsole.time('readFile');\n\t\tconst stream = fs.createReadStream(fileName, { encoding: \"utf-8\" });\n\t\tconst content = await getStream(stream);\n\t\tconsole.log(content);\n\t\tconsole.timeEnd('readFile');\n\t})();\n\t-----------------------------","points":50,"extras":"$rank=4.6;$generalRank=4.6","systemWhenCreated":"2020-12-15 11:08:11","systemWhoCreated":"systemUnknown"},{"id":348,"category":"nginx","title":"Install nginx on Windows","body":"- when installing nginx, make sure you choose a port that does not conflict with your Apache, IIS or any other web server##welcomeNginx\n- download, install, serve default website\n\t- http://nginx.org/en/download.html\n\t- download stable version, e.g. *nginx/Windows-1.18.0*\n\t- unzip into *c:\\nginx*\n\t- change file *conf\\nginx.conf*\n\t\t---------------------------------------\n\t\tlisten       3011;\n\t\t---------------------------------------\n\t- double-click *nginx.exe*\n\t- goto: `http://localhost:3011`\n- serve custom web directory\n\t- create file *C:\\webs\\site001\\index.html*\n\t\t-------------------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>Test001</title>\n\t\t</head>\n\n\t\t<body>\n\t\t\t<p>This is a test.</p>\n\t\t</body>\n\n\t\t</html>\n\t\t-------------------------------\n\t- change file *conf\\nginx.conf*\n\t\t---------------------------------------\n\t\troot   C:\\webs;\n\t\t---------------------------------------\n\t- restart nginx\n\t\t- task manager\n\t\t- details\n\t\t- on both nginx services: kill process tree\n\t- double-click *nginx.exe*\n\t- goto: `http://localhost:3011/site001`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2020-12-15 14:53:50","systemWhoCreated":"systemUnknown"},{"id":349,"category":"Go","title":"Install Go on Windows and create and compile program","body":"- this is a fast track to get install Go on Windows and compile and run a program##installgoand\n- download\n\t- https://golang.org/dl\n\t- download and execute the MSI file\n\t- open CMD\n\t\t- `go version`\n\t\t\t- you will see e.g. *go version go1.15.6 windows/amd64*\n\t\t- `go env`\n\t\t\t- *set GOROOT=c:\\go* is where Go is installed\n- development environment\n\t- VSCode\n\t- install extension: golang --> Go Team at Google\n\t- CTRL-SHIFT-P\n\t\t- `go:install`\n\t\t- *Go:Install/Update Tools*\n\t\t- select all\n\t\t- click [[Go]]\n\t\t- (installs for a few minutes, see *Output* window)\n- test program\n\t- create `test.go`\n\t\t-------------------------\n\t\tpackage main\n\n\t\timport (\n\t\t\t\"fmt\"\n\t\t)\n\n\t\tfunc main() {\n\t\t\tfmt.Println(\"Test of Go\")\n\t\t}\n\t\t-------------------------\n\t- `go run test.go`\n\t- `go build test.go`","points":50,"extras":"$rank=4.2;$generalRank=4.7","systemWhenCreated":"2020-12-17 16:58:11","systemWhoCreated":"systemUnknown"},{"id":350,"category":"Vanilla JavaScript","title":"Use XMLHttpRequest to load local html from server","body":"- This is a vanilla JavaScript example of XMLHttpRequest that loads a local .html file on button click.##loadbuttonvanjavascript\n- index.html\n\t--------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>XMLHttpRequest test</title>\n\t\t<script src=\"js/main.js\"></script>\n\t\t<link rel=\"stylesheet\" href=\"css/main.css\">\n\t</head>\n\t<body>\n\t\t<button onclick=\"loadContent()\">Load Content</button>\n\t\t<div id=\"content\"></div>\n\t</body>\n\n\t</html>\n\t--------------------------\n- main.js\n\t-------------------------------------\n\t\"use strict\";\n\n\tfunction loadContent() {\n\t\tconst xhttp = new XMLHttpRequest();\n\t\txhttp.onreadystatechange = function() {\n\t\t\tif (this.readyState === 4 && this.status === 200) {\n\t\t\t\tdocument.getElementById(\"content\").innerHTML = xhttp.responseText;\n\t\t\t}\n\t\t}\n\t\txhttp.open(\"GET\", \"data/data.html\", true );\n\t\txhttp.send();\n\t}\n\t-------------------------------------\n- main.css\n\t--------------------------------\n\tbody {\n\t\tpadding: 10px;\n\t}\n\n\t#content {\n\t\tmin-height: 80px;\n\t\tbackground-color: #eee;\n\t\tmargin: 10px 0 0 0;\n\t\tborder: 1px solid #ddd;\n\t\tborder-radius: 5px;\n\t}\n\n\t#content p {\n\t\tpadding: 0 20px;\n\t}\n\n\tbutton {\n\t\tpadding: 5px;\n\t\tborder-radius: 5px;\n\t}\n\n\t/* smartphone view */\n\n\t@media (max-width: 577px) {\n\t\t#content {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\t/* computer/table view */\n\n\t@media (min-width: 578px) {\n\t\t#content {\n\t\t\twidth: 600px;\n\t\t}\n\t}\n\t--------------------------------\n- data.html\n\t------------------------------------\n\t<div>\n\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Praesentium facere molestias nihil ad? Voluptate nulla\n\t\t\trem quibusdam explicabo dolorum delectus cupiditate accusantium eligendi? Molestiae quasi, beatae possimus rerum\n\t\t\tlaborum iure.</p>\n\t\t<p>Provident ipsum, dignissimos aliquid, perferendis consequuntur voluptate repellat similique vel aliquam\n\t\t\ttemporibus mollitia quibusdam alias neque nulla quia dolorum sit deserunt impedit ducimus, culpa ullam magnam\n\t\t\tomnis libero veniam? Fuga!</p>\n\t\t<p>Odio aut quae iste ea quo quasi porro, a nisi velit beatae eos ducimus necessitatibus nihil! Praesentium\n\t\t\tconsequuntur impedit explicabo consectetur vel aperiam, neque fugit, facere beatae laudantium veritatis\n\t\t\taccusamus!</p>\n\t\t<p>Alias, illo molestiae. Reprehenderit odit dignissimos repellat, expedita, corrupti culpa doloremque doloribus\n\t\t\tcupiditate est qui itaque quos esse illo autem assumenda, accusantium laboriosam perspiciatis ullam ex. Totam\n\t\t\tfacilis quisquam perspiciatis.</p>\n\t</div>\n\t------------------------------------","points":70,"extras":"$rank=4.6;$generalRank=4.7;$idCode=xmlhttprequestVanilla;$download=xmlhttprequestVanilla","systemWhenCreated":"2020-12-20 20:27:51","systemWhoCreated":"systemUnknown"},{"id":351,"category":"CSS","title":"Tilt a word on hover","body":"- Note that if you put too much margin on the hovered word it will move the sentence.##thtetilttil\n- index.html\n\t---------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>tilt</title>\n\t\t<style>\n\t\t\t.tilt {\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t.tilt:hover {\n\t\t\t\tfont-weight: bold;\n\t\t\t\tcolor: tomato;\n\t\t\t\tcursor: pointer;\n\t\t\t\ttransform: rotate(-10deg) scale(1.3, 1.3);\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tbackground-color: yellow;\n\t\t\t}\n\t\t\tbody {\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<p>This word should <span class=\"tilt\">tilt</span> so that it is noticable on hover.</p>\n\t</body>\n\n\t</html>\n\t---------------------------","points":30,"extras":"$rank=4.7;$generalRank=4.7;$idCode=tiltexample","systemWhenCreated":"2020-12-20 21:37:03","systemWhoCreated":"systemUnknown"},{"id":352,"category":"Node","title":"Debug with node-inspect from the terminal","body":"- with **node-inspect** you can set break points in code to pause and look at variables e.g. in loops##thedebugnodeinspect\n- `npm i -g node-inspect`\n- put `debugger;` lines in your code:\n\t-----------------------\n\tconst fs = require('fs');\n\tconst servers = {\n\t\t\"62732\": {\n\t\t\tname: 'External_83743',\n\t\t\ttype: 'Linux',\n\t\t\twhenCreated: '2020-01-01',\n\t\t\tdrives: 3\n\t\t},\n\t\t\"893472\": {\n\t\t\tname: 'External_32333',\n\t\t\ttype: 'Windows',\n\t\t\twhenCreated: '2020-04-01',\n\t\t\tdrives: 2\n\t\t}\n\t};\n\tdebugger; \n\tfor (let x = 1; x <= 10; x++) {\n\t\tservers[x] = {\n\t\t\t'type': 'test',\n\t\t\t'identifier': x\n\t\t}\n\t}\n\tdebugger; \n\tfs.writeFile('servers.json', JSON.stringify(servers), err => {\n\t\tif (err) throw err;\n\t\tconsole.log('finished');\n\t});\n\t-----------------------\n- `node-inspect test.js`\n- `cont` to continue\n- `repl` to look at variables\n- to exit, [[CTRL-C]] twice\n\t- or `.exit`","points":40,"extras":"$rank=4.3;$generalRank=4.6123","systemWhenCreated":"2020-12-21 16:27:03","systemWhoCreated":"systemUnknown"},{"id":353,"category":"Node.js","title":"Write from one stream to another with pipe","body":"- the content of main.txt will be written to main2.txt\n- note main2.txt will be created if it does not exist##pipeReadWriteasdf\n- *pipe.js*\n\t----------------------------\n\tconst fs = require('fs');\n\n\tconst readStream = fs.createReadStream('main.txt');\n\tconst writeStream = fs.createWriteStream('main2.txt');\n\n\treadStream.pipe(writeStream);\n\n\treadStream.on('end', () => {\n\t\tconsole.log('finished writing');\n\t});\n\t----------------------------\n- *main.txt*\n\t------------------------------\n\tLorem ipsum dolor sit amet.\n\tSunt cumque praesentium tempora officia.\n\tCulpa minima natus placeat sit?\n\t------------------------------","points":30,"extras":"$rank=4.1;$generalRank=4.834","systemWhenCreated":"2020-12-21 20:26:46","systemWhoCreated":"systemUnknown"},{"id":354,"category":"Node.js","title":"Transform a text file to another with streams","body":"- pushing the data through the filter will transform all the letters to uppercase\n- not that *writableObjectMode* must be set to *true*##thePipesTransform\n- *pipe.js*\n\t------------------------------\n\tconst fs = require('fs');\n\tconst { Transform } = require('stream');\n\n\tconst readStream = fs.createReadStream('main.txt');\n\tconst writeStream = fs.createWriteStream('main2.txt');\n\n\tconst capitalizeFilter = new Transform({\n\t\twritableObjectMode: true,\n\t\ttransform(data, encoding, callback) {\n\t\t\tthis.push(data.toString().toUpperCase());\n\t\t\tcallback();\n\t\t},\n\t\tfinal(callback) {\n\t\t\tcallback();\n\t\t}\n\t});\n\n\treadStream.pipe(capitalizeFilter).pipe(writeStream);\n\n\treadStream.on('end', () => {\n\t\tconsole.log('finished writing');\n\t});\n\t------------------------------\n- *main.txt*\n\t------------------------------\n\tLorem ipsum dolor sit amet.\n\tSunt cumque praesentium tempora officia.\n\tCulpa minima natus placeat sit?\n\t------------------------------","points":70,"extras":"$rank=4.2;$generalRank=4.8373737","systemWhenCreated":"2020-12-21 21:51:38","systemWhoCreated":"systemUnknown"},{"id":355,"category":"MongoDB","title":"Create an API with Node.js, Express and MongoDB","body":"- setup basic server\n\t- install node, setup Git and GitHub\n\t- install Express\n\t\t- `npm i express`\n\t- install MongoDB\n\t\t- https://www.mongodb.com/try/download/community\n\t\t\t- download MongoDB Community Server\n\t\t\t- file is: mongodb-windows-x86_64-4.4.3-signed.msi\n\t\t\t- installing here: C:\\Program Files\\MongoDB\\Server\\4.4\\data\\\n\t- install MongoDB and Mongoose in project\n\t\t- `npm i mongodb mongoose`\n\t- install Babel\n\t\t- `npm i -D babel-cli babel-preset-env babel-preset-stage-0`\n\t- install tools\n\t\t- `npm i body-parser nodemon`\n\t- server.js\n\t\t-----------------------------\n\t\timport express from 'express';\n\n\t\tconst app = express();\n\t\tconst PORT = 4000;\n\n\t\tapp.get('/', (req, res) => {\n\t\t\tres.send(`Listening on port ${PORT}.`);\n\t\t});\n\n\t\tapp.listen(PORT, () => {\n\t\t\tconsole.log(`Listening on port ${PORT}.`);\n\t\t});\n\t\t-----------------------------\n\t- .babelrc\n\t\t----------------------------\n\t\t{\n\t\t\t\"presets\": [\n\t\t\t\t\"env\", \n\t\t\t\t\"stage-0\"\n\t\t\t]\n\t\t}\n\t\t----------------------------\n\t- in `package.json` add:\n\t\t--------------------------\n\t\t\"start\": \"nodemon ./server.js --exec babel-node -e js\"\n\t\t--------------------------\n\t- execute `npm start`\n- for full project including MongoDB, see this project: https://github.com/edwardtanguay/nodeapi222\n\t- download Robo 3T: https://robomongo.org/download","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-01-15 13:57:27","systemWhoCreated":"systemUnknown"},{"id":356,"category":"Node.js","title":"Understanding process.env","body":"- test.js\n\t-----------------------\n\tconst port = process.env.PORT || 3000;\n\tconst node_env = process.env.NODE_ENV || 'development';\n\tconsole.log(`port: ${port}, node_env: ${node_env}`);\n\t-----------------------\n- `node test.js`\n- `PORT=3001 node test.js`\n- `PORT=3001 NODE_ENV=production node test.js`\n- see all environment variables, some quite useful: `console.log(process.env)`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-01-20 15:18:54","systemWhoCreated":"systemUnknown"},{"id":357,"category":"Jest","title":"Run Jest tests in React","body":"- `npx create-react-app cra888`\n- `npm start`\n- note in package.json: `\"test\": \"react-scripts test\"`\n- `npm run test`\n\t- \"no tests found\"\n\t- press \"a\" it runs a test\n- add `src\\main.test.js`:\n\t-----------------------------\n\ttest('toUpperCase() works', () => {\n\t\texpect('this'.toUpperCase()).toBe('THIS');  \n\t})\n\t-----------------------------\n- press [[a]] it will pass:##jestpassok\n- make a change so it fails##jesttestbadnotpassed\n- links\n\t- [jestjs.io](https://jestjs.io/)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-01-28 12:10:39","systemWhoCreated":"systemUnknown"},{"id":358,"category":"Jest","title":"Set up Jest testing in Node","body":"- set up simple Node app:\n\t- create directory `jestnode333`\n\t- open in Visual Studio Code\n\t- `npm init -y`\n\t- create helper tools: `qtools/qstr.js`:\n\t\t-------------------------------\n\t\texports.capitalizeFirstLetter = (line) => {\n\t\t\treturn line.charAt(0).toUpperCase() + line.slice(1);\n\t\t}\n\t\t-------------------------------\n\t- create `index.js`\n\t\t---------------------------------\n\t\tconst qstr = require('./qtools/qstr');\n\n\t\tconst greeting = 'hello';\n\t\tconsole.log(qstr.capitalizeFirstLetter(greeting));\n\t\t---------------------------------\n\t- `node index.js`\n\t\t- it displays: *Hello*\n- set up Jest and test\n\t- `npm i -D jest`\n\t- create test: `tests\\qstr.test.js`\n\t\t-----------------------------------------\n\t\tconst qstr = require('../qtools/qstr');\n\n\t\ttest('qstr.capitalizeFirstLetter() works', () => {\n\t\t\texpect(qstr.capitalizeFirstLetter('hello')).toBe('Hello');\n\t\t})\n\t\t-----------------------------------------\n\t- set up npm script in `package.json`:\n\t\t-----------------------------------\n\t\t\"scripts\": {\n\t\t\t\"test\": \"./node_modules/.bin/jest\"\n\t\t}\n\t\t-----------------------------------\n\t- `npm test`##jestkdidjiand\n- Get code at [GitHub](https://github.com/edwardtanguay/jestnode333)","points":70,"extras":"$rank=4.9","systemWhenCreated":"2021-01-28 12:47:59","systemWhoCreated":"systemUnknown"},{"id":359,"category":"Java","title":"Create a Java program in VSCode that calls a class in a separate package","body":"- use Visual Studio Code\n- code is here at [GitHub](https://github.com/edwardtanguay/java22)\n- simple Java program\n\t- *Hello.java*\n\t\t-------------------------\n\t\tpublic class Hello {\n\t\t\tpublic static void main(String args[]) {\n\t\t\t\tSystem.out.println(\"Hello World\");\n\t\t\t}\t\n\t\t}\n\t\t-------------------------\n\t- `javac Hello.java`\n\t- `java -classpath . Hello`\n- one Java file with two classes\n\t----------------------------\n\tpublic class Hello {\n\t\tpublic static void main(String args[]) {\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t\tOutputManager om = new OutputManager();\n\t\t\tom.displayTest();\n\t\t}\t\n\t}\n\n\tclass OutputManager {\n\t\tpublic void displayTest() {\n\t\t\tSystem.out.println(\"The test.\");\n\t\t}\n\t}\n\t----------------------------\t\n\t- `javac Hello.java`\n\t- `java -classpath . Hello`\n- one Java file with class in separate file\n\t- *Hello.java*\n\t\t------------------------------\n\t\timport tools.OutputManager;\n\t\tpublic class Hello {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tSystem.out.println(\"Hello World\");\n\t\t\t\tOutputManager om = new OutputManager();\n\t\t\t\tom.displayTest();\n\t\t\t}\t\n\t\t}\n\t\t------------------------------\n\t- *tools\\OutputManager.java*\n\t\t------------------------------\n\t\tpackage tools;\n\t\tpublic class OutputManager {\n\t\t\tpublic void displayTest() {\n\t\t\t\tSystem.out.println(\"The test.\");\n\t\t\t}\n\t\t}\n\t\t------------------------------\n\t- this time, just click on the \"Run\" arrow button in the upper-right##runarror234","points":100,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-01-29 17:31:08","systemWhoCreated":"systemUnknown"},{"id":360,"category":"JavaScript","title":"Simple example of spread operator and destructuring assignment","body":"- note that you use the spread operator on an array with any number of elements, they just have to match the number of parameters\n- and if you send an array with extra elements, they will simply be ignored\n\t---------------------------------------\n\tconst getFullName = (firstName, lastName) => {\n\t\treturn `${firstName} ${lastName}`;\n\t}\n\n\tconst names = ['Jannick', 'Oberein'];\n\n\tconsole.log(getFullName(...names));\n\tconsole.log(getFullName('Hannah', 'Schader'))\n\t---------------------------------------\n- something similar is called destructuring assignment, but with object literals instead of arrays:\n\t----------------------------------------\n\tconst getFullName = ({ firstName, lastName }) => {\n\t\treturn `${firstName} ${lastName}`;\n\t}\n\n\tconst employee = {\n\t\tlastName: 'Orangeisy',\n\t\tmiddleName: '',\n\t\tfirstName: 'Jacques',\n\t\tdepartment: 'Finance'\n\t} \n\n\tconsole.log(getFullName({firstName: 'Hannah', lastName: 'Schader'}));\n\tconsole.log(getFullName(employee))\n\t----------------------------------------","points":40,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-02-03 16:02:05","systemWhoCreated":"systemUnknown"},{"id":361,"category":"JavaScript","title":"Simple example of .call(), .apply() and .bind()","body":"- in this example, you \"stamp\" an object with new information\n\t------------------------\n\tfunction DepartmentStamper() {\n\t\tthis.department = 'Department 001';\n\t}\n\n\tconst emp1 = {\n\t\tname: 'Smythe'\n\t};\n\n\tconst emp2 = {\n\t\tname: 'Rogge'\n\t};\n\n\tDepartmentStamper.call(emp1);\n\tDepartmentStamper.call(emp2);\n\n\tconsole.log(emp1, emp2)\n\t------------------------\n- and you can pass along information:\n\t--------------------------------------\n\tfunction DepartmentStamper(departmentNumber) {\n\t\tthis.stamp = `Department ${departmentNumber}`;\n\t}\n\n\tconst emp1 = {\n\t\tname: 'Smythe'\n\t};\n\n\tconst emp2 = {\n\t\tname: 'Rogge'\n\t};\n\n\tDepartmentStamper.call(emp1,111);\n\tDepartmentStamper.call(emp2,222);\n\n\tconsole.log(emp1, emp2)\n\t--------------------------------------\n- and .apply() is the same thing with brackets\n\t--------------------------------------\n\tfunction DepartmentStamper(departmentNumber) {\n\t\tthis.stamp = `Department ${departmentNumber}`;\n\t}\n\n\tconst emp1 = {\n\t\tname: 'Smythe'\n\t};\n\n\tconst emp2 = {\n\t\tname: 'Rogge'\n\t};\n\n\tDepartmentStamper.apply(emp1,[111]);\n\tDepartmentStamper.apply(emp2,[222]);\n\n\tconsole.log(emp1, emp2)\n\t--------------------------------------\n- and a .bind() example:\n\t-----------------------------------\n\tfunction DepartmentStamper(departmentNumber) {\n\t\tthis.stamp = `Department ${departmentNumber}`;\n\t}\n\n\tconst emp1 = {\n\t\tname: 'Smythe'\n\t};\n\n\tconst emp2 = {\n\t\tname: 'Rogge'\n\t};\n\n\tconst assignDepartmentToEmployee1 = DepartmentStamper.bind(emp1);\n\tconst assignDepartmentToEmployee2 = DepartmentStamper.bind(emp2);\n\n\tassignDepartmentToEmployee1('333');\n\tassignDepartmentToEmployee2('444');\n\n\tconsole.log(emp1);\n\tconsole.log(emp2)\n\t-----------------------------------","points":100,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-02-03 16:02:12","systemWhoCreated":"systemUnknown"},{"id":362,"category":"React","title":"Basic function component with props, state, and showing area based on state","body":"- note props variables are sent from App.js as `<InfoBox title=\"First Box\"/>`\n\t------------------------------------\n\timport {useState} from 'react';\n\n\tfunction InfoBox(props) {\n\t\tconst [ noteState, setNoteState ] = useState('hide');\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>{props.title}</h1>\n\t\t\t\t<p>Info Box</p>\n\t\t\t\t<p>Note State: {noteState}</p>\n\t\t\t\t{ noteState === 'show' && (\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is the note.\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t<button onClick={() => setNoteState(noteState === 'show' ? 'hide' : 'show')}>Show</button>\n\t\t\t</div>\t\n\t\t);\n\t}\n\n\texport default InfoBox\n\t------------------------------------","points":60,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-02-11 00:22:02","systemWhoCreated":"systemUnknown"},{"id":363,"category":"React","title":"Simple form which shows input simultaneously","body":"- `npx create-react-app formtest`\n- `./components/Login.js`\n\t-------------------------\n\timport { useState } from 'react';\n\timport '../styles/Login.css';\n\n\tfunction Login() {\n\t\tconst [user, setUser] = useState('');\n\t\treturn (\n\t\t\t<div class=\"componentLogin\">\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<form>\n\t\t\t\t\t<label for=\"user\">User Name</label>\n\t\t\t\t\t<input type=\"text\" value={user} id=\"user\" onChange={(event) => setUser(event.target.value)} />\n\t\t\t\t</form>\n\t\t\t\t<div>\n\t\t\t\t\t{user !== '' &&\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t<p>Current name: <span className=\"theData\">{user}</span></p>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\texport default Login;\n\t-------------------------\n- `./styles/Login.css`\n\t-----------------------------\n\t.componentLogin form label;after {\n\t\tcontent: ': ';\n\t}\n\n\t.componentLogin .theData {\n\t\tfont-family: 'Courier New', Courier, monospace;\n\t\tbackground-color: #eee;\n\t\tfont-weight: bold;\n\t\tcolor: brown;\n\t}\n\t-----------------------------","points":50,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-02-15 11:35:58","systemWhoCreated":"systemUnknown"},{"id":365,"category":"Ubuntu","title":"How to update Visual Studio Code on Ubuntu","body":"- the automatic update doesn't always work on Ubuntu for Visual Studio Code\n- if it doesn't, then in terminal:\n\t------------------------\n\tsudo apt-get update\n\tsudo apt-get dist-upgrade -y\n\t------------------------\n- restart Visual Studio Code","points":5,"extras":"$rank=4.7;$generalRank=4.6","systemWhenCreated":"2021-03-10 10:45:39","systemWhoCreated":"systemUnknown"},{"id":366,"category":"React","title":"How to change property of one object in an array of objects in React state","body":"- the trick is to not send the array object to the setState method, but the index of the array object\n\t-----------------------\n\timport React, { useState } from 'react';\n\n\tinterface IFlashcard {\n\t\tnoun: string;\n\t\tarticle: string;\n\t\tshow: boolean;\n\t}\n\n\tconst initialFlashcards = [\n\t\t{\n\t\t\tnoun: 'Dependency',\n\t\t\tarticle: 'die Dependency, die Dependencys',\n\t\t\tshow: false\n\t\t},\n\t\t{\n\t\t\tnoun: 'Kenntnis',\n\t\t\tarticle: 'die Kenntnis, die Kenntnisse',\n\t\t\tshow: false\n\t\t},\n\t\t{\n\t\t\tnoun: 'Repository',\n\t\t\tarticle: 'das Repository, die Repositorys',\n\t\t\tshow: false\n\t\t}\n\t];\n\n\tfunction LanguageFlashcards() {\n\t\tconst [flashcards, setFlashcards] = useState(initialFlashcards);\n\n\t\tconst toggleFlashcard = (index: number) => {\n\t\t\tflashcards[index].show = !flashcards[index].show;\n\t\t\tsetFlashcards([...flashcards]);\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h2>Language Flashcards</h2>\n\t\t\t\t<ul>\n\t\t\t\t\t{flashcards.map((flashcard: IFlashcard, index: number) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<li><span onClick={() => toggleFlashcard(index)}>{flashcard.noun}</span>\n\t\t\t\t\t\t\t\t\t{flashcard.show && (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t- {flashcard.article}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t}\n\n\texport default LanguageFlashcards;\n\t-----------------------\n- see more information on this at my [question on Stackoverflow](https://stackoverflow.com/questions/67011321/how-to-change-property-of-one-object-in-an-array-of-objects-in-react-state) on this","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-08 23:09:57","systemWhoCreated":"systemUnknown"},{"id":367,"category":"CSS","title":"How to create a header/footer/aside/main site with no margins","body":"- note that you need to have no spaces between main and aside\n\t-------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"ie=edge\">\n\t\t<title>CSS Course</title>\n\t\t<style>\n\t\t\thtml {\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tmargin: 0px;\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\theader {\n\t\t\t\theight: 12.5%;\n\t\t\t\tbackground: blue;\n\t\t\t\tcolor: white;\n\t\t\t}\n\n\t\t\tmain {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 75%;\n\t\t\t\theight: 75%;\n\t\t\t\tbackground: red;\n\t\t\t\tcolor: white;\n\t\t\t}\n\n\t\t\taside {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 25%;\n\t\t\t\theight: 75%;\n\t\t\t\tbackground: green;\n\t\t\t\tcolor: white;\n\t\t\t}\n\n\t\t\tfooter {\n\t\t\t\theight: 12.5%;\n\t\t\t\tbackground: purple;\n\t\t\t\tcolor: white;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<header>Header</header>\n\t\t<aside>Sidebar</aside><!-- no spaces\n\t --><main>Main Content</main>\n\t\t<footer>Footer</footer>\n\t</body>\n\n\t</html>\n\t-------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-09 15:10:51","systemWhoCreated":"systemUnknown"},{"id":369,"category":"CSS","title":"How to create a three-dimensional ball with CSS","body":"- see some [gradient buttons here](https://codepen.io/JavaScriptJunkie/pen/pPRooV)\n\t-----------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>balls</title>\n\t\t<style>\n\t\t\t.circle {\n\t\t\t\twidth: 50px;\n\t\t\t\theight: 50px;\n\t\t\t\tmargin: 3px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: radial-gradient(circle at 65%, white, rgba(68, 68, 68, 0.4)), radial-gradient(rgba(255, 255, 255, 1), #f9f9f9, #555);\n\t\t\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\n\t\t<section class=\"ex-03 circle-container\">\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t\t<div class=\"circle\"></div>\n\t\t</section>\n\t</body>\n\n\t</html>\n\t-----------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-09 23:07:59","systemWhoCreated":"systemUnknown"},{"id":370,"category":"Windows","title":"How to stop Windows service that blocks Apache from starting","body":"- problem: Apache web server won't start due to a blocked port##thebbblocked\n- in the terminal window, type `net stop was /y`\n- note that if you do not open the terminal window as administrator, it won't work:##wontworkforterm\n- log in as administrator and it works:##asadminadadddmin\n- then restart Apache and it works:##therestartapppah","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-17 12:46:32","systemWhoCreated":"systemUnknown"},{"id":371,"category":"CSS","title":"How to use images for CSS list bullets","body":"- `list-style-image` has limited styling abilities so use this:\n\t--------------------------------\n\tul {\n\t\tlist-style-type: none;\n\t}\n\n\tul>li;before {\n\t\tcontent: '';\n\t\tdisplay: inline-block;\n\t\theight: 10px;\n\t\twidth: 10px;\n\t\tbackground-size: 10px;\n\t\tbackground-image: url('image/light.png');\n\t\tbackground-repeat: no-repeat;\n\t\tmargin-right: 5px;\n\t\tbackground-position: top top;\n\t\tvertical-align: middle;\n\t}\n\t--------------------------------","points":30,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-18 18:44:49","systemWhoCreated":"systemUnknown"},{"id":372,"category":"CSS","title":"Simple way to use Font Awesome Icons","body":"- Font Awesome has become more difficult to use, e.g. requiring an e-mail sign up, etc.\n- this shows you a simpler way to use Font Awesome 4.7 if you just need some quick, professional-looking icons on your site\n- put this link in the HEAD section of your site\n\t--------------------------------\n\t<link rel=\"stylesheet\"\n\t\t  type=\"text/css\"\n\t\t  href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t--------------------------------\n- go here to search for and copy the HTML for icons you want: https://fontawesome.com/v4.7.0/icons\n- this is an example site which shows how to style the icons##exampleIconFontAwess\n\t----------------------------------------------\n\t<head>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-size: 1.4em;\n\t\t\t\tfont-family: arial;\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t\t.list {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 20px 500px;\n\t\t\t\tgrid-gap: 1em .2em;\n\t\t\t}\n\n\t\t\ti.fa {\n\t\t\t\tmargin-top: .1em;\n\t\t\t\tcolor: green;\n\t\t\t\ttext-shadow: 1px 1px 5px orange;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div class=\"list\">\n\t\t\t<i class=\"fa fa-arrow-right\"\n\t\t\t   aria-hidden=\"true\"></i>\n\t\t\t<div>item #1: Lorem ipsum dolor sit amet, consectetur adipisicing elit. Non eaque saepe exercitationem tenetur\n\t\t\t\titaque sunt labore at temporibus facilis aut voluptates quia, minima error fugiat sit nam, quas ipsam.\n\t\t\t\tSaepe.</div>\n\t\t\t<i class=\"fa fa-arrow-right\"\n\t\t\t   aria-hidden=\"true\"></i>\n\t\t\t<div>item #2: Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum et praesentium vero accusamus\n\t\t\t\trepudiandae saepe voluptate fugit, repellat quis? Officia, nihil quod debitis dolores excepturi sed\n\t\t\t\texercitationem doloremque consequatur. Ab!</div>\n\t\t\t<i class=\"fa fa-arrow-right\"\n\t\t\t   aria-hidden=\"true\"></i>\n\t\t\t<div>item #3: Lorem ipsum dolor, sit amet consectetur adipisicing elit. Excepturi fuga veritatis vero eius\n\t\t\t\tconsectetur optio amet, magni accusamus deleniti facilis at cupiditate consequatur dignissimos alias\n\t\t\t\tlaudantium ex assumenda, ipsam mollitia?</div>\n\t\t\t<i class=\"fa fa-arrow-right\"\n\t\t\t   aria-hidden=\"true\"></i>\n\t\t\t<div>item #4: Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quaerat natus aut ut quisquam, at\n\t\t\t\texplicabo nostrum incidunt dicta aperiam nam, facere iure? Sunt, eveniet quas minus rerum ex hic suscipit.\n\t\t\t</div>\n\t\t</div>\n\t</body>\n\t----------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-18 22:48:48","systemWhoCreated":"systemUnknown"},{"id":373,"category":"React","title":"How to use React Icons in a React site","body":"- create React app: `npx create-react-app`\n- `npm i react-icons`\n- search here: https://react-icons.github.io/react-icons/search?q=lightning\n\t- note prefix letters:##falightn\n\t- include it in the import statement:##thebsbsbs\n- for example, in the create-react-app: replace the content of `App.js` with this text:\n\t-------------------------------\n\timport logo from './logo.svg';\n\timport './App.css';\n\timport { BsLightningFill } from 'react-icons/bs';\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\tReact Icons <BsLightningFill className=\"icon\" />\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t-------------------------------\n- it will show this:##thefinishreacticon","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-20 13:46:01","systemWhoCreated":"systemUnknown"},{"id":374,"category":"Node","title":"How to create a Node server to handle an HTML form","body":"- note that we use Promisify in order to make writing asynchronous##theserverand\n- index.html\n\t---------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Form with Backend</title>\n\t\t<style>\n\t\t\tform {\n\t\t\t\tbackground-color: beige;\n\t\t\t\tpadding: .5rem;\n\t\t\t\tborder-radius: 5px;\n\t\t\t}\n\t\t\tdiv.field {\n\t\t\t\tmargin: 0 0 10px 0;\n\t\t\t}\n\t\t\tfieldset {\n\t\t\t\tpadding-top: 10px;\n\t\t\t}\n\t\t\tlegend {\n\t\t\t\tcolor: #444;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<form action=\"http://localhost:3001\"\n\t\t\t  method=\"POST\">\n\t\t\t<fieldset>\n\t\t\t\t<legend>Employee Information</legend>\n\t\t\t\t<div class=\"field\">\n\t\t\t\t\t<label for=\"firstName\">First name:</label> <input type=\"text\"\n\t\t\t\t\t\t   id=\"firstName\"\n\t\t\t\t\t\t   name=\"firstName\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"field\">\n\t\t\t\t\t<label for=\"lastName\">Last name:</label> <input type=\"text\"\n\t\t\t\t\t\t   id=\"lastName\" name=\"lastName\">\n\t\t\t\t</div>\n\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\n\t\t\t</fieldset>\n\t\t</form>\n\t</body>\n\n\t</html>\n\t---------------------------------------\n- server.js\n\t------------------------------------------\n\t/* eslint-disable no-console */\n\tconst express = require('express');\n\tconst fs = require('fs');\n\tconst { promisify } = require('util');\n\n\tconst appendFile = promisify(fs.appendFile);\n\n\tconst app = express();\n\tconst port = 3001;\n\n\tapp.use(express.urlencoded({\n\t\textended: true\n\t}))\n\n\tapp.post('/', (req, res) => {\n\t\tconsole.log(req.body);\n\t\tconst { firstName, lastName } = req.body;\n\t\tappendFile('../data/signups.txt', `${lastName}, ${firstName}\\n`)\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(`added: ${lastName}, ${firstName}`)\n\t\t\t\tres.writeHead(301,\n\t\t\t\t\t{ Location: 'http://localhost:3000' }\n\t\t\t\t);\n\t\t\t\tres.end();\n\t\t\t})\n\t\t\t.catch((error) => console.log(`error: ${error.message}`));\n\t});\n\n\tapp.listen(port, () => {\n\t\tconsole.log(`Backend is now listening at: http://localhost:${port}`);\n\t});\n\t------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-25 21:40:30","systemWhoCreated":"systemUnknown"},{"id":375,"category":"React","title":"How to make a React site that randomizes names into groups of various sizes","body":"- first: `npx create-react-app groupMaker`\n- App.js\n\t--------------------------------------------------\n\timport React, { useState } from 'react';\n\timport './App.scss';\n\n\tfunction App() {\n\n\t\tconst [groupSize, setGroupSize] = useState(4);\n\t\tconst [groups, setGroups] = useState([]);\n\n\t\tconst makeGroups = (e) => {\n\t\t\tconst persons = [\"Hans\", \"Robert\", \"Ashton\", \"Martin\", \"Adele\", \"Brendon\", \"Ahmad\", \"Nikola\", \"Eva\", \"Georg\", \"Angie\"];\n\t\t\trandomize(persons);\n\n\t\t\tconst localGroups = [];\n\n\t\t\tlet counter = 1;\n\t\t\tlet group = [];\n\t\t\tpersons.forEach(person => {\n\t\t\t\tif (counter > groupSize) {\n\t\t\t\t\tlocalGroups.push(group);\n\t\t\t\t\tgroup = [];\n\t\t\t\t\tcounter = 1;\n\t\t\t\t}\n\t\t\t\tgroup.push(person);\n\t\t\t\tcounter += 1;\n\t\t\t})\n\t\t\tif (group.length > 0) {\n\t\t\t\tlocalGroups.push(group);\n\t\t\t}\n\t\t\tsetGroups([...localGroups]);\n\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tconst randomize = (array) => {\n\t\t\tlet currentIndex = array.length;\n\t\t\tlet temporaryValue = null;\n\t\t\tlet randomIndex = null;\n\n\t\t\twhile (currentIndex !== 0) {\n\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\t\tcurrentIndex -= 1;\n\t\t\t\ttemporaryValue = array[currentIndex];\n\t\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\t\tarray[randomIndex] = temporaryValue;\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<form onSubmit={makeGroups}>\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<legend>Zufälliger Gruppeneinteiler</legend>\n\t\t\t\t\t\t<label htmlFor=\"groupSize\">Teilnehmer pro Gruppe</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"groupSize\" value={groupSize} onChange={(e) => setGroupSize(e.target.value)} autoFocus />\n\t\t\t\t\t\t<input className=\"buttonSubmit\" type=\"submit\" value=\"Gruppen erstellen\" />\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"displayGroups\">\n\t\t\t\t\t{groups.map((group) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{group.map((person) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li>{person}</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t--------------------------------------------------\n- App.scss\n\t------------------------------------------------\n\t.App {\n\t\tpadding: 20px;\n\t\tmin-height: 100vh;\n\t\tbackground-color: #282c34;\n\t\tcolor: white;\n\n\t\tfieldset {\n\t\t\tpadding: 10px;\n\t\t\tlegend {\n\t\t\t\tcolor: #999;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tpadding: 0 5px;\n\t\t\t}\n\t\t\tborder: 1px solid #999;\n\t\t\tborder-radius: 5px;\n\t\t\tpadding: 10px;\n\t\t\tlabel {\n\t\t\t\t&:after {\n\t\t\t\t\tcontent: \":\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t------------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-28 06:25:39","systemWhoCreated":"systemUnknown"},{"id":376,"category":"Flexbox","title":"How to display boxes in rows with a gap variable to screen width","body":"- note the `gap: 1vw`##theflexredok\n\t----------------------------\n\tbody {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\tgap: 1vw;\n\t}\n\n\tdiv {\n\t\tbackground-color: #ccc;\n\t\twidth: 100px;\n\t\theight: 70px;\n\t\ttext-align: center;\n\t\tborder: 1px solid red;\n\t}\n\t----------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-04-30 21:30:07","systemWhoCreated":"systemUnknown"},{"id":377,"category":"TypeScript","title":"Two ways to define an interface for an array of objects","body":"- note that each approach works the same in this example\n\t------------------------\n\tinterface ICorrectionItem {\n\t\tphrase: string;\n\t\twhenCreated: string;\n\t\trank: number;\n\t}\n\n\tinterface ICorrectionItems extends Array<ICorrectionItem> {};\n\n\t// const correctionItems: ICorrectionItem[] = [\n\tconst correctionItems: ICorrectionItems = [\n\t\t{\n\t\t\tphrase: 'this is a test',\n\t\t\twhenCreated: '2021-05-12 00:48:49',\n\t\t\trank: 3\n\t\t},\n\t\t{\n\t\t\tphrase: 'this is a another test',\n\t\t\twhenCreated: '2021-05-12 00:48:52',\n\t\t\trank: 2.3\n\t\t}\n\t];\n\n\tconsole.log(correctionItems.length);\n\t------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-12 00:50:08","systemWhoCreated":"systemUnknown"},{"id":378,"category":"TypeScript","title":"How to create a generic class that allows only types that are an array of objects","body":"- note that [Record](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeystype) is an official TypeScript type\n- note one can also specify which properties the objects can have, e.g.: `type IRecord = Record<'front' | 'back', any>;`\n\t----------------------------\n\texport {}; // fixes VSCode variable-checking in other files (ts2451)\n\t/* eslint-disable guard-for-in */\n\t/* eslint-disable no-console */\n\n\t// RECORDS (general)\n\ttype IRecord = Record<string, any>;\n\ttype IRecords = Array<IRecord>;\n\n\t// PERSONS (specific)\n\tinterface IPerson {\n\t\tfirstName: string,\n\t\tlastName: string,\n\t\tage: number\n\t}\n\ttype IPersons = Array<IPerson>;\n\n\t// FLASHCARDS (specific)\n\tinterface IFlashcard {\n\t\tfront: string,\n\t\tback: string\n\t}\n\tinterface IFlashcards extends Array<IFlashcard> { }\n\n\tclass RecordsProcessor<T extends IRecords> {\n\t\trecords: T;\n\n\t\tconstructor(records: T) {\n\t\t\tthis.records = records;\n\t\t}\n\n\t\tgenerateCommaSeparatedValueString(): string {\n\t\t\tlet r: string = '';\n\t\t\tthis.records.forEach((record) => {\n\t\t\t\tlet count = 1;\n\t\t\t\tfor (const key in record) {\n\t\t\t\t\tr += `${record[key]}`;\n\t\t\t\t\tif (count === Object.keys(record).length) {\n\t\t\t\t\t\tr += '\\n';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tr += ', ';\n\t\t\t\t\t}\n\t\t\t\t\tcount += 1;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn r;\n\t\t}\n\n\t}\n\n\t// use RecordsProcessor with employees\n\tconst employees: IPersons = [\n\t\t{\n\t\t\tfirstName: 'David',\n\t\t\tlastName: 'Krustchen',\n\t\t\tage: 34\n\t\t},\n\t\t{\n\t\t\tfirstName: 'Melitta',\n\t\t\tlastName: 'Schönbrecher',\n\t\t\tage: 24\n\t\t}\n\t]\n\tconst employeeProcessor = new RecordsProcessor<IPersons>(employees);\n\tconsole.log(employeeProcessor.generateCommaSeparatedValueString());\n\n\t// use RecordsProcessor with flashcards\n\tconst flashcards: IFlashcards = [\n\t\t{\n\t\t\tfront: 'lamp',\n\t\t\tback: 'die Lampe'\n\t\t},\n\t\t{\n\t\t\tfront: 'table',\n\t\t\tback: 'der Tisch'\n\t\t},\n\t\t{\n\t\t\tfront: 'computer',\n\t\t\tback: 'der Computer'\n\t\t},\n\t\t{\n\t\t\tfront: 'book',\n\t\t\tback: 'das Book'\n\t\t}\n\t]\n\tconst flashcardProcessor = new RecordsProcessor<IFlashcards>(flashcards);\n\tconsole.log(flashcardProcessor.generateCommaSeparatedValueString());\n\n\t// and these examples rightly produce the TypeScript error: number does not satisfy the contraint 'IRecord[]'\n\t// const numberProcessor = new RecordsProcessor<number>(23);\n\t// const arrayOfNumbersProcessor = new RecordsProcessor<number[]>([1, 5, 7, 4, 7]);\n\t----------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-13 19:09:52","systemWhoCreated":"systemUnknown"},{"id":379,"category":"Bootstrap","title":"How to use tooltips in Bootstrap 5","body":"- Note that jQuery is no longer used in the JavaScript that selects the tooltips##bootstrapTooltips343\n\t---------------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\"\n\t\t\t  rel=\"stylesheet\"\n\t\t\t  integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\"\n\t\t\t  crossorigin=\"anonymous\">\n\t\t<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js\"\n\t\t\t\tintegrity=\"sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4\"\n\t\t\t\tcrossorigin=\"anonymous\"></script>\n\n\t\t<title>Bootstrap 5 Tooltips</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\theight: 80vh;\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t\tsection.printReport {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: #eee;\n\t\t\t\twidth: 20rem;\n\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\tpadding: 1em;\n\t\t\t\tborder-radius: 5px;\n\t\t\t}\n\n\t\t\t.btnPrintReport {\n\t\t\t\tdisplay: inline;\n\t\t\t\twidth: max-content;\n\t\t\t}\n\n\t\t\t.info {\n\t\t\t\tmargin-top: 10px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<section class=\"printReport\">\n\t\t\t<button type=\"button\"\n\t\t\t\t\tclass=\"btn btn-secondary btnPrintReport\"\n\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\ttitle=\"This will be the report for May 2021. Be sure to print all pages as the last page has the summary information.\">\n\t\t\t\tPrint Report\n\t\t\t</button>\n\n\t\t\t<div class=\"info\">\n\n\t\t\t\tThe reports in this section are of various forms and sizes so you want to read the \n\t\t\t\t<a href=\"#\"\n\t\t\t\t   data-bs-toggle=\"tooltip\"\n\t\t\t\t   title=\"\"\n\t\t\t\t   data-bs-original-title=\"This is the 3.23 version of the documentation, currently the most recent.\">documentation</a> before printing. Also, many employees have been discussing the complexity of these reports <a href=\"#\"\n\t\t\t\t   data-bs-toggle=\"tooltip\"\n\t\t\t\t   title=\"\"\n\t\t\t\t   data-bs-original-title=\"This is the collection of customer blogs soon to be moved to another server, but should still be available afterwards.\">here</a> until the end of June.\n\t\t\t</div>\n\t\t</section>\n\t\t<script>\n\t\t\tvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n\t\t\tvar tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n\t\t\t\treturn new bootstrap.Tooltip(tooltipTriggerEl)\n\t\t\t})\n\t\t</script>\n\t</body>\n\n\t</html>\n\t---------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-15 07:38:40","systemWhoCreated":"systemUnknown"},{"id":380,"category":"GitHub","title":"How to publish an HTML/CSS/JavaScript site in a GitHub repository to GitHub pages","body":"- create site that publishes from `main` repository\n\t- create a new repository called `<yourGitHubUserName>.github.io`, e.g. `edwardtanguay.github.io`\n\t- copy the text in the block labeled *...or create a new repository on the command line*\n\t- in your terminal, goto your `webs` directory \n\t- create the directory `<yourGitHubUserName>.github.io` e.g. `edwardtanguay.github.io`\n\t- go into that directory and paste the copied text\n\t- refresh browser and you will see the contents of the README.md file\n\t- goto `<yourGitHubUserName>.github.io` and you will see the contents of the .md file\n\t- open VSCode in the created directory\n\t- delete the .md file\n\t- add an HTML file: `index.html`\n\t\t-------------------------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>GitHub Site</title>\n\t\t</head>\n\t\t<body>\n\t\t\t<p>This is a test.</p>\n\t\t</body>\n\t\t</html>\n\t\t-------------------------------------\n\t- commit and push to the repository\n\t- goto `<yourGitHubUserName>.github.io` and you will see the contents of the HTML file\n- publish from another repository\n\t- create another branch locally, e.g. \"version2\"\n\t- change the index.html file so that you can notice the changes that are published live\n\t- push the new branch\n\t- at your repository on GitHub, go to settings and pages\n\t- change the source branch to your new repository\n\t- go to `<yourGitHubUserName>.github.io` and you will see the content of the new repository","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-15 18:29:14","systemWhoCreated":"systemUnknown"},{"id":381,"category":"Netlify","title":"How to publish a HTML/CSS/JavaScript site to Netlify","body":"- make a HTML/CSS/JavaScript site:\n\t- index.html\n\t\t---------------------------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t\t  content=\"IE=edge\">\n\t\t\t<meta name=\"viewport\"\n\t\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>GitHub Site</title>\n\t\t\t<link rel=\"stylesheet\" href=\"css/main.css\">\n\t\t</head>\n\n\t\t<body>\n\t\t\t<p>This is a test of a HTML/CSS/JavaScript site.</p>\n\t\t\t<p class=\"fromCss\"></p>\n\t\t\t<p id=\"fromJavaScript\"></p>\n\t\t\t<script src=\"js/main.js\"></script>\n\t\t</body>\n\n\t\t</html>\n\t\t---------------------------------------\n\t- css/main.css\n\t\t----------------------------------------\n\t\t.fromCss::after {\n\t\t\tcontent: 'this is from css';\n\t\t}\n\t\t----------------------------------------\n\t- js/main.js\n\t\t---------------------------------------\n\t\tfunction fillContent() {\n\t\t  const elem = document.getElementById('fromJavaScript');\n\t\t\telem.innerHTML = 'this is from JavaScript';\n\t\t}\n\n\t\tfillContent();\n\t\t---------------------------------------\n- publish it to a GitHub repository\n\t- go to Netlify\n\t- [[New site from Git]]\n\t- [[GitHub]]\n\t- search for repository, select it\n\t- [[Deploy site]]\n\t- click on URL of site which should be available immediately\n\t- verify it works\n- change site name\n\t- [[Site settings]]\n\t- [[Change site name]]\n\t- e.g. `edwardtestsite`\n\t- go to e.g. `edwardtestsite.netlify.app`\n\t- verify it works\n- verify updates work\n\t- make change\n\t- push to repository\n\t- verify changes are on your public URL e.g. `edwardtestsite.netlify.app`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-15 18:59:11","systemWhoCreated":"systemUnknown"},{"id":382,"category":"SASS","title":"How to set up SASS processing for an HTML/CSS site with node-sass","body":"- set up node-sass\n\t- make directory and create [these HTML and CSS files](https://github.com/edwardtanguay/sass_base)\n\t- initialize GIT: `git init`\n\t- initialize NPM: `npm init -y`\n\t- install node-sass: `npm i -D node-sass` *(i = install, -D = dev-dependencies)*\n\t- make `.gitignore` with content `node_modules` on first line\n- make SASS directory and files\n\t- make a copy of the `css` directory and call it `scss`\n\t- rename `scss/main.css` to `scss/main.scss`\n- configure node-sass to watch and and automatically convert SASS files into CSS files\n\t- test SASS-to-CSS parsing with: `./node_modules/.bin/node-sass -r scss/main.scss -o css`\n\t- add this script to the `package.json` file:\n\t\t- `\"start\": \"./node_modules/.bin/node-sass -r scss/main.scss -o css && node-sass --watch scss -o css\"`\n- test the script\n\t- delete the `css/main.css` file\n\t- notice that the HTML file now has no styling\n\t- make a change in the `scss/main.scss` file and the `css/main.css` file will be automatically created\n- create modules\n\t- in main.scss, `@import \"_variables.scss\";` (must be preceded with underscore!)\n\t- make changes in `_variables.scss`, see that only `css/main.css` is created and not `_variables.css`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-16 09:05:35","systemWhoCreated":"systemUnknown"},{"id":383,"category":"SASS","title":"How to set up SASS processing for an HTML/CSS site with sass and Parcel","body":"- set up site\n\t- `npm init -y`\n\t- `git init`\n- set up SASS files\n\t- make `src` folder\n\t\t- make `src/scss/main.scss` which loads the following files with `@use`\n\t\t\t-------------------------------------------\n\t\t\t@use 'variables';\n\t\t\t@use 'layout';\n\t\t\t-------------------------------------------\n\t\t- make `src/scss/_variables.scss`\n\t\t\t-------------------------------------\n\t\t\t$mainHeaderColor: rgb(42, 134, 34); \n\t\t\t-------------------------------------\n\t\t- make `src/scss/_layout.scss`\n\t\t\t-------------------------------\n\t\t\t@use 'variables' as v;\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t\t\tmain {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tpadding: 0.8rem;\n\t\t\t\t\tbackground-color: lightgray;\n\t\t\t\t\th1 {\n\t\t\t\t\t\tcolor: v.$mainHeaderColor;\n\t\t\t\t\t}\n\t\t\t\t\th1,\n\t\t\t\t\tarticle.browser {\n\t\t\t\t\t\tmargin: 10px;\n\t\t\t\t\t\tpadding: 0.8rem;\n\t\t\t\t\t}\n\t\t\t\t\tarticle.browser {\n\t\t\t\t\t\tbackground: white;\n\t\t\t\t\t\th2 {\n\t\t\t\t\t\t\tcolor: v.$mainHeaderColor;\n\t\t\t\t\t\t}\n\t\t\t\t\t\th2,\n\t\t\t\t\t\tp {\n\t\t\t\t\t\t\tmargin: 0.5rem;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp {\n\t\t\t\t\t\t\tcolor: rgb(141, 25, 25);\n\t\t\t\t\t\t\t.year {\n\t\t\t\t\t\t\t\tfont-size: 1.3rem;\n\t\t\t\t\t\t\t\tbackground-color: #eee;\n\t\t\t\t\t\t\t\tcolor: navy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstrong {\n\t\t\t\t\t\t\t\tbackground-color: lightyellow;\n\t\t\t\t\t\t\t\tcolor: black;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t-------------------------------\n- set up web bundling with Parcel\n\t- `npm i -D sass`\n\t- make `src/index.html` file\n\t\t----------------------------------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t\t  content=\"IE=edge\">\n\t\t\t<meta name=\"viewport\"\n\t\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>SASS Base</title>\n\t\t\t<link rel=\"stylesheet\"\n\t\t\t\t  href=\"scss/main.scss\">\n\t\t</head>\n\n\t\t<body>\n\t\t\t<main>\n\t\t\t\t<h1>Web Browsers</h1>\n\t\t\t\t<article class=\"browser\">\n\t\t\t\t\t<h2>Firefox</h2>\n\t\t\t\t\t<p>Firefox is an open-source web browser developed by Mozilla, released in <span class=\"year\">2002</span>.\n\t\t\t\t\t\tIt uses the <strong>Gecko</strong> browser\n\t\t\t\t\t\trendering engine and the <strong>SpiderMonkey</strong> JavaScript rendering engine.</p>\n\t\t\t\t</article>\n\t\t\t\t<article class=\"browser\">\n\t\t\t\t\t<h2>Safari</h2>\n\t\t\t\t\t<p>Safari is a web browser developed by Apple, released in <span class=\"year\">2003</span>. It uses the\n\t\t\t\t\t\t<strong>WebKit</strong> browser\n\t\t\t\t\t\trendering engine and the <strong>JavaScriptCore</strong> rendering engine.\n\t\t\t\t\t</p>\n\t\t\t\t</article>\n\t\t\t\t<article class=\"browser\">\n\t\t\t\t\t<h2>Chrome</h2>\n\t\t\t\t\t<p>Chrome is a web browser developed by Google, released in <span class=\"year\">2008</span>. It uses the\n\t\t\t\t\t\t<strong>Blink</strong> rendering\n\t\t\t\t\t\tengine and the <strong>V8</strong> JavaScript rendering engine.\n\t\t\t\t\t</p>\n\t\t\t\t</article>\n\t\t\t</main>\n\t\t</body>\n\n\t\t</html>\n\t\t----------------------------------------------\n\t- install Parcel: `npm i -D parcel-bundler`\n- add dev script\n\t- `\"dev\": \"parcel src/index.html\"`\n\t- develop with `npm run dev`\n\t- click on link provided (Live Server doesn't process slashes in path name for CSS file correctly)\n- publish to Netlify\n\t- add build script\n\t\t- \"build\": \"parcel build src/index.html\"\n\t- [[New site from Git]]\n\t- [[GitHub]]\n\t- search for and select repository\n\t- choose branch to build from\n\t- build command: `npm run build` (default)\n\t- publish directory `dist` (default)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-16 15:43:31","systemWhoCreated":"systemUnknown"},{"id":384,"category":"Tailwind","title":"How to set up a website with Tailwind CSS","body":"- create directory e.g. `testTailwind`\n- open in Visual Studio\n- create `index.html`\n\t------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Tailwind</title>\n\t</head>\n\n\t<body>\n\t\t<main class=\"container\">\n\t\t\t<h1>Hello, Tailwind!</h1>\n\t\t\t<p>Let's see how this works.</p>\n\t\t</main>\n\t</body>\n\n\t</html>\n\t------------------------------------\n- look at it in Live Server\n- add the Tailwind CDN:\n\t- `<link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\">`\n- notice styles are gone\n- add `mx-5` to `main` element for left/right margins\n- add `my-5` class to `p` element for top/bottom margins\n- add `text-2xl` to the `h1` element\n- add `font-bold` to the `h1` element\n- after the `p` element, add:\n\t------------------------\n\t<button class=\"text-gray-300\">\n\t  Print Report\n\t</button>\n\t------------------------\n- then add to the button element these classes one at a time:\n\t- `bg-blue-600`\n\t- `font-bold`\n\t- `hover:text-white`\n\t- `hover:bg-blue-800`\n\t- `py-2` \n\t- `px-4`\n\t- `rounded`\n- explore the [Tailwind documentation](https://tailwindcss.com/docs/container)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-19 06:04:36","systemWhoCreated":"systemUnknown"},{"id":385,"category":"Materialize","title":"How to set up a website with Materialize CSS","body":"- create directory e.g. `testMaterialize`\n- open in Visual Studio\n- create `index.html`\n\t------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Materialize</title>\n\t</head>\n\n\t<body>\n\t\t<main>\n\t\t\t<h1>Welcome to Materialize</h1>\n\t\t\t<p>This is a test of this CSS framework.</p>\n\t\t</main>\n\t</body>\n\n\t</html>\n\t------------------------------------\n- look at site with Live Server\n- add Materialize\n\t- in `head` area:\n\t\t---------------------------\n\t    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n\t\t---------------------------\n\t- before closing `body` tag:\n\t\t------------------------------\n\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n\t\t------------------------------\n\t- give `main` the class `container`\n- add a card\n\t- go to: https://materializecss.com/cards.html\n\t- copy the HTML for *Basic Card* and paste it above the end `main` tag\n\t\t-----------------------------\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col s12 m6\">\n\t\t\t  <div class=\"card blue-grey darken-1\">\n\t\t\t\t<div class=\"card-content white-text\">\n\t\t\t\t  <span class=\"card-title\">Card Title</span>\n\t\t\t\t  <p>I am a very simple card. I am good at containing small bits of information.\n\t\t\t\t  I am convenient because I require little markup to use effectively.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-action\">\n\t\t\t\t  <a href=\"#\">This is a link</a>\n\t\t\t\t  <a href=\"#\">This is a link</a>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t</div>\n\t\t-----------------------------\n\t- change `darken-1` to `lighten-1`\n\t- change `blue-grey` to `green`\n- add another card and make responsive\n\t- on the Materialize page, scroll down to *Card Panel* and paste the following HTML in before the end of your `row` tag:\n\t\t-----------------------------\n\t\t<div class=\"col s12 m5\">\n\t\t  <div class=\"card-panel teal\">\n\t\t\t<span class=\"white-text\">I am a very simple card. I am good at containing small bits of information.\n\t\t\tI am convenient because I require little markup to use effectively. I am similar to what is called a panel in other frameworks.\n\t\t\t</span>\n\t\t  </div>\n\t\t</div>\n\t\t-----------------------------\n\t- change `m5` to `m6`\n\t- make screen width narrower and wider to see responsiveness\n- add a form with checkboxes as last element inside the `row`:\n\t---------------------------\n\t<div class=\"col s12 m6\">\n\t\t<div class=\"card-panel white\">\n\t\t\t<form action=\"#\">\n\t\t\t\t<p>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"checkbox\" />\n\t\t\t\t\t\t<span>Red</span>\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"checkbox\" />\n\t\t\t\t\t\t<span>Yellow</span>\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"checkbox\" />\n\t\t\t\t\t\t<span>Blue</span>\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t</form>\n\t\t</div>\n\t</div>\n\t---------------------------\n- add nav bar\n\t- before `main` element:\n\t\t--------------------------------------------\n\t\t<div class=\"container-fluid\">\n\t\t\t<nav>\n\t\t\t\t<div class=\"nav-wrapper\">\n\t\t\t\t\t<a href=\"#\"\n\t\t\t\t\t   class=\"brand-logo\"\n\t\t\t\t\t   style=\"margin-left: 10px\">Logo</a>\n\t\t\t\t\t<ul id=\"nav-mobile\"\n\t\t\t\t\t\tclass=\"right hide-on-med-and-down\">\n\t\t\t\t\t\t<li><a href=\"sass.html\">Sass</a></li>\n\t\t\t\t\t\t<li><a href=\"badges.html\">Components</a></li>\n\t\t\t\t\t\t<li><a href=\"collapsible.html\">JavaScript</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</div>\n\t\t--------------------------------------------\n\t- notice it is **not** responsive, seems not to work out-of-the-box as in Bootstrap","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-19 07:14:24","systemWhoCreated":"systemUnknown"},{"id":386,"category":"Bulma","title":"How to set up a website with Bulma CSS","body":"- create directory e.g. `testBulma`\n- open in Visual Studio\n- create `index.html`\n\t------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Bulma</title>\n\t</head>\n\t<body>\n\t\t<main class=\"container\">\n\t\t\t<h1 class=\"title\">\n\t\t\t\tWelcome to this site\n\t\t\t</h1>\n\t\t\t<p class=\"subtitle\">\n\t\t\t\tThis is a test of the Bulma CSS framwork.\n\t\t\t</p>\n\t\t</main>\n\t</body>\n\t</html>\n\t------------------------------------\n- look at site with Live Server\n- add [Bulma CDN link](https://cdnjs.com/libraries/bulma) to `head` e.g.:\n\t-----------------------------\n\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.9.2/css/bulma.min.css\" />\n\t-----------------------------\n- add buttons:\n\t------------------------------------------\n\t<div class=\"buttons\">\n\t\t<a class=\"button is-primary is-small\"\n\t\t   href=\"http://google.com\">test</a>\n\t\t<a class=\"button is-primary is-small is-loading\"\n\t\t   href=\"http://google.com\">test</a>\n\t\t<a class=\"button is-primary is-small is-outlined\"\n\t\t   href=\"http://google.com\">test</a>\n\t</div>\n\t------------------------------------------\n- add tiles:\n\t------------------------------------------\n\t<div class=\"tile is-ancestor\">\n\t\t<div class=\"tile is-vertical is-8\">\n\t\t\t<div class=\"tile\">\n\t\t\t\t<div class=\"tile is-parent is-vertical\">\n\t\t\t\t\t<article class=\"tile is-child notification is-primary\">\n\t\t\t\t\t\t<p class=\"title\">Vertical...</p>\n\t\t\t\t\t\t<p class=\"subtitle\">Top tile</p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<article class=\"tile is-child notification is-warning\">\n\t\t\t\t\t\t<p class=\"title\">...tiles</p>\n\t\t\t\t\t\t<p class=\"subtitle\">Bottom tile</p>\n\t\t\t\t\t</article>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"tile is-parent\">\n\t\t\t\t\t<article class=\"tile is-child notification is-info\">\n\t\t\t\t\t\t<p class=\"title\">Middle tile</p>\n\t\t\t\t\t\t<p class=\"subtitle\">With an image</p>\n\t\t\t\t\t\t<figure class=\"image is-4by3\">\n\t\t\t\t\t\t\t<img src=\"https://bulma.io/images/placeholders/640x480.png\">\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t</article>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"tile is-parent\">\n\t\t\t\t<article class=\"tile is-child notification is-danger\">\n\t\t\t\t\t<p class=\"title\">Wide tile</p>\n\t\t\t\t\t<p class=\"subtitle\">Aligned with the right tile</p>\n\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t<!-- Content -->\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"tile is-parent\">\n\t\t\t<article class=\"tile is-child notification is-success\">\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<p class=\"title\">Tall tile</p>\n\t\t\t\t\t<p class=\"subtitle\">With even more content</p>\n\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\tLorem ipsum dolor sit, amet consectetur adipisicing elit. Neque magni quisquam cupiditate minus eius fuga iusto culpa maiores suscipit quasi architecto quibusdam reprehenderit in ipsam at harum, delectus ipsa vitae.\n\t\t\t\t\t\tPlaceat amet ut, ex enim maxime quia quos dolorum inventore ea reprehenderit doloribus nostrum rem odio voluptates repellat. Incidunt, quas nisi. Commodi cum aperiam voluptates est pariatur consequuntur quod! Corporis.\n\t\t\t\t\t\tHarum, adipisci maiores veritatis ea unde dolores nobis deleniti quisquam quam sit tenetur rerum minima ex earum est, a quae tempore temporibus quod facilis necessitatibus numquam. Natus voluptatum aut molestiae.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</article>\n\t\t</div>\n\t</div>\n\t------------------------------------------\n\t- add top margin to tiles: `mt-2`\n\t- make layout half-half left to right\n\t\t- change `<div class=\"tile is-vertical is-8\">` to `<div class=\"tile is-vertical is-6\">`\n\t- add another section on left:\n\t\t- copy and paste the entire element *Bottom tile*\n\t\t- your layout should look like this:##bulma002\n- see [Bulma documentation](https://bulma.io/documentation) for more","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-19 08:13:19","systemWhoCreated":"systemUnknown"},{"id":387,"category":"regex","title":"How to use regex to replace multiple text patterns in a text with an array of new texts","body":"- note that you have to use a different regex (global/multiline) for matches than you do for replacements\n\t-----------------------------------------\n\tconst regex1 = /(\\[.*?\\])/;\n\tconst regex2 = new RegExp(regex1, 'gm');\n\n\tconst text = 'ich bin ein [bißchen/bisschen] [zurückgeblieben/hinterher] mit den Videos, habe ich [gedenkt/gedacht]';\n\n\tconst quizItemTexts = text.match(regex2);\n\tconst quizItems = quizItemTexts.map((quizItemText) => {\n\t\tlet cleanQuizItemText = quizItemText;\n\t\tcleanQuizItemText = cleanQuizItemText.replace('[', '');\n\t\tcleanQuizItemText = cleanQuizItemText.replace(']', '');\n\t\tconst [wrongAnswer, rightAnswer] = cleanQuizItemText.split('/');\n\t\treturn {\n\t\t\trightAnswer,\n\t\t\twrongAnswer\n\t\t}\n\t});\n\n\tconst phrases = {\n\t\tcloze: text,\n\t\twrong: text,\n\t\tright: text\n\t};\n\tfor (const quizItem of quizItems) {\n\t\tphrases.cloze = phrases.cloze.replace(regex2, '[________]');\n\t\tphrases.wrong = phrases.wrong.replace(regex1, quizItem.wrongAnswer);\n\t\tphrases.right = phrases.right.replace(regex1, quizItem.rightAnswer);\n\t}\n\n\tconsole.log(phrases);\n\t-----------------------------------------\n- output:##regextheaoutpu","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-28 00:47:31","systemWhoCreated":"systemUnknown"},{"id":388,"category":"JavaScript","title":"Six different environments to run JavaScript","body":"- **in an HTML file in the browser**\n\t- index.html\n\t\t---------------------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\t\t<head>\n\t\t\t<title>JavaScript in Browser</title>\n\t\t</head>\n\t\t<body>\n\t\t\t<p>This is text in HTML.</p>\n\t\t\t<p id=\"message1\"></p>\n\t\t\t<p id=\"message2\"></p>\n\t\t\t<script>\n\t\t\t\tconsole.log('This will be output in the browser console.');\n\t\t\t\tvar elem1 = document.querySelector('#message1');\n\t\t\t\tvar elem2 = document.querySelector('#message2');\n\t\t\t\telem1.innerHTML = 'This is the message from <b>JavaScript</b>.';\n\t\t\t\telem2.textContent = 'This is the message from <b>JavaScript</b>.';\n\t\t\t\telem1.style.backgroundColor = 'yellow';\n\t\t\t</script>\n\t\t</body>\n\t\t</html>\n\t\t---------------------------------\n- **in a JavaScript file loaded by an HTML file**\n\t- index.html\n\t\t----------------------------\n\t\t<!DOCTYPE html>\n\t\t<head>\n\t\t\t<title>JavaScript in Browser</title>\n\t\t</head>\n\t\t<body>\n\t\t\t<p>This is text in HTML.</p>\n\t\t\t<p id=\"message1\"></p>\n\t\t\t<p id=\"message2\"></p>\n\t\t\t<script src=\"main.js\"></script>\n\t\t</body>\n\t\t</html>\n\t\t----------------------------\n\t- main.js\n\t\t-------------------------------------------\n\t\tconsole.log('This will be output in the browser console.');\n\t\tconst elem1 = document.querySelector('#message1');\n\t\tconst elem2 = document.querySelector('#message2');\n\t\telem1.innerHTML = 'This is the message from <b>JavaScript</b>.';\n\t\telem2.textContent = 'This is the message from <b>JavaScript</b>.';\n\t\telem1.style.backgroundColor = 'orange'\n\t\t-------------------------------------------\n\t- in most modern browsers you will have support for most of the [newest ECMAScript features](https://caniuse.com/?compare=firefox+90,chrome+93&compareCats=all)\n- **in JSFiddle**\n\t- go to [jsfiddle.net](https://jsfiddle.net)\n\t- copy in HTML area:\n\t\t---------------------------\n\t\t<p>This is text in HTML.</p>\n\t\t<p id=\"message1\"></p>\n\t\t<p id=\"message2\"></p>\n\t\t---------------------------\n\t- copy in JavaScript area:\n\t\t---------------------------\n\t\tconsole.log('This will be output in the browser console.');\n\t\tvar elem1 = document.querySelector('#message1');\n\t\tvar elem2 = document.querySelector('#message2');\n\t\telem1.innerHTML = 'This is the message from <b>JavaScript</b>.';\n\t\telem2.textContent = 'This is the message from <b>JavaScript</b>.';\n\t\telem1.style.backgroundColor = 'yellow';\n\t\t---------------------------\n\t- JSFiddle uses whatever version JavaScript your browser uses\n- **in Node**\n\t- install Node at [nodejs.org](https://nodejs.org/en/download)\n\t- create `server.js`\n\t\t--------------------------------\n\t\tconsole.log('this is from Node');\n\t\t--------------------------------\n\t- note however that you have no access to the `document` object since you are not in a browser anymore\n\t\t-----------------------------\n\t\tconst elem1 = document.querySelector('#message1');\n\t\t-----------------------------\n\t- but note you have access to objects you don't have access to in the browser:\n\t\t-------------------------------\n\t\tconsole.log(process);\n\t\tconsole.log(process.argv);\n\t\tconsole.log(process.argv[2]);\n\t\tconsole.log(process.env);\n\t\tconsole.log(process.env.HOSTNAME);\n\t\t-------------------------------\n\t- Node uses Google's V8 engine and so implements all ECMAScript features that the V8 engine implements\n\t\t- you can see which features each Node version implements here by going to [node.green](https://node.green)\n\t\t- click *show code examples*\n\t\t- search for `includes` and `startsWith`\n- **in React**\n\t- notice that you have access to a `process` object as in Node, but it's not the same one:\n\t\t------------------------------------------\n\t\tconsole.log(process);\t\n\t\t------------------------------------------\n\t- you can set variables that start with `REACT_APP_` in the `.env` file and they will show up in your `process` object\n\t\t- `.env`\n\t\t\t-------------------------\n\t\t\tREACT_APP_DATASOURCE=testing.json\n\t\t\t-------------------------\n\t- note you can create a `.env.development` and `.env.production` file and those variables will be available in their respective environments\n- **in Google Scripts**\n\t- see how you can use [Google Scripts](https://www.benlcollins.com/apps-script/google-apps-script-beginner-guide) to create and manipulate Google Docs programmatically with JavaScript","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-29 21:26:42","systemWhoCreated":"systemUnknown"},{"id":389,"category":"Express","title":"How to make a simple Express server to display system information in a browser","body":"- `npm i express`\n- `server.js`\n\t-------------------------------\n\tconst express = require('express');\n\tconst app = express();\n\tconst port = 3000;\n\n\tapp.get('/', (req, res) => {\n\t\tres.send(`\n\t\t<h1>Information</h1>\n\t\t<p>Node version: ${process.versions.node}</p>\n\t\t`);\n\t});\n\n\tapp.listen(port, () => {\n\t\tconsole.log(`Example app listening at http://localhost:${port}`)\n\t});\n\t-------------------------------\n- `nodemon server.js`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-29 21:53:27","systemWhoCreated":"systemUnknown"},{"id":390,"category":"JavaScript","title":"An example of JavaScript running on the backend and frontend in one file","body":"- `npm i express`\n- `server.js`\n\t-------------------------------\n\tconst express = require('express');\n\tconst app = express();\n\tconst port = 3000;\n\n\tapp.get('/', (req, res) => {\n\t\tres.send(`\n\t\t<h1>System Information</h1>\n\t\t<ul>\n\t\t\t<li>Node version: ${process.versions.node}</li>\n\t\t\t<li>Operating system language: ${process.env.LANG}</li>\n\t\t\t<li>Executing directory: ${process.env.PWD}</li>\n\t\t\t<li>Temp directory: ${process.env.TEMP}</li>\n\t\t</ul>\n\t\t<script>\n\t\t\tvar infoLines = document.querySelectorAll('li');\n\t\t\tfor(let i = 0; i < infoLines.length; i++) {\n\t\t\t\tinfoLines[i].onclick = () => {\n\t\t\t\t\tinfoLines[i].style.backgroundColor = 'yellow';\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\t`);\n\t});\n\n\tapp.listen(port, () => {\n\t\tconsole.log(`Example app listening at http://localhost:${port}`);\n\t});\n\t-------------------------------\n- `nodemon server.js`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-30 08:11:03","systemWhoCreated":"systemUnknown"},{"id":391,"category":"Kotlin","title":"Install Kotlin on Windows","body":"- go to [GitHub download page](https://github.com/JetBrains/kotlin/releases/tag/v1.5.10)\n- download `kotlin-compiler-1.5.10.zip`\n- unzip\n- copy the entire `kotlinc` folder to `c:\\kotlin`\n- add `C:\\kotlin\\kotlinc` to your system environment PATH\n- create `helloWorld.kt`\n\t--------------------------------\n\tfun main() {\n\t\tprintln(\"Hello world.\");\n\t}\n\t--------------------------------\n- compile with `kotlinc HelloWorld.kt`\n\t- this will produce `HelloWorldKt.class`\n- execute with `kotlin HelloWorldKt`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-30 14:28:51","systemWhoCreated":"systemUnknown"},{"id":392,"category":"Languages","title":"How to install and execute ten languages: five interpreted (Python, PHP, Ruby, JavaScript, TypeScript) and five compiled (Java, C#, Go, Rust, Kotlin)","body":"- These examples will show you not only the practical differences between interpreted and compiled languages, but will get these languages installed on your computer and will get you up and running using and learning them.\n- An interpreted language is a programming language whose implementations execute instructions directly, without previously compiling a program into machine-language instructions. A compiled language requires a compile step which converts the programming code into a binary executable file.\n- Interpreted languages:\n\t- **Python** (1994)\n\t\t- install Python on [Windows](https://onespace.netlify.app/howtos?id=326) or [Ubuntu](https://onespace.netlify.app/howtos?id=325)\n\t\t- create `helloFromPython.py`\n\t\t\t------------------------------\n\t\t\tprint(\"Hello from Python.\")\n\t\t\t------------------------------\n\t\t- execute with: `python helloFromPython.py`\n\t- **PHP** (1995)\n\t\t- install PHP with XAMPP on [Windows or Linux](https://www.apachefriends.org/de/index.html)\n\t\t\t- one Windows, make sure `C:\\xampp\\php` is in your system environment path\n\t\t- create `helloFromPhp.php`\n\t\t\t------------------------------\n\t\t\t<?php\n\t\t\techo 'Hello from PHP.';\n\t\t\t------------------------------\n\t\t- execute with: `php helloFromPhp.php`\n\t- **Ruby** (1995)\n\t\t- install Ruby on [Windows](https://rubyinstaller.org) or [Linux](https://www.ruby-lang.org/en/downloads)\n\t\t\t- make sure environment path includes e.g. `C:\\Ruby26-x64\\bin`\n\t\t- install on [Ubuntu](https://stackify.com/install-ruby-on-ubuntu-everything-you-need-to-get-going)\n\t\t- create `helloFromRuby.rb`\n\t\t\t-------------------------\n\t\t\tputs \"Hello from Ruby.\"\n\t\t\t-------------------------\n\t\t- execute with: `ruby helloFromRuby.rb`\n\t- **JavaScript** (1995)\n\t\t- install Node on [Windows or Linux](https://nodejs.org/en/download)\n\t\t- create `helloFromJavaScript.js`\n\t\t\t-------------------------------------\n\t\t\tconsole.log(\"Hello from JavaScript.\");\n\t\t\t-------------------------------------\n\t\t- execute with `node helloFromJavaScript.js`\n\t- **TypeScript** (2012)\n\t\t- install Deno [on Windows](https://onespace.netlify.app/howtos?id=330) or [on Ubuntu](https://stackoverflow.com/questions/61851774/how-to-install-deno-on-ubuntu)\n\t\t- create `helloFromTypeScript.ts`\n\t\t\t--------------------------------\n\t\t\t/* eslint-disable no-console */\n\t\t\tfunction capitalize(word: string): string {\n\t\t\t\treturn word.charAt(0).toUpperCase() + word.slice(1);\n\t\t\t}\n\n\t\t\tfunction hello(name: string): string {\n\t\t\t\treturn capitalize(name);\n\t\t\t}\n\n\t\t\tconsole.log(hello('hello from TypeScript'));\n\t\t\t--------------------------------\n\t\t- execute with: `deno run helloFromTypeScript.ts`\n- Compiled languages:\n\t- **Java** (1995)\n\t\t- install Java on [Windows or Linux](https://onespace.netlify.app/forays?id=61)\n\t\t- create `HelloFromJava.java`\n\t\t\t--------------------------------------------\n\t\t\tpublic class HelloFromJava {\n\t\t\t\tpublic static void main(String[] args) {\n\t\t\t\t\tSystem.out.println(\"Hello from Java.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t--------------------------------------------\n\t\t- compile to executable with: `javac HelloFromJava.java`\n\t\t- execute with: `java -classpath . HelloFromJava`\n\t- **C#** (2000)\n\t\t- Windows installation:\n\t\t\t- make sure you have [.NET installed](https://docs.microsoft.com/en-us/dotnet/core/install/windows?tabs=net50) \n\t\t\t- add path to system environment path to `C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319`\n\t\t- Linux installation:\n\t\t\t- install .NET on [Ubuntu](https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu)\n\t\t- create `helloFromCsharp.cs`\n\t\t\t-------------------------------------\n\t\t\tusing System;\n\t\t\tnamespace HelloExample {\n\t\t\t\tclass HelloFromCsharp {\n\t\t\t\t\tstatic void Main(string[] args) {\n\t\t\t\t\t\tConsole.WriteLine(\"Hello from C#.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t-------------------------------------\n\t\t - compile to executable with: `csc helloFromCsharp.cs`\n\t\t - execute with: `helloFromCsharp.exe`\n\t- **Golang** (2007)\n\t\t- install Golang on [Windows or Linux](https://golang.org/doc/install)\n\t\t- create `helloFromGolang.go`\n\t\t\t---------------------------------------\n\t\t\tpackage main\n\n\t\t\timport (\n\t\t\t\t\"fmt\"\n\t\t\t)\n\n\t\t\tfunc main() {\n\t\t\t\tfmt.Println(\"Hello from Golang.\")\n\t\t\t}\n\t\t\t---------------------------------------\n\t\t- compile to executable with: `go build helloFromGolang.go`\n\t\t- execute with: `./helloFromGolang.exe`\n\t- **Rust** (2010)\n\t\t- install Rust for [Windows or Linux](https://www.rust-lang.org/tools/install)\n\t\t- on Windows, add the following path to your environment PATH: `C:\\Users\\ADMIN\\.cargo\\bin` (where ADMIN is your user name)\n\t\t- create `helloFromRust.rs`\n\t\t\t-----------------------------------\n\t\t\tfn main() {\n\t\t\t\tprintln!(\"Hello from Rust.\");\n\t\t\t}\n\t\t\t-----------------------------------\n\t\t- compile to executable with: `rustc helloFromRust.rs`\n\t\t- execute with: `./helloFromRust.exe`\n\n\t- **Kotlin** (2011)\n\t\t- install Kotline on [Windows](http://localhost:29900/howtos?id=391) or [Ubuntu](https://linuxhint.com/kotlin_ubuntu/)\n\t\t- create `helloFromKotlin.kt`\n\t\t\t--------------------------------\n\t\t\tfun main() {\n\t\t\t\tprintln(\"Hello from Kotlin.\");\n\t\t\t}\n\t\t\t--------------------------------\n\t\t- compile to executable with: `kotlinc HelloWorld.kt`\n\t\t\t- this will produce `HelloWorldKt.class`\n\t\t- execute with `kotlin HelloWorldKt`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-05-30 14:36:16","systemWhoCreated":"systemUnknown"},{"id":393,"category":"Vue 3.0","title":"How to make a basic Vue 3.0 page which displays variables","body":"- note that the syntax is different that [Vue 2.0](https://onespace.netlify.app/howtos?id=5)##vue30ok\n\t--------------------------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<script src=\"https://unpkg.com/vue@next\"></script>\n\t\t<title>Vue 3.0</title>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<h1>Questions:</h1>\n\t\t\tQ1: Convert a string to upper-case letters: {{q1}}\n\t\t</div>\n\t\t<script>\n\t\t\tconst App = {\n\t\t\t\tdata() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tq1: 'This is a sentence.'.toUpperCase()\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t\tVue.createApp(App).mount('#app');\n\t\t</script>\n\t</body>\n\t</html>\n\t--------------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-06-04 13:21:21","systemWhoCreated":"systemUnknown"},{"id":394,"category":"Regex","title":"How to build a regex from a string","body":"- When using `.match` for regular expressions, you can't build the regex with strings. \n- You need to use `new RegExp` and include `g` for global and `i` for case-insensitive.\n- Notice also with `new RegExp` that you don't need the `/`...`/` slashes.\n\t---------------------------\n\tfunction countLetters(str, findLetters) {\n\t\tconst lettersString = findLetters.join('');\n\t\t// const matches = str.match(`/[${lettersString}]/gi`); // matches are null\n\t\tconst regex = new RegExp(`[${lettersString}]`, 'gi');\n\t\tconst matches = str.match(regex);\n\t\treturn matches.join('');\n\t}\n\tconsole.log(countLetters('this is a Test', ['t', 'i', 's']));\n\t---------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-06-23 11:26:33","systemWhoCreated":"systemUnknown"},{"id":395,"category":"javascript","title":"How to clean a string of non-letters with regex","body":"- note that upper and lower German letters are also left in string:\n\t----------------------------\n\tconst regex = /[a-zA-Zßäöü ]/gi;\n\tconst str = `this is a \"§4323bunch of let8273ters und auch deutsche Buchstaben sind möglich`;\n\tconst matches = str.match(regex);\n\n\tconst newStr = matches.join('');\n\n\tconsole.log(str);\n\tconsole.log(newStr);\n\t----------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-07-14 14:29:16","systemWhoCreated":"systemUnknown"},{"id":396,"category":"JavaScript","title":"How to turn a number into an array of that many numbers","body":"- in order to use the higher-order functions, one often needs to change a number e.g. a total into an array of that many numbers so you can iterate over them with `map()` or `forEach()` etc.\n\t-------------------------\n\tconst total = Math.floor(Math.random() * 20) + 1;\n\tconst numberArray = Array.from(Array(total).keys());\n\tnumberArray.forEach((number) => {\n\t\tconsole.log(`${number} stars: ${'*'.repeat(number)}`);\n\t});\n\t-------------------------\n- output:##theoutputarrayfrom","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-09 14:49:44","systemWhoCreated":"systemUnknown"},{"id":397,"category":"regex","title":"Basics of JavaScript regular expressions","body":"- remember to include the `g` at the end of the regex:\n\t---------------------------------\n\tconst regex = /(\\bcolou?r\\b)/g;\n\tconst str = \"This is a color and a colorful, but this is a colour, and so is this colour a color.\";\n\tconst matches = str.match(regex);\n\tconst newString = str.replace(regex, '****');\n\tconsole.log(matches);\n\tconsole.log(str);\n\tconsole.log(newString);\n\t---------------------------------\n- output:##thereggexxl","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-14 12:29:28","systemWhoCreated":"systemUnknown"},{"id":398,"category":"JavaScript","title":"Make a simple animation with requestAnimationFrame","body":"- note you don't have to track the time yourself as with setInterval\n\t-------------------------------------------\n\t<!doctype html>\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>JavaScript Animations</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground-color: rgb(30, 30, 30);\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t\t#circle {\n\t\t\t\twidth: 50px;\n\t\t\t\theight: 50px;\n\t\t\t\tleft: 0px;\n\t\t\t\tborder-radius: 50px;\n\t\t\t\tbackground-color: crimson;\n\t\t\t\tposition: relative;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"circle\"></div>\n\t\t<script>\n\t\t\tvar ol = 0;\n\t\t\tvar circleInterval;\n\t\t\tfunction circleAnimation(time) {\n\t\t\t\tol++;\n\t\t\t\tdocument.getElementById(\"circle\").style.left = (ol * 10) + \"px\";\n\t\t\t\tif (time < 1000) {\n\t\t\t\t\tcircleInterval = requestAnimationFrame(circleAnimation);\n\t\t\t\t} else {\n\t\t\t\t\tdocument.getElementById(\"circle\").style.backgroundColor = \"dimgrey\";\n\t\t\t\t\tcancelAnimationFrame(circleInterval);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcircleInterval = requestAnimationFrame(circleAnimation);\n\t\t</script>\n\t</body>\n\n\t</html>\n\t-------------------------------------------\n- output:##theballisjdf","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-14 15:22:18","systemWhoCreated":"systemUnknown"},{"id":399,"category":"JavaScript","title":"Create a modal window message in vanilla JavaScript","body":"- Clicking the button fades out the screen and displays a message window that can be clicked closed:##themodalwin\n- index.html\n\t---------------------------\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t\t  <link rel=\"stylesheet\" href=\"main.css\">\n\t\t<title>Modal</title>\n\t</head>\n\n\t<body>\n\t\t<button id=\"btnInfo\">Get Information</button>\n\t\t<div id=\"modalBackground\" class=\"modal\">\n\t\t\t<div class=\"modalWindow\">\n\t\t\t\t<span class=\"close\">&times;</span>\n\t\t\t\t<p>Here is the information.</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<script src=\"main.js\"></script>\n\t</body>\n\n\t</html>\n\t---------------------------\n- main.css\n\t-----------------------------------\n\tbody {\n\t\tfont-family: arial, sans-serif;\n\t\tpadding: 20px;\n\t}\n\n\t.modal {\n\t\tdisplay: none;\n\t\tposition: fixed;\n\t\tz-index: 1;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: auto;\n\t\tbackground-color: rgba(0, 0, 0, 0.4);\n\t}\n\n\t.modalWindow {\n\t\tbackground-color: #fefefe;\n\t\tmargin: 15% auto;\n\t\tpadding: 20px;\n\t\tborder: 1px solid #888;\n\t\twidth: 50%;\n\t\tposition: relative;\n\t\tborder-radius: 5px;\n\t}\n\n\t.close {\n\t\tposition: absolute;\n\t\tright: 10px;\n\t\ttop: 5px;\n\t\tcolor: #aaa;\n\t\tfloat: right;\n\t\tfont-size: 1.4rem;\n\t\tfont-weight: bold;\n\t}\n\n\t.close:hover {\n\t\tcolor: black;\n\t\tcursor: pointer;\n\t}\n\t-----------------------------------\n- main.js\n\t------------------------------------\n\tconst modalBackground = document.getElementById(\"modalBackground\");\n\tconst btnInfo = document.getElementById(\"btnInfo\");\n\tconst btnClose = document.querySelector(\".close\");\n\n\tbtnInfo.onclick = () => {\n\t\tmodalBackground.style.display = \"block\";\n\t}\n\n\tbtnClose.onclick = () => {\n\t\tmodalBackground.style.display = \"none\";\n\t}\n\n\twindow.onclick = e => {\n\t\tif (e.target === modalBackground) {\n\t\tmodalBackground.style.display = \"none\";\n\t\t}\n\t}\n\t------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-22 20:06:11","systemWhoCreated":"systemUnknown"},{"id":400,"category":"Regex","title":"How to get three-digit number out of string with JavaScript regex","body":"- note it doesn't find 001\n\t-----------------------------\n\tconst text = ` CLASS001 / Exercise-431-SPA-MOD-buildWebsiteWithParcel Private`;\n\tconst regex = /(-\\d\\d\\d-)/g;\n\tconst matches = text.match(regex);\n\tconst found = matches[0].substring(1, 4);\n\tconsole.log(text);\n\tconsole.log(matches);\n\tconsole.log(found);\n\t-----------------------------\n- output:##theregfind001out","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-25 10:58:34","systemWhoCreated":"systemUnknown"},{"id":401,"category":"JavaScript Promises","title":"Classic resolveFn/rejectFn syntax executes in order","body":"- note that no errors are thrown and .catch() isn't used:\n\t------------------------------------\n\tconst getRecordById = (id) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst randNum = Math.floor(Math.random() * 2) + 1;\n\t\t\tif (randNum === 1) {\n\t\t\t\tresolve({ id, firstName: 'John', lastName: 'Doe' });\n\t\t\t} else {\n\t\t\t\treject(`user id ${id} not found`);\n\t\t\t}\n\t\t});\n\t};\n\n\tfor (let id = 1; id <= 10; id++) {\n\t\tgetRecordById(id)\n\t\t\t.then(\n\t\t\t\t(record) => { console.log(`you got record #${record.id}`); },\n\t\t\t\t(errMessage) => { console.log(`error was: ${errMessage}`); }\n\t\t\t);\n\t}\n\t------------------------------------\n- output:##thenoerrorcatch","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-27 09:54:24","systemWhoCreated":"systemUnknown"},{"id":402,"category":"Callback","title":"Display results from callbacks as they complete","body":"- note that info2 will be displayed before info1\n\t----------------------------\n\tconst getInfo1 = () => { setTimeout(() => console.log('info1'), 2000) };\n\tconst getInfo2 = () => { setTimeout(() => console.log('info2'), 1000); }\n\n\tgetInfo1();\n\tgetInfo2();\n\t----------------------------\n- result##theresultinfotimepouts","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-27 15:12:02","systemWhoCreated":"systemUnknown"},{"id":403,"category":"Callback","title":"Display results from promises as they complete","body":"- note that info2 will be displayed before info1\n\t----------------------------\n\tconst getInfo1 = new Promise((resolve) => { setTimeout(() => resolve('info1'), 2000) });\n\tconst getInfo2 = new Promise((resolve) => { setTimeout(() => resolve('info2'), 1000) });\n\n\tgetInfo1.then((text) => console.log(text));\n\tgetInfo2.then((text) => console.log(text));\n\t----------------------------\n- result##theresultinfotimepouts","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-27 15:22:36","systemWhoCreated":"systemUnknown"},{"id":404,"category":"JavaScript","title":"Get a list of numbers from 1 to n","body":"- note that Array.from() turns array-like objects into arrays\n\t--------------------------------------\n\t// ordered list\n\tconsole.log(Array.from(Array(10).keys()).map(m => `item #${m + 1}`));\n\n\t// functional for-loop\n\tArray.from(Array(5).keys()).forEach(m => {\n\t\tconsole.log('hello');\n\t});\n\n\t// countdown string\n\tconsole.log(Array.from(Array(100).keys()).reverse().map(m => m + 1).join(', '));\n\t--------------------------------------\n- output:##thethreearrayfromlist","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-27 22:05:26","systemWhoCreated":"systemUnknown"},{"id":405,"category":"JavaScript","title":"One-liner: Create an array of letters from A to Z","body":"- note that Array.from() turns array-like objects into arrays\n\t--------------------------------------\n\tconsole.log(Array.from(Array(26).keys()).map(m => String.fromCharCode(m + 65)));\n\t--------------------------------------\n- output:##theoneoneliner","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-27 22:40:44","systemWhoCreated":"systemUnknown"},{"id":406,"category":"Promises","title":"Display group of promises as they fulfill and after all fulfill","body":"- output:##inthesecondkksj\n- index.html\n\t-------------------------\n\t<html>\n\t<head>\n\t\t<title>In Order</title>\n\t\t<link rel=\"stylesheet\"\n\t\t\t  type=\"text/css\"\n\t\t\t  href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t\t<script src=\"main.js\"\n\t\t\t\ttype=\"module\"\n\t\t\t\tdefer></script>\n\t</head>\n\t<body>\n\t\t<button class=\"btnInOrder\">Display each promise when it is fulfilled</button>\n\t\t<button class=\"btnAllAtOnce\">Display promises after all are fulfilled</button>\n\t\t<span class=\"loaderArea\">\n\t\t\t<i class=\"fa fa-spinner fa-spin\"\n\t\t\t   aria-hidden=\"true\"></i>\n\t\t</span>\n\n\t\t<ul class=\"content\">\n\t\t</ul>\n\t</body>\n\t</html>\n\t-------------------------\n- index.js\n\t------------------------------------\n\timport Loader from './Loader.js';\n\n\tconst btnInOrderElem = document.querySelector(\".btnInOrder\");\n\tconst btnAllAtOnceElem = document.querySelector(\".btnAllAtOnce\");\n\tconst contentElem = document.querySelector(\".content\");\n\tconst loaderAreaElem = document.querySelector(\".loaderArea\");\n\n\tloaderAreaElem.style.display = 'none';\n\n\tconst loader = new Loader();\n\n\tbtnInOrderElem.onclick = () => {\n\t\t(async () => {\n\t\t\tcontentElem.innerHTML = '';\n\t\t\tloaderAreaElem.style.display = 'inline';\n\t\t\taddLi(await loader.getData());\n\t\t\taddLi(await loader.getData());\n\t\t\taddLi(await loader.getData());\n\t\t\tloaderAreaElem.style.display = 'none';\n\t\t})();\n\t}\n\n\tbtnAllAtOnceElem.onclick = () => {\n\t\tcontentElem.innerHTML = '';\n\t\tloaderAreaElem.style.display = 'inline';\n\t\t(async () => {\n\t\t\tPromise.allSettled(Array.from(Array(3).keys()).map(m => loader.getData()), []).then((results) => results.forEach(result => {\n\t\t\t\taddLi(result.value);\n\t\t\t\tconsole.log(`Result \"${result.value}\" is ${result.status}`);\n\t\t\t\tloaderAreaElem.style.display = 'none';\n\t\t\t}));\n\t\t})();\n\t}\n\n\tfunction addLi(text) {\n\t\tconst liElem = document.createElement('LI');\n\t\tliElem.innerText = text;\n\t\tcontentElem.appendChild(liElem);\n\t}\n\t------------------------------------\n- Loader.js\n\t--------------------------------\n\tclass Loader {\n\t\t#counter = 0;\n\t\t#letters = Array.from(Array(26).keys()).map(m => String.fromCharCode((m + 65)));\n\t\tconstructor() {\n\t\t\tthis.counter = this.#counter;\n\t\t}\n\t\tgetRandomSeconds() {\n\t\t\treturn Math.floor(Math.random() * 3) + 1;\n\t\t}\n\t\tgetData() {\n\t\t\tconst randSecs = this.getRandomSeconds();\n\t\t\treturn new Promise((resolve) => setTimeout(() => resolve(`info ${this.#letters[this.#counter++]} in ${randSecs} seconds`), randSecs * 1000));\n\t\t}\n\t}\n\n\texport default Loader;\n\t--------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-27 22:51:25","systemWhoCreated":"systemUnknown"},{"id":407,"category":"Promises","title":"Simple example of async/await to get data","body":"- notice both Promise and setTimeout receive functions as parameters:\n\t----------------------------\n\tconst getData = (idCode) => new Promise(resolve => setTimeout(() => resolve('this is ' + idCode), 1000));\n\n\t(async () => {\n\t\tconst users = await getData('users');\n\t\tconsole.log(users);\n\t\tconst products = await getData('products');\n\t\tconsole.log(products);\n\t})();\n\t----------------------------\n- output:##thedonetwook","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-28 00:30:47","systemWhoCreated":"systemUnknown"},{"id":408,"category":"Promises","title":"Example showing that Promise.allSettled() maintains order of results","body":"- note that this order is always conserved, the sent sequence is the same as the received sequence, regardless of the time taken by each request\n\t-------------------------\n\tconst getData = typeOfData => new Promise(resolve => {\n\t\tconst secs = (Math.floor(Math.random() * 3) + 1);\n\t\tsetTimeout(() => resolve(`${typeOfData} retrieved in ${secs} second(s)`), secs * 1000 );\n\t});\n\n\tconst loadActions = [getData('userData'), getData('products'), getData('ads')];\n\n\t(async () => {\n\t\tconst dataItems = await Promise.allSettled(loadActions);\n\t\tconsole.log(dataItems);\n\t})();\n\t-------------------------\n- output:##thealwaysworder","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-08-28 00:44:17","systemWhoCreated":"systemUnknown"},{"id":409,"category":"React","title":"Basic React as two versions of ticking clock example","body":"- index.js - version 1\n\t------------------------------------\n\timport React from 'react';\n\timport ReactDOM from 'react-dom';\n\timport './reset.css';\n\n\tfunction tick() {\n\t\tconst Clock = (\n\t\t\t<div>\n\t\t\t\t<div>It is {new Date().toLocaleTimeString()}</div>\n\t\t\t</div>\n\t\t);\n\t\tReactDOM.render(\n\t\t\tClock,\n\t\t\tdocument.getElementById('root')\n\t\t);\n\t}\n\n\tsetInterval(tick, 1000);\n\t------------------------------------\n- index.js - version 2\n\t-------------------------------------\n\timport React from 'react';\n\timport ReactDOM from 'react-dom';\n\timport './reset.css';\n\n\tfunction Clock(props) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>It is {props.date.toLocaleTimeString()}</div>\n\t\t\t</div>\n\t\t)\n\t};\n\n\tfunction tick() {\n\t\tReactDOM.render(\n\t\t\t<Clock date={new Date()}/>,\n\t\t\tdocument.getElementById('root')\n\t\t);\n\t}\n\n\tsetInterval(tick, 1000);\n\t-------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-09-11 14:54:19","systemWhoCreated":"systemUnknown"},{"id":410,"category":"React","title":"Difference between class and function component called from ReactDOM.render()","body":"- note that the function component clock runs but the class component clock doesn't\n\t----------------------------\n\timport React from 'react';\n\timport ReactDOM from 'react-dom';\n\timport './reset.css';\n\n\tclass Clock extends React.Component {\n\t\tconstructor(props) {\n\t\t\tconsole.log('here in Clock: ' + (new Date()).toLocaleTimeString());\n\t\t\tsuper(props);\n\t\t\tthis.state = { date: new Date() };\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div>It is {this.state.date.toLocaleTimeString()}</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t};\n\n\tfunction Clock2() {\n\t\treturn (\n\t\t\t<div>It is {(new Date()).toLocaleTimeString()}</div>\n\t\t)\n\t}\n\n\tfunction tick() {\n\t\tconsole.log('here in tick: ' + (new Date()).toLocaleTimeString());\n\t\tReactDOM.render(\n\t\t\t<div><Clock /><Clock2/></div>,\n\t\t\tdocument.getElementById('root')\n\t\t);\n\t}\n\n\tsetInterval(tick, 1000);\n\t----------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-09-11 15:54:13","systemWhoCreated":"systemUnknown"},{"id":411,"category":"React","title":"Class and function component as clock to show differences","body":"- note that each component has the same functionality with different syntax\n\t------------------------------------------------\n\timport React, {useEffect, useState} from 'react';\n\timport ReactDOM from 'react-dom';\n\timport './reset.css';\n\n\tclass Clock extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = { date: new Date() };\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tthis.timerID = setInterval(() => {\n\t\t\t\tthis.tick();\n\t\t\t}, 1000);\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\tclearInterval(this.timerID);\n\t\t}\n\n\t\ttick() {\n\t\t\tthis.setState({\n\t\t\t\tdate: new Date()\n\t\t\t});\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div>It is {this.state.date.toLocaleTimeString()}</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t};\n\n\tfunction Clock2() {\n\t\tconst [date, setDate] = useState(new Date());\n\t\tuseEffect(() => {\n\t\t\tconst tickID = setInterval(() => {\n\t\t\t\ttick();\n\t\t\t}, 1000);\n\t\t\treturn () => {\n\t\t\t\tclearInterval(tickID);\n\t\t\t}\n\t\t}, []);\n\n\t\tfunction tick() {\n\t\t\tsetDate(new Date());\n\t\t}\n\t\treturn (\n\t\t\t<div>It is {date.toLocaleTimeString()}</div>\n\t\t)\n\t}\n\n\t(function tick() {\n\t\tReactDOM.render(\n\t\t\t<div><Clock /><Clock2 /></div>,\n\t\t\tdocument.getElementById('root')\n\t\t);\n\t})();\n\t------------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-09-11 17:23:05","systemWhoCreated":"systemUnknown"},{"id":412,"category":"React","title":"How to set focus on input box with useRef","body":"- note that you can have as many useRef variables as you need##thefocusus\n- App.js\n\t-------------------------------------------------------\n\timport { useRef, useEffect } from 'react';\n\n\timport './App.css';\n\n\tfunction App() {\n\t\tconst inputRefBox1 = useRef(null);\n\t\tconst inputRefBox2 = useRef(null);\n\n\t\tuseEffect(() => {\n\t\t\tinputRefBox1.current.focus();\n\t\t}, []);\n\n\t\tconst focusBox1 = () => {\n\t\t\tinputRefBox1.current.focus();\n\t\t}\n\t\tconst focusBox2 = () => {\n\t\t\tinputRefBox2.current.focus();\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div>Box 1: <input ref={inputRefBox1} type=\"text\" /> <button onClick={focusBox1}> Focus Box 1</button></div>\n\t\t\t\t<div>Box 2: <input ref={inputRefBox2} type=\"text\" /> <button onClick={focusBox2}> Focus Box 2</button></div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t-------------------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-09-16 23:22:11","systemWhoCreated":"systemUnknown"},{"id":413,"category":"React","title":"How to use bind() in class components","body":"- You have to bind methods that you use:\n\t--------------------\n\timport { Component } from 'react';\n\n\tclass ToggleDisplay extends Component {\n\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tcollapsed: true\n\t\t\t};\n\t\t\tthis.toggleCollapse = this.toggleCollapse.bind(this);\n\t\t}\n\n\t\ttoggleCollapse() {\n\t\t\tthis.setState({\n\t\t\t\tcollapsed: !this.state.collapsed\n\t\t\t})\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<div onClick={this.toggleCollapse}>{this.props.title}</div>\n\t\t\t\t\t{!this.state.collapsed && (\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{this.props.items.map((item, index) => <li key={index}>{item}</li>)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n\texport default ToggleDisplay;\n\t--------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-09-20 20:09:28","systemWhoCreated":"systemUnknown"},{"id":414,"category":"Node","title":"Create simple website with Node/createServer","body":"- these instructions will create a Node web server with page routing (without Express) in 50 lines##simpleHttpServerNode\n- set up for ES6 modules\n\t- `npm init -y`\n\t- package.json: `\"type\":\"module\",`\n- create minimal HTTP server: `server.js`\n\t------------------------------------------\n\timport * as http from 'http';\n\tconst port = 3005;\n\n\thttp.createServer((req, res) => {\n\t\tres.writeHead(200, {'Content-Type': 'text/plain'});\n\t\tres.write('hello')\n\t\tres.end();\n\t}).listen(port);\n\n\tconsole.log(`listening on port ${port}`);\n\t------------------------------------------\n- change to serve HTML\n\t- `res.write('<h1>hello</h1>')`\n\t- reload\n\t- `'text/html'`\n- add content:\n\t------------------------\n\tconst content = '<h1>Welcome</h1><p>Welcome to this site.</p>';\n\tres.write(`\n\t<html lang=\"en\">\n\t<head>\n\t\t<title>Info Site</title>\n\t</head>\n\t<body>\n\t${content}\n\t</body>\n\t</html>\n\t`);\n\t------------------------\n- add navigation:\n\t--------------------------------\n\tconst nav = `<nav><a href=\"welcome\">Welcome</a> | <a href=\"info\">Info</a> | <a href=\"about\">About</a></nav>`;\n\t--------------------------------\n- note that `req.url` gives us the url path\n\t------------------------------------\n\tconsole.log(req.url);\n\t------------------------------------\n- add welcome page\n\t-----------------------------------\n\tlet content = '';\n\tswitch (req.url) {\n\t\tcase '/welcome':\n\t\t\tcontent = '<h1>Welcome</h1><p>Welcome to this site.</p>';\n\t\t\tbreak;\n\t}\n\t-----------------------------------\n- add other pages\n\t-----------------------------------------\n\tcase '/info':\n\t\tcontent = '<h1>Info</h1><p>This is where the info goes.</p>';\n\t\tbreak;\n\tcase '/about':\n\t\tcontent = '<h1>About</h1><p>This site is a general info site.</p>';\n\t\tbreak;\t\n\t-----------------------------------------\n- add CSS styling\n\t----------------------------------\n\t<style>\n\tbody {\n\t\tbackground-color: #333;\n\t\tfont-family: sans-serif;\n\t\tpadding: 20px;\n\t\tcolor: #ccc;\n\t}\n\tnav {\n\t\tbackground-color: #222;\n\t\tpadding: 10px;\n\t\tcolor: #333; \n\t}\n\ta {\n\t\tcolor: #aaa;\n\t}\n\t</style>\n\t----------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-19 05:38:13","systemWhoCreated":"systemUnknown"},{"id":415,"category":"EJS","title":"Create Server-Side Dynamic Website with Express and EJS","body":"- these instructions show how to build a backend, data-driven website with Node/Express/EJS##expressejssite\n- overview\n\t- [Express](https://expressjs.com)\n\t\t- web application framework for Node.js and the de facto Node standard for building web applications and APIs\n\t- [EJS](https://ejs.co)\n\t\t- Embedded JavaScript templating\n\t\t- enables Express to serve HTML-like templates with both server-side and client-side JavaScript\n- set up Express site that serves **static** HTML/CSS/JavaScript pages\n\t- set up Git\n\t\t- `git init`\n\t\t- add file `.gitignore`\n\t\t---------------------------\n\t\tnode_modules\n\t\t---------------------------\n\t- set up npm project and switch to ES6 modules\n\t\t- `npm init -y`\n\t\t- package.json: `\"type\":\"module\",`\n\t- set up nodemon so the server restarts after changed\n\t\t- `npm i nodemon -D`\n\t- `npm i express`\n\t- create server.js\n\t\t-------------------------\n\t\timport express from 'express';\n\t\timport path from 'path';\n\t\tconst __dirname = path.resolve(path.dirname(''));\n\n\t\tconst app = express();\n\t\tconst port = 3006;\n\n\t\tconst staticDirectory = path.join(__dirname, './public');\n\t\tapp.use(express.static(staticDirectory));\n\n\t\tapp.listen(port, () => {\n\t\t\tconsole.log(`Listening on port ${port}.`);\n\t\t});\n\t-------------------------\t\n\t- create `public` directory\n\t- create `index.html` file in public\n\t\t---------------------------------\n\t\t<html>\n\t\t<head>\n\t\t\t<title>Company Site</title>\n\t\t</head>\n\n\t\t<body>\n\t\t\t<p>Welcome to this site.</p>\n\t\t</body>\n\n\t\t</html>\n\t\t---------------------------------\n\t- set up a start command in **package.json**\n\t\t- `\"start\": \"node_modules/.bin/nodemon server.js\"`\n\t- `npm start`\n- add other pages\n\t- create `info.html` file in public\n\t\t---------------------------------\n\t\t<html>\n\t\t<head>\n\t\t\t<title>Company Site</title>\n\t\t</head>\n\n\t\t<body>\n\t\t\t<p>This is the info page.</p>\n\t\t</body>\n\n\t\t</html>\n\t\t---------------------------------\n\t- add navigation\n\t\t--------------------------------\n\t\t<nav><a href=\"/\">Home</a> | <a href=\"info.html\">Info</a></nav>\n\t\t--------------------------------\n\t- fix routing\n\t\t- add info route\n\t\t\t------------------------------\n\t\t\tapp.get('/info', (req, res) => {\n\t\t\t\tres.sendFile(path.join(__dirname, './public/info.html'));\n\t\t\t});\n\t\t\t------------------------------\n\t\t- change nav from `info.html` to `info`\n\t- add CSS file `css/main.css`\n\t\t-------------------------------\n\t    body {\n\t\t\tbackground-color: #333;\n\t\t\tfont-family: sans-serif;\n\t\t\tpadding: 20px;\n\t\t\tcolor: #ccc;\n\t\t}\n\t\tnav {\n\t\t\tbackground-color: #222;\n\t\t\tpadding: 10px;\n\t\t\tcolor: #333;\n\t\t}\n\t\ta {\n\t\t\tcolor: #aaa;\n\t\t}\n\t\t-------------------------------\n\t- add image to info page\n\t- add JavaScript \n\t\t- `js/main.js`\n\t\t----------------------------------------------\n\t\tconst showInfo = () => {\n\t\t\tconst productInfoElem = document.querySelector('.productInfo');\n\t\t\tproductInfoElem.innerHTML = 'This is a Tektronix Oscilloscope.';\n\t\t}\n\t\t----------------------------------------------\n\t\t- `<script src=\"js/main.js\" defer></script>`\n\t\t- `<button onclick=\"showInfo()\">Show Info</button>`\n- Express solved problem:\n\t- we now can serve HTML/CSS/JavaScript pages 1-to-1 from backend\n- new problem:\n\t- how can we add dynamic content from backend to our HTML like we did before?\n\t\t- solution: EJS (Embedded JavaScript templating)\n- add EJS:\n\t- `npm i ejs`\n\t- change info page from HTML to EJS\n\t\t- add to server.js:\n\t\t\t----------------------\n\t\t\tapp.set('view engine', 'ejs');\n\t\t\tapp.set('views', path.join(__dirname, './public'));\n\t\t\t----------------------\n\t\t- rename `info.html` to `info.ejs`\n\t\t- change to:\n\t\t\t----------------------\n\t\t\tapp.get('/info', (req, res) => {\n\t\t\t\tres.render('info');\n\t\t\t});\n\t\t\t----------------------\n\t\t- send variables to EJS page\n\t\t\t-----------------------------\n\t\t\tres.render('info', { message: 'Welcome to the info page.' });\n\t\t\t-----------------------------\n\t\t- add: `<p><%=message%>`\n\t\t- add logic\n\t\t\t- `showImages: false`\n\t\t\t- `<% if(showImages) {%>`\n\t\t- add site title to info page\n\t- change index page from HTML to EJS\n\t\t- share siteTitle\n\t\t- add different message\n\t- consolidate siteTitle into `siteData`\n\t\t- `...siteData,`\n\t- turn nav into a partial\n\t\t- move nav HTML to `_nav.ejs`\n\t\t- include from index with `<%- include ('_nav.ejs') %>`\n\t\t- add prefix with style\n\t\t- include from info page as well","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-20 06:47:20","systemWhoCreated":"systemUnknown"},{"id":416,"category":"Node","title":"Create a backend-frontend implementation of MVC","body":"- create a create-react-app frontend and Node/Express backend which allows the frontend to call a controller to perform specific tasks\n- the backend of this app will read (`getPin`) and save (`savePin`) a pin number in a text file on the back end with two endpoints##screenshotmvcapp4\n- first the app will be made without a controller to show that there is code repetition\n- then the backend will be refactored with a controller so the frontend call access functions of the controller with actions\n\t- this eliminates the code repetition \n\t- simplifies calling backend tasks\n- to demonstrate that the MVC controller-action pattern simplifies programming\n\t- a new action called `getTitle` will be created and accessed\n- **basic app setup**\n\t- setup create-react-app\n\t\t- or blankcra app with `npm i`\n\t- change modules to ES6\n\t\t- `\t\"type\": \"module\",`\n\t- install express and cors\n\t\t- `npm i express cors`\n\t- install git\n\t\t- `git init`\n- **backend setup**\n\t- create `backend/server.js`\n\t\t----------------------------------------\n\t\timport express from 'express';\n\t\timport fs from 'fs';\n\t\timport cors from 'cors';\n\n\t\tconst app = express();\n\t\tconst port = 3021;\n\n\t\tapp.use(cors());\n\t\tapp.use(express.json());\n\n\t\tapp.get('/getpin', (req, res) => {\n\t\t\tfs.readFile('./backend/data/pin.txt', 'utf-8', (err, data) => {\n\t\t\t\tres.status(200).send({\n\t\t\t\t\tpin: data\n\t\t\t\t});\n\t\t\t});\n\t\t});\t\t\n\n\t\tapp.post('/savepin', (req, res) => {\n\t\t\tconst newpin = req.body.pin;\n\t\t\tfs.writeFile('./backend/data/pin.txt', newpin, (err) => {\n\t\t\t\tres.status(200).json({\n\t\t\t\t\tsuccess: true\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tapp.listen(port, () => {\n\t\t\tconsole.log(`Listening on port ${port}.`);\n\t\t});\n\t\t----------------------------------------\n\t- create `backend/data/pin.txt`\n\t\t------------------------\n\t\t0000\n\t\t------------------------\n\t- create npm script for backend\n\t\t- `\"backend\": \"npx nodemon ./backend/server.js\"`\n\t- Postman\n\t\t- GET - http://localhost:3021/getpin\n\t\t- POST - http://localhost:3021/savepin\n\t\t\t- body - raw - JSON\n\t\t\t\t------------------------------\n\t\t\t\t{\n\t\t\t\t\t\"pin\": \"2222\"\n\t\t\t\t}\n\t\t\t\t------------------------------\n- **frontend setup**\n\t- show pin on load\n\t\t-------------------------------\n\t\t(async () => {\n\t\t\tconst response = await fetch('http://localhost:3021/getpin');\n\t\t\tconst data = await response.json();\n\t\t\tsetPin(data.pin);\n\t\t})();\n\t\t-------------------------------\n\t- update frontend pin when input value changes\n\t\t---------------------------------------\n\t\tconst handlePinChange = (e) => {\n\t\t\tsetPin(e.target.value);\n\t\t}\n\t\t---------------------------------------\n\t- change pin with input field and button\n\t\t-----------------------------------\n\t\tconst savePin = () => {\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({ pin })\n\t\t\t};\n\t\t\t(async () => {\n\t\t\t\tawait fetch(`http://localhost:3021/savepin`, requestOptions);\n\t\t\t})();\n\t\t}\n\t\t-----------------------------------\n- **problem**:\n\t- we want to add API endpoint `getTitle` as well\n\t- we realize that we will be duplicating code\n\t- each new endpoint we add will duplicate code\n\t\t- 10 endpoints per page x 10 pages = 100 endpoints in server.js, too much\n- **solution**:\n\t- create a MVC pattern\n\t- create one endpoint that accepts `controller*`\n\t- one controller per page\n\t- numerous actions per controller\n\t- we will create `controllerApp` for the App.js page\n\t\t- this controller will have three actions: `getPin`, `savePin` and `getTitle`\n- **MVC setup**:\n\t- test req.path for dynamic controller\n\t\t--------------------------\n\t\tapp.post('/controller*', (req, res) => {\n\t\t\tswitch (req.path) {\n\t\t\t\tcase '/controllerApp':\n\t\t\t\t\tconst controller = new ControllerApp(req, res);\n\t\t\t\t\tcontroller.process();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('bad controller');\n\t\t\t}\n\t\t});\n\t\t--------------------------\n\t- `controller.js`\n\t\t-----------------------------\n\t\tclass Controller {\n\t\t\tconstructor(req, res) {\n\t\t\t\tthis.req = req;\n\t\t\t\tthis.res = res;\n\t\t\t\tthis.action = this.req.body.action;\n\t\t\t\tthis.actionMethodName = 'action_' + this.action;\n\t\t\t}\n\n\t\t\tprocess() {\n\t\t\t\tthis[this.actionMethodName]();\n\t\t\t}\n\n\t\t\tgetValue(idCode) {\n\t\t\t\treturn this.req.body[idCode];\n\t\t\t}\n\t\t}\n\n\t\texport default Controller;\n\t\t-----------------------------\n\t- `controllerApp.js`\n\t\t---------------------------------\n\t\timport Controller from './controller.js';\n\t\timport fs from 'fs';\n\n\t\tclass ControllerApp extends Controller {\n\n\t\t\tconstructor(req, res) {\n\t\t\t\tsuper(req, res);\n\t\t\t}\n\n\t\t\t// refactor endpoints from server.js\n\n\t\t}\n\t\texport default ControllerApp;\n\t\t---------------------------------\n\t- refactor from server.js:\n\t\t---------------------------------\n\t\taction_getPin() {\n\n\t\t}\n\t\t---------------------------------\n\t- test with Postman\n\t- simplify controller/action call on frontend, with class 'backendTools.js'\n\t\t---------------------------------------\n\t\texport const callBackendController = (action, infos, callback = null) => {\n\t\t\t(async () => {\n\t\t\t\tconst response = await fetch('http://localhost:3021/controllerApp', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\taction,\n\t\t\t\t\t\t...infos\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tif (callback !== null) {\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tcallback(data);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\t---------------------------------------\n\t- call frontend controller\n\t\t-------------------------------\n\t\tuseEffect(() => {\n\t\t\tcallBackendController('getPin', {}, (data) => {\n\t\t\t\tsetPin(data.pin);\n\t\t\t});\n\t\t}, []);\n\n\t\tconst savePin = () => {\n\t\t\tcallBackendController('savePin', { pin });\n\t\t}\n\t\t-------------------------------\n\t- add another controller action\n\t\t- frontend:\n\t\t\t---------------------------------\n\t\t\tcallBackendController('getTitle', {}, (data) => {\n\t\t\t\tsetTitle(data.title);\n\t\t\t});\n\t\t\t---------------------------------\n\t\t- backend:\n\t\t\t---------------------------------\n\t\t\taction_getTitle() {\n\t\t\t\tthis.res.status(200).send({\n\t\t\t\t\ttitle: 'Pin Manager' \n\t\t\t\t});\n\t\t\t}\n\t\t\t---------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-26 05:32:56","systemWhoCreated":"systemUnknown"},{"id":417,"category":"Heroku","title":"Publish a simple Node/Express site at Heroku","body":"- these instructions will show you how to publish a Node/Express site at Heroku\n- you are allowed 5 online sites with the free Heroku account without giving any credit card information\n- you can rename your site to give it a custom URL, e.g. `https://your-custom-url-here.herokuapp.com`##herokuHelloWorldOk\n- **sign up for a free Heroku account**\n\t- https://signup.heroku.com\n\t- enter information\n\t- click on e-mail link\n- **sign in**\n\t- log into site\n\t- switch to VSCode\n- **publish minimal Node/Express site**\n\t- setup\n\t\t- `npm init -y`\n\t\t- `git init`\n\t\t- `npm i express`\n\t\t- package.json: \n\t\t\t- `\"type\": \"module\",`\n\t\t\t- `\"start\": \"node index.js\"`\t\n\t- index.js\n\t\t-----------------------------\n\t\timport express from 'express';\n\n\t\tconst app = express();\n\t\tconst port = process.env.PORT || 3011;\n\n\t\tapp.get('/', (req, res) => res.send('Hello world'));\n\n\t\tapp.listen(port, () => console.log(`Listening on http://localhost:${port}`));\n\t\t-----------------------------\n\t- test locally\n\t\t- `npm start`\n\t\t- in browser: `http://localhost:3011`\n\t- publish to local git repository\n\t\t- .gitignore\n\t\t\t----------------------------\n\t\t\tnode_modules\n\t\t\t----------------------------\t\n\t\t- commit initial changes\n\t- publish at Heroku\n\t\t- first [download CLI](https://devcenter.heroku.com/articles/heroku-cli) if you haven't\n\t\t- terminal: `heroku login`, press **Enter**\n\t\t- browser: click on **Log In** button, close browser tab\n\t\t- terminal: \n\t\t\t- `heroku create`\n\t\t\t- `git push heroku master`\n\t\t\t- ctrl-click on deployed `...herokuapp.com` site link, e.g. `https://guarded-hollows-94560.herokuapp.com/`\n\t- rename site\n\t\t- go to your [Heroku dashbaord](https://dashboard.heroku.com/apps)\n\t\t- click on site\n\t\t- Settings\n\t\t- type in new name, e.g. `edward-hello-world` and click **Save**\n\t\t- terminal:\n\t\t\t- `git remote rm heroku`\n\t\t\t- e.g. `heroku git:remote -a edward-hello-world`\n\t\t- browser: \n\t\t\t- new site name is immediately available, e.g. `https://edward-hello-world.herokuapp.com`\n- develop and republish subsequent changes\n\t- `git add .`\n\t- `git commit -m \"commit message\"`\n\t- `git push`\n- trouble-shooting\n\t- get current remote origin: `git remote -v`\n\t- set remote origin: e.g. `git remote set-url origin https://git.heroku.com/edward-hello-world.git`\n\t- on Ubuntu\n\t\t- if your app doesn't appear in browser\n\t\t\t- `heroku git:remote -a name-of-your-app`\n\t\t- if you can't push to Heroku\n\t\t\t- `git push heroku HEAD:main`\n\t\t\t- `git push heroku HEAD:master`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-27 21:58:52","systemWhoCreated":"systemUnknown"},{"id":418,"category":"Heroku","title":"Publish a custom Node/Express/EJS/JSON-data-driven site at Heroku","body":"- these instructions show you how to create and publish to Heroku a more complex Node/Express site \n\t- it has many more features than the [simple site](https://onespace.netlify.app/howtos?id=417) we published at Heroku:\n\t\t- uses EJS views\n\t\t\t- and included views\n\t\t- has a url-router navigation\n\t\t- reads from JSON files\n\t\t\t- site features can be managed from a JSON config file\n\t\t- serves images\n\t\t- HTML pages have CSS and frontend JavaScript\n\t\t- imports server-side helper functions\n\t\t- has a more standard app structure (`/public` and `/src`) but site is minimal without any Webpack/create-react-app magic in background\n\t\t- this is a good site to use/practice vanilla-JavaScript skills without any framework, \"stay close to the metal\"\n\t\t- has good SEO advantages over create-react-app since HTML/CSS/JavaScript is being sent to browser on site-load\n- **set up project**\n\t- browser: [log into Heroku](https://id.heroku.com/login)\n\t- terminal: create app directory, e.g. `bookstoreapp`\n\t- open VSCode in that app directory\n\t- set up basic site\n\t\t- `npm init -y`\n\t\t- `git init`\n\t\t\t- `.gitignore` with `node_modules`\n\t\t- `npm i express`\n\t\t- `npm i ejs`\n\t\t- package.json: \n\t\t\t- `\"type\": \"module\",`\n\t\t\t- `\"start\": \"npx nodemon src/app.js\"`\n- **build backend**\n\t- `/src/app.js`\n\t\t-------------------------------------\n\t\timport express from 'express';\n\t\timport path from 'path';\n\t\tconst __dirname = path.resolve(path.dirname(''));\n\t\timport * as qfil from './qtools/qfil.js';\n\n\t\tconst app = express();\n\t\tconst port = process.env.PORT || 3011;\n\n\t\tapp.set('view engine', 'ejs');\n\t\tapp.set('views', path.join(__dirname, './public/views'));\n\n\t\tconst staticDirectory = path.join(__dirname, './public');\n\t\tapp.use(express.static(staticDirectory));\n\n\t\tqfil.getJsonDataFromFile('siteData.json', (siteData) => {\n\n\t\t\tapp.get('/info', (req, res) => {\n\t\t\t\tres.render('info',\n\t\t\t\t\t{\n\t\t\t\t\t\t...siteData,\n\t\t\t\t\t\tmessage: \"Welcome to info page.\"\n\t\t\t\t\t});\n\t\t\t});\n\t\t\tapp.get('/', (req, res) => {\n\t\t\t\tres.render('index',\n\t\t\t\t\t{\n\t\t\t\t\t\t...siteData,\n\t\t\t\t\t\tmessage: 'Welcome to the home page.',\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tapp.listen(port, () => {\n\t\t\t\tconsole.log(`Listening on port http://localhost:${port}`);\n\t\t\t});\n\t\t});\n\t\t-------------------------------------\n\t- `/src/data/siteData.json`\n\t\t-----------------------------------\n\t\t{\n\t\t\t\"siteTitle\": \"The Book Seller\",\n\t\t\t\"showImages\": true\n\t\t}\n\t\t-----------------------------------\n\t- `/src/qtools/qfil.js`\n\t\t-----------------------------------\n\t\timport fs from 'fs';\n\n\t\texport const getJsonDataFromFile = (fileName, callback) => {\n\t\t\tfs.readFile(`./src/data/${fileName}`, 'utf-8', (err, rawData) => {\n\t\t\t\tconst data = JSON.parse(rawData);\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\t}\n\t\t-----------------------------------\n- **build frontend**\n\t- `/public/views/index.ejs`\n\t\t------------------------------------------\n\t\t<html lang=\"en\">\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<title><%=siteTitle%></title>\n\t\t\t<link rel=\"stylesheet\" href=\"css/main.css\">\n\t\t</head>\n\t\t<body>\n\t\t\t<h1><%=siteTitle%></h1>\n\t\t\t<%- include('_nav.ejs') %>\n\t\t\t<p><%=message%></p>\n\t\t</body>\n\t\t</html>\n\t\t------------------------------------------\n\t- `/public/views/info.ejs`\n\t\t------------------------------------------\n\t\t<html>\n\n\t\t<head>\n\t\t\t<title>\n\t\t\t\t<%=siteTitle%>\n\t\t\t</title>\n\t\t\t<link rel=\"stylesheet\"\n\t\t\t\t  href=\"css/main.css\">\n\t\t\t<script src=\"js/main.js\"\n\t\t\t\t\tdefer></script>\n\t\t</head>\n\n\t\t<body>\n\t\t\t<h1><%=siteTitle%></h1>\n\t\t\t<%- include('_nav.ejs') %>\n\t\t\t<p>\n\t\t\t\t<%=message%>\n\t\t\t</p>\n\t\t\t<p>Here is our best product:</p>\n\t\t\t<% if(showImages)\n\t\t\t   {%>\n\t\t\t\t<img src=\"images/book.png\"\n\t\t\t\t\t alt=\"book\">\n\t\t\t\t<% }\n\t\t\t\t   %>\n\t\t\t\t\t<div class=\"showInfoArea\">\n\t\t\t\t\t\t<button onclick=\"showInfo()\">Show Info</button>\n\t\t\t\t\t\t<div class=\"productInfo\"></div>\n\t\t\t\t\t</div>\n\t\t</body>\n\n\t\t</html>\n\t\t------------------------------------------\n\t- `/public/views/_nav.ejs`\n\t\t------------------------------------------\n\t\t<nav><a href=\"/\">Home</a> | <a href=\"info\">Info</a></nav>\n\t\t------------------------------------------\n\t- `/public/css/main.css`\n\t\t------------------------------------------\n\t\tbody {\n\t\t\tbackground-color: #333;\n\t\t\tfont-family: sans-serif;\n\t\t\tpadding: 20px;\n\t\t\tcolor: #ccc;\n\t\t}\n\n\t\tnav {\n\t\t\tbackground-color: #222;\n\t\t\tpadding: 10px;\n\t\t\tcolor: #333;\n\t\t}\n\n\t\ta {\n\t\t\tcolor: #aaa;\n\t\t}\n\n\t\t.prefix {\n\t\t\tcolor: yellow;\n\t\t}\n\n\t\t.showInfoArea {\n\t\t\tmargin: 10px 0 0 0;\n\t\t}\n\t\t.showInfoArea .productInfo {\n\t\t\tmargin: 5px 0 0 0;\n\t\t}\n\t\t------------------------------------------\n\t- `/public/js/main.js`\n\t\t------------------------------------------\n\t\tconst showInfo = () => {\n\t\t\tconst productInfoElem = document.querySelector('.productInfo');\n\t\t\tproductInfoElem.innerHTML = 'This is the best book.';\n\t\t}\n\t\t------------------------------------------\n\t- `/public/images/book.png`\n\t\t- download and save this image [here](https://edward-the-book-seller.herokuapp.com/images/book.png)\n- **publish to Heroku**\n\t- commit changes\n\t- publish\n\t\t- terminal: `heroku login`, press **Enter**\n\t\t- browser: click on **Log In** button, close browser tab\n\t\t- terminal: \n\t\t\t- `heroku create`\n\t\t\t- `git push heroku master`\n\t\t\t- ctrl-click on deployed `...herokuapp.com` site link, e.g. `https://guarded-hollows-94560.herokuapp.com/`\n\t- rename site\n\t\t- go to your [Heroku dashbaord](https://dashboard.heroku.com/apps)\n\t\t- click on site\n\t\t- Settings\n\t\t- type in new name, e.g. `edward-the-book-seller` and click **Save**\n\t\t- terminal:\n\t\t\t- `git remote rm heroku`\n\t\t\t- e.g. `heroku git:remote -a edward-the-book-seller`\n\t\t- browser: \n\t\t\t- new site name is immediately available, e.g. `https://edward-the-book-seller.herokuapp.com`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-28 08:00:28","systemWhoCreated":"systemUnknown"},{"id":419,"category":"Node/Express","title":"Node/Express site that alters JSON on the backend via the frontend","body":"- This is an Node/Express site that serves EJS pages including a settings page that allows the user to type in a password which changes a JSON file on the backend via the API.\n- See this site live at: [https://edward-the-book-seller.herokuapp.com](https://edward-the-book-seller.herokuapp.com)\n- Get the full code at [GitHub](https://github.com/edwardtanguay/express-node-ejs-json-write)##thebookbok\n- `settings.ejs`\n\t-----------------------------------\n\t<html>\n\t<head>\n\t\t<title>\n\t\t\t<%=siteTitle%>\n\t\t</title>\n\t\t<link rel=\"shortcut icon\"\n\t\t\t  href=\"#\">\n\t\t<link rel=\"stylesheet\"\n\t\t\t  href=\"css/main.css\">\n\t\t<script>\n\t\t\tconst handleImageState = (showImages) => {\n\t\t\t\tconst passwordElem = document.querySelector('.password');\n\t\t\t\t(async () => {\n\t\t\t\t\tconst response = await fetch('http://localhost:3011/api/changeState', {\n\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tshowImages,\n\t\t\t\t\t\t\tpassword: passwordElem.value\n\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tconst message = data.message;\n\t\t\t\t\tconst messageElem = document.querySelector('.message');\n\t\t\t\t\tpasswordElem.value = '';\n\t\t\t\t\tmessageElem.innerText = message;\n\t\t\t\t\tif(response.status == 200) {\n\t\t\t\t\t\tmessageElem.classList.remove('failure');\n\t\t\t\t\t\tmessageElem.classList.add('success');\n\t\t\t\t\t}\n\t\t\t\t\tif(response.status == 401) {\n\t\t\t\t\t\tmessageElem.classList.remove('success');\n\t\t\t\t\t\tmessageElem.classList.add('failure');\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<h1>\n\t\t\t<%=siteTitle%>\n\t\t</h1>\n\t\t<%- include('_nav.ejs')\n\t\t\t%>\n\t\t\t<p>\n\t\t\t\t<%=message%>\n\t\t\t</p>\n\t\t\t<p>Changing this setting will affect all sessions permanently, not just this current session:</p>\n\t\t\t<div class=\"adminArea\">\n\t\t\t\t<div>Admin password: <input type=\"password\"\n\t\t\t\t\t\t   class=\"password\" />\n\t\t\t\t\t<button onclick=\"handleImageState(true)\">Show Images</button>\n\t\t\t\t\t<button onclick=\"handleImageState(false)\">Hide Images</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"message\">Type in password and click a button.</div>\n\t\t\t</div>\n\t</body>\n\t</html>\n\t-----------------------------------\n- `api.js`\n\t-------------------------------\n\timport express from 'express';\n\timport * as qfil from '../qtools/qfil.js';\n\n\tconst router = express.Router();\n\trouter.use(express.json());\n\n\trouter.patch('/changeState', (req, res) => {\n\t\tconst { showImages, password } = req.body;\n\t\tif (password === 'pass123') {\n\t\t\tqfil.getJsonDataFromFile('siteData.json', (siteData) => {\n\t\t\t\tsiteData.showImages = showImages;\n\t\t\t\tqfil.saveJsonDataToFile('siteData.json', siteData, () => {\n\t\t\t\t\tres.status(200).json({\n\t\t\t\t\t\tmessage: showImages ? `This site now shows images.` : `This site now hides images.`\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tres.status(401).json({\n\t\t\t\tmessage: `Password was not correct. No settings were changed.`\n\t\t\t});\n\t\t}\n\t});\n\n\texport default router;\n\t-------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-29 14:27:09","systemWhoCreated":"systemUnknown"},{"id":420,"category":"Hyper-V","title":"Install a Windows 10 machine on Hyper-V","body":"- start Hyper-V\n\t- Schnellerstellung\n\t- _Lokale Installationsquelle\n\t- Weitere Optionen\n\t\t- \"Windows 10\"\n\t\t- (Default Switch)\n\t- Installationsquelle ändern\n\t- `D:\\large`\n\t- windows10_2020-05-23.iso\n\t- Virtuelle Computer erstellen\n\t- Verbinden\n\t- Starten\n\t\t- quickly press ENTER\n\t- Next\n\t- Install Now\n\t- *** click at bottom of window: \"I don't have a product key\"\n\t- Windows Pro\n\t- Next\n\t- Accept, Next\n\t- Custom, Next, ...\n\t- wait about 7 minutes for install:##thewaitwin\n- virtual machine restarts\n\t- wait...\"Getting ready\"\n\t- Germany\n\t- US\n\t- Create account\n\t- skdjfskdfjskdfj@hotmail.com\n\t\t- (you won't ever have to confirm mail)\n\t- Test4Test$\n\t- add birthday etc.\n\t- create pin: 3364\n\t- no, no,  no,  no,  no,  no,  no,  no\n\t- wait..\"We're getting ready...\"\n\t- will show windows:##thewinwinij\n\t- close virtual machine window\n\t- right-click, ausschalten\n- start again\n\t- double-click Windows 10\n\t- Start\n\t- pin","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-31 09:18:12","systemWhoCreated":"systemUnknown"},{"id":421,"category":"MongoDB","title":"How to install MongoDB on Windows and Ubuntu","body":"- **Windows machine that has MongoDB 4.4.3 installed**\n\t- download MongoDB\n\t\t- https://www.mongodb.com/try/download/community\n\t\t- download MongoDB Community Server\n\t\t- takes about 1 minute to download\n\t\t\t- 2021-01-15: mongodb-windows-x86_64-4.4.3-signed.msi\n\t\t\t- 2021-10-31: mongodb-windows-x86_64-5.0.3-signed.msi\n\t- install\n\t\t- 2021-01-15\n\t\t\t- installing here: C:\\Program Files\\MongoDB\\Server\\4.4\\data\\\n\t\t- 2021-10-31\n\t\t\t- installing here: C:\\Program Files\\MongoDB\\Server\\5.0\\data\\\n\t- Mongo Compass opened\n\t\t- seemed to work, I can access databases I had created in 4.4.3\n\t\t- when I run Mongo at CMD: `mongo`\n\t\t\t- the shell seems to be 4.4.3 but the server 5.0##theshell443\n\t\t\t- went to: https://www.mongodb.com/try/download/shell\n\t\t\t- says I can download 1.1.1\n\t\t\t- downloaded and instaleld 1.1.1\n\t\t\t- `mongo`\n\t\t\t- mongo shell is still 4.4.3\n\t\t\t- found a 5.03 shell download here: https://www.mongodb.com/download-center/enterprise/releases\n\t\t\t\t- file is: mongodb-windows-x86_64-enterprise-5.0.3-signed.msi\n\t\t\t\t- got a conflict: ##500conflig\n\t\t\t\t- we don't need this\n\t\t- we want to repoint the environment path to 5.0.3 instead of 4.4.3\n\t\t\t- found in environment path system variables: `C:\\Program Files\\MongoDB\\Server\\4.4\\bin`\n\t\t\t\t- under `C:\\Program Files\\MongoDB\\Server` we have 4.2, 4.4, 5.0\n\t\t\t- changed to: `C:\\Program Files\\MongoDB\\Server\\5.0\\bin`\n\t\t\t\t- and fixed mongorc.js problem\n- **Windows virtual machine without Mongo installed yet**\n\t- downloaded and installing: mongodb-windows-x86_64-5.0.3-signed.msi\n\t\t- custom, next, next\n\t- brings up Compass version 1.28.4\n\t- typing `mongo` gets \"not recognized command\" error\n\t\t- restarting\n\t\t- still can't find mongo\n\t- official guide: https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows\n\t\t- \"The MongoDB Shell (mongosh) is not installed with MongoDB Server.\"\n\t\t- https://docs.mongodb.com/mongodb-shell/install/\n\t\t- installing from: https://www.mongodb.com/try/download/shell?jmp=docs\n\t\t\t- version 1.1.1\n\t\t\t- installed\n\t\t\t- in `c:\\edward` the command `mongosh` works (path already set up, found in user environment variables: `c:\\Users\\oweir\\AppData\\Local\\Programs\\mongosh\\`)##themongorcjs\n\t\t\t- fixing mongorc.js problem\n\t\t\t\t- in file explorer, go to `%UserProfile%`\n\t\t\t\t\t- copied `.mongorc.js` (which was empty) to `.mongoshrc.js`\n\t\t\t\t\t- error gone\n\t\t\t- fixing error \"Access control is not enabled...\"\n\t\t\t\t- will do this later, has to do with user access but access is now open for dev environment\n\t- get `mongo` to work as well\n\t\t- in `c:\\edward` the command `mongo` is still unrecognized\n\t\t- going to `c:\\Program Files\\MongoDB\\Server\\5.0\\bin` then `mongo` works:##themongoon50\n\t\t- setting environment path\n\t\t\t- WINDOWS KEY, 'path'\n\t\t\t- add system variables path:##sysvarpath5\n\t\t\t- works now in `c:\\edward`\n\t- %% both mongo server and client (5.0.3) and mongosh (1.1.1) are installed \n- **Ubuntu virtual machine without Mongo installed yet**\n\t- full instructions here: https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\n\t- prepare installation\n\t\t- `wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -`\n\t\t\t- says: \"OK\"\n\t\t- `sudo apt-get install gnupg`\n\t\t\t- had to run this first: `sudo dpkg --configure -a`\n\t\t\t\t- took about 3 minutes\n\t\t\t- then had to do `sudo apt --fix-broken install`\n\t\t- `echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list`\n\t\t\t- not sure this is necessary\n\t\t- `sudo apt-get update`\n\t- install MongoDB\n\t\t- `sudo apt-get install -y mongodb-org`\n\t- start MongoDB\n\t\t- `sudo systemctl start mongod`\n\t\t- `sudo systemctl status mongod`\n\t\t- `mongo`\n- **Ubuntu machine with Mongo shell/server v4.0.25**\n\t- first remove MongoDB 4.0\n\t\t- full instructions here: https://stackoverflow.com/questions/29554521/uninstall-mongodb-from-ubuntu\n\t\t- `sudo service mongod stop`\n\t\t- `sudo apt-get purge mongodb-org*`\n\t\t- `sudo rm -r /var/log/mongodb`\n\t\t- `sudo rm -r /var/lib/mongodb`\n\t- prepare installation\n\t\t- `wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -`\n\t\t\t- says: \"OK\"\n\t\t- `sudo apt-get install gnupg`\n\t\t\t- had to run this first: `sudo dpkg --configure -a`\n\t\t\t\t- took about 3 minutes\n\t\t\t- then had to do `sudo apt --fix-broken install`\n\t\t- `echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list`\n\t\t\t- not sure this is necessary\n\t\t- `sudo apt-get update`\n\t- install MongoDB\n\t\t- `sudo apt-get install -y mongodb-org`\n\t- start MongoDB\n\t\t- `sudo systemctl start mongod`\n\t\t- `sudo systemctl status mongod`\n\t\t- `mongo`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-10-31 11:22:49","systemWhoCreated":"systemUnknown"},{"id":422,"category":"MySQL","title":"Install MySQL on Ubuntu and create Node/Express API","body":"- these instructions will show you how to\n\t- install MySQL on Ubuntu\n\t- install Node and npm\n\t- install MySQL Workbench and DBeaver to manage your MySQL databases\n\t- set up a Node/Express API to serve data from the Mysql database\n- make sure you don't already have MySQL installed\n\t- `mysql -V`##nomysqlwithv\n- install MySQL\n\t- `sudo apt update`\n\t\t- 30 seconds\n\t- `sudo apt install mysql-server`\n\t\t- 3 minutes\n\t- `sudo mysql_secure_installation`\n\t\t- password security level = 0\n\t\t- root password \"rootroot\" (test)\n\t\t- answer Y to all questions\n\t\t- not that root still does not need to type in correct password (!)\n\t\t\t- \"Note that even though you’ve set a password for the root MySQL user, this user is not currently configured to authenticate with a password when connecting to the MySQL shell.\"\n- note a non-superuser cannot access mysql\n\t- `mysql` (access denied)\n- log into mysql database as superuser\n\t- as superuser you can log in without a password\n\t- `sudo su -`\n\t- `mysql`\n- create a webuser that only has access to read the database\n\t- `CREATE USER webuser@localhost IDENTIFIED BY 'passpass';`\n\t\t- `GRANT SELECT on *.* TO webuser@localhost;`\n\t- see what users are in system\n\t\t- `SELECT User FROM mysql.user;`\n- install northwind database into mysql\n\t- https://github.com/dalers/mywind\n\t- unpack and copy files\n\t\t- northwind.sql\n\t\t- northwind-data.sql\n\t- `SHOW DATABASES;`\n\t- `CREATE DATABASE northwind;`\n\t- `SHOW DATABASES;`\n\t- `USE northwind;`\n\t- `SOURCE northwind.sql`\n\t\t- 1 minute\n\t- `SHOW TABLES;`\n\t- `SELECT * FROM customers;` (empty)\n\t- `SOURCE northwind-data.sql`\n\t\t- 5 minutes\n\t- `SELECT * FROM customers;`\n\t- `SELECT company,last_name,first_name FROM customers;`\n\t- exit\n- access with webuser\n\t- `mysql -u webuser -p`\n\t- `SHOW DATABASES;`\n\t- `use northwind;`\n\t- `SHOW TABLES;`\n\t- `SELECT * FROM products;`\n\t- `DESCRIBE products;`\n\t- `SELECT id,product_name FROM products;`\n\t- `INSERT INTO products (product_name) VALUES (\"Product 888\");` (command denied to user)\n- install MySQL management console application\n\t- install and use MySQL Workbench\n\t\t- `snap install mysql-workbench-community`\n\t\t- Show Applications\n\t\t\t- add to favorites\n\t\t\t- open##thworkworkbenc\n\t\t- set up connection for webuser\n\t\t\t- get error: **An AppArmor policy prevents this sender from sending this message to this recipient**\n\t\t\t- problem: snap application is sandboxed\n\t\t\t- fix: `sudo snap connect mysql-workbench-community:password-manager-service :password-manager-service`\n\t\t- log in as webuser##thewebwebuserok\n\t\t- MySQL Workbench has issue with UTF-8 encoding on Ubuntu:##worksbenchubuntuchars\n\t- install DBeaver\n\t\t- `sudo snap install dbeaver-ce`\n\t\t- add to favorites\n\t\t- open\n\t\t- yes to create sample database\n\t\t\t- allow it to download SQLite drivers\n\t\t\t- explore database##theveavsdf\n\t\t- connect to MySQL database\n\t\t\t- Database\n\t\t\t- New Database Connection\n\t\t\t- enter credentials for webuser\n\t\t\t- open database\n\t\t\t\t- allow to download MySQL drivers\n\t\t- explore tables##explorerbeave\n\t\t- build SQL commands##employeesubuntubeaver\n- install Node (**DON'T INSTALL LIKE THIS, IT TAKES TOO LONG!**) Instead, skip to instructions to install `nvm` below.\n\t- `sudo apt-get install nodejs`\n\t- `sudo apt-get install npm`\n\t\t- 15 minutes (!)\n- make script that reads and displays data from MySQL database\n\t------------------------------------------\n\tvar mysql = require('mysql');\n\n\tvar con = mysql.createConnection({\n\t  host: \"localhost\",\n\t  user: \"yourusername\",\n\t  password: \"yourpassword\",\n\t  database: \"mydb\"\n\t});\n\n\tcon.connect(function(err) {\n\t  if (err) throw err;\n\t  con.query(\"SELECT * FROM customers\", (err, result) => {\n\t\t if (err) throw err;\n\t\tconsole.log(result);\n\t  });\n\t}\n\t------------------------------------------\n- error: **Failed to Connect to MySQL DB via MySQL**\n\t- fix: `ALTER USER webuser@localhost IDENTIFIED WITH mysql_native_password BY 'passpass';`\n- switch to import\n\t- Node is Version 10\n\t- install nvm\n\t\t- `sudo apt install curl`\n\t\t- `curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash`\n\t\t- `nvm install node`\n- install express\n\t- `npm i express cors`\n\t- change index.js\n\t\t------------------------------\n\t\timport express from 'express';\n\t\timport cors from 'cors';\n\t\timport mysql from 'mysql';\n\n\t\tconst app = express();\n\t\tconst port = process.env.PORT || 3011;\n\n\t\tapp.use(cors());\n\n\t\tapp.get('/', (req,res) => {\n\t\t\tconst connection = mysql.createConnection({\n\t\t\t\thost: 'localhost',\n\t\t\t\tuser: 'webuser',\n\t\t\t\tpassword: 'passpass',\n\t\t\t\tdatabase: 'northwind'\n\t\t\t});\n\t\t\tconnection.connect((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t\tconsole.log('mysql connected');\n\t\t\t\tconst sql = 'SELECT * FROM customers';\n\t\t\t\tconnection.query(sql, (err, result) => {\n\t\t\t\t\tif (err) throw err;\n\t\t\t\t\tres.json({\n\t\t\t\t\t\tcustomers: result\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tapp.listen(port, () => console.log(`listening on http://localhost:${port}`));\n\t\t------------------------------\t\t\n- other commands\n\t- `DELETE FROM mysql.user WHERE User = 'readwrite';`\n\t- `sudo apt remove nodejs npm`\n\t- uninstall mysql\n\t\t- `sudo apt-get remove --purge mysql*`\n\t\t- `sudo apt-get autoremove`\n\t\t- `sudo apt-get autoclean`","points":20,"extras":"","systemWhenCreated":"2021-11-04 05:08:19","systemWhoCreated":"systemUnknown"},{"id":423,"category":"MySQL","title":"Install MySQL on Windows and create Node/Express API","body":"- these instructions will show you how to\n\t- install MySQL on Windows\n\t- install the MySQL Workbench to manage your MySQL databases\n\t- set up a Node/Express API to serve data from the Mysql database\n- install MySQL server \n\t- go to: https://dev.mysql.com/downloads/mysql\n\t- download the MSI installer:##thewinanddownok\n\t- download the larger msi file:##thetheclicklarger\n\t- click **No thanks, just start my download.**\n\t- execute the downloaded file to begin the install\n\t- Developer Default\n\t- Execute\n\t- Next, Yes\n\t- Execute, takes about 10 minutes##thewininstalformy\n\t- Next 5x\n\t- root password: \"rootroot\" (for testing)\n\t- Next\n\t- Execute\n\t- Next, Next\n\t- connect to server:##thefserverok\n\t- Next\n\t- Execute\n- test access to MySQL at command line\n\t- Windows explorer: `C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin`\n\t- shift-right-click to Powershell\n\t- `./mysql -root -p`\n\t- log in as root\n\t- log out\n- set environment variables\n\t- in system path, add: `C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin`\n- set up project\n\t- create directory: `c:\\projects\\northwindweb`\n\t- `mysql -u root -p`\n\t- create a webuser that only has access to read the database\n\t\t- `CREATE USER webuser@localhost IDENTIFIED BY 'passpass';`\n\t\t\t- `GRANT SELECT on northwind.* TO webuser@localhost;`\n\t\t- see what users are in system\n\t\t\t- `SELECT User FROM mysql.user;`\t\n\t- install northwind database into mysql\n\t\t- https://github.com/dalers/mywind\n\t\t- unpack and copy files\n\t\t\t- northwind.sql\n\t\t\t- northwind-data.sql\n\t\t- `SHOW DATABASES;`\n\t\t- `CREATE DATABASE northwind;`\n\t\t- `SHOW DATABASES;`\n\t\t- `USE northwind;`\n\t\t- `SOURCE northwind.sql`\n\t\t\t- 1 minute\n\t\t- `SHOW TABLES;`\n\t\t- `SELECT * FROM customers;` (empty)\n\t\t- `SOURCE northwind-data.sql`\n\t\t\t- 5 minutes\n\t\t- `SELECT * FROM customers;`\n\t\t- `SELECT company,last_name,first_name FROM customers;`\n\t\t- exit\n- open and test MySQL Workbench\n\t- Windows icon, \"workbench\", start program\n\t- connect to MySQL database\n\t\t- Database\n\t\t- New Database Connection\n\t\t- enter credentials for webuser\n\t\t- open database\n\t\t\t- allow to download MySQL drivers\n\t- explore tables\n\t- build SQL commands##theworkbenchesdkjf\n- install Node and npm, if not installed\n\t- install nvm\n\t\t- `sudo apt install curl`\n\t\t- `curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash`\n\t\t- `nvm install node`\n- create API\n\t- `npm i express cors`\n\t- change index.js\n\t\t------------------------------\n\t\timport express from 'express';\n\t\timport cors from 'cors';\n\t\timport mysql from 'mysql';\n\n\t\tconst app = express();\n\t\tconst port = process.env.PORT || 3011;\n\n\t\tapp.use(cors());\n\n\t\tapp.get('/', (req,res) => {\n\t\t\tconst connection = mysql.createConnection({\n\t\t\t\thost: 'localhost',\n\t\t\t\tuser: 'webuser',\n\t\t\t\tpassword: 'passpass',\n\t\t\t\tdatabase: 'northwind'\n\t\t\t});\n\t\t\tconnection.connect((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t\tconsole.log('mysql connected');\n\t\t\t\tconst sql = 'SELECT * FROM customers';\n\t\t\t\tconnection.query(sql, (err, result) => {\n\t\t\t\t\tif (err) throw err;\n\t\t\t\t\tres.json({\n\t\t\t\t\t\tcustomers: result\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tapp.listen(port, () => console.log(`listening on http://localhost:${port}`));\n\t\t------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-04 08:21:23","systemWhoCreated":"systemUnknown"},{"id":424,"category":"Ubuntu","title":"Install an Ubuntu 20.04.1 machine on Hyper-V","body":"- **be sure to do the minimal install below**, otherwise I got an error\n- full install takes about 25 minutes\n- new virtual machine\n- store machine in different location (D:\\hyperv)\n\t- e.g. `D:\\hyperv\\Ubuntu 20.04.1 - 2011-11-05\\\n- Generation 2\n- 3000 MB memory\n\t- use dynamic memory\n- connection: Default Switch\n- install operating system from bootable image\n\t- `D:\\large\\ubuntu-20.04.1-desktop-amd64.iso`\n- Finish\n- double-click and start\n\t- hangs here:##thehangher\n\t- after a minutes shows this:##hyperuefi\n\t- problem: This error is a consequence of having Secure Boot enabled on the VM. Secure Boot prevents the system from getting hijacked at boot time by only allowing specifically authorized boot images to load. To disable Secure Boot, power off the VM and then open the VM settings. Under Secure Boot, uncheck the box \"Enable Secure Boot\" and then click \"OK\". This will allow the VM to boot the \"unauthorized\" CD image.\n\t- fix:##enablebootsdf\n- install process\n\t- English, Instsall Ubuntu\n\t- install third-party software\n\t\t- **NOTE: do minimum install as described below**\n\t- Erase disk and install Ubuntu\n\t- got error:##grubfatalerrror\n\t- but it says installation complete:##andinstalcomp\n\t- then it started\n\t- turn machine off\n\t- started\n\t\t- **its installing again**\n\t\t- **doing minimal install this time**:##minminok\n\t\t- erase and install\n\t\t- setup user##logindatainstall\n\t\t- it says it is finished\n\t\t- restarted\n\t\t- \"to remove installation medium, press enter\"\n\t\t- seems to work, logged in\n\t\t- very simple:##theverysimpleok","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-05 16:38:00","systemWhoCreated":"systemUnknown"},{"id":425,"category":"Mongo","title":"How to install MongoDB Compass on Ubuntu","body":"- unlike MongoDB itself, Compass is not available in the base repository of Ubuntu or Debian\n\t- thus we have to download it manually from its official website\n- download Compass\n\t- https://www.mongodb.com/try/download/compass\n\t- Ubuntu shows download for Mac:##wrongcompass\n\t- change to Ubuntu:##rightdownloadcomp\n\t- save as file\n- in terminal, go to `Downloads` directory##gotodownloadubucomp\n\t- `sudo apt install ./mongodb-compass_1.28.4_amd64.deb`\t\n\t\t- takes about 2 minutes\n- add MongoDB Compass to your favorites bar\n\t- click on the **Show Applications** icon:##showapponubutn\n\t- search for `compass`, right-click icon, and add to favorites:##searchforcompassok\n- test MongoDB Compass\n\t- start Mongo daemon: `sudo systemctl start mongod`\n\t- click Mongo Compass icon in favorites bar on the left\n\t- click the Connect button##clickconnnectsdf\n\t- explore data:##compassrunningrun","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-06 11:01:21","systemWhoCreated":"systemUnknown"},{"id":426,"category":"MongoDB","title":"Install MongoDB on Ubuntu","body":"- `wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add` \n- `sudo apt-get install gnupg`\n- `echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list`\n- `sudo apt-get update`\n- `sudo apt-get install -y mongodb-org`\n- `mongo`##startsnice503\n- sudo systemctl start mongod\n- `mongosh` also works without installing it:##themongoshksdjf","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-06 11:55:44","systemWhoCreated":"systemUnknown"},{"id":427,"category":"MongoDB","title":"Get account at MongoDB Atlas and access from Compass and VSCode","body":"- go to: https://www.mongodb.com\n- register with email or Google account\n- note on terminology\n\t- cluster vs. database\n\t\t- a MontoDB Atlas cluster is like your local MongoDB server, or like your local MySQL server\n\t\t\t- each cluster has databases (like SQL databases)\n\t\t\t- each database has collections (like SQL tables)\n\t\t\t- each collection has documents (like SQL records)\n- dashboard\n\t- three dots button, Load Sample Dataset\n\t\t- loads for a few minutes\n\t- Database Access, Add New Database User\n\t\t- testuser\n\t\t- autogenerate password\n\t\t- read/write any database\n\t\t- add\n\t- Network Access\n\t\t- from anywhere\n\t- look at sample data\n\t\t- sample_airbnb.listingsAndReviews\n\t\t\t- `{\"bedrooms\": {$gt:3}}`\n\t\t\t- `{\"bedrooms\": {$gt: 4, $lt: 6}}`\n- view data with MongoDB Compass\n\t- Database Access\n\t\t- create user, e.g. testuser\n\t\t- manually give a password\n\t- Databases\n\t\t- Connect\n\t\t- copy connection string\n\t- MongoDB Compass\n\t\t- new connection\n\t\t- paste in connection string\n\t\t- click: Fill in connection fields individually\n\t\t- fill in and connect\n- view with Visual Studio\n\t- copy connection string for Compass\n\t- install the [MongoDB for VSCode extension](https://marketplace.visualstudio.com/items?itemName=mongodb.mongodb-vscode)\n\t- click leaf in sidebar\n\t- see data from Altas on the left\n\t- create new database\n\t- create new playground##vscodeandatlas","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-06 16:01:29","systemWhoCreated":"systemUnknown"},{"id":428,"category":"Heroku","title":"Create a backend Node/Express/EJS/JSON app with frontend SASS/JavaScript at Heroku","body":"- clone this GitHub Repository:\n\t- [https://github.com/edwardtanguay/ejs-fullstack-001](https://github.com/edwardtanguay/ejs-fullstack-001)\n- set up `.env` file\n\t- the `.env` file is not in the repository, so you have to create it\n\t\t--------------------------\n\t\tAPP_LOCATION = local\n\t\tBACKEND_URL = http://localhost\n\t\tADMIN_PASSWORD = yourAdminPassword\n\t\t--------------------------\n- set up Sass\n\t- make `/css/main.scss`\n\t- install VSCode extension [Live Sass Compiler](https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass)\n\t- while on the extension intro page, click on \"Watch SASS\"##onthesassclick\n- publish to Heroku\n\t- first publish to GitHub repository\n\t\t- create repository, e.g. `node-express-ejs-heroku`\n\t\t- push code\n\t- Heroku dashboard\n\t\t- New, Create new app\n\t\t- name: `node-express-ejs-heroku`\n\t\t- enable automatic deploys\n\t\t- deploy branch\n\t\t- create two environment variables\n\t\t\t- `ADMIN_PASSWORD` = `yourAdminPassword`\n\t\t\t- `BACKEND_URL` = e.g. `https://ejs-fullstack-001.herokuapp.com`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-07 09:45:06","systemWhoCreated":"systemUnknown"},{"id":429,"category":"MongoDB","title":"Import a Northwind JSON file into MongoDB via the shell","body":"- the task is to import a JSON file into a collection in a Mongo database\n- create working directory\n- create Mongo database\n\t- `mongosh`\n\t- `show dbs`\n\t\t- make sure you don't have a `northwind` database yet\n\t- `exit`\n- import the .json file\n\t- in your browser, go to: `https://github.com/raynaldmo/northwind-mongodb/tree/master/collections/json`\n\t- navigate to products.json\n\t- click on the *Raw* Button\n\t- copy the URL\n\t- `wget -O products.json https://raw.githubusercontent.com/raynaldmo/northwind-mongodb/master/collections/json/products.json`\n\t\t- if you are on Ubuntu, `wget` should be installed\n\t\t- if you are on Windows and don't have `wget`:\n\t\t\t- goto `https://eternallybored.org/misc/wget`\n\t\t\t- download the ZIP file\n\t\t\t- unpack\n\t\t\t- copy to somewhere that is in your Environment Path variable, e.g. `C:\\Program Files\\MongoDB\\Server\\5.0\\bin`\n\t- make sure you have the JSON file your working directory\n\t\t- `ls`\n\t- make sure you have the `mongoimport` command installed\n\t\t- `mongoimport --version`\n\t\t- if you are on Ubuntu, `mongoimport` should be installed with MongoDB\n\t\t- to use `mongoimport` on Windows, you have to download and install **MongoDB Database Tools**\n\t\t\t- go to the **MongoDB Database Tools** download page [here](https://www.mongodb.com/try/download/database-tools?tck=docs_databasetools)\n\t\t\t- download the MSI file and execute it\n\t- import the file\n\t\t- `mongoimport --db northwind --collection products --type json --file products.json --jsonArray`\n\t\t- if successful, it should display how many records it imported\n- view the collection in the shell\n\t- `mongosh`\n\t- `show dbs`\n\t\t- you should see *northwind*\n\t- `use northwind`\n\t- `show collections`\n\t- `db.products.find()`\n\t- notice that each document was automatically given its own, unique id","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-10 16:19:41","systemWhoCreated":"systemUnknown"},{"id":430,"category":"MongoDB","title":"Mongo Querying and CRUD with MongoDB Shell, MongoDB Compass and NoSQLBooster","body":"- in these instructions, we will use three interfaces to MongoDB to execute CRUD commands to the database\n- setup\n\t- **MongoDB Shell**\n\t\t- on Ubuntu, the `mongosh` is installed automatically with MongoDB\n\t\t- on Windows, you have to install `mongosh` here:\n\t\t\t- https://docs.mongodb.com/mongodb-shell/install\n\t\t- enter the MongoDB shell with `mongosh`\n\t- **MongoDB Compass** - the free and standard GUI interface to MongoDB\n\t\t- for both Ubuntu and Windows, you can install MongoDB Compass here:\n\t\t\t- [How to install MongoDB Compass on Ubuntu](https://onespace.netlify.app/howtos?id=425)\n\t\t\t- for Windows, go [here](https://www.mongodb.com/try/download/compass), download the **MSI** and execute\n\t- **NoSQLBooster** - a nice GUI interface to MongoDB with a free version\n\t\t- for both Ubuntu and Windows, you can install NoSQLBooster [here](https://nosqlbooster.com/downloads)\n\t\t\t- for Windows, just download the .exe file and execute\n\t\t\t- for Ubuntu, download the .AppImage file\n\t\t\t\t- `chmod a+x nosqlbooster4mongo-7.0.4.AppImage`\n\t\t\t\t- `./nosqlbooster4mongo-7.0.4.AppImage`\n\t\t\t\t\t- or double-click on icon in File Explorer\n\t\t\t\t\t- (to add this app to your favorites, see [this article](https://averagelinuxuser.com/ubuntu_custom_launcher_dock))\n- get the JSON files we will be working with\n\t- if you have Windows and don't have `wget` on your computer, see [import the Northwind customers data](https://onespace.netlify.app/howtos?id=429) on how to install it\n\t- download the `products.json` file:\n\t\t- `wget -O products.json https://raw.githubusercontent.com/raynaldmo/northwind-mongodb/master/collections/json/products.json`\n\t- download the `full_orders.json` file:\n\t\t- `wget -O full_orders.json https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/orders.json`\n\t- download the `customer_orders.json` file:\n\t\t- `wget -O customer_orders.json https://raw.githubusercontent.com/edwardtanguay/downloads/master/customer_orders.json`\t\t\n- import the JSON files into your MongoDB database\n\t\t- either import it into the `northwind` database with NoSQLBooster\n\t\t\t- File > Import > Mongoimport JSON\n\t\t- or use mongoimport (if on Windows, and you don't have this, see [import the Northwind customers data](https://onespace.netlify.app/howtos?id=429))\n\t\t\t- `mongoimport --db northwind --collection products --type json --file products.json --jsonArray`\n\t\t\t- `mongoimport --db northwind --collection full_orders --type json --file full_orders.json --jsonArray`\n\t\t\t- `mongoimport --db northwind --collection customer_orders --type json --file customer_orders.json --jsonArray`\n- as you practice the following CRUD commands, execute them first in **mongosh**, then in **Mongo Compass** and **NoSQLBooster**, experimenting with the added features these GUI tools provide\n\t- C**R**UD => **READ** - displaying certain fields\n\t\t- display all products\n\t\t\t- `db.products.find()`\n\t\t- display only a certain number of documents\n\t\t\t- `db.products.find().limit(3)`\n\t\t- display only certain fields\n\t\t\t- `db.products.find({}, {ProductName: true})`\n\t\t\t- `db.products.find({}, {ProductName: 1})`\n\t\t\t- `db.products.find({}, {ProductName: 0})` - all except\n\t\t\t- `db.products.find({}, {ProductName: 1, QuantityPerUnit: 1})`\n\t\t\t- `db.products.find({}, {_id: 0, ProductName: 1, QuantityPerUnit: 1})`\n\t\t- NoSQLBooster features\n\t\t\t- Export as JSON\n\t\t\t\t- with pretty()\n\t\t\t- Export as CSV\n\t\t\t\t- change to \";\" separator\n\t\t\t- (Export as Excel and HTML)\n\t- C**R**UD => **READ** - filtering\n\t\t- display all products with CategoryID = \"2\"\n\t\t\t`db.products.find({CategoryID: \"1\"})`\n\t\t- display the total of all products with CategoryID = \"2\"\n\t\t\t`db.products.find({CategoryID: \"2\"}).count()`\n\t\t- display the total of all products with CategoryID = \"2\" and SupplierID = \"2\"\n\t\t\t`db.products.find({CategoryID: \"2\", SupplierID: \"2\"}).count()`\n\t\t- NoSQLBooster Query \n\t\t\t- full_orders\n\t\t\t- and/or\n\t\t\t- not\n\t\t\t- freight is between 240 and 260 euros\n\t\t- NoSQLBooster Code\n\t\t\t- Mongo Shell\n\t\t\t- Node.js ES7\n\t\t\t- note that free version can't copy text\n\t\t\t\t- but useful as a learning tool\n\t- **C**RUD => **CREATE** - insert document\n\t\t- `db.products.insert( { ProductID: \"999\", ProductName: \"The New Product\", SupplierID: \"3\" })`\n\t- CR**U**D => **UPDATE** - update documents\n\t\t- `db.products.updateMany({SupplierID: \"1\"}, {$set: {SupplierID: \"999\"}})`\n\t\t- NoSQLBooster\n\t\t\t- customer_orders\n\t\t\t- show: customer.city = Brandenburg (many)\n\t\t\t- show: customer.city = Potsdam (none)\n\t\t\t- `db.customer_orders.updateMany({\"customer.city\": \"Brandenburg\"}, {$set: {\"customer.city\": \"Potsdam\"}})`\n\t\t\t- show: customer.city = Brandenburg (none)\n\t\t\t- show: customer.city = Potsdam (many)\n\t- CRU**D** => **DELETE** - delect document\n\t\t- mongosh\n\t\t\t- `db.products.find({ SupplierID: \"28\", CategoryID: \"4\"})`\n\t\t\t\t- shows 2\n\t\t\t- `db.products.deleteOne({_id: ObjectId(\"618c18b4c51eea3ed9ad51a5\")})`\n\t\t\t\t- deletedCount: 1\n\t\t\t- `db.products.find({ SupplierID: \"28\", CategoryID: \"4\"})`\n\t\t\t\t- shows 1","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-10 20:35:57","systemWhoCreated":"systemUnknown"},{"id":431,"category":"MongoDB","title":"Create the backend API of a two-part user-management project","body":"- intro and infos\n\t- these instructions lead you through creating the backend API of a user-management app that has a create-react-app frontend and Node/Express API backend that carries out CRUD operations:\n\t\t- get users\n\t\t- delete user\n\t\t- edit user\n\t\t- add user\n\t- see also the instructions to [create the frontend for this project](https://onespace.netlify.app/howtos?id=433)\n\t- these instructions are quite abbreviated\n\t\t- if something is unclear, see the final code is here: [manageUserAppBackend](https://github.com/edwardtanguay/manageUserAppBackend)\n\t- this is a MERN stack project\n\t\t- information is saved in a local MongoDB\n\t\t- Node/Express backend\n\t\t- React (create-react-app) frontend\n\t- this project also runs [at Heroku here](https://heroku-manage-user-app-fronten.herokuapp.com/)\n\t\t- where it accesses an Atlas MongoDB\n- import data into MongoDB\n\t- download [users100.json](https://raw.githubusercontent.com/edwardtanguay/downloads/master/users100.json)\n\t- `mongoimport --db api001 --collection users100 --type json --file users100.json --jsonArray`\n- setup basic API\n\t- setup project\n\t\t- `git init`\n\t\t\t- `.gitignore`\n\t\t- `npm init -y`\n\t\t\t- `\"type\": \"module\",`\n\t- create `backend.js`\n\t\t- `npm i express`\n\t\t- import\n\t\t- const app\n\t\t- port\n\t\t- listen\n\t\t- backend script\n\t\t- test listening\n\t\t\t- `npm run backend`\n\t- create test endpoint /\n\t\t- `app.get('/', ...`\n\t\t- test with rest client: `test.http`\n\t\t\t---------------------------\n\t\t\t### show all users\n\t\t\tGET http://localhost:3014\n\t\t\tcontent-type: application/json\n\t\t\t---------------------------\n- endroute `/` (show all names and addresses)\n\t- set up MongoDB client\n\t\t- `npm i mongodb`\n\t\t- `import { MongoClient } from 'mongodb';`\n\t\t- `const mongoConnectString = 'mongodb://localhost:27017';`\n\t\t- `const client = new MongoClient(mongoConnectString);`\n\t- create getData function\n\t\t-------------------------------\n\t\tconst getData = async (done) => {\n\t\t\tawait client.connect();\n\t\t\tconst db = client.db('api001');\n\t\t\tdone(db);\n\t\t}\n\t\t-------------------------------\n\t- change endroute `/` to send all names\n\t\t----------------------------------------\n\t\tgetData(async (db) => {\n\t\t\tconst users = await db.collection('users100').find()\n\t\t\t\t.project({\n\t\t\t\t\tname: 1,\n\t\t\t\t\tusername: 1,\n\t\t\t\t\temail: 1\n\t\t\t\t}).toArray();\n\t\t\tres.json(users);\n\t\t});\n\t\t----------------------------------------\n\t- add username and email\n- endroute `/deleteuser/:id` (delete user by ID)\n\t- show id\n\t- in test, change to variable: @url and {{url}}\n\t- get real id: `db.users100.find({},{email: 1}).limit(1)`\n\t- add mongodb: `import mongodb, { MongoClient } from 'mongodb';`\n\t- change getData to execMongo\n\t\t------------------------------------------\n\t\texecMongo(async (db) => {\n\t\t\tconst deleteResult = await db.collection('users100').deleteOne({ _id: new mongodb.ObjectId(id) });\n\t\t\tres.json({\n\t\t\t\tresult: deleteResult\n\t\t\t});\n\t\t});\n\t\t------------------------------------------\n- endroute `/adduser` (insert a user)\n\t- add `app.use(express.json());\n\t- `const insertResult = await db.collection('users100').insertOne(user);`\n\t- test\n\t\t----------------------------\n\t\tPOST  {{url}}/adduser\n\t\tcontent-type: application/json\n\n\t\t{\n\t\t\t\"user\": {\n\t\t\t\t\"name\": \"Angie Additive\",\n\t\t\t\t\"username\": \"angie_additive\",\n\t\t\t\t\"email\": \"angie@hotmail.com\"\n\t\t\t}\n\t\t}\n\t\t----------------------------\n- endroute `/edituser/:id` (edit a user's email)\n\t-------------------------------------------\n\tconst updateResult = await db.collection('users100').updateOne({ _id: new mongodb.ObjectId(id) }, { $set: { email } });\n\t-------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-14 10:59:19","systemWhoCreated":"systemUnknown"},{"id":432,"category":"GitHub","title":"How to change a repository's default branch from master to main","body":"- these instructions assume you have a Git repository locally and on GitHub and want to change the default repository from **master** to **main** both locally and on GitHub\n- rename the local branch from master to main:\n\t- `git branch --move master main`\n- upload the local main branch to your GitHub repository\n\t- `git push --set-upstream origin main`\n- you now have two branches in your GitHub repository: **master** (default) and **main**\n\t- so at GitHub, change the default branch from **master** to **main**:##theonetwosdf\n- now delete the master branch from your GitHub repository\n\t- `git push origin --delete master`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-14 11:30:49","systemWhoCreated":"systemUnknown"},{"id":433,"category":"React","title":"Create the frontend of a two-part user-management project","body":"- intro and infos\n\t- these instructions lead you through creating the frontend of a user-management app which consists of two parts: (1) this create-react-app frontend, and (2) a Node/Express API backend that carries out CRUD operations:\n\t\t- get users\n\t\t- delete user\n\t\t- edit user\n\t\t- add user\n\t- see also the instructions to [create the backend API for this project](https://onespace.netlify.app/howtos?id=431)\n\t- these instructions are quite abbreviated\n\t\t- if something is unclear, see the final code is here: [manageUserAppFrontend](https://github.com/edwardtanguay/manageUserAppFrontend)\n\t- this is a MERN stack project\n\t\t- information is saved in a local MongoDB\n\t\t- Node/Express backend\n\t\t- React (create-react-app) frontend\n\t- this project also runs at Heroku here: [User-Management App](https://heroku-manage-user-app-fronten.herokuapp.com/)\n\t\t- where it accesses an Atlas MongoDB\n- setup create-react-app\n\t- make directory: `editUserApp_frontend`\n\t- use minified create-react-app [edwardtanguay/blankcra](https://github.com/edwardtanguay/blankcra)\n\t- `npm i`\n\t- `npm start`##thecrahello\n- display users\n\t- display dummy users from frontend, `App.js`:\n\t\t--------------------------------------\n\t\timport { useState, useEffect } from 'react';\n\t\timport './App.scss';\n\n\t\tfunction App() {\n\t\t\tconst [users, setUsers] = useState([]);\n\n\t\t\tuseEffect(() => {\n\t\t\t\tsetUsers([{ name: \"test1\" }, { name: \"test2\" }]);\n\t\t\t}, []);\n\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>Edit User App Frontend</h1>\n\t\t\t\t\t<section className=\"users\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{users.map((user, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={index}>{user.name}</li>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\texport default App;\n\t\t--------------------------------------\n\t- display users from the backend\n\t\t- setup and start the [editUserApp_backend](https://github.com/edwardtanguay/editUserApp_backend)\n\t\t\t- note the port, i.e. 3016\n\t\t- add backendUrl: `const backendUrl = 'http://localhost:3016';`\n\t\t- update useEffect to get data from API:\n\t\t\t-----------------------------------------\n\t\t\tuseEffect(() => {\n\t\t\t\t(async () => {\n\t\t\t\t\tconst response = await fetch(backendUrl);\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tsetUsers(data);\n\t\t\t\t})();\n\t\t\t}, []);\n\t\t\t-----------------------------------------\n\t\t- display as cards with info\n\t\t\t---------------------------------------------\n\t\t\t<section className=\"users\">\n\t\t\t\t{users.map((user, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index} className=\"userCard\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"label\">Full Name:</div>\n\t\t\t\t\t\t\t\t<div className=\"data\">{user.name}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"label\">User Name:</div>\n\t\t\t\t\t\t\t\t<div className=\"data\">{user.username}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"label\">E-Mail:</div>\n\t\t\t\t\t\t\t\t<div className=\"data\">{user.email}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</section>\n\t\t\t---------------------------------------------\n\t\t- appropriate SCSS:\n\t\t\t---------------------------------------------------\n\t\t\tdiv.userCard {\n\t\t\t\tbackground-color: #eee;\n\t\t\t\tmargin: 0 0 10px 0;\n\t\t\t\tpadding: 10px;\n\t\t\t\tfont-size: 1.3rem;\n\t\t\t\t.row {\n\t\t\t\t\tdisplay:flex;\n\t\t\t\t\t.data {\n\t\t\t\t\t\tmargin: 0 0 0 10px;\n\t\t\t\t\t\tfont-family: 'Courier New', Courier, monospace;\n\t\t\t\t\t\tcolor: brown;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t---------------------------------------------------\n\t\t- frontend looks like this:##thetornedituser\n- add delete and edit buttons to each card\n\t- `npm i react-icons`\n\t- add to card:\n\t\t------------------------\n\t\t<div className=\"iconRow\">\n\t\t\t<button className=\"icon\"><RiDeleteBin6Line/></button>\n\t\t\t<button className=\"icon\"><GrEdit /></button>\n\t\t</div>\n\t\t------------------------\n\t- style it:\n\t\t------------------------------------\n\t\tdiv.iconRow {\n\t\t\tmargin: 5px 0 0 0;\n\t\t\tdisplay: flex;\n\t\t\tbutton {\n\t\t\t\tmargin: 0 5px 0 0;\n\t\t\t\tbackground-color: #ccc;\n\t\t\t\twidth: 30px;\n\t\t\t\tpadding: 6px 0 3px 0;\n\t\t\t}\n\t\t}\n\t\t------------------------------------\n\t- add \"Add User\" button at top##andthetornadduser\n- program functionality for **Delete button**\n\t- `<button onClick={() => handleDeleteButton(user)} className=\"icon\"><RiDeleteBin6Line /></button>`\n\t- refactor useEffect so that it loads users by calling a function called `loadUsers` and then call it here as well, to update the state of the users\n\t\t--------------------------------------\n\t\tconst handleDeleteButton = (user) => {\n\t\t\t(async () => {\n\t\t\t\tawait fetch(`${backendUrl}/deleteuser/${user._id}`, { method: 'DELETE'});\n\t\t\t\tloadUsers();\n\t\t\t})();\n\t\t}\n\t\t--------------------------------------\n- program functionality for **Edit E-Mail button**\n\t- set a boolean field `isEditingEmail` on each user upon loading, to track if editing form for that user is showing or not\n\t\t---------------------------------------------\n\t\tconst loadUsers = () => {\n\t\t\t(async () => {\n\t\t\t\tconst response = await fetch(backendUrl);\n\t\t\t\tconst users = await response.json();\n\t\t\t\tusers.forEach(user => user.isEditingEmail = false);\n\t\t\t\tsetUsers(users);\n\t\t\t})();\n\t\t}\n\t\t---------------------------------------------\n- program functionality for **Add User button**\n\t- add all necessary state variables\n\t\t-----------------------------------------\n\t\tconst [isAddingUser, setIsAddingUser] = useState(false);\n\t\tconst [formName, setFormName] = useState('');\n\t\tconst [formUsername, setFormUsername] = useState('');\n\t\tconst [formEmail, setFormEmail] = useState('');\n\t\t-----------------------------------------\n\t- add HTML/JSX form to `App.js`\n\t\t---------------------------------------\n\t\t<div className=\"addUserArea\">\n\t\t\t<div><button onClick={handleToggleAddUserArea}>Add User</button></div>\n\t\t\t{isAddingUser && (\n\t\t\t\t<div className=\"addUserFormArea\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<label htmlFor=\"name\">Full Name: </label>\n\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\tvalue={formName}\n\t\t\t\t\t\t\t\tonChange={handleFormName}\n\t\t\t\t\t\t\t\tid=\"name\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<label htmlFor=\"username\">User Name: </label>\n\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\tvalue={formUsername}\n\t\t\t\t\t\t\t\tonChange={handleFormUsername}\n\t\t\t\t\t\t\t\tid=\"username\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<label htmlFor=\"email\">Email: </label>\n\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\tvalue={formEmail}\n\t\t\t\t\t\t\t\tonChange={handleFormEmail}\n\t\t\t\t\t\t\t\tid=\"email\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"formButtonArea\">\n\t\t\t\t\t\t\t<button onClick={(e) => handleFormSaveButton(e)}>Save New User</button>\n\t\t\t\t\t\t\t<button onClick={handleCancelAddForm}>Cancel</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t\t---------------------------------------\n\t- add SCSS\n\t\t-------------------------------------\n\t\t.addUserFormArea {\n\t\t\tbackground-color: #ccc;\n\t\t\tmargin: 10px 0 0 0;\n\t\t\tpadding: 10px;\n\t\t\tborder: 1px solid #999;\n\t\t\tborder-radius: 5px;\n\t\t\twidth: 325px;\n\t\t\tlabel {\n\t\t\t\tfont-size: 1.3rem;\n\t\t\t\twidth: 110px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t}\n\t\t\tinput {\n\t\t\t\twidth: 200px;\n\t\t\t}\n\t\t\t.formButtonArea {\n\t\t\t\tmargin: 10px 3px 0 0;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: flex-end;\n\t\t\t\tbutton {\n\t\t\t\t\tbackground-color: #ddd;\n\t\t\t\t\tfont-size: 0.9rem;\n\t\t\t\t\tmargin: 0 5px 0 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t-------------------------------------\n- finished app looks like this:##thefinisheappfrontend","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-14 17:05:03","systemWhoCreated":"systemUnknown"},{"id":434,"category":"MongoDB","title":"How to use and connect to your MongoDB Atlas account with mongosh, mongoimport, Compass and NoSQLBooster","body":"- get MongoDB Atlas account\n\t- sign up for a free [MongoDB Atlas account](https://www.mongodb.com)\n- overview of MongoDB Atlas website\n\t- cluster vs. database\n\t\t- a MongoDB Atlas **cluster** is like your local MongoDB **server** (like MySQL server)\n\t\t\t- each cluster has databases (like SQL databases)\n\t\t\t- each database has collections (like SQL tables)\n\t\t\t- each collection has documents (like SQL records)\n\t\t- to see your databases, click on the button **Browser Collections**\n\t\t- create database \n\t\t\t- database: `blogapp`\n\t\t\t- collection: `articles`\n\t\t\t- insert 2 articles\n\t\t\t\t- { title: \"First Article\" }\n\t\t\t\t- { title: \"Second Article\" }\n- enable access from local shell, applications (like Compass or NoSQLBooster) and your online apps\n\t- Network Access\n\t\t- Add IP Address\n\t\t- Allow access from anywhere\n\t\t\t- this is secure since login/password is also needed\n\t\t- Confirm\n\t\t\t- notice \"Pending...\" message\n\t\t\t\t- changes to your MongoDB Atlas cluster can take 2-5 minutes to take effect\n\t- Database Access\n\t\t- Add New Database User\n\t\t- Password\n\t\t- *mainuser*\n\t\t- *<think_of_a_password>*\n\t\t\t- copy password into KeePass etc.\n\t\t\t\t- since you can't find out your password again, you can only reset it\n\t\t- Read and write to any database\n\t\t- click *Add User*\n\t\t\t- note message: \"We are deploying your changes (current action: configuring MongoDB)\"\n\t\t\t\t- can take 2-5 minutes to take effect\n- access with MongoDB shell\n\t- Databases\n\t- Connect\n\t- Connect with the MongoDB Shell\n\t- copy connection string\n\t- in shell, past it in and change **mongo** to **mongosh**\n\t- `show dbs`\n\t- `use blogapp`\n\t- `show collections`\n\t- `db.articles.find()`\n- upload data with `mongoimport`\n\t- create file to import called `articles.json`\n\t\t----------------------------------\n\t\t[\n\t\t\t{\n\t\t\t\t\"title\": \"Third Article\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"title\": \"Fourth Article\"\n\t\t\t}\n\t\t]\n\t\t----------------------------------\n\t- database > cluster0 > primary##gotheconnecinin\n\t\t- copy **--host**\n\t- create mongoimport command:\n\t\t- mongoimport --host **cluster0-shard-00-01.ogshn.mongodb.net:27017**  --db **blogapp** --collection **articles** --type json --file **articles.json** --jsonArray --authenticationDatabase admin --ssl --username **mainuser**##andtijsicopyijsi\n\t- see that they were added to the online database `blogapp`:##addedtotheblogappp\n- access with MongoDB Compass\n\t- Databases\n\t- Connect\n\t- Connect Using MongoDB Compass\n\t- copy and modify connection string, e.g.\n\t\t`mongodb+srv://mainuser:<password>@cluster0.ogshn.mongodb.net`\n\t- start Compass\n\t- paste\n\t- click: \"Fill in connection fields individually\"\n\t\t- username: `mainuser`\n\t\t- password `<your_password>`\n\t- click on database **blogapp** and collection **articles**##compassisnowbloga\n- access with NoSQLBooster\n\t- Databases\n\t- Connect\n\t- Connect Using MongoDB Compass\n\t- copy and modify connection string, e.g.\n\t\t`mongodb+srv://mainuser:<password>@cluster0.ogshn.mongodb.net`\n\t- start NoSQLBooster\n\t\t- click **Create From URI**:##fromtheuriok\n\t\t- paste connection string and click **Open Connection Editor**:##pasteandconnectionstring\n\t\t- click on **Authentication**, type password, and click on **Save & Connect**##clickonthreeandsaveconnect\n\t\t- click on database and collection##theartnosqlgoti\n\t- disconnect and connect again automatically\n\t\t- disconnect##andthedisconnect\n\t\t- close NoSQLBooster\n\t\t- open NoSQLBooster\n\t\t- click Connect\n\t\t- double-click on connect and you enter without password:##theclicksecondonan","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-14 22:08:33","systemWhoCreated":"systemUnknown"},{"id":435,"category":"MongoDB","title":"How to prepare and publish a Node/Express/MongoDB backend/frontend app to Heroku/Atlas","body":"- the following instructions publish this user-management app to Heroku/Atlas:\n\t- local MongoDB database/collection **api001/users100** imported from this file: [users100.json](https://raw.githubusercontent.com/edwardtanguay/downloads/master/users100.json)\n\t- [backend](https://github.com/edwardtanguay/manageUserAppBackend)\n\t- [frontend](https://github.com/edwardtanguay/manageUserAppFrontend)\n- upload the users100.json file to MongoDB Atlas:\n\t- log into MongoDB/Atlas\n\t- database > cluster0 > primary##gotheconnecinin\n\t\t- copy the information for `--host` below\n\t\t- create a user named mainuser for the `--username` below\n\t\t- you will be asked for the password after you enter this command\n\t- create mongoimport command:\n\t\t- mongoimport --host **cluster0-shard-00-01.ogshn.mongodb.net:27017**  --db **api001** --collection **users100** --type json --file **users100.json** --jsonArray --authenticationDatabase admin --ssl --username **mainuser**##andtijsicopyijsi\n- modify backend \n\t- enable Heroku to determine its own port\n\t\t- change port definition line to this:\n\t\t\t- `const port = process.env.PORT || 3016;`\n\t- set up `.env` file in order to connect to local MongoDB from local app, and connect to MongoDB/Atlas from Heroku app\n\t\t- `npm i dotenv`\n\t\t- create a file `.env` in root:\n\t\t\t-------------------------\n\t\t\tMONGODB_URI = mongodb://localhost:27017\n\t\t\t-------------------------\n\t\t- in `backend.js`\n\t\t\t- add:\n\t\t\t\t- `import dotenv from 'dotenv';`\n\t\t\t\t- `dotenv.config();`\n\t\t\t- modify:\n\t\t\t\t- `const mongoConnectString = process.env.MONGODB_URI;`\n\t\t- add to `.gitignore` (since you don't want your .env file checked into your repository\n\t\t\t- `.env`\n\t- test locally endpoint `/`\n- publish backend to Heroku\n\t- publish to GitHub: `herokuManageUserAppBackend`\n\t- create Heroku site e.g. `heroku-manage-user-app-backend` (you can't use camelCase at Heroku)\n\t\t- set it up to deploy from your GitHub repository\n\t- to debug errors, turn on logging\n\t\t- `heroku login`\n\t\t\t- log in via browser\n\t\t- `heroku -a heroku-manage-user-app-backend --tail`\n\t\t\t- (where `heroku-manage-user-app-backend` is the name of your app)\n\t- create environment variable at Heroku\n\t\t- `MONGODB_URI`\n\t\t\t- e.g. `mongodb+srv://mainuser:THEPASSWORD@cluster0.ogshn.mongodb.net`\n\t\t\t- (get this from your MongoDB/Atlas dashboard: Databases > Connect > Connect your application)\n\t- test at Heroku by clicking on the button **Open app**\n\t\t- this is the GET route for `/` and should show all users from the Atlas database/collection api001/users100\n- publish frontend to Heroku\n\t- create `.env` file\n\t\t-------------------------------\n\t\tREACT_APP_BACKEND_URL = http://localhost:3016\n\t\t-------------------------------\n\t- add to `.gitignore` (since you don't want your .env file checked into your repository\n\t\t- `.env`\n- publish frontend to Heroku\n\t- publish to GitHub: `herokuManageUserAppFrontend`\n\t- create Heroku site e.g. `heroku-manage-user-app-fronten` (you can't use camelCase at Heroku, only allow 30 characters)\n\t\t- set it up to deploy from your GitHub repository\t\n- increase security of backend\n\t- note that the Heroku backend can be accessed from any site, which means that anyone with knowledge of the API could view, edit, add, and delete data from the database via the API\n\t- there are many sophisticated solutions to this to increase security\n\t- one which increases the security moderately is to allow access at the route level only from specific referrers\n\t- see [this file](https://github.com/edwardtanguay/ejs-fullstack-001/blob/main/src/routes/api.js) on another project for code to do this, search for `req.headers.referer`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-14 23:38:23","systemWhoCreated":"systemUnknown"},{"id":437,"category":"Mongoose","title":"Mongoose CRUD basics","body":"- these instructions show you how to create a node script that performs all four CRUD operations on a MongoDB database with the Mongoose driver\n\t- you can find the final code here: [edwardtanguay/mongoosecrud](https://github.com/edwardtanguay/mongoosecrud)\n- prepare project\n\t- `git init`\n\t\t- `.gitignore`\t\n\t\t\t- `node_modules`\n\t- `npm init -y`\n\t\t- in package.json:\n\t\t\t- `\"type\": \"module\",`\n\t- create `index.js`\n\t\t- `console.log('ready');\n\t- node index.js\n- set up and test Mongoose\n\t- import\n\t\t- `npm i mongoose`\n\t\t- `import mongoose from 'mongoose';`\n\t- make connection\n\t\t----------------------\n\t\tmongoose.connect('mongodb://localhost:27017/appcrud', (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('ERROR ON CONNECT');\n\t\t\t} else {\n\t\t\t\tconsole.log('connection open');\n\t\t\t}\n\t\t});\n\t\t----------------------\n\t- close connection function\n\t\t---------------------------------\n\t\tfunction closeConnection() {\n\t\t\tmongoose.connection.close(err => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log('ERROR ON CONNECTION CLOSE');\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('connection closed');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t---------------------------------\n\t- close connection\n\t\t-----------------------------------\n\t\tcloseConnection();\n\t\t-----------------------------------\n- setup CRUD skeleton code\n\t- `const crudCommand = 'create';`\n\t- switch\n\t\t---------------------------------\n\t\tswitch (crudCommand) {\n\t\t\tcase 'create':\n\t\t\t\tconsole.log('TODO: CREATE');\n\t\t\t\tcloseConnection();\n\t\t\t\tbreak;\n\t\t\tcase 'read':\n\t\t\t\tconsole.log('TODO: READ');\n\t\t\t\tcloseConnection();\n\t\t\t\tbreak;\n\t\t\tcase 'update':\n\t\t\t\tconsole.log('TODO: UPDATE');\n\t\t\t\tcloseConnection();\n\t\t\t\tbreak;\n\t\t\tcase 'delete':\n\t\t\t\tconsole.log('TODO: DELETE');\n\t\t\t\tcloseConnection();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('BAD COMMAND: ' + crudCommand);\n\t\t\t\tcloseConnection();\n\t\t\t\tbreak;\n\t\t}\n\t\t---------------------------------\n- add Mongoose schema/model\n\t----------------------\n\tconst userSchema = mongoose.Schema({\n\t\tname: String,\n\t\tusername: String,\n\t\temail: String\n\t});\n\tconst UserModel = mongoose.model(\"User\", userSchema);\n\t----------------------\n- add CREATE functionality\n\t- add create code:\n\t\t---------------------------------\n\t\tconst user = new UserModel({\n\t\t\tname: \"Jon Ackers\",\n\t\t\tusername: \"ja\",\n\t\t\temail: \"ja@gmail.com\"\n\t\t});\n\t\tuser.save(err => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log('BAD CREATE');\n\t\t\t} else {\n\t\t\t\tconsole.log(`user inserted: ${user.name}`)\n\t\t\t}\n\t\t\tcloseConnection();\n\t\t});\n\t\t---------------------------------\n\t- advantages of Mongoose\n\t\t- naming conventions\n\t\t\t- note the collection name is \"users\" from `mongoose.model(\"User\", userSchema);`\n\t\t- type validation\n\t\t\t- add `age: 34`\n\t\t\t\t- note that it is not saved in the database\n\t\t\t\t\t- since `age` is not in the schema\n\t\t\t- add `age: Number`\n\t\t\t\t- note that it is saved now\n\t\t\t- change age to string \"whatever\"\n\t\t\t\t- note that it gets a validation error\n\t\t\t- change age to string \"34\"\n\t\t\t\t- note that it is silently converted to a number\n\t\t\t\t\t- since the type is forced\n\t\t\t- change name to a number\n\t\t\t\t- note that it is casted to a string\n\t\t\t\t\t- since the type is forced\n\t\t- required fields\n\t\t\t- leave username out\n\t\t\t\t- note it saves without username\n\t\t\t\t- change: `username: {type: String, required: true},`\n\t\t\t\t- note that it does not save\n\t\t\t\t\t- since the schema now requires username\n\t\t\t\t- add username again\n\t\t\t\t\t- note that it now saves\n- add READ functionality\n\t------------------------------------\n\t(async () => {\n\t\tconst users = await UserModel.find({});\n\t\tusers.forEach(user => console.log(user.name));\n\t\tcloseConnection();\n\t})();\n\t------------------------------------\n- add UPDATE functionality\n\t------------------------------------\n\t(async () => {\n\t\tawait UserModel.findOneAndUpdate({ username: \"talbrecht3\" }, { $set: { email: \"newmail\" } });\n\t\tconsole.log('user updated');\n\t\tcloseConnection();\n\t})();\n\t------------------------------------\n- add DELETE functionality\n\t------------------------------------\n\t(async () => {\n\t\tawait UserModel.deleteOne({ username: \"talbrecht2\" });\n\t\tconsole.log('user deleted');\n\t\tcloseConnection();\n\t})();\n\t------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-18 08:40:56","systemWhoCreated":"systemUnknown"},{"id":438,"category":"Mongoose","title":"Refactor user-management app from MongoDB driver to Mongoose driver","body":"- the goal of these instructions is to refactor the [manageUserAppBackend](https://github.com/edwardtanguay/manageUserAppBackend) project \n\t- we will replace the MongoDB driver with a Mongoose driver using [this code](https://github.com/edwardtanguay/mongoosecrud) as a basis\n\t- the final code refactored with the Mongoose driver is here: [manageUserMongooseBackend](https://github.com/edwardtanguay/manageUserMongooseBackend)\n- test current manageUserAppBackend app\n\t- make sure MongoDB app still runs (http://localhost:3016)\n- replace drivers\n\t- `npm un mongodb`\n\t- `npm i mongoose`\n- replace imports\n\t--------------------------------\n\t// import mongodb, { MongoClient } from 'mongodb';\n\timport mongoose from 'mongoose';\n\t--------------------------------\n- add database to connection string:\n\t------------------------------\n\t// const mongoConnectString = 'mongodb://localhost:27017';\n\tconst mongoConnectString = 'mongodb://localhost:27017/api001';\n\t------------------------------\n- connect with Mongoose driver instead of MongoDB driver\n\t------------------------------\n\t// const client = new MongoClient(mongoConnectString);\n\tmongoose.connect(mongoConnectString);\n\t------------------------------\n- add schema and model (note \"users100\" to specify exact name of collection):\n\t--------------------------------\n\tconst userSchema = mongoose.Schema({\n\t\tname: String,\n\t\tusername: String,\n\t\temail: String\n\t});\n\tconst UserModel = mongoose.model(\"User\", userSchema, \"users100\");\n\t--------------------------------\n- remove the execMongo function:\n\t--------------------------\n\t// const execMongo = async (done) => {\n\t// \tawait client.connect();\n\t// \tconst db = client.db('api001');\n\t// \tdone(db);\n\t// }\n\t--------------------------\n- refactor code for **GET '/'** endpoint\n\t-------------------------------\n\t// execMongo(async (db) => {\n\t// \tconst users = await db.collection('users100').find()\n\t// \t\t.project({\n\t// \t\t\tname: 1,\n\t// \t\t\tusername: 1,\n\t// \t\t\temail: 1\n\t// \t\t}).toArray();\n\t// \tres.json(users);\n\t// });\n\tconst users = await UserModel.find({}).select('name username email');\n\tres.json(users);\n\t-------------------------------\n\t- be sure to make the endpoint function `async`\n- refactor code for **DELETE '/deleteuser/:id'** endpoint\n\t---------------------------------\n\t// execMongo(async (db) => {\n\t// \tconst deleteResult = await db.collection('users100').deleteOne({ _id: new mongodb.ObjectId(id) });\n\t// \tres.json({\n\t// \t\tresult: deleteResult\n\t// \t});\n\t// });\n\tconst deleteResult = await UserModel.deleteOne({ _id: new mongoose.Types.ObjectId(id) });\n\tres.json({\n\t\tresult: deleteResult\n\t})\n\t---------------------------------\n\t- be sure to make the endpoint function `async`\n- refactor code for **POST '/insertuser'** endpoint\n\t-------------------------------------------\n\t// execMongo(async (db) => {\n\t// \tconst insertResult = await db.collection('users100').insertOne(user);\n\t// \tres.json({\n\t// \t\tresult: insertResult\n\t// \t});\n\t// });\n\tconst user1 = new UserModel(user);\n\tuser1.save(err => {\n\t\tif (err) {\n\t\t\tres.status(500).send({ err })\n\t\t} else {\n\t\t\tres.json({\n\t\t\t\tuserAdded: user1\n\t\t\t});\n\t\t}\n\t});\n\t-------------------------------------------\n\t- note that you don't need to make this endpoint function `async`\n- refactor code for **PATCH'/edituseremail'** endpoint\n\t----------------------------------------------\n\t// execMongo(async (db) => {\n\t// \tconst updateResult = await db.collection('users100').updateOne({ _id: new mongodb.ObjectId(id) }, { $set: { email } });\n\t// \tres.json({\n\t// \t\tresult: updateResult\n\t// \t});\n\t// });\n\tconst updateResult = await UserModel.findOneAndUpdate({ _id: new mongoose.Types.ObjectId(id) }, { $set: { email } }, { new: true });\n\tres.json({\n\t\tresult: updateResult\n\t});\n\t----------------------------------------------\n\t- be sure to make the endpoint function `async`\n\t- note the `{ new: true }` to get the updated object","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-21 20:17:17","systemWhoCreated":"systemUnknown"},{"id":439,"category":"Mongoose","title":"How to structure a Node/Express/EJS/Mongoose site with the MVC pattern","body":"- the plan\n\t- This project builds a mock conference site which has three pages: \n\t\t- Welcome\n\t\t- Speakers\n\t\t- Presentations\n\t- Each page will have a route which loads a **Controller** which will load a Mongoose **Model** which deliver data to the EJS **View**, hence will encorporate an **MVC** pattern.\n\t- if anything is unclear, [the code to the finished site is here](https://github.com/edwardtanguay/nodeExpressEjsMongooseMvc)\n- set up basics\n\t- `git init`\n\t\t- `.gitignore`\n\t- `npm init -y`\n\t\t- `\"type\": \"module\",`\n\t- `src/app.js`\n\t- `\"start\": \"npx nodemon src/app.js\"`\n- set up EJS site with Welcome page\n\t- `npm i express ejs`\n\t- import everything\n\t\t-------------------------------\n\t\timport express from 'express';\n\t\timport path from 'path';\n\t\t-------------------------------\n\t- define all variables\n\t\t---------------------------------\n\t\tconst app = express();\n\t\tconst __dirname = path.resolve(path.dirname(''));\n\t\tconst port = 3044;\n\t\t---------------------------------\n\t- set up EJS\n\t\t- define view engine and view directory\n\t\t\t------------------------------\n\t\t\tapp.set('view engine', 'ejs');\n\t\t\tapp.set('views', path.join(__dirname, './public/views'));\n\t\t\t------------------------------\n\t\t- make: `public/views/index.ejs`\n\t\t\t---------------------------------\n\t\t\t<h2>\n\t\t\t\t<%=pageTitle%>\n\t\t\t</h2>\n\t\t\t<p>Welcome to the Berlin Mongoose Conference.</p>\n\t\t\t---------------------------------\n\t- set up welcome page route\n\t\t----------------------------\n\t\tapp.get('/', (req, res) => {\n\t\t\tres.render('index', {\n\t\t\t\tpageTitle: \"Welcome\"\n\t\t\t});\n\t\t});\n\t\t----------------------------\n\t- listen to the port\n\t\t----------------------------\n\t\tapp.listen(port, () => {\n\t\t\tconsole.log(`Now listening on port http://localhost:${port}`);\n\t\t})\n\t\t----------------------------\n\t- check site in browser\n\t\t- `npm start`\n\t\t- click link in terminal: \"Now listening on port...\"\n\t- you should see this:##seethisejsmongooseok\n- add header and footer for EJS pages\n\t- `public/views/_header.ejs`\n\t\t------------------------------------\n\t\t<html lang=\"en\">\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>Berlin Mongoose Conference</title>\n\t\t</head>\n\t\t<body>\n\t\t------------------------------------\n\t- `public/views/_footer.ejs`\n\t\t------------------------------------\n\t\t</body>\n\t\t</html>\n\t\t------------------------------------\n\t- add to `index.ejs`\n\t\t-----------------------------------\n\t\t<%- include('_header.ejs')%>\n\t\t<%- include('_footer.ejs')%>\n\t\t-----------------------------------\n\t- reload page and press **CTRL-U** to see source HTML of page\n\t\t- note that header and footer are included:##thesourceokandsee\n- set up Sass\n\t- make `public/css/main.scss`\n\t\t-----------------------------\n\t\tbody {\n\t\t\tbackground-color: #333;\n\t\t\tcolor: #eee;\n\t\t\tfont-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n\t\t\tfont-size: 1.5rem;\n\t\t\tpadding: 20px;\n\t\t}\n\t\t-----------------------------\n\t- install VSCode extension [Live Sass Compiler](https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass)\n\t- while on the extension intro page, click on \"Watch Sass\"##onthesassclick\n\t\t- the text will then change to \"Watching...\"\n\t- see that `public/css/main.css` was created\n\t- in `_header.ejs`, add:\n\t\t- `\t<link rel=\"stylesheet\" href=\"../css/main.css\">`\n\t- add middleware to display static files:\n\t\t--------------------------------------\n\t\tconst staticDirectory = path.join(__dirname, './public');\n\t\tapp.use(express.static(staticDirectory));\n\t\t--------------------------------------\n\t- site will now look like this:##andtheblackthreeok\n- add other pages and menu\n\t- `speakers.ejs`\n\t\t-------------------------------\n\t\t<%- include('_header.ejs')%>\n\t\t<h2>\n\t\t\t<%=pageTitle%>\n\t\t</h2>\n\t\t<p>This page displays all the speakers at the conference.</p>\n\t\t<%- include('_footer.ejs')%>\n\t\t-------------------------------\n\t- `presentations.ejs`\n\t\t-------------------------------\n\t\t<%- include('_header.ejs')%>\n\t\t<h2>\n\t\t\t<%=pageTitle%>\n\t\t</h2>\n\t\t<p>This page displays all the presentations at the conference.</p>\n\t\t<%- include('_footer.ejs')%>\n\t\t-------------------------------\n\t- add nav HTML to header file:\n\t\t---------------------------------------------\n\t\t<nav>\n\t\t\t<div>\n\t\t\t\t<a href=\"/\">Welcome</a> &bull; <a href=\"/speakers\">Speakers</a> &bull; <a\n\t\t\t\t   href=\"/presentations\">Presentations</a>\n\t\t\t</div>\n\t\t</nav>\n\t\t---------------------------------------------\n\t- add nav styling to Sass file:\n\t\t-------------------------------------\n\t\tnav {\n\t\t\tbackground-color: #444;\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 1.3rem;\n\t\t\ta {\n\t\t\t\tcolor: #bbb;\n\t\t\t\ttext-decoration: none;\n\t\t\t\t&.active {\n\t\t\t\t\tcolor: #ddd;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\ttext-shadow: 2px 2px 2px #444;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcolor: #666;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t}\n\t\t-------------------------------------\n\t- add routes for both new pages:\n\t\t------------------------------------------\n\t\tapp.get('/speakers', (req, res) => {\n\t\t\tres.render('speakers', {\n\t\t\t\tpageTitle: \"Speakers\"\n\t\t\t});\n\t\t});\n\n\t\tapp.get('/presentations', (req, res) => {\n\t\t\tres.render('presentations', {\n\t\t\t\tpageTitle: \"Presentations\"\n\t\t\t});\n\t\t});\n\t\t------------------------------------------\n\t- menu links should now be clickable and display the appropriate pgae\n\t- the site should now look like this##thesitespeakpresenow\n- import data into your local MongoDB database\n\t- download the files [conferencePresentations.json](https://raw.githubusercontent.com/edwardtanguay/nodeExpressEjsMongooseMvc/master/dev/import/conferencePresentations.json) \n\t- download the files [conferenceSpeakers.json](https://raw.githubusercontent.com/edwardtanguay/nodeExpressEjsMongooseMvc/master/dev/import/conferenceSpeakers.json) \n\t- import it into your local MongoDB database\n\t\t- `mongoimport --db mongoConference --collection presentations --type json --file conferencePresentations.json --jsonArray`\n\t\t- `mongoimport --db mongoConference --collection speakers --type json --file conferenceSpeakers.json --jsonArray`\n- add Mongoose and get display data on speakers page in non-MVC fashion\n\t- `npm i mongoose`\n\t- `import mongoose from 'mongoose`;\n\t- add connection/schema/model to beginning\n\t\t---------------------------------------\n\t\tmongoose.connect('mongodb://localhost:27017/mongoConference');\n\t\tconst speakerSchema = mongoose.Schema({\n\t\t\tname: String,\n\t\t\tcountry: String\n\t\t});\n\t\tconst SpeakerModel = mongoose.model(\"Speaker\", speakerSchema);\n\t\t---------------------------------------\n\t- get speakers from database in speakers endroute\n\t\t------------------------------\n\t\t(async () => {\n\t\t\tconst speakers = await SpeakerModel.find({});\n\t\t\tres.render('speakers', {\n\t\t\t\tpageTitle: \"Speakers\",\n\t\t\t\tspeakers\n\t\t\t});\n\t\t})();\n\t\t------------------------------\n\t- display on speakers page\n\t\t----------------------------------\n\t\t<ul>\n\t\t\t<% speakers.forEach(speaker => { %>\n\t\t\t\t<li><%=speaker.name%></li>\n\t\t\t<% }); %>\n\t\t</ul>\n\t\t----------------------------------\n- refactor into models and controllers\n\t- see [finished models](https://github.com/edwardtanguay/nodeExpressEjsMongooseMvc/tree/master/src/models)\n\t- see [finished controllers](https://github.com/edwardtanguay/nodeExpressEjsMongooseMvc/tree/master/src/controllers)\n\t- also see changes to use these controllers in [app.js](https://github.com/edwardtanguay/nodeExpressEjsMongooseMvc/blob/master/src/app.js)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-22 22:01:42","systemWhoCreated":"systemUnknown"},{"id":440,"category":"MongoDB","title":"Setup M(V)C API for MongoDB collection with subdocument structure","body":"- the plan is to build an API that uses Mongoose and the MVC pattern for both simple and nested documents\n\t- see [finished code here](https://github.com/edwardtanguay/apiMongooseSimpleAndNested)\n- set up basics\n\t- `git init`\n\t\t- `.gitignore`\n\t- `npm init -y`\n\t\t- `\"type\": \"module\",`\n\t- `server.js`\n\t- `\"start\": \"npx nodemon server.js\"`\n- set up simple documents first\n\t- import data to local MongoDB\n\t\t- use [this JSON file](https://raw.githubusercontent.com/edwardtanguay/apiMongooseSimpleAndNested/master/dev/simpleusers.json)\n\t- `models/simpleUsersModel.js`\n\t\t---------------------------------\n\t\timport mongoose from 'mongoose';\n\n\t\tconst simpleUsersSchema = mongoose.Schema({\n\t\t\tfirstName: String,\n\t\t\tlastName: String\n\t\t},\n\t\t{ versionKey: false});\n\n\t\tconst SimpleUsersModel = mongoose.model(\"simpleuser\", simpleUsersSchema);\n\n\t\texport default SimpleUsersModel;\n\t\t---------------------------------\n\t- `controllers/simpleUsersController.js`\n\t\t----------------------------------------\n\t\timport SimpleUsersModel from '../models/simpleUsersModel.js';\n\n\t\texport const getAllSimpleUsers = async () => {\n\t\t\treturn await SimpleUsersModel.find({});\n\t\t}\n\n\t\texport const createSimpleUser = async (simpleUserObj) => {\n\t\t\tconst simpleUser = new SimpleUsersModel(simpleUserObj);\n\t\t\treturn simpleUser.save();\n\t\t}\n\n\t\texport const deleteSimpleUser = async (id) => {\n\t\t\treturn await SimpleUsersModel.findByIdAndRemove(id);\n\t\t}\n\n\t\texport const updateSimpleUser = async (id, updateFields) => {\n\t\t\treturn await SimpleUsersModel.findByIdAndUpdate(id, updateFields, {new: true});\n\t\t}\n\t\t----------------------------------------\n\t- install packages\n\t\t- `npm i express mongoose`\n\t- build `server.js` basics\n\t\t- import and setup API\n\t\t\t---------------------------------------------\n\t\t\timport express from 'express';\n\t\t\timport * as SimpleUsersController from './controllers/simpleUsersController.js';\n\t\t\timport mongoose from 'mongoose';\n\n\t\t\tmongoose.connect('mongodb://localhost:27017/test');\n\n\t\t\tconst app = express();\n\t\t\tconst port = 3033;\n\t\t\t---------------------------------------------\n\t\t- don't forget to add middleware in order for clients to send JSON to API\n\t\t\t----------------------------\n\t\t\tapp.use(express.json());\n\t\t\t----------------------------\n\t\t- add listener\n\t\t\t----------------------------------\n\t\t\tapp.listen(port, () => {\n\t\t\t\tconsole.log(`API is now listening on port ${port}`);\n\t\t\t});\n\t\t\t----------------------------------\n\t\t- test with `npm start`##shouldstartapiok\n- build CRUD functionality for simple documents\n\t- create `test.rest` base code\n\t\t------------------------------------\n\t\t@url = http://localhost:3034\n\t\t------------------------------------\n\t- READ code\n\t\t-----------------------------------------\n\t\t// simple users: READ\n\t\tapp.get('/simpleUsers', async (req, res) => {\n\t\t\tres.json({\n\t\t\t\tsimpleUsers: await SimpleUsersController.getAllSimpleUsers()\n\t\t\t});\n\t\t});\n\t\t-----------------------------------------\n\t- READ test\n\t\t----------------------------------------\n\t\t### simple users READ \n\t\tGET {{url}}/simpleUsers\n\t\tcontent-type: application/json\n\t\t----------------------------------------\n\t- CREATE code\n\t\t-----------------------------------------\n\t\t// simple users: CREATE\n\t\tapp.post('/simpleUsers/create', async (req, res) => {\n\t\t\tconst simpleUserObj = req.body;\n\t\t\tconst result = await SimpleUsersController.createSimpleUser(simpleUserObj);\n\t\t\tres.json({\n\t\t\t\tresult\n\t\t\t});\n\t\t});\n\t\t-----------------------------------------\n\t- CREATE test\n\t\t----------------------------------------\n\t\t### simple users CREATE \n\t\tPOST {{url}}/simpleUsers/create\n\t\tcontent-type: application/json\n\n\t\t{\n\t\t\t\"firstName\": \"Andre\",\n\t\t\t\"lastName\": \"Hackerkrug\"\n\t\t}\n\t\t----------------------------------------\n\t- UPDATE code\n\t\t----------------------------------\n\t\t// simple users: UPDATE\n\t\tapp.patch('/simpleUsers/update/:id', async (req, res) => {\n\t\t\tconst id = req.params.id;\n\t\t\tconst updateFields = req.body\n\t\t\tconst result = await SimpleUsersController.updateSimpleUser(id, updateFields);\n\t\t\tres.json({\n\t\t\t\tresult\n\t\t\t});\n\t\t});\n\t\t----------------------------------\n\t- UPDATE test\n\t\t----------------------------------\n\t\t### simple users UPDATE \n\t\tPATCH {{url}}/simpleUsers/update/619d83eed2fb430e6e4c376a\n\t\tcontent-type: application/json\n\n\t\t{\n\t\t\t\"lastName\": \"Lastname-Changed\"\n\t\t}\n\t\t----------------------------------\n\t- DELETE code\n\t\t----------------------------------\n\t\t// simple users: DELETE\n\t\tapp.delete('/simpleUsers/delete/:id', async (req, res) => {\n\t\t\tconst id = req.params.id;\n\t\t\tconst result = await SimpleUsersController.deleteSimpleUser(id);\n\t\t\tres.json({\n\t\t\t\tresult\n\t\t\t});\n\t\t});\n\t\t----------------------------------\n\t- DELETE test\n\t\t----------------------------------\n\t\t### simple users DELETE \n\t\tDELETE {{url}}/simpleUsers/delete/619d83eed2fb430e6e4c376a\n\t\tcontent-type: application/json\n\t\t----------------------------------\n- import collection with subdocuments\n\t- import data to local MongoDB\n\t\t- use [this JSON file](https://raw.githubusercontent.com/edwardtanguay/apiMongooseSimpleAndNested/master/dev/nestedusers.json)\n- add model and controller for subdocuments\n\t- `nestedUsersController.js`\n\t\t--------------------------------------\n\t\timport NestedUsersModel from '../models/nestedUsersModel.js';\n\n\t\texport const getAllNestedUsers = async () => {\n\t\t\treturn await NestedUsersModel.find({});\n\t\t}\n\n\t\texport const getAllNestedUsersEmails = async () => {\n\t\t\treturn await NestedUsersModel.find({}, {email: 1});\n\t\t}\n\n\t\texport const getAccountHistoryOfNestedUser = async (id) => {\n\t\t\treturn await NestedUsersModel.findById(\n\t\t\t\tid, {\n\t\t\t\taccountHistory: 1\n\t\t\t});\n\t\t}\n\n\t\texport const createNestedUser = async (nestedUserObj, callback) => {\n\t\t\tconst nestedUser = new NestedUsersModel(nestedUserObj);\n\t\t\tconst result = nestedUser.save((err, docs) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(docs);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\texport const deleteNestedUser = async (id) => {\n\t\t\treturn await NestedUsersModel.findByIdAndRemove(id);\n\t\t}\n\n\t\texport const updateNestedUser = async (id, updateFields) => {\n\t\t\treturn await NestedUsersModel.findByIdAndUpdate(id, updateFields, { new: true });\n\t\t}\n\t\t--------------------------------------\n\t- `nestedUsersModel.js`\n\t\t-----------------------------------\n\t\timport mongoose from 'mongoose';\n\n\t\tconst nestedUsersSchema = mongoose.Schema({\n\t\t\tname: { type: String, required: true },\n\t\t\tusername: String,\n\t\t\temail: String,\n\t\t\taddress: {\n\t\t\t\tstreet: String,\n\t\t\t\tsuite: String,\n\t\t\t\tcity: String,\n\t\t\t\tzipcode: String\n\t\t\t},\n\t\t\tphone: String,\n\t\t\twebsite: String,\n\t\t\tcompany: String,\n\t\t\taccountHistory: [{\n\t\t\t\tamount: Number,\n\t\t\t\tdate: Date,\n\t\t\t\tpurchase: String\n\t\t\t}]\n\t\t},\n\t\t\t{ versionKey: false });\n\n\t\tconst NestedUsersModel = mongoose.model(\"nesteduser\", nestedUsersSchema);\n\n\t\texport default NestedUsersModel;\n\t\t-----------------------------------\n- import subdocument controller\n\t--------------------------------------\n\timport * as NestedUsersController from './controllers/nestedUsersController.js';\n\t--------------------------------------\n- build CRUD functionality for subdocuments\n\t- READ ALL code\n\t\t--------------------------------------\n\t\t// nested users: READ\n\t\tapp.get('/nestedUsers', async (req, res) => {\n\t\t\tres.json({\n\t\t\t\tnestedUsers: await NestedUsersController.getAllNestedUsers()\n\t\t\t});\n\t\t});\n\t\t--------------------------------------\n\t- READ ALL test\n\t\t-----------------------------\n\t\t### nested users READ \n\t\tGET {{url}}/nestedUsers\n\t\tcontent-type: application/json\n\t\t-----------------------------\n\t- READ ALL EMAILS code\n\t\t------------------------------\n\t\t// nested users: READ\n\t\tapp.get('/nestedUsers/emails', async (req, res) => {\n\t\t\tres.json({\n\t\t\t\tnestedUsers: await NestedUsersController.getAllNestedUsersEmails()\n\t\t\t});\n\t\t});\n\t\t------------------------------\n\t- READ ALL EMAILS test\n\t\t-----------------------------------\n\t\t### nested users READ \n\t\tGET {{url}}/nestedUsers/emails\n\t\tcontent-type: application/json\n\t\t-----------------------------------\n\t- READ ACCOUNT HISTORY code\n\t\t--------------------------------\n\t\t// nested users: READ\n\t\tapp.get('/nestedUsers/accountHistory/:id', async (req, res) => {\n\t\t\tconst id = req.params.id;\n\t\t\tconsole.log(id);\n\t\t\tres.json({\n\t\t\t\tnestedUsers: await NestedUsersController.getAccountHistoryOfNestedUser(id)\n\t\t\t});\n\t\t});\n\t\t--------------------------------\n\t- READ ACCOUNT HISTORY test\n\t\t--------------------------------\n\t\t### nested users READ \n\t\tGET {{url}}/nestedUsers/accountHistory/619d7bb7017e9300920ffbd7\n\t\tcontent-type: application/json\n\t\t--------------------------------\n\t- CREATE code\n\t\t--------------------------------\n\t\t// nested users: CREATE\n\t\tapp.post('/nestedUsers/create', async (req, res) => {\n\t\t\tconst nestedUserObj = req.body;\n\t\t\tawait NestedUsersController.createNestedUser(nestedUserObj, (result) => {\n\t\t\t\tres.json({\n\t\t\t\t\tresult\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\t--------------------------------\n\t- CREATE test\n\t\t--------------------------------\n\t\t### nested users CREATE \n\t\tPOST {{url}}/nestedUsers/create\n\t\tcontent-type: application/json\n\n\t\t{\n\t\t\t\"name\" : \"Stephanie Added\",\n\t\t\t\"username\" : \"Brandyn_Reilly59\",\n\t\t\t\"email\" : \"Tyshawn.Abshire@yahoo.com\",\n\t\t\t\"address\" : {\n\t\t\t\t\"street\" : \"Hill Parks\",\n\t\t\t\t\"suite\" : \"Suite 582\",\n\t\t\t\t\"city\" : \"Garfieldmouth\",\n\t\t\t\t\"zipcode\" : \"21401-7727\"\n\t\t\t},\n\t\t\t\"phone\" : \"502-899-9440 x015\",\n\t\t\t\"website\" : \"jessyca.org\",\n\t\t\t\"company\" : \"Kshlerin, Wiza and Ferry\",\n\t\t\t\"accountHistory\" : [\n\t\t\t\t{\n\t\t\t\t\t\"amount\" : 333,\n\t\t\t\t\t\"date\" : \"2021-11-15T16:52:26.505+01:00\",\n\t\t\t\t\t\"purchase\" : \"Fantastic Wooden Table\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"amount\" : 665.01,\n\t\t\t\t\t\"date\" : \"2021-11-15T16:52:26.505+01:00\",\n\t\t\t\t\t\"purchase\" : \"Tasty Soft Towels\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"amount\" : 205.68,\n\t\t\t\t\t\"date\" : \"2021-11-15T16:52:26.505+01:00\",\n\t\t\t\t\t\"purchase\" : \"Small Concrete Chair\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\t--------------------------------\n\t- UPDATE code\n\t\t--------------------------------\n\t\t// nested users: UPDATE\n\t\tapp.patch('/nestedUsers/update/:id', async (req, res) => {\n\t\t\tconst id = req.params.id;\n\t\t\tconst updateFields = req.body\n\t\t\tconst result = await NestedUsersController.updateNestedUser(id, updateFields);\n\t\t\tres.json({\n\t\t\t\tresult\n\t\t\t});\n\t\t});\n\t\t--------------------------------\n\t- UPDATE test\n\t\t--------------------------------\n\t\t### nested users UPDATE \n\t\tPATCH {{url}}/nestedUsers/update/619d7bb7017e9300920ffbdb\n\t\tcontent-type: application/json\n\n\t\t{\n\t\t\t\"name\": \"Stephanie Changed\",\n\t\t\t\"address.street\": \"changed street\",\n\t\t\t\"accountHistory.2.amount\": 999\n\t\t}\n\t\t--------------------------------\n\t- DELETE code\n\t\t--------------------------------\n\t\t// nested users: DELETE\n\t\tapp.post('/nestedUsers/delete/:id', async (req, res) => {\n\t\t\tconst id = req.params.id;\n\t\t\tconst result = await NestedUsersController.deleteNestedUser(id);\n\t\t\tres.json({\n\t\t\t\tresult\n\t\t\t});\n\t\t});\n\t\t--------------------------------\n\t- DELETE test\n\t\t--------------------------------\n\t\t### nested users DELETE \n\t\tPOST {{url}}/nestedUsers/delete/619d9778343cfbcb93976181\n\t\tcontent-type: application/json\n\t\t--------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-24 07:01:14","systemWhoCreated":"systemUnknown"},{"id":441,"category":"MongoDB","title":"Create mock MongoDB data collections with NoSQLBooster","body":"- [install](https://nosqlbooster.com/downloads) and open NoSQLBooster\n- create a JSON file `employees.json`\n\t------------------------------\n\t[\n\t\t{\t\n\t\t\t\"firstName\": \"John\",\n\t\t\t\"lastName\": \"Smith\",\n\t\t\t\"files\": {\n\t\t\t\t\"contract\": \"contract_js.doc\",\n\t\t\t\t\"cv\": \"cv_js.pdf\"\n\t\t\t}\n\t\t}\n\t]\n\t------------------------------\n- import\n\t- `mongoimport --db test --collection employees --type json --file employees.json --jsonArray`\n- open database collection\n- click on **DataGen** button\n- select collection\n- choose types, e.g. replace lorem with file names##choosetypesfiles\n- change **doc count** to 5 for 5000\n- click **Go**\n- click on run\n- view your 5000 mock documents in your collection","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-24 07:01:14","systemWhoCreated":"systemUnknown"},{"id":442,"category":"Mongoose","title":"Create Node/Express/EJS/Mongo site with Mongoose subdocument relationships","body":"- these instructions show you how to create a book store that displays books, the information of which comes from two collections in the MongoDB database\n\t- the Mongoose ODM (Object Document Mapper) is used to connect (with `ref` and `populate()`) the two schemas for the collections **Books** and **Persons**, much as `JOIN` does in an SQL database between tables\n\t- the collection relationships are such:##collrelatsuch\n\t- this site also uses the MVC pattern (Model-View-Controller) to organize how data is retrieved, e.g. a **Controller** queries **Models** for data, and then passes this data to the (EJS) **Views**\n\t- the site only consists of one page (`/src/app.js`)\n\t- if anything is unclear, see the [code of the finished site](https://github.com/edwardtanguay/ejsBookStoreMongoosePopulateRelations)\n- the finished site will look like this:##techbookfinishsitei\n- set up basics\n\t- `git init`\n\t\t- `.gitignore`\n\t- `npm init -y`\n\t\t- `\"type\": \"module\",`\n\t- `src/app.js`\n\t- `\"start\": \"npx nodemon src/app.js\"`\n- install\n\t- `npm i express ejs mongoose`\n- import\n\t-----------------------------\n\timport express from 'express';\n\timport path from 'path';\n\t-----------------------------\n- Express/EJS plumbing\n\t-----------------------------\n\tconst app = express();\n\tconst __dirname = path.resolve(path.dirname(''));\n\tconst port = 3047;\n\tconst staticDirectory = path.join(__dirname, './public');\n\n\tapp.set('view engine', 'ejs');\n\tapp.set('views', path.join(__dirname, './src/views'));\n\tapp.use(express.static(staticDirectory));\n\t-----------------------------\n- listen to port\n\t----------------------------------\n\tapp.listen(port, () => {\n\t\tconsole.log(`Now listening on port http://localhost:${port}`);\n\t});\n\t----------------------------------\n- test in terminal\n\t- `npm start`\n- add endpoint\n\t------------------------------\n\tapp.get('/', async (req, res) => {\n\t\tres.send('testing');\n\t});\n\t------------------------------\n- test in browser\n\t- `npm start`\n- create EJS page: `src/views/index.ejs`\n\t--------------------------------\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Tech Bookstore</title>\n\t</head>\n\t<body>\n\t\t<h1>Tech Bookstore</h1>\n\t</body>\n\t</html>\n\t--------------------------------\n- update endpoint to serve the EJS page\n\t------------------------\n\tres.render('index', {\n\t\tpageTitle: \"Tech Bookstore\"\n\t});\n\t------------------------\n- test in browser##thetechbobbob\n- set up Mongoose MVC\n\t- make a `dev` folder and create [these JSON files](https://github.com/edwardtanguay/ejsBookStoreMongoosePopulateRelations/tree/master/dev/import) in it\n\t- create database, collections and import data\n\t\t- `mongoimport --db bookstore --collection books --type json --file mongo.books.json --jsonArray`\n\t\t- `mongoimport --db bookstore --collection persons --type json --file mongo.persons.json --jsonArray`\n\t- connect to database in `app.js`:\n\t\t- `import mongoose from 'mongoose';`\n\t\t- `mongoose.connect('mongodb://localhost:27017/bookstore');`\n- create models\n\t- `src/models/persons.js`\n\t\t-----------------------------------\n\t\timport mongoose from 'mongoose';\n\n\t\tconst Schema = mongoose.Schema;\n\n\t\tconst personsSchema = mongoose.Schema({\n\t\t\tfirstName: String,\n\t\t\tlastName: String,\n\t\t\temail: String\n\t\t}, { collection: \"persons\" });\n\t\tconst PersonsModel = mongoose.model(\"Person\", personsSchema);\n\n\t\texport default PersonsModel;\n\t\t-----------------------------------\n\t- `src/models/books.js`\n\t\t-----------------------------------\n\t\timport mongoose from 'mongoose';\n\t\timport PersonsModel from '../models/persons.js';\n\n\t\tconst Schema = mongoose.Schema;\n\n\t\tconst booksSchema = mongoose.Schema({\n\t\t\ttitle: String,\n\t\t\tauthor: { type: Schema.ObjectId, ref: 'Person' },\n\t\t\turl: String,\n\t\t\tcustomers: [{ type: Schema.ObjectId, ref: 'Person' }],\n\t\t\tisbn: String\n\t\t}, { collection: \"books\" });\n\t\tconst BooksModel = mongoose.model(\"Book\", booksSchema);\n\n\t\texport default BooksModel;\n\t\t-----------------------------------\n- create controller \n\t- note there is only one: books\n\t- `src/controllers/books.js`\n\t\t-------------------------------\n\t\timport BooksModel from '../models/books.js';\n\n\t\texport const getAllBooks = async () => {\n\t\t\tconst books = await BooksModel.find({})\n\t\t\t\t.populate(\"author\")\n\t\t\t\t.populate(\"customers\");\n\t\t\treturn books;\n\t\t}\n\t\t-------------------------------\n- load data in endroute and send to view\n\t- import BooksController\n\t\t----------------------------------\n\t\timport * as BooksController from './controllers/books.js';\n\t\t----------------------------------\n\t- update endroute\n\t\t---------------------------------\n\t\tconst books = await BooksController.getAllBooks();\n\t\tres.render('index', {\n\t\t\tpageTitle: \"Tech Bookstore\",\n\t\t\tbooks\n\t\t});\n\t\t---------------------------------\n- test if books are in view\n\t----------------------------------\n\t<p>there are <%=books.length%> books</p>\n\t----------------------------------\n\t- you should see this:##thef444test\n\t- note that in the books model file, you must import `PersonsModel` even though VSCode indicates that it's not used\n\t\t- test this by commenting the import line out and getting an erro\n\t\t- uncomment the line and it will work again\n\t\t- the persons model is being used by the booksSchema in `ref: 'Person'`\n- add the EJS code to display the books to `index.ejs`\n\t---------------------------------------------\n\t<% books.forEach(book=> { %>\n\t<div class=\"book\">\n\t\t<a href=\"<%=book.url%>\" target=\"_blank\"> <img src=\"images/<%=book.isbn%>.jpg\"\n\t\t\t alt=\"\"></a>\n\t\t<div class=\"info\">\n\t\t\t<div class=\"title\">\n\t\t\t\t<%=book.title%>\n\t\t\t</div>\n\t\t\t<div class=\"author\">by <span class=\"main\">\n\t\t\t\t\t<%=book.author.firstName%>\n\t\t\t\t\t\t<%=book.author.lastName%>\n\t\t\t\t</span></div>\n\t\t\t<ul class=\"customers\">\n\t\t\t<div class=\"header\">People who have bought this book:</div>\n\t\t\t\t<% book.customers.forEach(customer=> { %>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<%=customer.firstName%>\n\t\t\t\t\t\t\t<%=customer.lastName%>\n\t\t\t\t<span class=\"email\">(<%=customer.email%>)</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<% })%>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<% });\n\t   %>\n\t---------------------------------------------\n- test in browser\n\t- you should have raw HTML of data from your database:##rawhtmlshouldlook\n- add the images\n\t- download [these book images](https://github.com/edwardtanguay/ejsBookStoreMongoosePopulateRelations/tree/master/public/images) into `public/images`\n- test again in browser\n\t- you should see the graphics in your raw HTML:##andwitihgraphraw\n- add styling\n\t- create `public/css/main.scss`\n\t\t----------------------------------------\n\t\tbody {\n\t\t\tbackground-color: rgb(37, 3, 3);\n\t\t\tcolor: rgb(185, 183, 153);\n\t\t\tfont-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\n\t\t\tfont-size: 1.5rem;\n\t\t\tpadding: 20px;\n\n\t\t\tdiv.book {\n\t\t\t\tbackground-color: rgb(71, 22, 22);\n\t\t\t\tmargin: 0 0 20px 0;\n\t\t\t\tcolor: #ccc;\n\t\t\t\tpadding: 20px;\n\t\t\t\tdisplay: flex;\n\t\t\t\timg {\n\t\t\t\t\twidth: 120px;\n\t\t\t\t\tbox-shadow: 3px 3px 13px 3px #000000;\n\t\t\t\t}\n\t\t\t\tdiv.info {\n\t\t\t\t\tmargin: 0 0 0 25px;\n\t\t\t\t}\n\t\t\t\tdiv.title {\n\t\t\t\t\tfont-size: 1.8rem;\n\t\t\t\t}\n\t\t\t\tdiv.author {\n\t\t\t\t\t.main {\n\t\t\t\t\t\tfont-size: 1.4rem;\n\t\t\t\t\t\tfont-style: italic;\n\t\t\t\t\t\tcolor: rgb(235, 235, 154);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tul.customers {\n\t\t\t\t\tcolor: #aaa;\n\t\t\t\t\tfont-size: 0.9rem;\n\t\t\t\t\tli {\n\t\t\t\t\t\tmargin: 0 0 0 -15px;\n\t\t\t\t\t\tfont-style: italic;\n\t\t\t\t\t\t.email {\n\t\t\t\t\t\t\tcolor: #777;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdiv.header {\n\t\t\t\t\tmargin: 0 0 4px -39px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t----------------------------------------\n\t- in `index.ejs` add the link to the style sheet (to `css/main.css`, not `css/main.scss`!)\n\t\t- `<link rel=\"stylesheet\" href=\"css/main.css\">`\n\t- implement automatic sass-to-css transpiling\n\t\t- install the VSCode extension [Live Sass Compiler](https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass)\n\t\t- while on the extension intro page, click on \"Watch Sass\"##onthesassclick\n\t\t\t- the text will then change to \"Watching...\"\n- test in browser, your site should look like this:##finalsitelooklikk\n- understand the relationship between the books and persons models:\n\t- in the database, find the person **Josefine Yasper**\n\t- change her name to **Jasper**##inthedatjchang\n\t- reload the page in the browser\n\t- note that both customers were changed to **Josefine Jasper**##tojasperworks\n- **Challenge**: \n\t- add an author property on each comment\n\t- each comment field will contain the id of a person in the persons collection\n\t- next to each comment, display the name of the comment's author\n\t- solution will look like this:##doneWithCommentsBooksk\n\t- here is [one solution](https://github.com/edwardtanguay/ejsBookStoreMongoosePopulateRelations-1)\n\t- it uses **Mongoose deep population** and in shown in the [BooksController](https://github.com/edwardtanguay/ejsBookStoreMongoosePopulateRelations-1/blob/master/src/controllers/books.js):\n\t\t----------------------------------------------\n\t\timport BooksModel from '../models/books.js';\n\n\t\texport const getAllBooks = async () => {\n\t\t\tconst books = await BooksModel.find({})\n\t\t\t\t.populate(\"author\")\n\t\t\t\t.populate(\"customers\")\n\t\t\t\t.populate([\n\t\t\t\t\t{\n\t\t\t\t\t\tpath: \"comments\",\n\t\t\t\t\t\tmodel: \"Comment\",\n\t\t\t\t\t\tselect: \"author message datetime\",\n\t\t\t\t\t\tpopulate: {\n\t\t\t\t\t\t\tpath: \"author\",\n\t\t\t\t\t\t\tmodel: \"Person\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\treturn books;\n\t\t}\n\t\t----------------------------------------------\n- this site can be viewed running on [Heroku](https://mongoose-deep-population.herokuapp.com/)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-25 02:39:59","systemWhoCreated":"systemUnknown"},{"id":443,"category":"React","title":"Create a React form with validation","body":"- goal\n\t- the goal of these instructions is to go through the steps of creating a form in create-react-app which\n\t\t- validates data\n\t\t- informs the user of proper validation\n\t\t- does not allow the user to send data to the backend before all data is validated\n\t- if anything is unclear\n\t\t- you can look at the [final code here](https://github.com/edwardtanguay/form_state)\n\t\t- you can view an [online version of this app running at Heroku](https://example-form-state-validation.herokuapp.com/)##thebadformiii\n- setup create-react-app\n\t- use `npx create-react-app form-validation`\n\t- or use a minified create-react-app e.g.\n\t\t- make directory: `form-validation`\n\t\t- copy files from minified create-react-app e.g. [edwardtanguay/blankcra](https://github.com/edwardtanguay/blankcra)\n\t\t- `npm i`\n\t- `npm start`##thecrahello\n- build HTML form\n\t------------------------------------\n\t<form>\n\t\t<fieldset>\n\t\t\t<legend>Order Form</legend>\n\t\t\t<div className=\"row\">\n\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t<input type=\"text\" id=\"name\"/> \n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<label htmlFor=\"phone\">Phone</label>\n\t\t\t\t<input type=\"text\" id=\"phone\"/> \n\t\t\t</div>\n\t\t\t<div className=\"buttonRow\">\n\t\t\t\t<button>Register</button>\n\t\t\t</div>\n\t\t</fieldset>\n\t</form>\n\t------------------------------------\n- add styling\n\t- main form styles\n\t\t-------------------------\n\t\tform {\n\t\t\twidth: 600px;\n\t\t\tfieldset {\n\t\t\t\tborder: 5px solid #ccc;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 20px;\n\n\t\t\t\t.row {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-content: start;\n\t\t\t\t\tpadding: 5px;\n\t\t\t\t\tlabel {\n\t\t\t\t\t\t&;after {\n\t\t\t\t\t\t\tcontent: \":\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\twidth: 90px;\n\t\t\t\t\t\tmargin: 0 0 10px 0;\n\t\t\t\t\t}\n\t\t\t\t\tinput {\n\t\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t\t\twidth: 300px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t.invalid input {\n\t\t\t\t\tcolor: red;\n\t\t\t\t}\n\t\t\t\t.note {\n\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t\tmargin: 0 0 20px 97px;\n\t\t\t\t}\n\t\t\t\t.buttonRow {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: right;\n\t\t\t\t\tbutton {\n\t\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t\t\tpadding: 5px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpre {\n\t\t\tfont-family: 'Courier New', Courier, monospace;\n\t\t\tcolor: brown;\n\t\t\tmargin: 10px 0 0 0;\n\t\t\tbackground-color: #eee;\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 1.2rem;\n\t\t\twidth: 580px;\n\t\t}\n\t\t-------------------------\n\t- add valid format messages\n\t\t- HTML\n\t\t\t------------------------\n\t\t\t<div className=\"note\">required, maximum 10 characters</div>\n\t\t\t<div className=\"note\">e.g. 555-333-2222</div>\n\t\t\t------------------------\n\t\t- styles\n\t\t\t----------------------------\n\t\t\t.note {\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tmargin: 0 0 20px 97px;\n\t\t\t}\n\n\t\t\t.invalid input {\n\t\t\t\tcolor: red;\n\t\t\t}\t\n\t\t\t----------------------------\n- create state variables for the form\n\t-----------------------------\n\tconst [name, setName] = useState('');\n\tconst [phone, setPhone] = useState('');\n\tconst [payload, setPayload] = useState({});\n\t-----------------------------\n- wire the form to the state variables\n\t- name\n\t\t----------------------------------\n\t\tconst handleName = (e) => {\n\t\t\tlet _name = e.target.value;\n\t\t\tsetName(_name);\n\t\t}\t\t \n\n\t\tvalue={name} onChange={handleName}\n\t\t----------------------------------\n\t- phone\n\t\t----------------------------------\n\t\tconst handlePhone = (e) => {\n\t\t\tlet _phone = e.target.value;\n\t\t\tsetPhone(_phone);\n\t\t}\t\t \n\n\t\tvalue={phone} onChange={handlePhone}\n\t\t----------------------------------\n- program button to show payload (what will be sent to the backend)\n\t-------------------------\n\tconst handleButton = (e) => {\n\t\te.preventDefault();\n\t\tsetPayload(prev => ({\n\t\t\t...prev,\n\t\t\tname,\n\t\t\tphone\n\t\t}));\n\t}\n\n\tonClick={handleButton}\n\n\t{Object.keys(payload).length !== 0 && (\n\t\t<pre>\n\t\t\tpayload: {JSON.stringify(payload, null, 2)}\n\t\t</pre>\n\t)}\t\n\t-------------------------\n- clear the payload display when data changes\n\t----------------------------------------\n\tconst clearPayload = () => {\n\t\tsetPayload(prev => ({}));\n\t}\n\n\tclearPayload();\n\t----------------------------------------\n- form works but without validation:##theformfvalidwork\n- add validation to form\n\t- add state variables for the validation\n\t\t---------------------------------\n\t\tconst [phoneIsValid, setPhoneIsValid] = useState(false);\n\t\tconst [nameIsValid, setNameIsValid] = useState(false);\n\t\tconst [formIsValid, setFormIsValid] = useState(false);\t\n\t\t---------------------------------\n\t- valid name when changed\n\t\t---------------------------\n\t\tif (_name !== \"\" && _name.length <= 10) {\n\t\t\tsetNameIsValid(true);\n\t\t} else {\n\t\t\tsetNameIsValid(false);\n\t\t}\n\t\t---------------------------\n\t- validate phone when changed\n\t\t-----------------------------\n\t\tif (_phone !== \"\" && /^\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d$/.test(_phone)) {\n\t\t\tsetPhoneIsValid(true);\n\t\t} else {\n\t\t\tsetPhoneIsValid(false);\n\t\t}\n\t\t-----------------------------\n\t- add validation-driven form styling\n\t\t--------------------------------\n\t\t<div className={\"row \" + (nameIsValid ? \"valid\" : \"invalid\")}>\n\n\t\t<div className={\"note \" + (nameIsValid ? \"valid\" : \"invalid\")}>required, maximum 10 characters</div>\n\n\t\t<div className={\"row \" + (phoneIsValid ? \"valid\" : \"invalid\")}>\n\n\t\t<div className={\"note \" + (phoneIsValid ? \"valid\" : \"invalid\")}>e.g. 555-333-2222</div>\n\t\t--------------------------------\n\t- add an observer to formIsValid state variable up-to-date\n\t\t------------------------------\n\t\tuseEffect(() => {\n\t\t\tsetFormIsValid(nameIsValid && phoneIsValid);\n\t\t}, [nameIsValid, phoneIsValid])\n\t\t------------------------------\n\t- disable register button so long all fields are not valid\n\t\t---------------------------------------\n\t\t<button disabled={!formIsValid} onClick={handleButton}>Register</button>\n\t\t---------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-29 05:59:13","systemWhoCreated":"systemUnknown"},{"id":444,"category":"bcrypt","title":"Why and how to use bcrypt for hashing passwords","body":"- the golden rule: **never save passwords in the database in plain text**\n- solution: **use encryption**\n\t- but you have to use a key to encrypt your passwords\n\t- problem:\n\t\t- what can be encrypted can be decrypted\n\t\t- if hacker gets the secret key that was used to encrypt, they can decrypt all your passwords\n- solution: **using hashing**\n\t- encryption vs hashing\n\t\t\"Encryption is a two-way process where information is encoded and decoded with the help of a secret key. Hashing is a one-way encryption technique which means that it is impossible to reverse engineer the hash value to get the plain text back.\"\n\t- **password** --> hashing algorithm --> **hash**\n\t- with a hash, there is no way back\n\t\t- password <-NO hashing algorithm <-NO hash\n\t- mathematically interesting to ponder: how is it possible to create a hash that is impossible to reverse engineer?\n\t\t- \"What happens in a real hash function is that hundreds of one-way operations take place sequentially and the results from earlier operations are used in later operations. So when you try to reverse it and guess the two inputs in a later stage, the only way to tell if the numbers you are guessing are correct is to work all the way back through the hash algorithm. If you start guessing numbers in the later stages wrong, you'll end up with an inconsistency in the earlier stages. And you can't solve it by trial and error, because there are simply too many combinations to guess, more than atoms in the known universe, etc. In summary, hashing algorithms are specifically designed to perform lots of one-way operations in order to end up with a result that cannot be calculated backwards.\" https://crypto.stackexchange.com/questions/45377/why-cant-we-reverse-hashes\n\t- problem: hacker gets your database of hashes, then hashes common passwords and looks for the resulting hashes in your database, then finding at least the passwords to accounts that have common passwords\n\t\t- e.g. abc123, pass123, passw0rd, etc.\n- solution: **use slow hashing algorithms**\n\t- \"Password hash functions should be relatively expensive to calculate in case of brute-force attacks.\"\n\t- the longer it takes to compute has, the less practical it is to calculate hashes on a large scale\n\t- problem: hackers have created lists of common passwords and their pre-computed hashes known as **rainbow tables**\n- solution: **use random salt to hash passwords**\n\t- when you create a password, create a random string (salt), and then hash the combination: salt+password\n\t\t- this makes rainbow tables useless\n\t- bcrypt can create a salt\n\t\t---------------------------\n\t\tbcrypt.genSalt().then(salt => {\n\t\t\tconsole.log(salt);\n\t\t});\n\t\t---------------------------\n\t- a salt is a unique and random string generated by bcrypt\n\t- for two passwords that are almost similar, the resulting hash is vastly different\n\t- even if you have two users in your database with the same password, with salt, the resulting hash for each will be unique, and vastly different\n\t\t- advantage of this approach: \n\t\t\t- pushes the hacker back to their previous attack method: they have to spend time creating hashes to compare in database, but with even much more complicated passwords+salt combinations\n\t- bcrypt vs. md5\n\t\t- \"From what I understand bcrypt is safer. It's made to be slower, this makes it harder for an attacker to brute-force a password. It can be configured to iterate more and more which is useful since CPU's are getting more powerful. That's the point of having **configurable slowness**: you can make the function as slow as you wish. Or, more accurately, **as slow as you can tolerate**: indeed, a slow function is slow for everybody, attacker and defender alike.\" https://stackoverflow.com/questions/34813483/how-is-bcrypt-better-than-md5-salt\n- how to use bcrypt for signups/logins\n\t- at signup, take password, create hash with salt using `bcrypt.hash()`, store hash in database\n\t\t-------------------------------\n\t\tbcrypt.genSalt().then(salt => {\n\t\t\tbcrypt.hash(\"password\", salt).then(hash => {\n\t\t\t\tconsole.log(hash);\n\t\t\t});\n\t\t});\n\t\t-------------------------------\n\t- at login, take password, compare password with hash in database using `bcrypt.compare()`\n\t\t----------------------------------\n\t\tbcrypt.compare('password', theHash).then(result => console.log(result));\n\t\t----------------------------------\n- understand how bcrypt can successfully compare the password without knowing the original salt\n\t- on signup, salt is random, therefore the same password produces a different hash each time\n\t\t--------------------------------------\n\t\tbcrypt.genSalt().then(salt => {\n\t\t\tbcrypt.hash(\"password\", salt).then(hash => {\n\t\t\t\tconsole.log(`Hash to save in database: ${hash}`);\n\t\t\t});\n\t\t});\n\t\t--------------------------------------\n\t- for example, for the password \"password\", signing up three times produced the following three hashes:\n\t\t-----------------------------\n\t\t$2b$10$XEcAhERMwhaM1bk/10xAwuhY6oeYH27uM.W44ycMeFdYkBBqR7Cdy\n\t\t$2b$10$cK7Wui1Aex127Qcf/U59W.9OliIm5oLwvRGXU2XopBnGlZbjnpmXG\n\t\t$2b$10$oiqPsOlhIYS6ocOFgls7Huo.a4819mV5P/qbKRv2Id8rUJKGOO/nK\n\t\t-----------------------------\n\t- so on login, how can bcrypt take the password and reproduce the same hash that is in the database if it doesn't know the salt that was used to create it during signup?\n\t\t- notice the relationship between **salt** and **hash**:\n\t\t\t-------------------------------------------\n\t\t\tbcrypt.genSalt().then(salt => {\n\t\t\t\tbcrypt.hash(\"password\", salt).then(hash => {\n\t\t\t\t\tconsole.log('salt and hash:');\n\t\t\t\t\tconsole.log(salt);\n\t\t\t\t\tconsole.log(hash);\n\t\t\t\t});\n\t\t\t});\n\t\t\t-------------------------------------------\n\t\t- for example:\n\t\t\t--------------------------------------------------\n\t\t\t$2b$10$kPkXfp9EsIKdlyxKBek9me\n\t\t\t$2b$10$kPkXfp9EsIKdlyxKBek9mewfKRRe7U09ZBYgCbapwL87goxBkGoye\n\n\t\t\t$2b$10$MHOoYMlEmBFRkZR7ahm/Qe\n\t\t\t$2b$10$MHOoYMlEmBFRkZR7ahm/Qe5ebX1dAr5Wv7rnLAAEAqsC9PE4zau7m\n\n\t\t\t$2b$10$BP1TfMmSR1CbzR3kKn9m/O\n\t\t\t$2b$10$BP1TfMmSR1CbzR3kKn9m/OqOVqhJqhkYzCFFAHHQ/JSF0T2fhW.Yi\n\t\t\t--------------------------------------------------\n\t- the solution: bcrypt **does** have the salt at login because it stored the salt in the hash in plain text!\n\t\t- signup\n\t\t\t- takes salt+password and creates prehash, e.g. `wfKRRe7U09ZBYgCbapwL87goxBkGoye`\n\t\t\t- then it takes the **salt** and adds it in plain text to the front of the **prehash**:\n\t\t\t\t- `$2b$10$kPkXfp9EsIKdlyxKBek9me` + `wfKRRe7U09ZBYgCbapwL87goxBkGoye`\n\t\t\t\t- so **hash** is now `$2b$10$kPkXfp9EsIKdlyxKBek9mewfKRRe7U09ZBYgCbapwL87goxBkGoye` and this is what gets stored in the database\n\t\t- login\n\t\t\t- takes the attempted password from the user\n\t\t\t- gets the salt from the stored hash (in our case, the first 29 characters)\n\t\t\t- takes this **same** salt and (if correct) **same** password, and generates the prehash again just as during signup\n\t\t\t- adds the salt to the prehash and compares it to what is in the database\n\t\t\t- if they match, then the user typed in the right password","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-11-30 05:49:31","systemWhoCreated":"systemUnknown"},{"id":445,"category":"Node","title":"How to create sessions in Node/Express","body":"- the goal \n\t- these instructions will show you the basics of using cookies and sessions in Node/Express to enable a user to login, remain logged in, and log out\n\t- upon logging in, the client will receive a cookie which tracks a user session in the API\n\t- if anything is unclear in these instructions, see the [final code here](https://github.com/edwardtanguay/node-express-session-basics)\n- set up project\n\t- setup\n\t\t- `get init`\n\t\t\t- `.gitignore`\n\t\t\t\t------------------------------\n\t\t\t\tnode_modules\n\t\t\t\t.env\n\t\t\t\t------------------------------\n\t\t- `npm init -y`\n\t\t\t- `\"type\": \"module\",`\n\t\t\t- `\"start\": \"npx nodemon server.js\"`\n\t\t- `npm i express express-session cookie-parser`\n- create a minimal API: `server.js`\n\t--------------------------------------\n\timport express from 'express';\n\n\tconst app = express();\n\tconst PORT = 5001;\n\n\tapp.get(\"/test\", (req, res) => {\n\t\tres.send('this is an endpoint test');\n\t});\n\n\tapp.listen(PORT, (req, res) => {\n\t\tconsole.log(`API listening on port ${PORT}`);\n\t});\n\t--------------------------------------\n- test in browser\n- add session management\n\t- imports\n\t\t----------------------------\n\t\timport session from 'express-session';\n\t\timport cookieParser from 'cookie-parser';\n\t\t----------------------------\n\t- add middleware\n\t\t----------------------\n\t\tapp.use(cookieParser());\n\t\tapp.use(\n\t\t\tsession({\n\t\t\t\tresave: true,\n\t\t\t\tsaveUninitialized: true,\n\t\t\t\tsecret: \"secret\"\n\t\t\t})\n\t\t);\n\t\t----------------------\n\t\t- notice session secret (i.e. salt for the session hash) will later be made more random and put in `.env` file to increase session security\n- add test users\n\t----------------------------\n\tconst users = [\n\t\t{\n\t\t\tusername: \"ja\",\n\t\t\tfirstName: \"James\",\n\t\t\tlastName: \"Anderson\",\n\t\t\temail: \"ja@mail.com\"\n\t\t},\n\t\t{\n\t\t\tusername: \"ac\",\n\t\t\tfirstName: \"Ashley\",\n\t\t\tlastName: \"Cartwright\",\n\t\t\temail: \"ac@mail.com\"\n\t\t}\n\t];\n\t----------------------------\n- replace test endpoint with these session management endpoints\n\t--------------------------------\n\tapp.get(\"/login/:username\", (req, res) => {\n\t\tconst user = users.find(user => user.username === req.params.username);\n\t\tif (user) {\n\t\t\treq.session.user = user;\n\t\t\treq.session.save();\n\t\t\tres.send(`User logged in: ${JSON.stringify(user)}`);\n\t\t} else {\n\t\t\tres.status(500).send(\"bad login\");\n\t\t}\n\t});\n\n\tapp.get(\"/user\", (req, res) => {\n\t\tif (req.session.user) {\n\t\t\tres.send(req.session.user);\n\t\t} else {\n\t\t\tres.send('no user logged in');\n\t\t}\n\t});\n\n\tapp.get(\"/logout\", (req, res) => {\n\t\treq.session.destroy();\n\t\tres.send(\"User logged out\");\n\t});\n\t--------------------------------\n- test the API\n\t- postman\n\t- Firefox\n\t- Chrome\n\t- show that each can have a different user logged in\n\t- show also that if you restart the server, the session is gone\n- hide the session secret\n\t- create `.env` file\n\t\t------------------------\n\t\tSESSION_SECRET = iwjf2392jsdf\n\t\t------------------------\n\t- in terminal\n\t\t- `npm i dotenv`\n\t- in `server.js`, add .env management \n\t\t-------------------------------------\n\t\timport dotenv from 'dotenv';\n\n\t\tdotenv.config();\n\t\t-------------------------------------\n\t- in `server.js`, change session secret to lookup environment variable\n\t\t-----------------------------------\n\t\tsecret: process.env.SESSION_SECRET\n\t\t-----------------------------------\n\t- test again","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-01 04:15:13","systemWhoCreated":"systemUnknown"},{"id":446,"category":"Authorization","title":"Create React app with user authentication and authorization","body":"- the goal\n\t- the goal of these instructions is to create both a frontend and backend site which easily allows you to assign users to groups in the API which then have various access in the React site\n\t\t- if anything is unclear in these instructions\n\t\t\t- backend code is here: [node-express-react-authorization-backend](https://github.com/edwardtanguay/node-express-react-authorization-backend)\n\t\t\t- frontend code is here: [node-express-react-authorization-frontend](https://github.com/edwardtanguay/node-express-react-authorization-frontend)\n\t- the final site will allow users to log in and see different content and have different rights##themernappwithalliok\n- **create backend**\n\t- allow user login/logout using sessions and cookies\n\t\t- download this project and copy as basis: [node-express-session-basics](https://github.com/edwardtanguay/node-express-session-basics)\n\t\t- copy files to directory named, e.g. `mernshowcase-et-backend`\n\t\t- `npm i`\n\t\t- test if authentication is working:\n\t\t\t- `http://localhost:3003/user`\n\t\t\t- `http://localhost:3003/login/ac`\n\t\t\t- `http://localhost:3003/user`\n\t\t\t- `http://localhost:3003/logout`\n\t\t\t- `http://localhost:3003/login/ja`\n\t\t\t- `http://localhost:3003/user`\n\t\t\t- `http://localhost:3003/logout`\n\t- set up authorization\n\t\t- mock database users to test authorization\n\t\t\t-----------------------------------------\n\t\t\tconst users = [\n\t\t\t\t{\n\t\t\t\t\tusername: \"anonymousUser\",\n\t\t\t\t\tfirstName: \"Anonymous\",\n\t\t\t\t\tlastName: \"User\",\n\t\t\t\t\taccessGroups: \"loggedOutUsers\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tusername: \"jj\",\n\t\t\t\t\tfirstName: \"James\",\n\t\t\t\t\tlastName: \"JustSignedUpton\",\n\t\t\t\t\taccessGroups: \"loggedInUsers,notApprovedUsers\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tusername: \"aa\",\n\t\t\t\t\tfirstName: \"Ashley\",\n\t\t\t\t\tlastName: \"Approvedmemberton\",\n\t\t\t\t\taccessGroups: \"loggedInUsers, members\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tusername: \"kc\",\n\t\t\t\t\tfirstName: \"Kyle\",\n\t\t\t\t\tlastName: \"ContentEditorton\",\n\t\t\t\t\taccessGroups: \"loggedInUsers, members, contentEditors\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tusername: \"ma\",\n\t\t\t\t\tfirstName: \"Mindy\",\n\t\t\t\t\tlastName: \"Administraton\",\n\t\t\t\t\taccessGroups: \"loggedInUsers, members, admins\"\n\t\t\t\t}\n\t\t\t];\n\t\t\t-----------------------------------------\n\t\t- refactor endpoints\n\t\t\t- `app.post(\"/login\", (req, res) => {`\n\t\t\t\t- `const username = req.body.username;`\n\t\t\t\t- `res.json(JSON.stringify(user));`\n\t\t\t- `app.get(\"/currentuser\", (req, res) => {`\n\t\t- test again:\n\t\t\t- GET `http://localhost:3003/currentuser`\n\t\t\t- POST `http://localhost:3003/login/kc`\n\t\t\t- GET `http://localhost:3003/currentuser`\n\t\t\t- GET `http://localhost:3003/logout`\n- **create frontend**\n\t- set up base React site\n\t\t- make a create-react-app called e.g. `mernshowcase-et-frontend`\n\t\t\t- alternatively download a [blankcra](https://github.com/edwardtanguay/blankcra)\n\t\t- `npm i`\n\t\t- `npm start`\n\t- set up login functionality \n\t\t- port the code from this project in order to set up a login form that allows a user to log into the site: [Create a React form with validation](https://onespace.netlify.app/howtos?id=443)\n\t\t\t- skip the validation for now but get a login form working#workloginformsdf\n\t\t- wire the login form to the backend\n\t\t\t- add cors\n\t\t\t\t- `npm i cors`\n\t\t\t\t- `app.use(cors());`\n\t\t\t- add ability to read JSON payload via POST (e.g. to read `req.body`)\n\t\t\t\t- `app.use(express.json());`\n\t\t\t- handle button now looks like this:\n\t\t\t\t-------------------------------\n\t\t\t\tconst handleButton = async (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\tbody: JSON.stringify({ username, password })\n\t\t\t\t\t};\n\t\t\t\t\tconst response = await fetch('http://localhost:3003/login', requestOptions);\n\t\t\t\t\tconst _currentUser = JSON.parse(await response.json());\n\t\t\t\t\tsetCurrentUser(prev => ({...prev, ..._currentUser }));\n\t\t\t\t}\n\t\t\t\t-------------------------------\n\t- display user when logged in\n\t\t- `<h2>Current User: {currentUser.firstName} {currentUser.lastName}</h2>`\n\t\t- in backend: customize cors for fetch-enabled cookies\n\t\t\t------------------------\n\t\t\tapp.use(cors(\n\t\t\t\t{\n\t\t\t\t\torigin: 'http://localhost:3000',\n\t\t\t\t\tcredentials: true\n\t\t\t\t}\n\t\t\t));\n\t\t\t------------------------\n\t\t- in backend: if nobody logged in, send anonymous user\n\t\t\t-------------------------------\n\t\t\tapp.post(\"/login\", (req, res) => {\n\t\t\t\tconst username = req.body.username;\n\t\t\t\t// const password = req.body.password;\n\t\t\t\tlet user = users.find(user => user.username === username);\n\t\t\t\tif (!user) {\n\t\t\t\t\tuser = users.find(user => user.username === 'anonymousUser');\n\t\t\t\t}\n\t\t\t\treq.session.user = user;\n\t\t\t\treq.session.save();\n\t\t\t\tres.json(user);\n\t\t\t});\n\n\t\t\tapp.get(\"/currentuser\", (req, res) => {\n\t\t\t\tlet user = req.session.user;\n\t\t\t\tif (!user) {\n\t\t\t\t\tuser = users.find(user => user.username === 'anonymousUser');\n\t\t\t\t}\n\t\t\t\tres.json(user);\n\t\t\t});\n\t\t\t-------------------------------\n\t\t- protect page to only show when user object is set\n\t\t\t-------------------------\n\t\t\t{currentUser.username && (\n\t\t\t\t<>\n\t\t\t-------------------------\n\t\t- make function to check if user is in a specific accessGroup\n\t\t\t-------------------------\n\t\t\tconst currentUserIsInGroup = (accessGroup) => {\n\t\t\t\tconst accessGroupArray = currentUser.accessGroups.split(',').map(m => m.trim());\n\t\t\t\treturn accessGroupArray.includes(accessGroup);\n\t\t\t}\n\t\t\t-------------------------\n\t\t- only display login form when not logged in, otherwise logout button\n\t\t\t---------------------------\n\t\t\t{currentUserIsInGroup('loggedOutUsers') && (\n\t\t\t---------------------------\n\t\t- make logout button and handler\n\t\t\t-------------------------------\n\t\t\tconst handleLogout = async (e) => {\n\t\t\t\tconst requestOptions = {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tcredentials: 'include'\n\t\t\t\t};\n\t\t\t\tconst response = await fetch('http://localhost:3003/logout', requestOptions);\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst _currentUser = await response.json();\n\t\t\t\t\tsetCurrentUser(prev => ({ ...prev, ..._currentUser }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t{currentUserIsInGroup('loggedInUsers') && (\n\t\t\t\t<div><button onClick={handleLogout}>Logout</button></div>\n\t\t\t)}\n\t\t\t-------------------------------\n\t\t- clear form on success\n\t\t\t----------------------\n\t\t\tsetUsername('');\n\t\t\tsetPassword('');\n\t\t\t----------------------\n\t\t- show logged-in user name only, nothing for anonymousUser\n\t\t\t--------------------------------\n\t\t\t{currentUserIsInGroup('loggedInUsers') && (\n\t\t\t\t<h2>Current User: {currentUser.firstName} {currentUser.lastName}</h2>\n\t\t\t)}\n\t\t\t--------------------------------\n\t- show appropriate information depending on usergroup\n\t\t- setup panels\n\t\t\t---------------------------------\n\t\t\t<div className=\"panel\">\n\t\t\t\tThis is a test.111\n\t\t\t</div>\n\t\t\t<div className=\"panel\">\n\t\t\t\tThis is a test.222\n\t\t\t</div>\n\n\t\t\tdiv.panel {\n\t\t\t\tbackground-color: #eee;\n\t\t\t\twidth: 560px;\n\t\t\t\tmargin: 10px 0 0 0;\n\t\t\t\tpadding: 20px;\n\t\t\t\tborder-radius: 5px;\n\t\t\t}\n\t\t\t---------------------------------\n\t\t- for visitors\n\t\t\t--------------------------------\n\t\t\t{currentUserIsInGroup('loggedOutUsers') && (\n\t\t\t\t<div className=\"panel\">\n\t\t\t\t\tWelcome to this site. \n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t--------------------------------\n\t\t- for users who have signed up but have not yet been approved\n\t\t\t--------------------------------\n\t\t\t{currentUserIsInGroup('notApprovedUsers') && (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t<h3>Thank you for registering!</h3>\n\t\t\t\t\t\tAn administrator will approve your account as soon as possible.\n\t\t\t\t\t</div>\n\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t--------------------------------\n\t\t- for members\n\t\t\t--------------------------------\n\t\t\t{currentUserIsInGroup('members') && (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t<h3>Current Site News for Members</h3>\n\t\t\t\t\t\t<p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Neque explicabo voluptate quia asperiores sit! Vel molestiae labore ratione non dolores? Exercitationem soluta quo id laboriosam, autem perferendis? Fuga, suscipit ipsa.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t--------------------------------\n\t\t- for content editors\n\t\t\t---------------------------------\n\t\t\t{currentUserIsInGroup('contentEditors') && (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t<h3>Content Editor Section:</h3>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button>Edit Welcome Page</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button>Create New Page</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t---------------------------------\n\t\t- for admins\n\t\t\t---------------------------------\n\t\t\t{currentUserIsInGroup('admins') && (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t<h3>Admin Section:</h3>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button>Create users</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button>Edit users</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button>Delete users</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t---------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-02 08:27:14","systemWhoCreated":"systemUnknown"},{"id":447,"category":"JavaScript","title":"How to easily create CLI commands with Node and JavaScript to generate code","body":"- This project shows you how easy it is to set up a code generator\n- When you notice you are creating the same set of files repeatedly, use this code to automate the process.\n- You can get the full code here: [node-cli-create-site](https://github.com/edwardtanguay/node-cli-create-site)\n- For example, you can type `node create-site.js \"Berlin MongoDB Conference\" complex` and a CSS file and an HTML file with JavaScript will be created in a folder:##thejavasandthecss\n- `create-site.js`\n\t-----------------------------------\n\timport fs from 'fs';\n\n\tconst args = process.argv.slice(2);\n\n\tconst siteName = args[0]; // e.g. \"test001\"\n\tlet kind = args[1]; // e.g. \"simple\", \"complex\"\n\n\t// validate and sanitize arguments\n\tif (kind === undefined) {\n\t\tkind = 'simple';\n\t}\n\tif (siteName === undefined || !['simple', 'complex'].includes(kind)) {\n\t\tconsole.log('');\n\t\tconsole.log('COMMAND SYNTAX:');\n\t\tconsole.log('node create-site.js [sitename] [kind: simple (default), complex]');\n\t\tconsole.log('');\n\t\tconsole.log('VALID EXAMPLES:');\n\t\tconsole.log('node create-site.js test001')\n\t\tconsole.log('node create-site.js test001 simple')\n\t\tconsole.log('node create-site.js test001 complex')\n\t\tconsole.log('node create-site.js \"Berlin MongoDB Conference\" complex')\n\t\tprocess.exit();\n\t}\n\tconst directoryName = siteName.split('').filter(char => {\n\t\tif (char != ' ') {\n\t\t\treturn char;\n\t\t}\n\t}).join('');\n\n\t// create site directory\n\tif (!fs.existsSync(directoryName)) {\n\t\tfs.mkdirSync(directoryName);\n\t}\n\n\t// create pages\n\tswitch (kind) {\n\t\tcase \"simple\":\n\t\t\tfs.writeFileSync(`${directoryName}/index.html`, `<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>${siteName}</title>\n\t</head>\n\t<body>\n\t<h1>${siteName.toUpperCase()}</h1>\n\t<p>Welcome to this site.</p>\n\t</body>\n\t</html>`);\n\t\t\tbreak;\n\t\tcase \"complex\":\n\t\t\tfs.writeFileSync(`${directoryName}/index.html`, `<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<link rel=\"stylesheet\" href=\"main.css\">\n\t\t<title>${siteName}</title>\n\t</head>\n\t<body>\n\t<h1>${siteName.toUpperCase()}</h1>\n\t\t<p class=\"message\"\n\t\t   style=\"display:none\">Welcome to this styled and interactive site.</p>\n\t\t<button class=\"buttonShowMessage\">Show Message</button>\n\n\t\t<script>\n\t\t\tconst messageElem = document.querySelector('.message');\n\t\t\tconst buttonElem = document.querySelector('.buttonShowMessage');\n\t\t\tbuttonElem.onclick = () => {\n\t\t\t\tmessageElem.style.display = 'block';\n\t\t\t\tbuttonElem.style.display = 'none';\n\t\t\t}\n\t\t</script>\n\t</body>\n\t</html>`);\n\t\t\tfs.writeFileSync(`${directoryName}/main.css`, `body {\n\t\tbackground-color: #333;\n\t\tfont-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n\t\tfont-size: 1.6rem;\n\t\tpadding: 20px;\n\t\tcolor: #ccc;\n\t}`);\n\t}\n\t-----------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-03 07:03:11","systemWhoCreated":"systemUnknown"},{"id":448,"category":"JavaScript","title":"The crazy truth that JavaScript arrays are really objects","body":"- note that underneath, arrays are objects\n\t----------------------------------\n\tconst nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n\tconsole.log(nums);\n\n\tfor (const num of nums) {\n\t\tconsole.log(num);\n\t}\n\n\tfor (const num in nums) {\n\t\tconsole.log(num);\n\t}\n\n\tconst book = {\n\t\ttitle: \"The Book\",\n\t\tpages: 34\n\t};\n\n\tfor (const prop in book) {\n\t\tconsole.log(prop)\n\t}\n\n\tconsole.log(Object.keys(book))\n\tconsole.log(Object.values(book))\n\n\tconsole.log(Object.keys(nums))\n\tconsole.log(Object.values(nums))\n\n\tconsole.log(typeof book)\n\tconsole.log(typeof nums)\n\n\tconsole.log(Array.isArray(book));\n\tconsole.log(Array.isArray(nums));\n\t----------------------------------\n- best is to execute this code in VSCode with [Quokka](https://quokkajs.com/docs/index.html)##thequokkaij","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-03 08:48:31","systemWhoCreated":"systemUnknown"},{"id":449,"category":"JavaScript","title":"JavaScript Basics","body":"- JavaScript environments (https://onespace.netlify.app/howtos?id=388)\n\t- Low-hanging fruit\n\t- Quokka\n\t- jsfiddle\n\t\t- https://jsfiddle.net/edwardtanguay/7cx0dg9s/3/\n\t- browser-inline\n\t- browser-modules\n\t- Node/npm/CLI\n\t\t- https://onespace.netlify.app/howtos?id=447\n\t- React (create-react-app)/JSON/Netlify\n\t- Vue\n\t\t- https://onespace.netlify.app/howtos?id=393\n\t\t- https://onespace.netlify.app/howtos?id=340\n\t- TypeScript\n- types\n\t- strings\n\t- numbers\n\t\t- Intl.NumberFormat()\n\t\t- toFixed()\n\t- booleans\n\t- arrays\n\t- objects\n\t- dates\n\t\t- JavaScript does not have a date data type. \n\t\t- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates\n\t\t- https://www.npmjs.com/package/moment\n\t- undefined / not defined / null / empty \"\"\n\t- compared to Java/C#, JavaScript is extremely sloppy\n\t\t- therefore: validate, santitize, avoid var and forget hoisting!, use const/let instead!\n\t\t\t- or use TypeScript\n\t\t- parseInt() , parseFloat()\n\t\t- Number()\n\t\t- String()\n\t\t- typeof\n- operators\n\t- arithmetic\n\t\t- `+ - * / %`\n\t\t- `++ --`\n\t- assignment\n\t\t- `= += -=`\n\t- string\n\t\t- `+` (use template literals now instead, much better!) \n\t\t- example\n\t\t\t------------------------------------\n\t\t\tconst title = \"The Book\";\n\t\t\tconst titles = [\"The Book\", \"The Other Book\"];\n\t\t\tconst subtitle = \"The greatest book\";\n\t\t\tconst message = `The title of the book is ${titles.join(', ')} (${subtitle}).`;\n\t\t\tconst message = \"The title of the book is \" + title + \" (\" + subtitle + \").\";  // ...the book is The Book, The Other Book (The greatest book)\n\t\t\tconst pages = 234;\t\t\t\n\t\t\t------------------------------------\n\t- comparison\n\t\t- `===` (instead of `==`)\n\t\t- `!==` (instead of `!=`)\n\t\t- `> < >= <=`\n\t\t- `?` (ternary, learn to use it!)\n\t\t\t- code:\n\t\t\t\t----------------------------\n\t\t\t\tconst temp = 40;\n\t\t\t\tconst feelsLike = '';\n\t\t\t\tif(temp > 30) {\n\t\t\t\t\tfeelsLike = \"hot\";\n\t\t\t\t} else {\n\t\t\t\t\tfeelsLike = \"cold\";\n\t\t\t\t}\n\t\t\t\t----------------------------\n\t- logical\n\t\t- `&& || !`\n- math functions\n\t- `Math.round()`\n\t- `Math.ceil()`\n\t- `Math.floor()`\n\t- `Math.abs()`\n\t- `Math.min()`\n\t- `Math.max()`\n\t- `Math.floor(Math.random() * 100) + 1` (number between 1 and 100)`\n- string functions\n\t- `substring(start, end)`\n\t\t- NOT THIS: `substr(start, length)`\n\t- `slice(start, end)`\n\t- `replace(/findthis/g,\"replace it with this\");` (i.e. use regular expressions)\n\t- `toUpperCase()`\n\t- `toLowerCase()`\n\t- `padStart()`\n\t- `padEnd()`\n\t- `charAt(0)`\n\t- `split()`\n- array functions\n\t- `.length`\n\t- .join()\n\t- .slice()\n\t- .pop() .push() .shift() .unshift()\n\t- .reverse()\n\t- .sort()\n\t- .splice()\n\t- .indexOf()\n\t- .lastIndexOf()\n- conditions\n\t- if/else\n\t- switch\n- for-loops\n\t- for-in, for-of, forEach\n\t\t- The difference between for..in, for..of, and forEach()\n\t\t\t- https://onespace.netlify.app/howtos?id=227\n\t\t- The crazy truth that JavaScript arrays are really objects\n\t\t\t- https://onespace.netlify.app/howtos?id=448\n\t- otherwise the classic:\n\t\t- `for(let i = 0; i < 10; i++) {`\n- while/do\n- regular expressions\n- functions\n\t- arrow functions\n\t- classic functions\n- object literals\n\t- iterating over objects and arrays\n\t\t- .entries()\n\t\t- .forEach()\n\t\t- .filter() / .find() \n\t\t- .map()\n\t\t- .reduce()\n\t\t- .sort()\n\t\t- .some()\n\t\t- .every()\n\t\t- Object.entries()\n\t\t- Object.keys()\n\t\t- Object.values()\n\t\t- Object.assign()\n\t\t- other object methods\n- **clones vs. references**, or the heap and the stack \n\t- clones: string, numbers, boolean\n\t- references: objects and arrays\n\t- the spread operator \n\t- deep cloning objects and arrays\n- destructuring\n\t- arrays\n\t- objects\n- nesting arrays and objects\n- callbacks/promises\n- closure\n- recursion\n- classes\n\t- anufacturing objects with the same structure - Creating instances with the new keyword, The Date class - Constructing an object: The constructor() method, instance and this - Prototype methods: Adding custom methods to our class - Creating subclasses with extends and super()\"\t\t\n- DOM\t\n\tgetElementById\n\tonclick\n\tfetch()\n\tasync/await\n\t\t- IIFE\t\n- checkout\n\t- https://edabit.com/tutorial/javascript#numbers\n\t- https://onecompiler.com\n- concepts and history \n\t- Douglas Crawford\n\t\t- JavaScript, The Good Parts - \"Understanding the Excellence of JavaScript\" - 2008\n\t- ES6\n\t- state programming vs functional programming\n\t\t- \"In object-oriented programming, state exists. In functional programming, state does not exist.\"","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-03 22:45:46","systemWhoCreated":"systemUnknown"},{"id":450,"category":"JWT","title":"Create a Node/Express site with JWT that logs user out after time elapse","body":"- this project shows how use JWTs to allow a user to log in via the frontend, after which the frontend counts down the number of seconds until the user is automatically logged out\n- the JWT token is stored on the frontend in localStorage\n- complete code:\n\t- see [backend code](https://github.com/edwardtanguay/jwt-test-timed-backend)\n\t- see [frontend code](https://github.com/edwardtanguay/jwt-test-timed-frontend)\t\n- frontend login form:##frontendloginjwttime\n- frontend when user has logged in:##frontendloginjwttimeloggedinok\n- backend `server.js`\n\t-----------------------------------------------\n\timport express from 'express';\n\timport jwt from 'jsonwebtoken';\n\timport cors from 'cors';\n\n\tconst user = {\n\t\tid: 1,\n\t\tusername: \"nigel\",\n\t\tfirstName: \"Nigel\",\n\t\tlastName: \"Richter\",\n\t\temail: \"nigel@gmail.com\"\n\t}\n\n\tconst app = express();\n\tconst PORT = 5001;\n\n\tapp.use(cors());\n\tapp.use(express.json());\n\n\tconst verifyToken = (req, res, next) => {\n\t\tconst bearerHeader = req.headers['authorization'];\n\t\tif (typeof bearerHeader !== 'undefined') {\n\t\t\tconst bearer = bearerHeader.split(' ');\n\t\t\tconst bearerToken = bearer[1];\n\t\t\treq.token = bearerToken;\n\t\t\tnext();\n\t\t} else {\n\t\t\tres.sendStatus(403);\n\t\t}\n\t};\n\n\tconst decodeJwt = (token) => {\n\t\tlet base64Url = token.split('.')[1];\n\t\tlet base64 = base64Url.replace('-', '+').replace('_', '/');\n\t\tlet decodedData = JSON.parse(Buffer.from(base64, 'base64').toString('binary'));\n\t\treturn decodedData;\n\t}\n\n\tapp.get('/', (req, res) => {\n\t\tres.json({\n\t\t\tmessage: \"welcome to the api\"\n\t\t});\n\t});\n\tapp.post('/maintain-login', verifyToken, (req, res) => {\n\t\tjwt.verify(req.token, 'secretkey', (err, authData) => {\n\t\t\tif (err) {\n\t\t\t\tres.sendStatus(403);\n\t\t\t} else {\n\t\t\t\tconst data = decodeJwt(req.token);\n\t\t\t\tres.json({\n\t\t\t\t\tuser: data.user\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\tapp.post('/posts/create', verifyToken, (req, res) => {\n\t\tjwt.verify(req.token, 'secretkey', (err, authData) => {\n\t\t\tif (err) {\n\t\t\t\tres.sendStatus(403);\n\t\t\t} else {\n\t\t\t\tres.json({\n\t\t\t\t\tmessage: 'Post created...',\n\t\t\t\t\tauthData\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\tapp.post('/login', (req, res) => {\n\t\tconst username = req.body.username;\n\t\tconst password = req.body.password;\n\t\tif (username === 'nigel' && password === '123') {\n\t\t\tjwt.sign({ user }, 'secretkey', { expiresIn: '20s' }, (err, token) => {\n\t\t\t\tres.json({\n\t\t\t\t\tuser,\n\t\t\t\t\ttoken\n\t\t\t\t});\n\t\t\t})\n\t\t} else {\n\t\t\tres.sendStatus(403);\n\t\t}\n\t});\n\n\tapp.listen(PORT, () => console.log(`Server listening on port: ${PORT}`))\n\t-----------------------------------------------\n- frontend (create-react-app) `App.js`\n\t-----------------------------------------------\n\timport { useState, useEffect } from 'react';\n\timport './App.scss';\n\n\n\tfunction App() {\n\t\tconst initialNumbersLeft = localStorage.getItem('secondsLeft');\n\t\tconst [username, setUsername] = useState('');\n\t\tconst [password, setPassword] = useState('');\n\t\tconst [currentUser, setCurrentUser] = useState({});\n\t\tconst [message, setMessage] = useState('Welcome');\n\t\tconst [secondsLeft, setSecondsLeft] = useState(initialNumbersLeft ? initialNumbersLeft : 0);\n\t\tconst [showSite, setShowSite] = useState(false);\n\n\t\tuseEffect(() => {\n\t\t\t(async () => {\n\t\t\t\tconst response = await fetch('http://localhost:5001/maintain-login', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'authorization': 'Bearer ' + localStorage.getItem('token')\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tsetCurrentUser(prev => ({ ...prev, ...data.user }));\n\t\t\t\t\tconst _secondsLeft = Number(localStorage.getItem('secondsLeft'));\n\t\t\t\t\tsetSecondsLeft(prev => _secondsLeft);\n\t\t\t\t\tsetShowSite(true);\n\t\t\t\t\tsetInterval(() => {\n\t\t\t\t\t\tsetSecondsLeft(prev => prev - 1);\n\t\t\t\t\t}, 1000);\n\t\t\t\t} else {\n\t\t\t\t\tsetShowSite(true);\n\t\t\t\t}\n\t\t\t})();\n\t\t}, []);\n\n\t\tuseEffect(() => {\n\t\t\tlocalStorage.setItem('secondsLeft', secondsLeft);\n\t\t\tif (secondsLeft === -1) {\n\t\t\t\twindow.location.reload(false);\n\t\t\t}\n\t\t}, [secondsLeft]);\n\n\t\tconst handleUsername = (e) => {\n\t\t\tsetUsername(e.target.value);\n\t\t}\n\n\t\tconst handlePassword = (e) => {\n\t\t\tsetPassword(e.target.value);\n\t\t}\n\n\t\tconst handleButton = async () => {\n\t\t\tconst response = await fetch('http://localhost:5001/login', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({ username, password })\n\t\t\t});\n\t\t\tsetUsername('');\n\t\t\tsetPassword('');\n\t\t\tif (response.ok) {\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetCurrentUser(prev => ({ ...prev, ...data.user }));\n\t\t\t\tlocalStorage.setItem('token', data.token);\n\t\t\t\tsetMessage(`User: ${currentUser.firstName}`);\n\t\t\t\tsetSecondsLeft(20);\n\t\t\t\tlocalStorage.setItem('secondsLeft', 20);\n\t\t\t\tsetInterval(() => {\n\t\t\t\t\tsetSecondsLeft(prev => prev - 1);\n\t\t\t\t}, 1000);\n\t\t\t} else {\n\t\t\t\tsetMessage('bad login');\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{showSite && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t{Object.keys(currentUser).length === 0 && (\n\t\t\t\t\t\t\t<div>{message}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{Object.keys(currentUser).length > 0 && secondsLeft >= 0 && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{currentUser.firstName} {currentUser.lastName} ({secondsLeft}s)\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<hr />\n\n\t\t\t\t\t\t{Object.keys(currentUser).length === 0 && (\n\t\t\t\t\t\t\t<form >\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\tusername: <input onChange={handleUsername} value={username} type=\"text\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\tpassword: <input onChange={handlePassword} value={password} type=\"password\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={handleButton}>Login</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div >\n\t\t);\n\t}\n\n\texport default App;\n\t-----------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-06 00:01:39","systemWhoCreated":"systemUnknown"},{"id":451,"category":"React","title":"How to set up a React site menu with React Router v6 and UseContext","body":"- see full code here: [example-react-router-6](https://github.com/edwardtanguay/example-react-router-6)##usecontext4\n- set up React Router v6:\n\t- setup classic create-react-app\n\t\t- however, I used this: [blankcra](https://github.com/edwardtanguay/blankcra)\n\t- `npm install react-router-dom@6 history@5`\n\t- `index.js`\n\t\t- `import { BrowserRouter } from \"react-router-dom\";`\n\t\t- wrap: `<BrowserRouter>`\n\t- `App.js`\n\t\t-----------------------------------------\n\t\timport { Routes, Route, Link } from 'react-router-dom';\n\n\t\timport Nav from './components/Nav';\n\t\timport PageWelcome from './pages/PageWelcome';\n\t\timport PageRegister from './pages/PageRegister';\n\t\timport PageLogin from './pages/PageLogin';\n\n\t\t<Routes>\n\t\t\t<Route path=\"/\" element={<PageWelcome />} />\n\t\t\t<Route path=\"register\" element={<PageRegister />} />\n\t\t\t<Route path=\"login\" element={<PageLogin />} />\n\t\t</Routes>\n\t\t-----------------------------------------\n\t- `components/Nav.js`\n\t\t----------------------------------\n\t\timport { NavLink } from 'react-router-dom';\n\n\t\tconst Nav = () => {\n\t\t\treturn (\n\t\t\t\t<nav>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><NavLink to=\"/\">Welcome</NavLink></li>\n\t\t\t\t\t\t<li><NavLink to=\"register\">Register</NavLink></li>\n\t\t\t\t\t\t<li><NavLink to=\"login\">Login</NavLink></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t)\n\t\t}\n\n\t\texport default Nav;\n\t\t----------------------------------\n\t- e.g. `pages/PageWelcome.js`\n\t\t------------------------------------\n\t\tconst PageWelcome = () => {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\tThis is the welcome page.\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\n\t\texport default PageWelcome;\n\t\t------------------------------------\n\t- of note for menu active-highlighting in `App.scss`:\n\t\t------------------------------------\n\t\tnav {\n\t\t\tbackground-color: #333;\n\t\t\tborder-radius: 5px;\n\t\t\tpadding: 10px;\n\t\t\tul {\n\t\t\t\tdisplay: flex;\n\t\t\t\tmargin: 0;\n\t\t\t\tli {\n\t\t\t\t\tlist-style: none;\n\t\t\t\t\tmargin: 0 10px 0 0;\n\t\t\t\t\ta {\n\t\t\t\t\t\tcolor: #ccc;\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t}\n\t\t\t\t\t.active {\n\t\t\t\t\t\tcolor: rgb(255, 255, 161);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t------------------------------------\n- set up UseContext with variable (siteContext), set function and toggle function\n\t- `src/App.js`\n\t\t- `import { AppProvider } from './AppContext.js';`\n\t\t- wrap `<div className=\"App\">` in `<AppProvider>`\n\t- `src/AppContext.js`\n\t\t-----------------------------------\n\t\timport { createContext, useState } from 'react';\n\n\t\tconst AppContext = createContext();\n\n\t\texport const AppProvider = ({ children }) => {\n\t\t\tconst [siteStatus, setSiteStatus] = useState('development');\n\n\t\t\tconst toggleStatus = () => {\n\t\t\t\tsetSiteStatus(siteStatus === 'development' ? 'live' : 'development');\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<AppContext.Provider value={{\n\t\t\t\t\tsiteStatus,\n\t\t\t\t\tsetSiteStatus,\n\t\t\t\t\ttoggleStatus\n\t\t\t\t}} >\n\t\t\t\t\t{children}\n\t\t\t\t</AppContext.Provider>\n\t\t\t);\n\t\t};\n\n\t\texport default AppContext;\n\t\t-----------------------------------\n\t- each page that needs the context variables:\n\t\t----------------------------------\n\t\timport { useContext } from 'react';\n\t\timport AppContext from '../AppContext';\n\n\t\tconst { siteStatus, toggleStatus} = useContext(AppContext);\n\n\t\t<p>The current status is: <span className=\"highlight\">{siteStatus}</span></p>\n\t\t<p><button onClick={toggleStatus}>Toggle Status</button></p>\n\t\t----------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-08 01:04:58","systemWhoCreated":"systemUnknown"},{"id":452,"category":"Markdown","title":"Display markdown files in VSCode while you edit them","body":"- install the **Markdown Preview Enhanced** extension##markdownprvvv\n- set preview to open immediately\n\t- open **settings** (`CTRL-comma`)\n\t- search for `markdown automat`\n\t- check this:##checkautomat\n- open a markdown file\n\t- preview will appear on right\n- set to low-contrast \n\t- right-click, **one-dark.css**##theonedarkok\n- click the outline button\n\t- this will allow you to see the outlines of long documents and navigate to sections quickly##notethissections","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-09 22:32:03","systemWhoCreated":"systemUnknown"},{"id":453,"category":"JavaScript DOM","title":"Create a number dropdown which shows that number of icons","body":"- task\n\t- create a dropdown from 1 to 10\n\t- the number hat is selected is the number of stars that is shown\n\t- completed task looks like this:##screenshot3ofthestarts\n- vanilla HTML\n\t- boilerplate HTML\n\t- basic dropdown\n\t\t--------------------------\n\t\t<select class=\"rank\">\n\t\t\t<option value=\"1\">1</option>\n\t\t\t<option value=\"2\">2</option>\n\t\t\t<option value=\"3\">3</option>\n\t\t</select>\n\t\t--------------------------\n- create event handler on change\n\t------------------------------\n\t<script>\n\t\tconst rankElem = document.querySelector('.rank');\n\t\trankElem.onchange = (e) => {\n\t\t\tconsole.log(`changed to ${rankElem.value}`);\n\t\t};\n\t</script>\n\t------------------------------\n- display in HTML number that is selected\n\t------------------------------\n\t<div class=\"stars\"></div>\n\n\tconst starsElem = document.querySelector('.stars');\n\tstarsElem.innerHTML = 'stars go here';\t\n\t------------------------------\n- style dropdown and stars next to each other\n\t-------------------------\n\t<style>\n\t\t.rankDropdown {\n\t\t\tdisplay: flex;\n\t\t}\n\t\t.stars {\n\t\t\tmargin: 0 0 0 5px;\n\t\t}\n\t</style>\n\t-------------------------\n- move displaying of stars inside onchange\n\t-------------------------------------\n\tstarsElem.innerHTML = `${rankElem.value} stars`; \n\t-------------------------------------\n- problem: stars don't show on page load\n\t- solution:\n\t\t- extract the displaying of stars to a central function\n\t\t\t------------------------------\n\t\t\tconst updateStars = () => {\n\t\t\t\tstarsElem.innerHTML = `${rankElem.value} stars`; \n\t\t\t}\n\n\t\t\trankElem.onchange = (e) => {\n\t\t\t\tupdateStars();\n\t\t\t};\n\t\t\t------------------------------\n\t\t- then call this function on page load as well\n\t\t\t----------------------------------\n\t\t\twindow.onload = updateStars;\n\t\t\t----------------------------------\n\t\t- note it will show the currently selected item\n\t\t\t----------------------------------\n\t\t\t`<option value=\"2\" selected>2</option>`\n\t\t\t----------------------------------\n- add star icons\n\t- Howto: [Simple way to use Font Awesome Icons](https://onespace.netlify.app/howtos?id=372)\n\t- add link in head:\n\t\t--------------------------\n\t    <link rel=\"stylesheet\"\n\t\ttype=\"text/css\"\n\t\thref=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t\t--------------------------\n\t- search for icons [here](https://fontawesome.com/v4.7/icons/)\n\t- replace text:\n\t\t---------------------------\n\t\tstarsElem.innerHTML = '<i class=\"fa fa-star\" aria-hidden=\"true\"></i>';\n\t\t---------------------------\n\t- repeat number of times you want to show it\n\t\t----------------------------\n\t\t.repeat(rankElem.value);\n\t\t----------------------------\n\t- add styling\n\t\t----------------------\n\t\tcolor: goldenrod;\n\t\tfont-size: 1.3rem;\n\t\t----------------------\n\t- star spacing\n\t\t----------------------------\n\t\t.stars i {\n\t\t\tmargin: 0 0 0 2px;\n\t\t}\n\t\t----------------------------\n- problem: to extend dropdown from 3 to 10, we have to type text\n\t- solution:\n\t\t- expand window.onload for multiple commands\n\t\t\t---------------------------\n\t\t\twindow.onload = () => {\n\t\t\t\tupdateStars();\n\t\t\t} \n\t\t\t---------------------------\n\t\t- dynamically add another option\n\t\t\t--------------------------------\n\t\t\tconst option = new Option();\n\t\t\toption.value = 4;\n\t\t\toption.text = \"4\";\n\t\t\trankElem.options.add(option);\n\t\t\t--------------------------------\n\t\t- dynamically add 4 to 10 with for loop\n\t\t\t---------------------------\n\t\t\tfor (let x = 4; x <= 10; x++) {\n\t\t\t\tconst option = new Option();\n\t\t\t\toption.value = x;\n\t\t\t\toption.text = String(x);\n\t\t\t\trankElem.options.add(option);\n\t\t\t}\n\t\t\t---------------------------\n\t\t- generate all dynamically\n\t\t\t- remove HTML options\n\t\t\t- generate 1 to 10\n- final code:\n\t----------------------------------\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<link rel=\"stylesheet\"\n\t\t\t  type=\"text/css\"\n\t\t\t  href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t\t<title>dropdown</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\n\t\t\t}\n\n\t\t\t.rankDropdown {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t.stars {\n\t\t\t\tmargin: 0 0 0 5px;\n\t\t\t\tcolor: goldenrod;\n\t\t\t\tfont-size: 1.3rem;\n\t\t\t}\n\n\t\t\t.stars i {\n\t\t\t\tmargin: 0 0 0 2px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"rankDropdown\">\n\t\t\t<select class=\"rank\">\n\t\t\t</select>\n\t\t\t<div class=\"stars\"></div>\n\t\t</div>\n\n\t\t<script>\n\t\t\tconst rankElem = document.querySelector('.rank');\n\t\t\tconst starsElem = document.querySelector('.stars');\n\n\t\t\tconst updateStars = () => {\n\t\t\t\tstarsElem.innerHTML = '<i class=\"fa fa-star\" aria-hidden=\"true\"></i>'.repeat(rankElem.value);\n\t\t\t}\n\n\t\t\trankElem.onchange = (e) => {\n\t\t\t\tupdateStars();\n\t\t\t};\n\n\t\t\twindow.onload = () => {\n\t\t\t\tupdateStars();\n\n\t\t\t\tfor (let x = 1; x <= 10; x++) {\n\t\t\t\t\tconst option = new Option();\n\t\t\t\t\toption.value = x;\n\t\t\t\t\toption.text = String(x);\n\t\t\t\t\trankElem.options.add(option);\n\t\t\t\t}\n\t\t\t} \n\t\t</script>\n\t</body>\n\t</html>\n\t----------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6;$kind=/courseJsDom/task","systemWhenCreated":"2021-12-09 23:23:01","systemWhoCreated":"systemUnknown"},{"id":454,"category":"VSCode","title":"Debugging JavaScript in Node with VSCode","body":"- in VSCode, you can set break points and step through your code without any plugins\n- type this code and click to the left of the line number to set a breakpoint:##clicktoleftkj\n- press F5 to start debugging\n\t- it stops at the breakpoint:##itstopssdf\n\t- hover over message and it will be displayed\n\t- you can also define variables to watch on the left:##canalsosyolu\n\t- press F5 to continue\n- note that you can turn on Quokka as well, but these are two tools that have overlapping features##twowithoversdf\n\t- we see the difference between Quokka and debugging in a more complicated example\n- debugging makes more sense with more complicated code, e.g. nested loops##weseeallij\n\t- note that Quokka shows only the final result\n\t- debugging can stop the code in the middle of the loops and allow to move through the code step by step **watching** the values change\n\t- first, remove Quokka from the page (close and open the file)\n\t- set breakpoint at line 5 and press F5\n\t- keep pressing F5 to move through the loop one interation at a time\n\t\t- hover over `j` to see that it is changing\n\t- to get a clearing view of the variables changing, at `i` and `j` as watch variables on the left\n\t\t- now press F5 again and watch the variables change\n\t\t- note that you can even set the value of e.g. `i` to make it jump up to a specific number:##notethatsetskjd\n\t\t- note that you can also right-click the breakpoint and define an expression for when the breakpoint should first stop, e.g. if you wanted to test something when the values are 5 and 8##notethat48sd","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-10 00:42:22","systemWhoCreated":"systemUnknown"},{"id":455,"category":"Vue 3.0","title":"Display HTML with map in Vue 3.0","body":"- this is Vue 3.0 boilerplate that enables you to create dynamic HTML easily with JavaScript##theyellowoj\n- index.js\n\t--------------------------------\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<script src=\"https://unpkg.com/vue@next\"></script>\n\t\t<title>Vue 3.0</title>\n\t\t<style>\n\t\t\tdiv.output {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\tdiv.box {\n\t\t\t\tbackground-color: yellow;\n\t\t\t\tmargin: 0 10px 10px 0;\n\t\t\t\tpadding: 10px;\n\t\t\t\tborder: 1px solid navy;\n\t\t\t\tborder-radius: 5px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<div class=\"output\"\n\t\t\t\t v-html=\"output\">\n\t\t\t</div>\n\t\t</div>\n\t\t<script>\n\t\t\tconst app = Vue.createApp({\n\t\t\t\tdata() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\toutput: ''\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tinitialize() {\n\t\t\t\t\t\tthis.output = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => `<div class=\"box\">${num}</div>`).join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst vm = app.mount('#app');\n\t\t\tvm.initialize();\n\t\t</script>\n\t</body>\n\t</html>\n\t--------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-10 07:15:14","systemWhoCreated":"systemUnknown"},{"id":456,"category":"JavaScript","title":"Display HTML with map and JavaScript","body":"- this is a vanilla JavaScript boilerplate that enables you to create dynamic HTML easily##theyellowoj\n- index.js\n\t--------------------------------\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>vanilla js</title>\n\t\t<style>\n\t\t\tdiv.output {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\tdiv.box {\n\t\t\t\tbackground-color: yellow;\n\t\t\t\tmargin: 0 10px 10px 0;\n\t\t\t\tpadding: 10px;\n\t\t\t\tborder: 1px solid navy;\n\t\t\t\tborder-radius: 5px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div class=\"output\"></div>\n\n\t\t<script>\n\t\t\tconst outputElem = document.querySelector('.output');\n\t\t\toutputElem.innerHTML = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => `<div class=\"box\">${num}</div>`).join('');\n\t\t</script>\n\t</body>\n\n\t</html>\n\t--------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-10 07:36:40","systemWhoCreated":"systemUnknown"},{"id":457,"category":"VSCode","title":"Make tabs and spaces appear in VSCode","body":"- to make the tabs and space appear as light grey symbols, do the following\n- note you don't have to have any extensions installed\n- `CTRL-,` to settings, type `render white` and change **Render Whitespace** to `all`##thearrowsandfixeds","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-10 22:02:50","systemWhoCreated":"systemUnknown"},{"id":458,"category":"Vim","title":"Vim editor basics","body":"- what is vim?\n\t- vim is a text edit from the 70s (vi) and 90s (vim) which enables you to edit files while keeping both hands on the home keys, no need for the mouse, which increases typing speed and efficiency, particularly for coding\n\t- it has a steep learning curve that few people get past, but if you continue to train, you can get to the point where you simply think and code changes the way you want it\n\t- vim (or vi) is installed on nearly much every Linux/Unix system by default, can easily be installed on Windows, so vim skills are practically universal\n\t- VSCode notably has a very good vim extension simply called **Vim**##vimbraksenxt\n- **white belt**\n\t- *normal mode and insert mode*\n\t\t- you start in normal mode\n\t\t- `i` for insert mode so you can type\n\t\t- `ESC` back to normal mode\n\t- normal mode move:\n\t\t- character: `h`, `j`, `k`, `l`\n\t\t\t- also `5h` or `7k`\n\t\t- word: `w`, `e`, `b`\n\t\t- line start/end: `^`, `$`, `0`\n\t\t- file start/end/all: `gg`, `G`, (`cie` or `1GVG`)\n\t- inserting\n\t\t- before/after character `i`, `I`, `a`, `A`\n\t\t- after word: `ea`\n\t\t- before/after line: `o`, `O`\n\t- undo/redo\n\t\t- `u`, CTRL-`r`\n- **orange belt**\n\t- move\n\t\t- matching brace: `%`\n\t\t- goto definition: `gd`\n\t\t- go back: CTRL-`o`\n\t\t- move to similar words: `*`\n\t\t- : (line number)\n\t\t- move to blocks: `{`, `}`\n\t- editing\n\t\t- character: `r`\n\t\t\t- also: `9r-` or `9r_`\n\t\t\t- multiple: `R`\n\t\t- replace and type: `s`\n\t\t\t- also: `3s`\n\t\t- join: `J`\n\t\t- replace whole line: `cc`\n\t\t- change word: `cw`, `ciw`\n\t\t\t- also, rest of word: `cw`\n\t\t\t- till end: `C`\n\t\t\t- till character: `c/\"`\n\t\t\t- change camelCase part:\n\t\t\t\t- e.g. `3s`\n\t\t\t\t- combine with . (repeat command)\n\t\t- delete line: `dd`\n\t\t\t- also: `3dd`\n\t\t- delete word: `dw`, `diw`\n\t\t\t- till end: `D`\n\t\t\t- till character: `d/;`\n\t\t- cut: `x`\n\t\t\t- swap: `xp`\n\t\t- copy/paste word:\n\t\t\t- `yiw`\n\t\t\t- `viwp`\t\t\n\t- repeat: `.`\n\t- comment/uncomment: `gcc`\n- **green belt**\n\t- habit: move by searching: `/`, `?`, `n`, `N`\n\t- move line up/down: `ddkP`, `ddp`\n\t- visual mode selection\n\t\t- three ways to select: `v`, `V`, CTRL-`v`\n\t\t\t- top/bottom: `o`\n\t\t\t- word: `aw`\n\t\t\t- (): `ab`\n\t\t\t\t- inner: `ib`\n\t\t\t- {}: `aB`\n\t\t\t\t- inner: `iB`\n\t\t- action on selection\n\t\t\t- delete/yank: `d`, `y`\n\t\t\t- paste before/after: `P`, `p`\n\t\t\t\t- at end of line: `$p`\n\t\t\t- case: `u`, `U`, `~`\n\t\t\t- comment/uncomment: `gc`\n\t\t\t- indent: `>`, `<`\n\t\t\t\t- also: `3>`\n- **blue belt**\n\t- habit: pause and consider fewest strokes possible\n\t- `\"*y`\n\t- search and replace\n\t\t- `:%s/this/that/g`\n\t\t- visual select\n\t\t\t- `:s/this/that/g`\n\t- past commands: `:` and arrow-up and arrow-down\n\t- select/change/delete inner text\n\t\t- change inside two tags\n\t\t\t- `cit` also: `dit`, `vit`\n\t\t- change inside double quotes\n\t\t\t- `ci\"` also: `di\"`, `vi\"`\n\t\t- change inside singl quotes\n\t\t\t- `ci'` also: `di'`, `vi'`\n\t\t- change inside brackets\n\t\t\t- `ci)` also: `di)`, `vi)`\n\t\t\t- `ci}` also: `di}`, `vi}`\n\t\t\t- `ci]` also: `di]`, `vi]`\n- **brown belt**\n\t- habit: before moving, \"ma\" (marker), then come back with `'a`\n\t\t- hop back and forth between two areas of code with `ma` and `ms`\n\t- tabs: `gt`, `gT`\n\t- repeat character 99 times: `i=` `ESC` `d99P`\n\t- black-hole deleting: `\"_dd`\n\t- `:reg`\n\t- connection to operating system clipboard\n\t\t- copy to: `\"*y`\n\t\t- paste from: `\"*p`\t\n\t- close file: `:wq!`\n- **black belt**\n\t- habit: be able to type numbers without looking\n\t- sort: visual mark: `:sort`\n\t- numbers: `:set nu` and `:set nonu`\n\t- macros\n\t\t- `qq` - record\n\t\t- `q` - stop\n\t\t- `@q` - execute\n\t\t- `@@` - execute again","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-10 23:07:06","systemWhoCreated":"systemUnknown"},{"id":459,"category":"MongoDB","title":"How to set your connection string to Mongo Atlas for NoSQLBooster","body":"- MongoDB Atlas\n\t- click **Connect** button\n\t- connect using MongoDB Compass\n\t- copy this part of the connection string: e.g. `cluster0.ogshn.mongodb.net`\n- NoSQLBooster\n\t- Connect\n\t- Create\n\t- paste in **Server**##pastinserver\n\t- user and password:##secondksjdf\n\t- SSL on##thressl\n\t- Test Connection\n\t- Save & Connect","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-13 15:09:40","systemWhoCreated":"systemUnknown"},{"id":460,"category":"Node","title":"Download the HTML from a website into a text file","body":"- note that you need `request.end()` to terminate the process and write the file\n\t---------------------------------\n\timport https from 'https';\n\timport fs from 'fs';\n\n\tconst options = {\n\t\thostname: \"www.lemonde.fr\",\n\t\tport: 443,\n\t\tpath: \"/culture/article/2021/12/12/ilya-repine-peindre-l-ame-russe-au-petit-palais-les-contradictions-d-un-peintre-realiste_6105725_3246.html\",\n\t\tmethod: \"GET\"\n\t}\n\n\tconst request = https.request(options, res => {\n\t\tlet responseBody = '';\n\t\tres.setEncoding('UTF-8');\n\t\tres.on('data', data => {\n\t\t\tresponseBody += data;\n\t\t});\n\t\tres.on('end', () => {\n\t\t\tfs.writeFile('./ilyaRepine.html', responseBody, err => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\tconsole.log('file created');\n\t\t\t});\n\t\t});\n\t});\n\n\trequest.end();\n\t---------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-15 00:01:41","systemWhoCreated":"systemUnknown"},{"id":461,"category":"VSCode","title":"How to make fonts cursive in VSCode","body":"- these instructions will enable your code to look like this:\n- notice also the font ligatures for `===` and `=>`##fontligaturesksjd\n- download the fonts at [kencrocken/FiraCodeiScript](https://github.com/kencrocken/FiraCodeiScript)\n\t- click the **Code** button and **Download ZIP**\n\t- double-click into the zip file\n\t- double-click each of the three font files and click the **Install** button for each:##eachofthree\n- change font in VSCode\n\t- the default font is `Consolas, 'Courier New', monospace` which you want to change\n\t- CTRL-P and then type `settings`, click on the main settings file:##andkthearrorw\n\t- as last entry in the JSON code, enter this:\n\t\t------------------------------------------\n\t\t\"editor.fontFamily\": \"'Fira Code iScript', Menlo, monospace\",\n\t\t\"editor.fontLigatures\": true,\n\t\t\"editor.tokenColorCustomizations\": {\n\t\t\t\"textMateRules\": [\n\t\t\t\t{\n\t\t\t\t\t\"scope\": [\n\t\t\t\t\t\t\"comment\",\n\t\t\t\t\t\t\"entity.name.type.class\", \n\t\t\t\t\t\t\"storage.modifier\",\n\t\t\t\t\t\t\"support.class.builtin\",\n\t\t\t\t\t\t\"keyword.control\",\n\t\t\t\t\t\t\"constant.language\",\n\t\t\t\t\t\t\"entity.other.attribute-name\",\n\t\t\t\t\t\t\"string.quoted.single\",\n\t\t\t\t\t\t\"string.quoted.double\",\n\t\t\t\t\t\t\"entity.name.method\",\n\t\t\t\t\t\t\"entity.name.tag\",\n\t\t\t\t\t\t\"string.template\"\n\t\t\t\t\t],\n\t\t\t\t\t\"settings\": {\n\t\t\t\t\t\t\"fontStyle\": \"italic\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"window.zoomLevel\": 1\n\t\t------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-17 00:37:06","systemWhoCreated":"systemUnknown"},{"id":462,"category":"JavaScript","title":"Make five star control which can be clicked to change","body":"- these instructions create a vanilla-JavaScript control that works like this:#gif#starsClickControl\n- create basic HTML page\n- link to Font Awesome CDN\n\t-----------------------\n\t<link rel=\"stylesheet\"\n\ttype=\"text/css\"\n\thref=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t-----------------------\n- show three and two stars with this code:\n\t-------------------------------\n\t<i class=\"fa fa-star\"></i>\n\t<i class=\"fa fa-star-o\"></i>\n\t-------------------------------\n- you should see this:##threeandstowstars\n- style it:\n\t----------------------\n\tbody {\n\t\tpadding: 20px;\n\t}\n\t.stars {\n\t\tdisplay:flex;\n\t}\n\t.stars i {\n\t\tcolor: goldenrod;\n\t\ttext-shadow: 1px 1px 1px #333;\n\t\tfont-size: 3rem;\n\t\tmargin-right: 10px;\n\t}\n\t----------------------\n- add number\n\t------------------------\n\t<div class=\"starControl\">\n\t\t...\n\t\t<div class=\"number\">\n\t\t\t3\n\t\t</div>\n\t</div>\n\t------------------------\n- style it\n\t--------------------------\n\t.starControl {\n\t\tbackground-color: #ddd;\n\t\tpadding: 20px;\n\t\tborder: 1px solid #aaa;\n\t\tborder-radius: 5px;\n\t\twidth: 278px;\n\t}\n\t.number {\n\t\tfont-size: 11rem;\n\t\tcolor: #555;\n\t\ttext-align: center;\n\t}\n\t--------------------------\n- should look like this but is static:##thelooklikestasi\n- make number dynamic\n\t-------------------------------\n\tconst stars = 5;\n\n\tconst numberElem = document.querySelector(\".number\");\n\tnumberElem.innerText = stars;\n\n\t<div class=\"number\"></div>\n\t-------------------------------\n- create stars dynamically based on number\n\t--------------------------------\n\t<div class=\"stars\"></div>\n\n\tconst starsElem = document.querySelector('.stars');\n\n\tstarsElem.innerHTML = '<i class=\"fa fa-star\"></i>'.repeat(stars);\n\t--------------------------------\n- the stars are now dynamic based on the number#starsysbased\n- fill space with empty stars\n\t---------------------------\n\tstarsElem.innerHTML += '<i class=\"fa fa-star\"></i>'.repeat(stars);\n\tstarsElem.innerHTML += '<i class=\"fa fa-star-o\"></i>'.repeat(5 - stars);\n\t---------------------------\n- refactor for upcoming onclick, step 1\n\t---------------------------------\n\tfor (let x = 1; x <= 5; x++) {\n\t\tif (x <= stars) {\n\t\t\tstarsElem.innerHTML += '<i class=\"fa fa-star\"></i>';\n\t\t} else {\n\t\t\tstarsElem.innerHTML += '<i class=\"fa fa-star-o\"></i>';\n\t\t}\n\t}\n\t---------------------------------\n- refactor for upcoming onclick, step 2\n\t--------------------------------------\n\tfor (let x = 1; x <= 5; x++) {\n\t\tlet starClass = '';\n\t\tif (x <= stars) {\n\t\t\tstarClass = 'fa-star';\n\t\t} else {\n\t\t\tstarClass = 'fa-star-o';\n\t\t}\n\t\tstarsElem.innerHTML += `<i class=\"fa ${starClass}\"></i>`;\n\t}\n\t--------------------------------------\n- add onclick with test\n\t-----------------------\n\tconst setStars = (stars) => {\n\t\tconsole.log(stars);\n\t}\n\n\tcursor: pointer;\n\t-----------------------\n- change number when clicked\n\t---------------------------\n\tconst createStars = (stars) => {\n\t\tstarsElem.innerHTML = '';\n\t\tfor (let x = 1; x <= 5; x++) {\n\t\t\tlet starClass = '';\n\t\t\tif (x <= stars) {\n\t\t\t\tstarClass = 'fa-star';\n\t\t\t} else {\n\t\t\t\tstarClass = 'fa-star-o';\n\t\t\t}\n\t\t\tstarsElem.innerHTML += `<i class=\"fa ${starClass}\" onclick=\"setStars(${x})\"></i>`;\n\t\t}\n\t\tnumberElem.innerText = stars;\n\t}\n\n\tconst setStars = (stars) => {\n\t\tcreateStars(stars);\n\t}\n\n\twindow.onload = () => {\n\t\tcreateStars(3);\n\t}\n\t---------------------------\n- the star control should now work like this:#gif#starsClickControl\n- remember number of stars even after browser is closed and opened\n\t- save stars to localStorage on rendering of control\n\t\t----------------------------\n\t\tlocalStorage.setItem('stars', stars);\n\t\t----------------------------\n\t- read stars from localStorage on page load\n\t\t-------------------------------\n\t\tconst stars = localStorage.getItem('stars');\n\t\t-------------------------------\n\t- fix bug in the event stars is not stored in localStorage\n\t\t--------------------------------\n\t\tif(stars === null) stars = 3;\n\t\t--------------------------------\n\t- test in two browsers, each will maintain its own value of stars\n- full code:\n\t----------------------------------------\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\t\t<title>five stars</title>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\t\t\t.stars {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.stars i {\n\t\t\t\tcolor: goldenrod;\n\t\t\t\ttext-shadow: 1px 1px 1px #333;\n\t\t\t\tfont-size: 3rem;\n\t\t\t\tmargin-right: 10px;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.starControl {\n\t\t\t\tbackground-color: #ddd;\n\t\t\t\tpadding: 20px;\n\t\t\t\tborder: 1px solid #aaa;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\twidth: 270px;\n\t\t\t}\n\t\t\t.number {\n\t\t\t\tfont-size: 11rem;\n\t\t\t\tcolor: #555;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"starControl\">\n\t\t\t<div class=\"stars\"></div>\n\t\t\t<div class=\"number\"></div>\n\t\t</div>\n\t\t<script>\n\t\t\tconst numberElem = document.querySelector(\".number\");\n\t\t\tconst starsElem = document.querySelector('.stars');\n\n\t\t\tconst createStars = (stars) => {\n\t\t\t\tstarsElem.innerHTML = '';\n\t\t\t\tfor (let x = 1; x <= 5; x++) {\n\t\t\t\t\tlet starClass = '';\n\t\t\t\t\tif (x <= stars) {\n\t\t\t\t\t\tstarClass = 'fa-star';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstarClass = 'fa-star-o';\n\t\t\t\t\t}\n\t\t\t\t\tstarsElem.innerHTML += `<i class=\"fa ${starClass}\" onclick=\"setStars(${x})\"></i>`;\n\t\t\t\t}\n\t\t\t\tnumberElem.innerText = stars;\n\t\t\t\tlocalStorage.setItem('stars', stars);\n\t\t\t}\n\n\t\t\tconst setStars = (stars) => {\n\t\t\t\tcreateStars(stars);\n\t\t\t}\n\n\t\t\twindow.onload = () => {\n\t\t\t\tlet stars = localStorage.getItem('stars');\n\t\t\t\tif(stars === null) stars = 3;\n\t\t\t\tcreateStars(stars);\n\t\t\t}\n\t\t</script>\n\t</body>\n\t</html>\n\t----------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-17 01:23:52","systemWhoCreated":"systemUnknown"},{"id":463,"category":"React","title":"Example of using useMemo() in React sites","body":"- this example shows a number of concepts\n\t- how to use a for-loop to emulate a long-running process\n\t- `export default` and be in front of the function name\n\t- you can put classic `function name()` functions at the end of a component file which the component has access to\n\t- theme styles\n\t- how useMemo() works\n\t- changing the theme also rerenders every other control\n- we have a slow function that doesn't change that often\n\t- therefore we need `useMemo()`\n\t- it caches a value so you don't have to input it every time\n\t- if the number doesn't change, we don't have to recalculate\n\t- useMemo() has some overhead\n- referential equality\n\t- when you compare two difference values, it compares reference\n\t- e.g. `themeStyles`\n- how it looks:##usememodarktheme\n- App.js\n\t--------------------------------------\n\timport { useState, useMemo } from 'react';\n\timport './App.scss';\n\n\texport default function App() {\n\t\tconst [number, setNumber] = useState(0);\n\t\tconst [theme, setTheme] = useState('dark');\n\t\tconst doubledNumber = useMemo(() => {\n\t\t\tslowFunction(number);\n\t\t}, [number]);\n\t\tconst themeStyles = useMemo(() => {\n\t\t\treturn {\n\t\t\t\tpadding: '10px',\n\t\t\t\tbackgroundColor: theme === 'dark' ? '#333' : '#eee',\n\t\t\t\tcolor: theme === 'dark' ? '#eee' : '#333'\n\t\t\t}\n\t\t}, [theme]);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<input type=\"number\" value={number} onChange={(e) => setNumber(parseInt(e.target.value))} />\n\t\t\t\t<button onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}>Change Theme</button>\n\t\t\t\t<div style={themeStyles} className=\"info\">\n\t\t\t\t\t<div>Theme: {theme}</div>\n\t\t\t\t\t<div>Doubled number: {doubledNumber}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfunction slowFunction(num) {\n\t\tfor (let i = 0; i <= 2000000000; i++) { i += 0; }\n\t\treturn num * 2;\n\t}\n\t--------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-17 20:51:12","systemWhoCreated":"systemUnknown"},{"id":464,"category":"React","title":"How to use styled-components in a React site","body":"- note that style-components use **tagged template literals** behind the scenes##theleftrightstyled\n- App.js\n\t----------------------------\n\timport './App.scss';\n\timport SplitScreen from './components/SplitScreen';\n\n\tconst LeftHandComponent = () => {\n\t\treturn <p>Left</p>\n\t};\n\n\tconst RightHandComponent = () => {\n\t\treturn <p>Right</p>\n\t};\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t  <SplitScreen\n\t\t\t\t left={LeftHandComponent} \n\t\t\t\t right={RightHandComponent}\n\t\t\t\t  />\n\t\t\t</div>\n\t\t);\n\t};\n\n\texport default App;\n\t----------------------------\n- SplitScreen.js\n\t-------------------------------\n\timport styled from 'styled-components';\n\n\tconst Container = styled.div`\n\t\tdisplay: flex;\n\t`;\n\n\tconst Pane = styled.div`\n\t\tflex: 1;\n\t\tbackground-color: ${props => props.darkMode ? '#333' : '#eee'};\n\t\tcolor: ${props => props.darkMode ? '#ccc' : '#333'};\n\t\tborder: 1px solid #ccc;\n\t\tmargin: 0 5px 5px 0;\n\t\tpadding: 10px;\n\t`;\n\n\tconst SplitScreen = ({\n\t\tleft: Left,\n\t\tright: Right\n\t}) => {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Pane darkMode>\n\t\t\t\t\t<Left />\n\t\t\t\t</Pane>\n\t\t\t\t<Pane>\n\t\t\t\t\t<Right />\n\t\t\t\t</Pane>\n\t\t\t</Container>\n\t\t)\n\t};\n\n\texport default SplitScreen;\n\t-------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-18 11:17:50","systemWhoCreated":"systemUnknown"},{"id":465,"category":"GitHub","title":"Publish a HTML/CSS/JavaScript site with ES6 modules at GitHub Pages and Netlify","body":"- create a HTML/CSS/JavaScript site such as [this one](https://github.com/edwardtanguay/object-destructuring-assignment)\n- notice it has numerous files and folders with e.g. imported JavaScript modules\n- note that GitHub pages requires that the main page be `index.html`\n- push it to a new GitHub repository\n- go to your new repository at GitHub\n- go to **Settings**\n- on the left, click on **Pages**##thepagesgogogo\n- choose branch, e.g. `master` and click **Save**\n- wait 2-3 minutes and click on the link that is shown##thegithubpage\n- view site here: https://edwardtanguay.github.io/object-destructuring-assignment\n- you can publish at Netlify with all default values: https://object-destructuring-assignment.netlify.app","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-18 22:18:11","systemWhoCreated":"systemUnknown"},{"id":466,"category":"JavaScript","title":"Example of object destructuring assignment used in a HTML/CSS/JavaScript website","body":"- this site shows a pragmatic way **object destructuring assignment** can be used in a website: to map the data from an object (in this example a user) onto data that is displayed in a display control\n\t-----------------------------------\n\tconst displayUserCard = ({ id, username, fullName: { firstName: fname, lastName: lname = '<span class=\"missing\">(none)</span>' }, rights: { canSaveFiles: saveRights } }) => {\n\t\treturn `\n\t\t\t<div class=\"label\">ID:</div>\n\t\t\t<div class=\"data\">${id}</div>\n\t\t\t<div class=\"label\">Username:</div>\n\t\t\t<div class=\"data\">${username}</div>\n\t\t\t<div class=\"label\">First Name:</div>\n\t\t\t<div class=\"data\">${fname}</div>\n\t\t\t<div class=\"label\">Last Name:</div>\n\t\t\t<div class=\"data\">${lname}</div>\n\t\t\t<div class=\"label\">Can save files?</div>\n\t\t\t<div class=\"data\">${saveRights ? \"yes\" : \"no\"}</div>\n\t\t`;\n\t}\n\t-----------------------------------\n- here is how the site looks: ##destruobjeass\t\n- note that this site is also a good example of a well-structured, simple HTML/CSS/JavaScript website with **import modules**, e.g.\n\t- `<script src=\"js/main.js\" type=\"module\" defer></script>`\n\t- `import * as data from './data.js';`\n- index.html\n\t-------------------------------------\n\t<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t<title></title>\n\t\t<script src=\"js/main.js\" type=\"module\" defer></script>\n\t\t<link rel=\"stylesheet\" href=\"css/main.css\">\n\t</head>\n\t<body>\n\t\t<h1></h1>\n\t\t<div class=\"userCard\"></div>\n\t</body>\n\t</html>\n\t-------------------------------------\n- main.js\n\t-----------------------------------------\n\timport * as data from './data.js';\n\timport displayUserCard from './displayUserCard.js';\n\n\tconst userCardElem = document.querySelector('.userCard');\n\tconst titleElem = document.querySelector('title');\n\tconst h1Elem = document.querySelector('h1');\n\n\tuserCardElem.innerHTML = displayUserCard(data.user); \n\ttitleElem.innerHTML = data.pageTitle; \n\th1Elem.innerHTML = data.pageTitle; \n\t-----------------------------------------\n- you can get all the code to this site at [this repository](https://github.com/edwardtanguay/object-destructuring-assignment)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-18 23:03:34","systemWhoCreated":"systemUnknown"},{"id":467,"category":"React","title":"SplitScreen component in React","body":"- this project shows how to make a component in React that splits the screen into two parts left and right##splitcscreneekjsdf\n- note that the component allows you to create components for it as children##notecompoleftright\n- this example also uses `styled-components`, a library that has an intriguing use of **tagged template literals**, good to grok!\n- App.js\n\t-------------------------------------------\n\timport './App.scss';\n\timport { SplitScreen } from './components/SplitScreen';\n\n\tconst LeftHandComponent = ({ text = \"Menu\" }) => {\n\t\treturn <p>{text}</p>\n\t};\n\n\tconst RightHandComponent = ({ text = \"Content\" }) => {\n\t\treturn <p>{text}</p>\n\t};\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<SplitScreen\n\t\t\t\t\tleftWeight={1}\n\t\t\t\t\trightWeight={4}>\n\t\t\t\t\t<LeftHandComponent />\n\t\t\t\t\t<RightHandComponent />\n\t\t\t\t</SplitScreen>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t-------------------------------------------\n- SplitScreen.js\n\t----------------------------------------\n\timport styled from 'styled-components';\n\n\tconst Container = styled.div`\n\t\tdisplay: flex;\n\t`;\n\n\tconst Pane = styled.div`\n\t\tflex: ${props => props.weight};\n\t\tbackground-color: ${props => props.darkMode ? '#333' : '#eee'};\n\t\tcolor: ${props => props.darkMode ? '#ccc' : '#333'};\n\t\tborder: 1px solid #ccc;\n\t\tmargin: 0 5px 5px 0;\n\t\tpadding: 10px;\n\t`;\n\n\texport const SplitScreen = ({\n\t\tchildren,\n\t\tleftWeight = 1,\n\t\trightWeight = 1\n\t}) => {\n\t\tconst [left, right] = children;\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Pane darkMode weight={leftWeight}>\n\t\t\t\t\t{left}\n\t\t\t\t</Pane>\n\t\t\t\t<Pane weight={rightWeight}>\n\t\t\t\t\t{right}\n\t\t\t\t</Pane>\n\t\t\t</Container>\n\t\t)\n\t};\n\t----------------------------------------\n- get the full code at this repository: [edwardtanguay/splitscreen-component-react](https://github.com/edwardtanguay/splitscreen-component-react)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-19 00:35:29","systemWhoCreated":"systemUnknown"},{"id":468,"category":"React","title":"How to make components that send components as props","body":"- you can get the code here: [edwardtanguay/howto-component-props](https://github.com/edwardtanguay/howto-component-props)\n- note this syntax:\n\t--------------------------\n\t<ItemComponent key={i} {...{ [itemIdCode]: item }} />\n\t--------------------------\n- app looks like this:##thappforcomponeprops\n- App.js\n\t---------------------------\n\timport './App.scss';\n\timport employees from './data/employees.json';\n\n\tconst SimpleList = ({ items, itemIdCode, ItemComponent }) => {\n\t\treturn (\n\t\t\t<div className=\"simpleList\">\n\t\t\t\t{items.map((item, i) => (\n\t\t\t\t\t<ItemComponent key={i} {...{ [itemIdCode]: item }} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst NumberedList = ({ items, itemIdCode, ItemComponent }) => {\n\t\treturn (\n\t\t\t<div className=\"numberedList\">\n\t\t\t\t{items.map((item, i) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"itemArea\">\n\t\t\t\t\t\t\t<h3>{i + 1}.</h3>\n\t\t\t\t\t\t\t<ItemComponent key={i} {...{ [itemIdCode]: item }} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst Employee = ({ employee }) => {\n\t\tconst { firstName, lastName } = employee;\n\t\treturn (\n\t\t\t<div className=\"employee\">\n\t\t\t\t<div>{firstName} {lastName}</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<section className=\"container\">\n\t\t\t\t\t<SimpleList items={employees} itemIdCode=\"employee\" ItemComponent={Employee} />\n\t\t\t\t\t<NumberedList items={employees} itemIdCode=\"employee\" ItemComponent={Employee} />\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t---------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-20 11:02:02","systemWhoCreated":"systemUnknown"},{"id":469,"category":"React","title":"How to create a custom modal in React","body":"- you click on the button, screen is faded and model box pops up##howtoModalReactCustom\n- this doesn't use any npm packages\n- you can get the code for this project here: [edwardtanguay/howto-custom-modal-react](https://github.com/edwardtanguay/howto-custom-modal-react)\n- notice the SASS syntax in the styled-components##noticeSassinCust\n- **Modal.js**\n\t----------------------------------------------\n\timport { useState } from 'react';\n\timport styled from 'styled-components';\n\n\tconst ModalBackground = styled.div`\n\tbackground: rgba(100,100,100, .8);\n\tposition: fixed;\n\tz-index: 1;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: auto;\n\t`;\n\n\tconst ModalBody = styled.div`\n\tbackground: rgba(255, 255, 255, 1);\n\tmargin: 10% auto;\n\tpadding: 20px;\n\twidth: 50%;\n\tborder-radius: 5px;\n\tz-index: 2;\n\t.closeButton {\n\t\tfloat: right;\n\t}\n\t`;\n\n\tconst Modal = ({ children }) => {\n\t\tconst [shouldShow, setShouldShow] = useState(false);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<button onClick={() => setShouldShow(true)}>Show Information</button>\n\n\t\t\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nisi, nostrum sint ex adipisci praesentium cumque necessitatibus magnam animi dolores beatae harum tenetur, porro modi aliquid quia dolorem architecto assumenda cupiditate.</p>\n\t\t\t\t{shouldShow && (\n\t\t\t\t\t<ModalBackground onClick={() => setShouldShow(false)}>\n\t\t\t\t\t\t<ModalBody onClick={e => e.stopPropagation()}>\n\t\t\t\t\t\t\t<button className=\"closeButton\" onClick={() => setShouldShow(false)}>X</button>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t</ModalBackground>\n\t\t\t\t)}\n\t\t\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nisi, nostrum sint ex adipisci praesentium cumque necessitatibus magnam animi dolores beatae harum tenetur, porro modi aliquid quia dolorem architecto assumenda cupiditate.</p>\n\t\t\t</>\n\t\t)\n\t}\n\n\texport default Modal;\n\t----------------------------------------------\n- **App.js**\n\t--------------------------------------------\n\timport './App.scss';\n\timport Modal from './components/Modal';\n\n\tfunction App() {\n\t  return (\n\t\t<div className=\"App\">\n\t\t\t  <Modal>\n\t\t\t\t  <h2>Information</h2>\n\t\t\t\t  <section className=\"modalContent\">\n\t\t\t\t\t  This is the information.\n\t\t\t\t  </section>\n\t\t\t</Modal>\n\t\t</div>\n\t  );\n\t}\n\n\texport default App;\n\t--------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-20 13:39:33","systemWhoCreated":"systemUnknown"},{"id":470,"category":"react","title":"How to create a container component that loads data for its child components","body":"- *\"With container components, we don't want our components to know where their data is coming from or how to manage it. We just want our components to be dumb, take their data from props, and display whatever they need to display.\"*\n- this example gets data (books) from a backend API, passes it onto a container component which provides this data to all of its children:##thechildrendatacomp\n- the output of this example looks like this:##bookssectioncomponentyes\n- note we use **axios** instead of fetch\n- note the loading message implementation with `<FaSpinner className=\"spinner\" />`, if you don't need an icon, just use this\n\t-----------------------------------\n\treturn books.length > 0 ? (\n\t\t...\n\t) : <div>Loading...</div>;\n\t-----------------------------------\n- note the `import { BookLoader } from './components/BooksLoader';` syntax for component loading so you don't need `export default ...` at the end of component files\n- you can get the full code of this example here: [edwardtanguay/howto-container-components](https://github.com/edwardtanguay/howto-container-components)\n- **App.js**\n\t----------------------------------\n\timport './App.scss';\n\timport { BooksLoader } from './components/BooksLoader';\n\timport { BooksSectionTitle } from './components/BooksSectionTitle';\n\timport { BooksSectionContent } from './components/BooksSectionContent';\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<BooksLoader>\n\t\t\t\t\t<BooksSectionTitle />\n\t\t\t\t\t<BooksSectionContent />\n\t\t\t\t</BooksLoader>\n\t\t\t</div>\n\t\t)\n\t}\n\texport default App;\n\t----------------------------------\n- **BooksLoader.js**\n\t-----------------------------------\n\timport React, { useState, useEffect } from \"react\";\n\timport axios from 'axios';\n\timport { FaSpinner } from 'react-icons/fa';\n\n\texport const BooksLoader = ({ children }) => {\n\t\tconst [books, setBooks] = useState([]);\n\n\t\tconst url = 'http://localhost:3003';\n\n\t\tuseEffect(() => {\n\t\t\t(async () => {\n\t\t\t\tconst response = await axios.get(`${url}/books`);\n\t\t\t\tif (response.statusText === 'OK') {\n\t\t\t\t\tsetBooks(prev => ([...prev, ...response.data.books]));\n\t\t\t\t}\n\t\t\t})();\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\tbooks.length === 0 && (\n\t\t\t\t\t\t<FaSpinner className=\"spinner\" />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tbooks.length > 0 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{React.Children.map(children, (child => {\n\t\t\t\t\t\t\t\tif (React.isValidElement(child)) {\n\t\t\t\t\t\t\t\t\treturn React.cloneElement(child, { books })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</>\n\t\t)\n\t}\n\t-----------------------------------\n- **BooksSectionTitle.js**\n\t----------------------------\n\texport const BooksSectionTitle = ({ books }) => {\n\t\treturn <h2>There are {books.length} books:</h2>\n\t}\n\t----------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-20 16:47:49","systemWhoCreated":"systemUnknown"},{"id":471,"category":"React","title":"How to use CreateRef to access form variables in React","body":"- note this is using Bootstrap 5 (CDN link in `index.html`)\n- note that text fields use Bootstrap 5 floating labels, i.e. `form-floating`##thefloatfieldskj\n- you can get the code to this example here: [edwardtanguay/howto-createRef-react](https://github.com/edwardtanguay/howto-createRef-react)\n- note that for radio and checkbox controls, you need to process the individual variables as with classic HTML DOM forms\n- finished site and resulting console.log output looks like this:##createRefExample\n- **App.js**\n\t-------------------------------\n\timport './App.scss';\n\timport { UserInfoForm } from './components/UserInfoForm';\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<UserInfoForm/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t-------------------------------\n- **UserInfoForm.js**\n\t------------------------------------\n\timport React from 'react';\n\n\texport const UserInfoForm = () => {\n\n\t\tconst field_firstName = React.createRef();\n\t\tconst field_lastName = React.createRef();\n\t\tconst field_color_red = React.createRef();\n\t\tconst field_color_blue = React.createRef();\n\t\tconst field_color_yellow = React.createRef();\n\t\tconst field_language_english = React.createRef();\n\t\tconst field_language_german = React.createRef();\n\t\tconst field_language_french = React.createRef();\n\n\t\tconst handleSubmit = e => {\n\t\t\tconsole.log('field_firstName', field_firstName.current.value);\n\t\t\tconsole.log('field_lastName', field_lastName.current.value);\n\t\t\tconsole.log('field_color_red', field_color_red.current.checked);\n\t\t\tconsole.log('field_color_blue', field_color_blue.current.checked);\n\t\t\tconsole.log('field_color_yellow', field_color_yellow.current.checked);\n\t\t\tconsole.log('field_language_english', field_language_english.current.checked);\n\t\t\tconsole.log('field_language_german', field_language_german.current.checked);\n\t\t\tconsole.log('field_language_french', field_language_french.current.checked);\n\t\t\te.preventDefault();\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"card-header\">User Information</div>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<div className=\"container px-5 my-5\">\n\t\t\t\t\t\t<form id=\"infoForm\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className=\"form-floating mb-3\">\n\t\t\t\t\t\t\t\t<input className=\"form-control\" id=\"firstName\" type=\"text\" placeholder=\"First Name\" ref={field_firstName} />\n\t\t\t\t\t\t\t\t<label htmlFor=\"firstName\">First Name</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-floating mb-3\">\n\t\t\t\t\t\t\t\t<input className=\"form-control\" id=\"lastName\" type=\"text\" placeholder=\"Last Name\" ref={field_lastName} />\n\t\t\t\t\t\t\t\t<label htmlFor=\"lastName\">Last Name</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label d-block\">Color</label>\n\t\t\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" id=\"red\" type=\"radio\" name=\"color\" ref={field_color_red} />\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"red\">Red</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" id=\"blue\" type=\"radio\" name=\"color\" ref={field_color_blue} />\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"blue\">Blue</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" id=\"yellow\" type=\"radio\" name=\"color\" ref={field_color_yellow} />\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"yellow\">Yellow</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t\t\t<label className=\"form-label d-block\">Language</label>\n\t\t\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" id=\"english\" type=\"checkbox\" name=\"language\" ref={field_language_english} />\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"english\">English</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" id=\"german\" type=\"checkbox\" name=\"language\" ref={field_language_german} />\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"german\">German</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" id=\"french\" type=\"checkbox\" name=\"language\" ref={field_language_french} />\n\t\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"french\">French</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"d-grid\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-lg\" id=\"submitButton\" type=\"submit\">Submit</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\t------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-20 21:59:34","systemWhoCreated":"systemUnknown"},{"id":472,"category":"React","title":"How to make a controlled modal in React","body":"- uncontrolled components keep track of their own state and release data only when event occurs, whereas controlled components are have their data managed for them by their parents\n- this is an example of a controlled modal, where as [this is an example of an uncontrolled modal](https://onespace.netlify.app/howtos?id=469)\n- both examples look and function the same, but the uncontrolled modal has the advantage of being able to be tested more easily\n- note that the `children` prop is a reserved word and can be placed at any position in the props list\n- here is what the modal looks like when being used:##themodalcontrolledsdf\n- you can get the full code here: [edwardtanguay/howto-showmodel-controlled-react](https://github.com/edwardtanguay/howto-showmodel-controlled-react)\n- **App.js**\n\t--------------------------------\n\timport { useState } from 'react';\n\timport { InfoModal } from './components/infoModal';\n\timport './App.scss';\n\n\tfunction App() {\n\t\tconst [shouldShowModal, setShouldShowModal] = useState(false);\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<InfoModal shouldShow={shouldShowModal} onRequestClose={() => setShouldShowModal(false)}>\n\t\t\t\t\t<h2>Info</h2>\n\t\t\t\t\t<p>This is the info.</p>\n\t\t\t\t</InfoModal>\n\t\t\t\t<button onClick={() => setShouldShowModal(!shouldShowModal)}>\n\t\t\t\t\t{shouldShowModal ? 'Hide Modal' : 'Show Modal'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\texport default App;\n\t--------------------------------\n- **infoModal.js**\n\t---------------------------------------------\n\timport styled from 'styled-components';\n\n\tconst ModalBackground = styled.div`\n\tbackground: rgba(100,100,100, .8);\n\tposition: fixed;\n\tz-index: 1;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: auto;\n\t`;\n\n\tconst ModalBody = styled.div`\n\tbackground: rgba(255, 255, 255, 1);\n\tmargin: 10% auto;\n\tpadding: 20px;\n\twidth: 50%;\n\tborder-radius: 5px;\n\tz-index: 2;\n\t.closeButton {\n\t\tfloat: right;\n\t}\n\t`;\n\n\texport const InfoModal = ({ shouldShow, onRequestClose, children}) => {\n\t\treturn shouldShow ? (\n\t\t\t<ModalBackground onClick={onRequestClose}>\n\t\t\t\t<ModalBody onClick={e => e.stopPropagation()}>\n\t\t\t\t\t<button onClick={onRequestClose}>Close</button>\n\t\t\t\t\t{children}\n\t\t\t\t</ModalBody>\n\t\t\t</ModalBackground>\n\t\t) : null;\n\t};\n\t---------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-21 10:04:24","systemWhoCreated":"systemUnknown"},{"id":473,"category":"React Design Patterns","title":"How to create an onboarding flow component in React","body":"- demo:#gif#howtoOnboardingDemo\n- onboarding is a design pattern to display a series of panels that a user clicks through to read information or fill out information\n- code repository is here: [edwardtanguay/howto-onboarding-component-react](https://github.com/edwardtanguay/howto-onboarding-component-react)\n- note this code that returns the current component in the onboarding flow\n\t--------------------------------------------\n\tconst currentChild = React.Children.toArray(children)[currentIndex];\n\n\tif (React.isValidElement(currentChild)) {\n\t\treturn React.cloneElement(currentChild, { goToNext });\n\t}\n\t--------------------------------------------\n- autoFocus for each step is not implemented, perhaps use [useRef](https://onespace.netlify.app/howtos?id=412)\n- Materialize is used for styling, CDN links in index.html\n- note that step 3 is conditional based on step 2\n- **OnboardingFlow.js**\n\t-------------------------------\n\timport React from 'react';\n\n\texport const OnboardingFlow = ({ children, currentIndex, onNext }) => {\n\t\tconst currentChild = React.Children.toArray(children)[currentIndex];\n\n\t\tconst gotoNext = stepData => {\n\t\t\tonNext(stepData, currentChild.props.isLastStep);\n\t\t}\n\n\t\tif (React.isValidElement(currentChild)) {\n\t\t\treturn React.cloneElement(currentChild, { gotoNext });\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t-------------------------------\n- **App.js**\n\t---------------------------------------\n\timport React, { useState, useEffect } from 'react';\n\timport './App.scss';\n\timport { OnboardingFlow } from './components/OnboardingFlow';\n\n\tconst StepOne = ({ gotoNext }) => {\n\t\tconst field_name = React.createRef();\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<p>Name: <input type=\"text\" ref={field_name} /></p>\n\t\t\t\t<button onClick={() => gotoNext({ name: field_name.current.value })}>Next</button>\n\t\t\t</>\n\t\t)\n\t};\n\n\tconst StepTwo = ({ gotoNext }) => {\n\t\tconst field_age = React.createRef();\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<p>Age: <input type=\"text\" ref={field_age} /></p>\n\t\t\t\t<button onClick={() => gotoNext({ age: field_age.current.value })}>Next</button>\n\t\t\t</>\n\t\t)\n\t};\n\n\tconst StepThree = ({ gotoNext }) => (\n\t\t<>\n\t\t\t<p>Contratulations, you qualify for our senior discount!</p>\n\t\t\t<button onClick={() => gotoNext({})}>Next</button>\n\t\t</>\n\t);\n\n\tconst StepFour = ({ gotoNext }) => {\n\t\tconst field_city = React.createRef();\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<p>City: <input type=\"text\" ref={field_city} /></p>\n\t\t\t\t<button onClick={() => gotoNext({ city: field_city.current.value })}>Next</button>\n\t\t\t</>\n\t\t)\n\t};\n\n\tfunction App() {\n\t\tconst [onboardingData, setOnboardingData] = useState({});\n\t\tconst [currentIndex, setCurrentIndex] = useState(0);\n\t\tconst [message, setMessage] = useState('');\n\t\tconst [finished, setFinished] = useState(false);\n\n\n\t\tuseEffect(() => {\n\t\t\tif (finished) setMessage(`finished, send this to backend: ${JSON.stringify(onboardingData, null, 2)}`);\n\t\t}, [finished, onboardingData])\n\n\t\tconst onNext = (stepData, isLastStep = false) => {\n\n\t\t\tsetOnboardingData({ ...onboardingData, ...stepData });\n\t\t\tsetCurrentIndex(currentIndex + 1);\n\t\t\tif (isLastStep) setFinished(true);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{message !== '' && (\n\t\t\t\t\t<pre className=\"message\">{message}</pre>\n\t\t\t\t)}\n\t\t\t\t{message === '' && (\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col s12 m6\">\n\t\t\t\t\t\t\t<div className=\"card blue-grey darken-3\">\n\t\t\t\t\t\t\t\t<div className=\"card-content white-text\">\n\t\t\t\t\t\t\t\t\t<OnboardingFlow\n\t\t\t\t\t\t\t\t\t\tcurrentIndex={currentIndex}\n\t\t\t\t\t\t\t\t\t\tonNext={onNext}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<StepOne />\n\t\t\t\t\t\t\t\t\t\t<StepTwo />\n\t\t\t\t\t\t\t\t\t\t{Number(onboardingData.age) >= 60 && <StepThree />}\n\t\t\t\t\t\t\t\t\t\t<StepFour isLastStep={true} />\n\t\t\t\t\t\t\t\t\t</OnboardingFlow>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t---------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-23 14:01:26","systemWhoCreated":"systemUnknown"},{"id":474,"category":"React","title":"How to create a higher-order-component (HOC) in React for data loading","body":"- higher order components \n\t- instead of returning JSX as most components, HOCs return a component\n\t- they add another level, somewhat like the Factory pattern in OOP\n\t- they are used to share behavior between components\n\t- HOCs don't start with a capital letter and often start with the word `with` because they inject the component *with* some specific data, behavior or feature\n- this example displays two components which are produced by an HOC which creates and passes them a users prop##thehocforuserswith\n- note that in this case data is gotten from a JSON file but would usually be would normally be retrieved from e.g. an API via fetch or axios\n- **App.js**\n\t---------------------------\n\timport './App.scss';\n\timport { SummaryList} from './components/SummaryList';\n\timport { FullInfoList } from './components/FullInfoList';\n\timport { withUsers } from './components/withUsers';\n\n\tconst SummaryListWithUsers = withUsers(SummaryList);\n\tconst FullInfoListWithUsers = withUsers(FullInfoList);\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>User Info</h1>\n\t\t\t\t<SummaryListWithUsers title=\"Summary List\" />\n\t\t\t\t<FullInfoListWithUsers title=\"Full Info List\" />\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t---------------------------\n- **withUsers.js**\n\t-------------------------------\n\timport users from '../data/users.json';\n\n\texport const withUsers = Component => {\n\t\treturn (props) => {\n\t\t\treturn <Component {...props} users={users} />\n\t\t}\n\t}\n\t-------------------------------\n- **SummaryList.js**\n\t----------------------------------\n\texport const SummaryList = ({ title, users }) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t{users.map((user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={i} className=\"user\">\n\t\t\t\t\t\t\t<div className=\"name\">{user.name}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</>\n\t\t)\n\t}\n\t----------------------------------\n- you can get the full code for this example here: [edwardtanguay/howto-highOrderComponent-react](https://github.com/edwardtanguay/howto-highOrderComponent-react)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-24 00:14:33","systemWhoCreated":"systemUnknown"},{"id":475,"category":"Webpack","title":"Webpack site that bundles HTML, SASS, custom JavaScript modules, npm modules, and reads local JSON and external API data","body":"- this project is meant to get you started with Webpack by providing a site that solves many of the features a modern website has to solve: components, dynamical JavaScript  injection, SASS, loading data from local JSON, fetching data from external APIs, bundling the site and deploying to an online CDN\n- the site looks like this:##webpackHowtojamstackall\n- this site can be published in minutes at CDN servers\n\t- Netlify:\n\t\t- Build command: `npm run build`\n\t\t- Publish directory: `dist/`\n\t\t- https://webpackjamstackmodulesnpm.netlify.app\n\t- Vercel\n\t\t- Build command: `npm run build`\n\t\t- Output directory: `dist`\n\t\t- https://webpack-jamstack-modules-npm.vercel.app\n- you can find the **full code to this project** at this repository: [edwardtanguay/webpackJamstackModulesNpm](https://github.com/edwardtanguay/webpackJamstackModulesNpm)\n- it builds as `mode=development` locally and as `mode=production` on CDN servers\n\t- if you publish it to GitHub Pages, be sure to make a production build locally and then copy that to a repository\n\t\t- note this could be automated as well\n- I got started creating this site with [this Fireship video](https://www.youtube.com/watch?v=5IG4UmULyoA) which is the most straightforward explanation how to set up a simple Webpack bundling environment working that I've seen\n- features\n\t- organization somewhat like create-react-app##theorgancra\n\t- uses axios instead of fetch\n\t- you can place images in the `/src/html/images` folder and they will be copied to `/dist` on build\n\t- JavaScript can be injected (`tools/insertJavaScriptOnPage.js`) so that components can have interactivity##interactivityjscomp\n\t- SASS only: allows SASS files without creating css files##showsassonly\n\t- hot-loading: changes in any file but index.html will trigger the Browser to refresh\n\t- Emmet: VSCode provides emmet suggestions in a .js file while typing within a string literal\n\t\t- although the emmet `.` creates React-style `className` instead of `class`\n\t- custom components one recognizes a React-like structure##onerecogreactlike\n\t- loading API data was solved by making the component asynchronous and using `async/await`##theasyncshowit\n- functionality that could be added to this site:\n\t- TypeScript\n\t- responsive design","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-27 14:40:08","systemWhoCreated":"systemUnknown"},{"id":477,"category":"React","title":"How to create a higher-order component that wraps a component and displays a spinner icon while its component loads","body":"- this example shows you how to wrap a component with a HOC that displays a spinner while that component's data loads\n- this example only simulates the loading, i.e. a wait from from 1-5 seconds for each component it loads\n- there are two components: Books and Users\n- you can **clone the full code** at this repository: [edwardtanguay/howto-hoc-withLoading](https://github.com/edwardtanguay/howto-hoc-withLoading)\n- the app looks like this:#gif#withloadingHowtoAnd2\n- **App.js**\n\t------------------------------\n\timport './App.scss';\n\timport { Books } from './components/books';\n\timport { Users } from './components/users';\n\timport { withLoading } from './hocs/withLoading';\n\n\tconst WithLoadingBooks = withLoading(Books, 'Loading books...');\n\tconst WithLoadingUsers = withLoading(Users, 'Loading users...');\n\n\tfunction App() {\n\t  return (\n\t\t<div className=\"App\">\n\t\t\t<WithLoadingBooks/>\n\t\t\t<WithLoadingUsers/>\n\t\t</div>\n\t  );\n\t}\n\n\texport default App;\n\t------------------------------\n- **withLoading.js**\n\t-----------------------------------\n\timport { useState, useEffect } from 'react';\n\timport { FaSpinner } from 'react-icons/fa';\n\n\tconst Loading = ({message}) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h2>{message}</h2>\n\t\t\t\t<p><FaSpinner className=\"spinner\" /></p>\n\t\t\t</>\n\t\t)\n\t};\n\n\texport const withLoading = (Component, loadingMessage) => (props) => {\n\t\tconst [isLoading, setIsLoading] = useState(true);\n\t\tconst secondsToWait = Math.floor(Math.random() * 4000) + 1000;\n\t\tuseEffect(() => {\n\t\t\tsetTimeout(() => setIsLoading(false), secondsToWait);\n\t\t}, []);\n\t\treturn isLoading ? <Loading message={loadingMessage} /> : <Component {...props} />;\n\t};\n\t-----------------------------------\n- **Books.js**\n\t---------------------------------------\n\texport const Books = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t<h2>Books</h2>\n\t\t\t<p>These are the books.</p>\n\t\t\t</>\n\t\t)\n\t}\n\t---------------------------------------\n- **Users.js**\n\t-------------------------------------------\n\texport const Users = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t<h2>Users</h2>\n\t\t\t<p>These are the users.</p>\n\t\t\t</>\n\t\t)\n\t}\n\t-------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2021-12-27 19:00:52","systemWhoCreated":"systemUnknown"},{"id":478,"category":"Gatsby","title":"Build a two-page website with Gatsby and host at Netlify","body":"- these instructions will show you how to get a Gatsby website up and running, including:\n\t- add data to the `gatsby-config.js` file and retrieve it with GraphQL\n\t- install and use SASS\n\t- add multiple pages with nav menu\n\t- use `<Layout>` to create header and footer that shows on each page \n\t- use `<Seo>` to display page title in tab header\n\t- use performance-optimized `<StaticImage>`\n\t- deploy site at Netlify\n\t- use this site in the future as a Gatsby starter site\n- if you need an overview of what Gatsby is, see [these notes](https://onespace.netlify.app/techItems?id=384)\n- the site works like this:#gif#gatsbyshowstarteredwww\n- info\n\t- view the site online here: https://gatsby-edward-starter-site.netlify.app\n\t- get the complete code for the site here: https://github.com/edwardtanguay/gatsby-edward-starter-site\n- install latest version of Gatsby CLI globally\n\t- find out if you have it: `npm list -g --depth=0`\n\t- if so, uninstall it: `npm un -g gatsby-cli`\n\t- reinstall: `npm i -g gatsby-cli`\n- create a default Gatsby site\n\t- go to webs directory\n\t- `gatsby new gatsby-simple-site` (this will create a directory one level below called `gatsby-simple-site`)\n- open in VSCode\n\t- `cd gatsby-simple-site`\n\t- `code .`\n\t- look around, looks create-react-app-like\n- start website\n\t- `npm start`\n\t- if you get this error in Firefox:##thefirstfoxgats\n\t- fix it like this:##fixed8000gatsby\n\t- notice there are two pages with links between them\n- explore code\n\t- note that it is hot-loading like create-react-app or Live Server\n\t- `index.js` \n\t\t- change text\n\t\t- notice **StaticImage** is from Gatsby\n\t\t\t- change `width` and `quality`\n\t\t\t- add `transformOptions={{ grayscale: false, rotate: 0 }}` and edit values\n\t\t\t- StaticImage is a way to optimize speed and performance of the website\n\t\t- notice **Link** is also from Gatsby\n\t- `page-2.js`\n\t\t- notice how `<Layout>` works\n\t\t\t- add `<hr/>` before and after children\n\t\t\t- add subtitle to `gatsby-config.js`, add to GraphQL query, then use in header\n\t\t- notice how `<Seo>` works\n\t\t\t- change `titleTemplate`\n- customize site content\n\t- **index.js**\n\t\t- Seo \"Home\" to \"Welcome\"\n\t\t- delete content but links\n\t\t- links to layout and add `<nav>`\n\t- **layout.js**\n\t\t- remove header\n\t\t\t- replace with `<h1>`\n\t\t- remove footer\n\t- **page-2.js**\n\t\t- rename to `about.js`\n\t\t- simply this and index.js to one sentence\n\t- site should look like this:##gatsbywithsomestyleing\n- customize site styling\n\t- install SASS\n\t\t- `npm i sass gatsby-plugin-sass` (over a minute)\n\t\t- in `gatsby-config.js`, add to plugins: `gatsby-plugin-sass`\n\t- create **styles/reset.scss**\n\t\t----------------------------------\n\t\thtml, body, div, span, applet, object, iframe,\n\t\th1, h2, h3, h4, h5, h6, p, blockquote, pre,\n\t\ta, abbr, acronym, address, big, cite, code,\n\t\tdel, dfn, em, img, ins, kbd, q, s, samp,\n\t\tsmall, strike, strong, sub, sup, tt, var,\n\t\tb, u, i, center,\n\t\tdl, dt, dd, ol, ul, li,\n\t\tfieldset, form, label, legend,\n\t\ttable, caption, tbody, tfoot, thead, tr, th, td,\n\t\tarticle, aside, canvas, details, embed, \n\t\tfigure, figcaption, footer, header, hgroup, \n\t\tmenu, nav, output, ruby, section, summary,\n\t\ttime, mark, audio, video {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tborder: 0;\n\t\t\tfont-size: 100%;\n\t\t\tfont: inherit;\n\t\t\tvertical-align: baseline;\n\t\t}\n\t\tarticle, aside, details, figcaption, figure, \n\t\tfooter, header, hgroup, menu, nav, section {\n\t\t\tdisplay: block;\n\t\t}\n\t\tbody {\n\t\t\tline-height: 1;\n\t\t}\n\t\tol, ul {\n\t\t\tlist-style: none;\n\t\t}\n\t\tblockquote, q {\n\t\t\tquotes: none;\n\t\t}\n\t\tblockquote:before, blockquote:after,\n\t\tq:before, q:after {\n\t\t\tcontent: '';\n\t\t\tcontent: none;\n\t\t}\n\t\ttable {\n\t\t\tborder-collapse: collapse;\n\t\t\tborder-spacing: 0;\n\t\t}\n\t\t----------------------------------\n\t- styles should be completely reset now:##gatsresetted\n\t- add **main.scss**\n\t\t--------------------------------------\n\t\tbody {\n\t\t\tfont-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\n\t\t\th1 {\n\t\t\t\tfont-size: 3rem;\n\t\t\t\tbackground-color: #eee;\n\t\t\t\tpadding: 10px 10px 10px 25px;\n\t\t\t}\n\t\t\tnav {\n\t\t\t\tdisplay: flex;\n\t\t\t\tbackground-color: #777;\n\t\t\t\tpadding: 3px 0 5px 20px;\n\t\t\t\tfont-size: 1.3rem;\n\t\t\t\ta {\n\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t}\n\t\t\t\t[aria-current]:not([aria-current=\"false\"]) {\n\t\t\t\t\tcolor: Yellow;\n\t\t\t\t\ttext-shadow: 1px 1px 1px #000;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmain {\n\t\t\t\tpadding: 20px 20px 20px 30px;\n\t\t\t}\n\t\t\tp {\n\t\t\t\tfont-size: 1.2rem;\n\t\t\t}\n\t\t}\n\t\t--------------------------------------\n- add image\n\t- save image to `src/images/project.png`\n\t- add `import { StaticImage } from \"gatsby-plugin-image\"`\n\t- add the static image:\n\t\t----------------------------------------\n\t\t<StaticImage src=\"../images/project.png\" alt=\"project\" aspectRatio={3 / 2}\n\t\t\twidth={200}\n\t\t\ttransformOptions={{ grayscale: false, rotate: 0 }}\n\t\t/>\n\t\t----------------------------------------\n\t- site should now look like this:##gatsnowwithgraphic\n- delete everything you don't need\n\t- `/images`\n\t\t- the astronaut image\n\t\t- (don't delete the gatsby icon)\n\t- two lock files\n\t- `README.md`\n\t- run `gatsby clean`\n- push to GitHub repository\n- publish to Netlify\n\t- use all default settings\n\t- takes 2 minutes","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-04 00:49:25","systemWhoCreated":"systemUnknown"},{"id":480,"category":"Socket.io","title":"How to create a chat application with Socket.io","body":"- This application will show you the basics of using Socket.io to create a website on which multiple users can interact with each other in real time\n- here is a demonstration of how the site works:#gif#thechatappworkingok\n- you can get the full code of this application here: [edwardtanguay/socketio-basic-chat](https://github.com/edwardtanguay/socketio-basic-chat)\n- basically there are two parts to this app, the backend (`server.js`) and the frontend (`index.html`)\n- **server.js**\n\t----------------------------------------\n\timport http from 'http';\n\timport path from 'path';\n\timport express from 'express';\n\timport { Server as socketIO } from 'socket.io';\n\n\tconst app = express();\n\tconst PORT = 5011;\n\tconst __dirname = path.resolve(path.dirname(''));\n\tconst server = http.Server(app);\n\tconst io = new socketIO(server);\n\n\tconst quotes = [\n\t\t\"The fact that I'm using words doesn’t necessarily mean that I’m saying anything.\",\n\t\t\"There is no communication that is so simple that it cannot be misunderstood.\",\n\t\t\"Don't assume that prior communication has been effective and that people get it.\",\n\t\t\"Your aim in conversation should not be to persuade, but to clarify.\",\n\t\t\"Rational discussion is useful only when there is a significant base of shared assumptions.\",\n\t\t\"Every problem seems to start with bad communication. Someone isn't listening.\",\n\t\t\"Good communication is just as stimulating as black coffee, and just as hard to sleep after.\"\n\t];\n\tlet currentQuoteIndex = 0;\n\n\tapp.get('/', (req, res) => {\n\t\tres.sendFile(__dirname + '/public/index.html');\n\t});\n\n\tconst showQuote = (socket) => {\n\t\tconst quote = quotes[currentQuoteIndex];\n\t\tsocket.emit('quote', quote);\n\t\tcurrentQuoteIndex++;\n\t\tif (currentQuoteIndex > quotes.length - 1) {\n\t\t\tcurrentQuoteIndex = 0;\n\t\t}\n\t}\n\n\tio.on('connection', (socket) => {\n\n\t\tshowQuote(socket);\n\n\t\tsetInterval(() => {\n\t\t\tshowQuote(socket);\n\t\t}, 7000);\n\n\t\tsocket.on('greeting', (data) => {\n\t\t\tconsole.log(data);\n\t\t});\n\n\t\tsocket.on('message', (data) => {\n\t\t\tio.emit('message', data);\n\t\t});\n\t})\n\n\tserver.listen(PORT, () => {\n\t\tconsole.log(`listening on port http://localhost:${PORT}`);\n\t})\n\t----------------------------------------\n- **index.html**\n\t--------------------------------------------\n\t<html lang=\"en\">\n\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta http-equiv=\"X-UA-Compatible\"\n\t\t\t  content=\"IE=edge\">\n\t\t<meta name=\"viewport\"\n\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\n\t\t<title>Socket.IO</title>\n\t\t<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n\t\t\t  rel=\"stylesheet\">\n\n\t\t<script src=\"https://cdn.socket.io/4.4.0/socket.io.min.js\"></script>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground: #333;\n\t\t\t\tfont-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n\t\t\t\twidth: 600px;\n\t\t\t}\n\n\t\t\tform {\n\t\t\t\tpadding: 20px;\n\t\t\t\twidth: 500px;\n\t\t\t\tpadding-right: 50px;\n\t\t\t\tmargin: 0 auto;\n\t\t\t}\n\n\t\t\t#messages {\n\t\t\t\tlist-style-type: none;\n\t\t\t\tmargin: 0 auto 0 auto;\n\t\t\t\tpadding: 0;\n\t\t\t\twidth: 500px;\n\t\t\t\theight: 200px;\n\t\t\t\tborder: 1px solid #fff;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tbackground: #222;\n\t\t\t}\n\n\t\t\t#messages li {\n\t\t\t\tpadding: 5px 10px;\n\t\t\t}\n\n\t\t\t#messages li:nth-child(odd) {\n\t\t\t\tbackground: #aaa;\n\t\t\t}\n\n\t\t\t#messages li:nth-child(even) {\n\t\t\t\tbackground: #ccc;\n\t\t\t}\n\n\t\t\t#message {\n\t\t\t\tbackground: #999;\n\t\t\t\twidth: 429px;\n\t\t\t}\n\n\t\t\tbutton {\n\t\t\t\tmargin-left: 10px;\n\t\t\t}\n\n\t\t\t.quote {\n\t\t\t\tcolor: rgb(206, 206, 115);\n\t\t\t\twidth: 500px;\n\t\t\t\tmargin: 5px auto 5px auto;\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t}\n\n\t\t\th1 {\n\t\t\t\tmargin: 20px auto 10px auto !important;\n\t\t\t\tcolor: #aaa;\n\t\t\t\twidth: 500px !important;\n\t\t\t\tfont-size: 2.5rem;\n\t\t\t}\n\t\t\t.formrow {\n\t\t\t\tdisplay: flex;\n\t\t\t\tmargin: 0 auto;\n\t\t\t\twidth: 500px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div class=\"container-fluid\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<h1>Chat Box</h1>\n\t\t\t\t<ul id=\"messages\">\n\t\t\t\t</ul>\n\t\t\t\t<div class=\"quote\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<form action=\"\">\n\t\t\t\t\t<div class=\"formrow\">\n\t\t\t\t\t\t<input id=\"message\"\n\t\t\t\t\t\t\t   autocomplete=\"off\"\n\t\t\t\t\t\t\t   type=\"text\"\n\t\t\t\t\t\t\t   class=\"form-control\">\n\t\t\t\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t\t\t\t<button class=\"btn btn-secondary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\">Send</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t\t<script>\n\t\t\tconst socket = io();\n\t\t\tconst formElem = document.querySelector('form');\n\t\t\tconst messageElem = document.querySelector('#message');\n\t\t\tconst messagesElem = document.querySelector('#messages');\n\t\t\tconst quoteElem = document.querySelector('.quote');\n\t\t\tmessageElem.focus();\n\n\t\t\tfunction fadeIn(el, time) {\n\t\t\t\tel.style.opacity = 0;\n\n\t\t\t\tvar last = +new Date();\n\t\t\t\tvar tick = function () {\n\t\t\t\t\tel.style.opacity = +el.style.opacity + (new Date() - last) / time;\n\t\t\t\t\tlast = +new Date();\n\n\t\t\t\t\tif (+el.style.opacity < 1) {\n\t\t\t\t\t\t(window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\ttick();\n\t\t\t}\n\n\t\t\tformElem.onsubmit = (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst message = messageElem.value;\n\t\t\t\tsocket.emit('message', message);\n\t\t\t\tmessageElem.value = '';\n\t\t\t};\n\n\t\t\tsocket.on('message', (data) => {\n\t\t\t\tconst li = document.createElement('li');\n\t\t\t\tli.appendChild(document.createTextNode(data));\n\t\t\t\tmessagesElem.appendChild(li);\n\t\t\t\tmessagesElem.scrollTop = messagesElem.scrollHeight;\n\t\t\t\tmessageElem.focus();\n\t\t\t});\n\n\t\t\tsocket.on('quote', (data) => {\n\t\t\t\tquoteElem.innerText = `\"${data}\"`;\n\t\t\t\tfadeIn(quoteElem, 2000);\n\t\t\t});\n\t\t</script>\n\t</body>\n\n\t</html>\n\t--------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-06 00:09:20","systemWhoCreated":"systemUnknown"},{"id":481,"category":"JavaScript","title":"Create a cashier calculator to return change","body":"- this is a solution to a JavaScript exercise create a function that simulates what a cashier has to do when a customer has a certain amount to pay, pays more than the amount, and the cashier has to calculate the change\n- this solution allows for various currencies, e.g. Euro and Dollar is provided here\n- this is just a JavaScript file run in node, no frontend, so looks like this:#gif#cashierproblem222\n- here is the full code:\n\t-------------------------------------------------\n\tconst moneyDollar = {\n\t\tunits: [\n\t\t\t{\n\t\t\t\tvalue: 500,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 200,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 100,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 50,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 20,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 10,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .25,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .1,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .05,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .01,\n\t\t\t\tkind: 'coin'\n\t\t\t}\n\t\t]\n\t}\n\tconst moneyEuro = {\n\t\tunits: [\n\t\t\t{\n\t\t\t\tvalue: 500,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 200,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 100,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 50,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 20,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 10,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 5,\n\t\t\t\tkind: 'note'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 2,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 1,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .5,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .2,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .1,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .05,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .02,\n\t\t\t\tkind: 'coin'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: .01,\n\t\t\t\tkind: 'coin'\n\t\t\t}\n\t\t]\n\t}\n\n\tconst getChange = (price, payAmount, money) => {\n\t\tconst ret = {\n\t\t\treturnMoney: []\n\t\t};\n\t\tret.payback = payAmount - price;\n\t\tlet tempPayback = ret.payback;\n\n\t\tif (ret.payback < 0) {\n\t\t\tret.error = true;\n\t\t} else {\n\t\t\tmoney.units.forEach(unit => {\n\t\t\t\tif (unit.value <= tempPayback) {\n\t\t\t\t\twhile (unit.value <= tempPayback) {\n\t\t\t\t\t\tret.returnMoney.push(unit);\n\t\t\t\t\t\ttempPayback -= unit.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\tconst result = getChange(3.56, 1, moneyEuro);\n\n\tconsole.log(result);\n\t-------------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-07 12:08:51","systemWhoCreated":"systemUnknown"},{"id":483,"category":"Laravel","title":"Get local Laravel 8 site running and deploy to Heroku","body":"- set up Laravel site\n\t- go to your webs directory\n\t- `composer create-project --prefer-dist laravel/laravel site001`\n\t- `php artisan serve`##laravelworkssite\n- change start page\n\t- set up Git\n\t\t- `git init`\n\t\t- make initial commit\n\t- create view: `resources/views/main.blade.php`:\n\t\t---------------------------------------------\n\t\t<html lang=\"en\">\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>Welcome</title>\n\t\t</head>\n\t\t<body>\n\t\t\t<h1>Welcome</h1>\n\t\t\t<p>Welcome to this site.</p>\n\t\t</body>\n\t\t</html>\n\t\t---------------------------------------------\n\t- change `welcome` to `main` in routes file: `routes/web.php`\n\t\t---------------------------\n\t\tRoute;get('/', function () {\n\t\t\treturn view('main');\n\t\t});\n\t\t---------------------------\n\t- commit changes\n- deploy to Heroku\n\t- create a `Procfile`\n\t\t---------------------------------------\n\t\tweb: vendor/bin/heroku-php-apache2 public/\n\t\t---------------------------------------\n\t- commit to local Git\n\t- create site at Heroku\n\t\t- `heroku login`\n\t\t- `heroku create`\n\t- set encryption key\n\t\t- `php artisan key:generate --show`\n\t\t\t- it will show a long key, e.g. nnnnnnnnnnnnnnnnnnnnnnnnnnn\n\t\t- `heroku config:set APP_KEY=nnnnnnnnnnnnnnnnnnnnnnnnnnn`\n\t- push local repository to Heroku\n\t\t- `git push heroku master`\n\t- look at your Heroku site in your browser\n\t\t- `heroku open`\n- change URL to custom name\n\t- browser: \n\t\t- log into Heroku\n\t\t- settings, rename to e.g. `et-laravel`\n\t- terminal:\n\t\t- `git remote rm heroku`\n\t\t\t- (removes all references to the remote repository)\n\t\t- `heroku git:remote -a et-laravel`\n\t- make small change to site\n\t- `git push heroku master`\n\t- in browser: https://et-laravel.herokuapp.com##thelaravelsiteok\n- switch to GitHub-publishing\n\t- copy current site being directly deployed to Heroku, e.g. with `git push heroku master`\n\t\t- copied everything but `vendor` and `.git` to site002\n\t- recreate vendor directory\n\t\t- `composer install`\n\t- start site locally\n\t\t- `php artisan serve`\n\t- commit and push to new GitHub repository: \n\t\t- https://github.com/edwardtanguay/et-laravel2\n\t- repoint Heroku app to this repository","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-08 21:49:13","systemWhoCreated":"systemUnknown"},{"id":484,"category":"Symfony","title":"Get local Symfony 5 site running and deploy to Heroku","body":"- setup environment:\n\t- `php -v`\n\t\t---------------------------------------\n\t\tPHP 7.3.27 (cli) (built: Feb  2 2021 20:46:26) ( ZTS MSVC15 (Visual C++ 2017) x64 )\n\t\tCopyright (c) 1997-2018 The PHP Group\n\t\tZend Engine v3.3.27, Copyright (c) 1998-2018 Zend Technologies\t\t\t\n\t\t---------------------------------------\n\t\t- if not installed, install with XAMPP: https://www.apachefriends.org\n\t- `composer -V`\n\t\t-------------------------------\n\t\tComposer version 1.10.13 2020-09-09 11:46:34\n\t\t-------------------------------\n\t\t- reinstalled from here: https://getcomposer.org/doc/00-intro.md\n\t\t- now:\n\t\t\t-------------------------------------------\n\t\t\tComposer version 2.2.3 2021-12-31 12:18:53\n\t\t\t-------------------------------------------\n\t- `git --version`\n\t\t--------------------------\n\t\tgit version 2.29.2.windows.2\n\t\t--------------------------\n\t- `php bin/console about`\n\t\t---------------------------------\n\t\tSymfony Version 5.4.2\n\t\t---------------------------------\n- create simple Symfony website\n\t- in webs directory\n\t\t- `composer create-project symfony/website-skeleton symfony-heroku`\n\t\t\t- just hit enter for each of the prompts\n\t\t- `cd symfony-heroku`\n\t\t- install git and commit\n\t\t\t- `git init`\n\t\t\t- `git add .`\n\t\t\t- `git commit -m \"initial import\"`\n\t\t- install Symfony CLI\n\t\t\t- https://symfony.com/download\n\t\t- start server\n\t\t\t- `symfony server:start`\n\t\t\t- in browser: http://localhost:8000\n\t\t- install profiler\n\t\t\t- `composer require --dev symfony/profiler-pack`\n\t\t- install HttpFoundation\n\t\t\t- `composer require symfony/http-foundation`\n\t\t- create a controller \"Main\"\n\t\t\t- `config/routes.yaml`\n\t\t\t\t------------------------------\n\t\t\t\tindex:\n\t\t\t\t   path: /\n\t\t\t\t   controller: App\\Controller\\MainController;main\n\t\t\t\t------------------------------\n\t\t\t- `src/Controller/MainController.php`\n\t\t\t\t------------------------------------\n\t\t\t\t<?php\n\n\t\t\t\tnamespace App\\Controller;\n\n\t\t\t\tuse Symfony\\Component\\HttpFoundation\\Response;\n\n\t\t\t\tclass MainController {\n\t\t\t\t\tfunction main() {\n\t\t\t\t\t\treturn new Response('<h1>Website</h1><p>Welcome to this site.</p>');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t------------------------------------\n- deploy site to Heroku\n\t- `heroku login`\n\t- `heroku create`\n\t- create Procfile\n\t\t- *\"By default, Heroku will launch an Apache web server together with PHP to serve applications.\"*\n\t\t- `Procfile` (in root)\n\t\t\t-------------------------------------\n\t\t\tweb: heroku-php-apache2 public/\n\t\t\t-------------------------------------\n\t\t- commit to Git\n\t- `heroku config:set APP_ENV=prod`\n\t- deploy it\n\t\t- `git push heroku master`\n\t- successful: https://stormy-wave-23746.herokuapp.com\n\t- rename site\n\t\t- browser: \n\t\t\t- log into Heroku\n\t\t\t- settings, rename to `et-symfony`\n\t\t- terminal:\n\t\t\t- `git remote rm heroku`\n\t\t\t- `heroku git:remote -a et-symfony`\n\t\t- make small change to site\n\t\t- `git push heroku master`\n\t\t- in browser: https://et-symfony.herokuapp.com##thesymfonysiteok\n- trouble-shooting\n\t- `symfony check:req`","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-08 21:55:04","systemWhoCreated":"systemUnknown"},{"id":485,"category":"React","title":"How to use Boostrap/Sass in React","body":"- these instructions show you how to make a starter React site that uses Bootstrap 5 (via npm), Bootstrap Icons and Sass\n- the site looks like this:##thesitebootoklooks\n- you can get the code for this site here: https://github.com/edwardtanguay/create-react-app-bootstrap-sass\n- set up a `create-react-app` site or use this [blankcra](https://github.com/edwardtanguay/blankcra)\n- install Bootstrap 5, Bootstrap Icons and Sass\n\t- `npm i bootstrap bootstrap-icons sass`\n- **index.js**\n\t--------------------------------------------\n\timport React from 'react';\n\timport ReactDOM from 'react-dom';\n\timport App from './App';\n\timport './App.scss';\n\n\tReactDOM.render(\n\t  <React.StrictMode>\n\t\t<App />\n\t  </React.StrictMode>,\n\t  document.getElementById('root')\n\t);\n\t--------------------------------------------\n- **App.scss**\n\t-----------------------------------------\n\t$primary: rgb(180, 110, 29); \n\n\t@import \"~bootstrap/scss/bootstrap.scss\";\n\t@import \"~bootstrap-icons/font/bootstrap-icons.css\";\n\n\tbody {\n\t\tbackground: #333;\n\t\tp {\n\t\t\tcolor: ivory;\n\t\t\tfont-size: 1.4rem;\n\t\t}\n\t}\n\t-----------------------------------------\n- **App.js**\n\t-----------------------------------\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App container mt-5\">\n\t\t\t\t<h1 className=\"text-primary mb-4\"><i className=\"bi bi-diagram-2-fill\"></i> React-Bootstrap-Sass Site</h1>\n\t\t\t\t<p>Welcome to this site.</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t-----------------------------------\n- further information:\n\t- you can change the colors here: `node_modules\\bootstrap\\scss\\_variables.scss`##thecolorschangsoss\n\t- Linked-In Learning has a course on this: [Bootstrap 4 with Sass](https://www.linkedin.com/learning/bootstrap-4-with-sass/) (2019)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-13 01:37:20","systemWhoCreated":"systemUnknown"},{"id":486,"category":"JavaScript","title":"Two data-driven JavaScript apps that fetch data from (1) local module and (2) external API","body":"- this app demonstrates two sites, one that loads data from a JavaScript object imported from a local module, and the other that fetchs JSON data from an external API:##twodatadrivenapps\n- notice how it uses string literals to create HTML as templates\n- you can view the full code here: https://github.com/edwardtanguay/javascript-data-driven-sites\n- **readFromObject/js/main.js**\n\t---------------------------------------------\n\timport { employees } from '../data/employees.js';\n\n\tconst contentElem = document.querySelector('.content');\n\n\tcontentElem.innerHTML += `There are ${employees.length} employees.`;\n\n\tcontentElem.innerHTML += employees.map(emp => {\n\t\treturn `\n\t<h2>${emp.firstName} ${emp.lastName} (${emp.address.country})</h2>\n\t<section class=\"body\">\n\t${emp.notes}\n\t</section>\n\t`;\n\t}).join('');\n\t---------------------------------------------\n- **fetchFromApi/js/main.js**\n\t------------------------------------------\n\tconst contentElem = document.querySelector('.content');\n\tcontentElem.innerHTML = 'Loading...';\n\n\t(async () => {\n\t\tconst response = await fetch('https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/employees.json');\n\t\tconst employees = await response.json();\n\n\t\tcontentElem.innerHTML = `There are ${employees.length} employees.`;\n\n\t\tcontentElem.innerHTML += employees.map(emp => {\n\t\t\treturn `\n\t<h2>${emp.firstName} ${emp.lastName} (${emp.address.country})</h2>\n\t<section class=\"body\">\n\t${emp.notes}\n\t</section>\n\t`;\n\t\t}).join('');\n\t})();\n\t------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-14 23:17:56","systemWhoCreated":"systemUnknown"},{"id":487,"category":"Jest","title":"How to use Jest with ES6 modules (import/export) instead of CommonJS modules (require)","body":"- these instructions show how to set up Jest to test a JavaScript function module, first with CommonJS modules (require) and then how to convert it to newer ES6 modules (import/export)\n- note the **ExperimentalWarning** that is issued: *\"VM Modules is an experimental feature. This feature could change at any time.\"*##jest2saveasimport\n- first install Jest using CommonJS modules (require)\n\t- create directory `jest001`\n\t- `npm init -y`\n\t- `npm i -D jest` \n\t- `npm i lodash` (is used in functions.js)\n\t- package.json: change to `\"test\": \"jest\"`\n\t- **functions.js**\n\t\t----------------------------------\n\t\tconst _ = require('lodash');\n\n\t\tconst isPlainObject = (potentialObject) => {\n\t\t\treturn typeof potentialObject === 'object' && !Array.isArray(potentialObject) && potentialObject !== null;\n\t\t};\n\n\t\tconst makePairs = (obj) => {\n\t\t\tif (obj === null) return [];\n\t\t\tif (Array.isArray(obj)) return [];\n\t\t\tconst answer = Object.entries(obj);\n\t\t\treturn answer;\n\t\t};\n\n\t\tconst without = (obj, prop) => {\n\t\t\tconst entries = Object.entries(obj);\n\t\t\tconst retObj = {};\n\t\t\tfor (const entry of entries) {\n\t\t\t\tconst key = entry[0];\n\t\t\t\tconst value = entry[1];\n\t\t\t\tif (key !== prop) {\n\t\t\t\t\tretObj[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retObj;\n\t\t};\n\n\t\tconst isEmpty = (obj) => {\n\t\t\treturn _.isEmpty(obj);\n\t\t};\n\n\t\tconst isEqualDeep = (obj1, obj2) => {\n\t\t\treturn _.isEqual(obj1, obj2);\n\t\t};\n\n\t\tmodule.exports = { isPlainObject, makePairs, without, isEmpty, isEqualDeep };\n\t\t----------------------------------\n\t- **functions.test.js**\n\t\t-------------------------------------\n\t\texpect(isPlainObject(undefined)).toBe(false);\n\t\t\texpect(isPlainObject(null)).toBe(false);\n\t\t});\n\n\t\ttest('makePairs() is correctly implemented', () => {\n\t\t\texpect(makePairs({ a: 1, b: 2 })).toStrictEqual([['a', 1], ['b', 2]]);\n\t\t\texpect(makePairs({ a: 1, ok: 2, name: 'Georg' })).toStrictEqual([['a', 1], ['ok', 2], ['name', 'Georg']]);\n\t\t\texpect(makePairs({})).toStrictEqual([]);\n\t\t\texpect(makePairs(null)).toStrictEqual([]);\n\t\t\texpect(makePairs([])).toStrictEqual([]);\n\t\t\texpect(makePairs([1, 2, 3])).toStrictEqual([]);\n\t\t\texpect(makePairs(false)).toStrictEqual([]);\n\t\t\texpect(makePairs(true)).toStrictEqual([]);\n\t\t});\n\n\t\ttest('without() is correctly implemented', () => {\n\t\t\texpect(without({ a: 1, b: 2 }, 'b')).toStrictEqual({ a: 1 });\n\t\t\texpect(without({ a: 1, b: 2 }, 'a')).toStrictEqual({ b: 2 });\n\t\t\texpect(without({ a: 1, b: 2 }, 'c')).toStrictEqual({ a: 1, b: 2 });\n\t\t});\n\n\t\ttest('isEmpty() is correctly implemented', () => {\n\t\t\texpect(isEmpty({ a: 1, b: undefined })).toBe(false);\n\t\t\texpect(isEmpty({})).toBe(true);\n\t\t});\n\n\t\ttest('isEqualDeep() is correctly implemented', () => {\n\t\t\texpect(isEqualDeep({ a: 1, b: { c: 1 } }, { a: 1, b: { c: 1 } })).toBe(true);\n\t\t\texpect(isEqualDeep({ a: 1, b: { c: 1 } }, { a: 1, b: { c: 2 } })).toBe(false);\n\t\t});\n\t\t-------------------------------------\n\t- `npm test`\n- now upgrade it to ES6 modules (import/export)\n\t- in **package.json** change test command:\n\t\t- change to `\"test\": \"NODE_OPTIONS=--experimental-vm-modules jest\"`\n\t- in **functions.test.js** change first two lines from CommonJS to ES6 format:\n\t\t------------------------------------------------\n\t\timport { expect } from '@jest/globals';\n\t\timport { isPlainObject, makePairs, without, isEmpty, isEqualDeep } from './functions.js';\n\t\t------------------------------------------------\n\t- in **functions.js** \n\t\t- change lodash require to import: `import _ from 'lodash';`\n\t\t- remove last line with `module.exports...`\n\t\t- add `export` to the front of each `const` method\n- final code is here: https://github.com/edwardtanguay/jest-convert-commonjs-to-es6","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-17 19:17:14","systemWhoCreated":"systemUnknown"},{"id":489,"category":"bash","title":"Bash script that creates pictures of people who don't exist","body":"- this bash script will accesses the [thispersondoesnotexist.com](https://thispersondoesnotexist.com) website to download images of people who don't exist, useful if you need images of non-real people for demos, instructional material, etc.#gif#bashScriptCreatePeopleImages\n- based on [this code](https://gist.github.com/johnjreiser/b4e46c06dfb28e3034c3f78c819b4c3f)\n- read about [Generative adversarial network](https://en.wikipedia.org/wiki/Generative_adversarial_network), a set of machine learning algorithms that generate new photographs that look at least superficially authentic to human observers\n- **getpics.sh**\n\t------------------------------------------------------\n\t#!/bin/bash\n\n\tMAX=10\n\tif [[ ! -z \"$1\" ]]; then\n\t\t\tMAX=$1\n\tfi\n\n\tfor i in $(seq -f \"%03g\" 1 $MAX); do\n\t\tFILE=person${i}.jpg\n\t\tcurl 'https://thispersondoesnotexist.com/image' -H 'authority: thispersondoesnotexist.com' -H 'pragma: no-cache' -H 'cache-control: no-cache' -H 'upgrade-insecure-requests: 1' -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36' -H 'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3' -H 'referer: https://thispersondoesnotexist.com/' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: en-US,en;q=0.9' --compressed -o $FILE\n\t\tsleep 1\n\tdone\n\t------------------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-18 18:08:34","systemWhoCreated":"systemUnknown"},{"id":490,"category":"JavaScript Classes","title":"How to attach JavaScript class methods as event handlers","body":"- full code here: https://github.com/edwardtanguay/javascript-classes-methods-eventhandlers\n- this example demonstrates how to create class methods that can be used as event handlers, e.g. for vanilla JavaScript sites#gif#javascriptClassModulesEventHandlers\n- the main change you have to make is below in **line 14**: convert any method you want to attach as an event handler into arrow function notation:##theclassExampleforevents\n- **StatusBox.js**\n\t---------------------------------------------\n\texport class StatusBox {\n\t\tconstructor(parentElem, status = 'offline') {\n\t\t\tthis.parentElem = parentElem;\n\t\t\tthis.status = status;\n\n\t\t\tthis.parentElem.innerHTML += this.getHtml();\n\n\t\t\tthis.buttonElem = this.parentElem.querySelector('button');\n\t\t\tthis.statusElem = this.parentElem.querySelector('span.status');\n\n\t\t\tthis.buttonElem.addEventListener('click', this.toggle);\n\t\t}\n\n\t\ttoggle = () => {\n\t\t\tthis.status = this.status === 'online' ? 'offline' : 'online';\n\t\t\tthis.statusElem.innerHTML = this.status;\n\t\t}\n\n\t\tgetHtml() {\n\t\t\treturn `\n\t<div class=\"infoBox\">\n\t\t<div class=\"title\">Status Box</div>\t\n\t\t<div class=\"body\">The status is: <span class=\"status\">${this.status}</span></div>\n\t\t<button>Toggle</button>\n\t</div>\n\t\t\t\t`;\n\t\t}\n\t}\n\t---------------------------------------------\n- **main.js**\n\t-------------------------------------------\n\timport { StatusBox } from './StatusBox.js';\n\n\tconst contentElem = document.querySelector('.content');\n\tconst statusBox = new StatusBox(contentElem);\n\t-------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-25 19:21:10","systemWhoCreated":"systemUnknown"},{"id":491,"category":"React","title":"Structuring and styling a React site with Higher-Order Components (HOCs) and styled-components","body":"- full code is here: https://github.com/edwardtanguay/react-two-components-share-functionality-hoc\n- **Higher-Order Components**\n\t- [Higher-order components](https://www.codingame.com/playgrounds/8595/reactjs-higher-order-components-tutorial) are *functions that take a component and return a new component. A higher-order component (HOC) is an advanced technique in React.js for reusing a component logic. Higher-Order Components are not part of the React API. They are the pattern that emerges from React's compositional nature. The component transforms props into UI, and a higher-order component converts a component into another component.*\n\t- this project demonstrates one implementation of Higher-Order Components#gif#higherOrderComponentsSiteExample\n\t- the two higher-order components are `src\\managers\\dataManager.js` and `src\\managers\\siteManager.js` and can be seen being used in **App.js**:\n\t\t----------------------------------------\n\t\timport _Nav from './components/Nav';\n\t\timport _PageHome from './pages/PageHome';\n\t\timport _PageEmployees from './pages/PageEmployees';\n\t\timport _PageCustomers from './pages/PageCustomers';\n\t\timport { dataManager } from './managers/dataManager';\n\t\timport { siteManager } from './managers/siteManager';\n\n\t\tconst Nav = siteManager(_Nav);\n\t\tconst PageHome = siteManager(dataManager(_PageHome));\n\t\tconst PageEmployees = siteManager(dataManager(_PageEmployees));\n\t\tconst PageCustomers = siteManager(dataManager(_PageCustomers));\n\t\t----------------------------------------\n\t\t- notice that higher-order components **wrap other components in order to produce similar components that are provided with functionality**\n\t\t\t- **SiteManager** provides a config and other Components\n\t\t\t- **DataManager** provides data\n\t\t\t\t- note that because DataManager provides the data, it also provides features related to data loading e.g. it provides every page with a loading spinner while the data for that page is loading\n- **InfoBox**\n\t- parameters: status, width, title\n\t- special parameter: `children`\n\t\t- note that the parameter `children` can be anywhere in the list of parameters\n- **styled-components**\n\t- *\"styled-components are CSS for JavaScript developers\"*\n\t- VSCode extension for syntax coloring and intellisense: vscode-styled-components##vscodestyledcomponentsext\n\t- disadvantages\n\t\t- in VSCode\n\t\t\t- you can't hover over colors to change them visually\n\t\t\t- reformat doesn't reformat styles\n\t- look at the styled-component in `Nav.js` for instance, the SiteMessage style has nothing to do with the rest of the application, only with the Nav component and so it is (a) better situated in the component where it is used, and (b) we can more easily make it dynamic with JavaScript, i.e. have it display a different color based on a JavaScript variable\n- **dataManager.js**\n\t- the DataManager was kept simply on purpose to give a basis implementation that can be expanded on\n\t\t- advantage: simplicity, i.e. all data for all pages is loaded in the DataManager so each page can use any data source (e.g. `employees`) or any data function (e.g. `getUkEmployees`)\n\t\t- disadvantage: possible inefficiency, i.e. *all* data for *every* page needs to be loaded for *each* page, so if a page needs quick-loading data, it still will have to wait for data to be loaded that will be used for other pages\n\t\t- possible extensions to address the above issues\n\t\t\t- build a cache in LocalStorage which is refetched e.g. every 10 min / 1 hour / 24 hours, etc. or when the uses clicks \"refetch data\"\n\t\t\t- use [useMemo](https://edwardtanguay.netlify.app/howtos?id=463)\n\t- note the employees are loaded from a local JSON file, while customers are loaded from an API\n\t- child components can get prepared data (e.g. `getLocalUK`) or the raw source data (e.g. `employees`)\n\t- you can determine the current component that is requesting data with `Component.name`:\n\t\t---------------------------------------\n\t\tif (Component.name === 'PageEmployees') {\n\t\t\treturn !dataLoaded ? <PageLoader/> : <Component {...props} ukEmployees={getUkEmployees()} usaEmployees={getUsaEmployees()} />\n\t\t}\n\t\tif (Component.name === 'PageCustomers') {\n\t\t\treturn !dataLoaded ? <PageLoader /> : <Component {...props} customers={customers} ukCustomers={getUkCustomers()} />\n\t\t}\n\t\t---------------------------------------\n\t- and if you base data loading on which component is requesting data, then you can load like this:\n\t\t---------------------------------------------\n\t\tuseEffect(() => {\n\t\t\tsetTimeout(async () => {\n\t\t\t\tif (Component.name === 'PageEmployees') {\n\t\t\t\t\tsetEmployees(employees);\n\t\t\t\t}\n\t\t\t\tif (Component.name === 'PageCustomers') {\n\t\t\t\t\tsetCustomers(await fetchCustomers());\n\t\t\t\t}\n\t\t\t\tsetDataLoaded(true);\n\t\t\t}, pageWaitingEmulationInSeconds * 1000);\n\t\t}, []);\n\t\t---------------------------------------------\n\t- note that data can be ameliorated/decorated/validated, i.e. new fields can be added, fields can be changed, prepared for easier presentation on the frontend\n\t\t-----------------------------\n\t\tuseEffect(() => {\n\t\t\temployees.map(m => m.fullName = `${m.firstName} ${m.lastName}`);\n\t\t\tsetEmployees([...employees]);\n\t\t}, [employees]);\n\t\t-----------------------------\n\t\t- if using TypeScript, this would be the place to make sure the data conformed to interfaces\n- **PageLoader.js**\n\t- this component is used to show a loading area until the current page has all its data to display\n\t- note that PageLoader uses `<Fade>` with `transitionDuration=\"10\"` which prevents the loading icon from animation motion into place\n\t\t- if you want the icon to cutely move into its position (looks a bit cartoony) then set transitionDuration to 400 (default)\n- **.env**\n\t- note that this file must have the variable `REACT_APP_SITEMODE = development`\n\t\t- other values are `testing` and `production`\n\t\t- when this site is on e.g. Netlify, there will be no `REACT_APP_SITEMODE` variable and therefore it will be `production` as default","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-27 07:39:09","systemWhoCreated":"systemUnknown"},{"id":492,"category":"JavaScript Classes","title":"Create a reusable JavaScript component as a class in a module that displays a clickable 5-star rating","body":"- the full code for this project can be found here: https://github.com/edwardtanguay/five-stars-rating-control\n- this project is a refactoring and further development of this earlier project: [Make five star control which can be clicked to change](https://edwardtanguay.netlify.app/howtos?id=462)#gif#classJavaScriptFiveStarsModuleGif\n\t- as in the original project, only HTML, CSS and JavaScript is used\n\t- the code was put into a class and loaded as a JavaScript module\n\t- the class was made to be fully self-contained component and so can be created as many times as necessary on the page each which contains its own state\n\t- the 16 components shown here are created in **main.js** with this code:\n\t\t----------------------------------------\n\t\timport { StarComponent } from './StarComponent.js';\n\n\t\tfor (let i = 1; i <= 16; i++) {\n\t\t\tStarComponent.instantiate(document, i);\n\t\t}\n\t\t----------------------------------------\n\t- each component saves its own state in **localStorage** so that on refreshing the page, all components retain their values##classStarComponentLoclstor\n- the **index.html** file is extremely simple since the components have to be completely created in JavaScript to maintain their isolated module nature\n\t---------------------------------------\n\t<body>\n\t\t<div class=\"content\"></div>\n\t</body>\n\t---------------------------------------\n- the StarComponent exists as a JavaScript class\n\t- note that two methods are static including `instantiate()` in order that the class can be created as a one-liner\n\t- note that since it serves as an event handler,  **the `setStars()` method has to be written in arrow function notation** so that the `this` variable refers to the class and not to the element on which the event is attached\n\t- **StarComponent.js**\n\t\t--------------------------\n\t\texport class StarComponent {\n\n\t\t\tconstructor(document, id, numberOfStars = 3) {\n\t\t\t\tthis.document = document;\n\t\t\t\tthis.id = id;\n\t\t\t\tthis.contentElem = this.document.querySelector('.content');\n\t\t\t\tthis.starControlElem = this.createDivWithClassNameAndAppend('starControl', this.contentElem);\n\t\t\t\tthis.starsElem = this.createDivWithClassNameAndAppend('stars', this.starControlElem);\n\t\t\t\tthis.numberElem = this.createDivWithClassNameAndAppend('number', this.starControlElem);\n\t\t\t\tthis.numberOfStars = numberOfStars;\n\t\t\t}\n\n\t\t\tcreateDivWithClassNameAndAppend(className, parentElem) {\n\t\t\t\tconst div = this.createDivWithClassName(className);\n\t\t\t\tparentElem.appendChild(div);\n\t\t\t\treturn div;\n\t\t\t}\n\n\t\t\tcreateDivWithClassName(className) {\n\t\t\t\tconst div = document.createElement('div');\n\t\t\t\tdiv.classList.add(className);\n\t\t\t\treturn div;\n\t\t\t}\n\n\t\t\tsetStars = (numberOfStars) => {\n\t\t\t\tthis.numberOfStars = numberOfStars;\n\t\t\t\tthis.createStars();\n\t\t\t\tlocalStorage.setItem(StarComponent.getComponentStateIdCode(this.id), this.numberOfStars);\n\t\t\t}\n\n\t\t\tcreateStars() {\n\t\t\t\tthis.starsElem.innerHTML = '';\n\t\t\t\tfor (let i = 1; i <= 5; i++) {\n\t\t\t\t\tconst starElem = document.createElement('i');\n\t\t\t\t\tif (i <= this.numberOfStars) {\n\t\t\t\t\t\tstarElem.classList.add('fa', 'fa-star');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstarElem.classList.add('fa', 'fa-star-o');\n\t\t\t\t\t}\n\t\t\t\t\tstarElem.addEventListener('click', () => this.setStars(i));\n\t\t\t\t\tthis.starsElem.appendChild(starElem);\n\t\t\t\t}\n\t\t\t\tthis.numberElem.innerText = this.numberOfStars;\n\t\t\t}\n\n\t\t\tstatic getComponentStateIdCode(id) {\n\t\t\t\treturn `numberOfStars-${id}`;\n\t\t\t}\n\n\t\t\tstatic instantiate(document, id) {\n\t\t\t\tconst cachedStars = Number(localStorage.getItem(StarComponent.getComponentStateIdCode(id)));\n\t\t\t\tconst numberOfStars = cachedStars === 0 ? 3 : cachedStars;\n\t\t\t\tconst starComponent = new StarComponent(document, id, numberOfStars);\n\t\t\t\tstarComponent.createStars();\n\t\t\t}\n\n\t\t}\n\t\t--------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-28 18:14:35","systemWhoCreated":"systemUnknown"},{"id":493,"category":"React","title":"Create function and class components to show the differences","body":"- full code here: https://github.com/edwardtanguay/react-class-and-function-components\n- the project has two components, one class, one function, which perform the same functionality#gif#classFunctionComponentsGifHowto\n- the point is to show how each approach accomplishes the same tasks, e.g. store and use state, handle button clicks, etc.\n- this could definitely be expanded to include how e.g. `componentDidMount`, `componentWillUnmount`, `getDerivedStateFromProps`, `getSnapshotBeforeUpdate`, `componentDidUpdate`, etc. are use in function components with e.g. `useEffect` etc.\n- **ShowInfo.js** (functional component)\n\t----------------------------------\n\timport { useState } from 'react';\n\n\texport const ShowInfo = ({ title, children }) => {\n\t\tconst [status, setStatus] = useState('notApproved');\n\n\t\tconst handleChangeStatus = () => {\n\t\t\tsetStatus(status === 'approved' ? 'notApproved' : 'approved'); \n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"infoBox\">\n\t\t\t\t<div className=\"title\">{title}</div>\n\t\t\t\t<p>This is the info from the function component.</p>\n\t\t\t\t<div className=\"status\"><button onClick={handleChangeStatus}>CHANGE STATUS</button> <span className={status}>{status === 'approved' ? 'Approved' : 'Not Approved'}</span></div>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t)\n\t}\n\t----------------------------------\n- **ShowInfoAsClass.js**\n\t------------------------------------\n\timport { Component } from 'react';\n\n\texport class ShowInfoAsClass extends Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tstatus: 'notApproved'\n\t\t\t};\n\t\t}\n\t\thandleChangeStatus = () => {\n\t\t\tthis.setState({status: this.state.status === 'approved' ? 'notApproved' : 'approved'});\n\t\t}\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"infoBox\">\n\t\t\t\t\t<div className=\"title\">{this.props.title}</div>\n\t\t\t\t\t<p>This is the info from the class component.</p>\n\t\t\t\t<div className=\"status\"><button onClick={this.handleChangeStatus}>CHANGE STATUS</button> <span className={this.state.status}>{this.state.status === 'approved' ? 'Approved' : 'Not Approved'}</span></div>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\t------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-28 21:25:20","systemWhoCreated":"systemUnknown"},{"id":494,"category":"React","title":"Single-item cart and grouped-item cart with React","body":"- full code is here: https://github.com/edwardtanguay/react-item-cart-grouped-item-cart\n- this is a proof-of-concept project for a shopping cart that groups the items so that not every individual product is shown, but rather items are grouped by kind with a total number next to each group#gif#gifPlantCartSingleAndGrouped\n- note that the single-point-of-truth is the single-item array in the cart variable (in **AppContext.js**)\n\t- the grouped-item array is always derived from the single-item array (in **AppContext.js** UseEffect)\n\t- if you were to save the state in localStorage, you would of course store the single-item array\n- **AppContext.js**\n\t---------------------------------------\n\timport { createContext, useState, useEffect } from 'react';\n\timport items from './data/items.json';\n\n\tconst AppContext = createContext();\n\n\tconst _cart = {\n\t\titems: []\n\t};\n\n\texport const AppProvider = ({ children }) => {\n\t\tconst [cart, setCart] = useState(_cart);\n\t\tconst [groupedItems, setGroupedItems] = useState([]);\n\n\t\tuseEffect(() => {\n\t\t\tconst obj = {};\n\t\t\tconst _groupedItems = [];\n\t\t\tcart.items.forEach(item => {\n\t\t\t\tif (!obj[item.id]) {\n\t\t\t\t\tobj[item.id] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tobj[item.id]++;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst ids = Object.keys(obj);\n\t\t\tids.forEach(id => {\n\t\t\t\tconst groupedItem = {};\n\t\t\t\tgroupedItem.id = id;\n\t\t\t\tgroupedItem.name = items.find(item => item.id === Number(id)).name;\n\t\t\t\tgroupedItem.image_small =\n\t\t\t\t\tgroupedItem.total = obj[id];\n\t\t\t\tgroupedItem.image_small = items.find(item => item.id === Number(id)).image_small;\n\t\t\t\t_groupedItems.push(groupedItem);\n\t\t\t});\n\t\t\tconsole.log(_groupedItems);\n\t\t\tsetGroupedItems([..._groupedItems]);\n\t\t}, [cart]);\n\n\t\tconst addToCart = (item) => {\n\t\t\tcart.items.push(item);\n\t\t\tsetCart({ ...cart });\n\t\t}\n\n\t\treturn (\n\t\t\t<AppContext.Provider value={{\n\t\t\t\tcart,\n\t\t\t\taddToCart,\n\t\t\t\tgroupedItems\n\t\t\t}} >\n\t\t\t\t{children}\n\t\t\t</AppContext.Provider>\n\t\t);\n\t};\n\n\texport default AppContext;\n\t---------------------------------------\n- **PageItemCart.js**\n\t--------------------------------------\n\timport { useContext } from 'react';\n\timport AppContext from '../AppContext';\n\n\tconst PageItemCart = ({ items, getImagePathAndFileName }) => {\n\t\tconst { addToCart, cart } = useContext(AppContext);\n\n\t\treturn (\n\t\t\t<div className=\"page pageItemCart\">\n\t\t\t\t<fieldset className=\"store\">\n\t\t\t\t\t<legend>Store</legend>\n\t\t\t\t\t{items.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={i} className=\"item\">\n\t\t\t\t\t\t\t\t<img onClick={() => addToCart(item)} src={getImagePathAndFileName(item.image_small)} alt=\"\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</fieldset>\n\t\t\t\t<fieldset className=\"cart\">\n\t\t\t\t\t<legend>Item Cart</legend>\n\t\t\t\t\t{cart.items.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"itemCartItem\" key={i}>\n\t\t\t\t\t\t\t\t<img onClick={() => addToCart(item)} src={getImagePathAndFileName(item.image_small)} alt=\"\" />\n\t\t\t\t\t\t\t\t<div>{item.name}</div>\n\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t})}\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t)\n\t}\n\texport default PageItemCart;\n\t--------------------------------------\n- **PageGroupedItemCart.js**\n\t---------------------------------------------\n\timport { useContext } from 'react';\n\timport AppContext from '../AppContext';\n\n\tconst PageGroupedItemCart = ({ getImagePathAndFileName }) => {\n\t\tconst { groupedItems } = useContext(AppContext);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<fieldset className=\"cart\">\n\t\t\t\t\t<legend>Grouped Item Cart</legend>\n\t\t\t\t\t{groupedItems.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"itemCartItem\" key={i}>\n\t\t\t\t\t\t\t\t<img src={getImagePathAndFileName(item.image_small)} alt=\"\" />\n\t\t\t\t\t\t\t\t<div>{item.name} ({item.total}x)</div>\n\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t})}\n\t\t\t\t</fieldset>\n\t\t\t</>\n\t\t)\n\t}\n\texport default PageGroupedItemCart;\n\t---------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-01-29 19:13:24","systemWhoCreated":"systemUnknown"},{"id":496,"category":"React","title":"Create pages that display items with instant search that updates the url state","body":"- full code for this project can be found here: https://github.com/edwardtanguay/react-items-page-search-and-display\n- each page shows a list of items which can be easily searched, viewed and bookmarked#gif#gifItemSearchPageProject\n\tThis site demonstrates how to display multiple items on a page with search feature and a click-to-see-more-details feature.\n\tNote that the URL and the tab title change appropriately.\n\tNote also that there are examples of two data sources: a local JSON file and APIs.\n- **Page: Employees**\n\t- loads from JSON file\n\t- variables are named specifically, i.e. with the word employee instead of item\n\t- all functions are self-contained on the page\n- **Page: Customers**\n\t- loads from API\n\t- variables are named generically with the word item\n\t- functionality for this page is imported from itemPageManager and shared with the products page\n- **Page: Products**\n\t- loads from API\n\t- variables are named generically with the word item\n\t- functionality for this page is imported from itemPageManager and shared with the customers page\n- note that hooks cannot be put into HOCs, e.g.:\n\t-------------------------------------\n\tconst isSmartphone = useMediaQuery({\n\t\tquery: '(max-width: 577px)'\n\t});\n\t-------------------------------------\n\t- if you try to put it in an HOC, you get this error:##thehookhocerror\n- note that for each customer item, there is a corresponding realistic photo created from [thispersondoesnotexist.com](https://thispersondoesnotexist.com) which makes these useful to use for realistic-looking demo sites, the name of the photo is the `customerID` and can be easily mapped","points":20,"extras":"","systemWhenCreated":"2022-01-31 08:42:30","systemWhoCreated":"systemUnknown"},{"id":498,"category":"React","title":"How to pass and change state variables via props","body":"- get the full code here: [edwardtanguay/react-maintain-state-variables-via-props](https://github.com/edwardtanguay/react-maintain-state-variables-via-props)\n\t- note that I refactored ShowPassenger so that it only has one change handler (`handleChangeField`) which differs from the code listed below\n- this project shows how to a state variable (here: an array of passenger object) down multiple levels of components, via props, allowing the components to chance the original state variable in the highest component:#gif#gifReactPassStateViaProps\n- note you have to spread the empty passenger objects, otherwise you create an array with two object variables that have a pointer to the same object\n\t------------------------------------------\n\tconst _passengers = [{ ..._emptyPassenger }, { ..._emptyPassenger }];\n\t------------------------------------------\n- note that the operating strategy is send the hangleChange methods down to the children so that they can change their parent's state variables:\n\t----------------------------------------\n\t<ShowPassenger key={index} passenger={passenger} handlePassengerChange={handlePassengerChange} handlePassengerAdd={handlePassengerAdd} handlePassengerDelete={handlePassengerDelete} canDelete={passengers.length >= 2} />\n\t----------------------------------------\n- **App.js**\n\t------------------------------------------------\n\timport { useEffect, useState } from 'react';\n\timport { ShowPassenger } from './components/ShowPassenger';\n\timport './App.scss';\n\n\tconst _emptyPassenger = {\n\t\tid: 0,\n\t\tgenericTitle: '',\n\t\tname: '',\n\t\tairport: 'Berlin',\n\t\tstart: '',\n\t\tend: ''\n\t};\n\n\tconst fillDataIntoPassengers = (passengers) => {\n\t\tpassengers.forEach((passenger, index) => {\n\t\t\tpassenger.id = index;\n\t\t\tpassenger.genericTitle = `Passenger #${index + 1}`;\n\t\t});\n\t\treturn passengers;\n\t}\n\n\tfunction App() {\n\t\tconst [passengers, setPassengers] = useState([]);\n\n\t\tuseEffect(() => {\n\t\t\tconst _passengers = [{ ..._emptyPassenger }, { ..._emptyPassenger }];\n\t\t\tsetPassengers([...fillDataIntoPassengers(_passengers)]);\n\t\t}, []);\n\n\t\tconst handlePassengerChange = (passenger) => {\n\t\t\tpassengers[passenger.index] = passenger;\n\t\t\tsetPassengers([...passengers]);\n\t\t};\n\n\t\tconst handlePassengerAdd = () => {\n\t\t\tconst _passengers = [...passengers, { ..._emptyPassenger }];\n\t\t\tfillDataIntoPassengers(_passengers);\n\t\t\tsetPassengers([..._passengers]);\n\t\t};\n\n\t\tconst handlePassengerDelete = (index) => {\n\t\t\tconst _passengers = [...passengers];\n\t\t\t_passengers.splice(index, 1);\n\t\t\tfillDataIntoPassengers(_passengers);\n\t\t\tsetPassengers([..._passengers]);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>{passengers.length} Passengers:</h1>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"passengers\">\n\t\t\t\t\t\t{passengers.map((passenger, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ShowPassenger key={index} passenger={passenger} handlePassengerChange={handlePassengerChange} handlePassengerAdd={handlePassengerAdd} handlePassengerDelete={handlePassengerDelete} canDelete={passengers.length >= 2} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t{JSON.stringify(passengers, null, 2)}\n\t\t\t\t\t</pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t------------------------------------------------\n- **ShowPassenger.js**\n\t----------------------------------------------------\n\timport { FormControlText } from './FormControlText';\n\timport { FormControlAirport } from './FormControlAirport';\n\timport { FormControlDate } from './FormControlDate';\n\timport { RiDeleteBin6Line } from 'react-icons/ri';\n\timport { BsPlusLg } from 'react-icons/bs';\n\n\texport const ShowPassenger = ({ passenger, handlePassengerChange, handlePassengerAdd, handlePassengerDelete, canDelete }) => {\n\n\t\tconst handleChangeName = (name) => {\n\t\t\tpassenger.name = name;\n\t\t\thandlePassengerChange(passenger);\n\t\t}\n\n\t\tconst handleChangeAirport = (airport) => {\n\t\t\tpassenger.airport = airport;\n\t\t\thandlePassengerChange(passenger);\n\t\t};\n\n\t\tconst handleChangeStart = (start) => {\n\t\t\tpassenger.start = start;\n\t\t\thandlePassengerChange(passenger);\n\t\t}\n\n\t\tconst handleChangeEnd = (end) => {\n\t\t\tpassenger.end = end;\n\t\t\thandlePassengerChange(passenger);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"control_showPassenger\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<h2>{passenger.genericTitle}</h2>\n\t\t\t\t\t{!canDelete && (\n\t\t\t\t\t\t<RiDeleteBin6Line className='iconDisabled' />\n\t\t\t\t\t)}\n\t\t\t\t\t{canDelete && (\n\t\t\t\t\t\t<RiDeleteBin6Line className='icon' onClick={() => handlePassengerDelete(passenger.id)} />\n\t\t\t\t\t)}\n\t\t\t\t\t<BsPlusLg className=\"icon\" onClick={handlePassengerAdd} />\n\t\t\t\t</div>\n\t\t\t\t<FormControlText label=\"Name\" text={passenger.name} handleChangeText={handleChangeName} />\n\t\t\t\t<FormControlAirport label=\"From\" airport={passenger.airport} handleChangeAirport={handleChangeAirport} />\n\t\t\t\t<FormControlDate label=\"Start\" date={passenger.start} handleChangeDate={handleChangeStart} />\n\t\t\t\t<FormControlDate label=\"End\" date={passenger.end} handleChangeDate={handleChangeEnd} />\n\t\t\t</div>\n\t\t)\n\t}\n\t----------------------------------------------------\n- **FormControlAirport.js**\n\t-------------------------------------------\n\tconst airports = ['Berlin', 'Hamburg', 'Munich', 'Hannover', 'Düsseldorf'];\n\n\texport const FormControlAirport = ({ label, airport, handleChangeAirport }) => {\n\n\t\treturn (\n\t\t\t<div className=\"control_airport\">\n\t\t\t\t<label>{label}</label>\n\t\t\t\t<select value={airport} onChange={(e) => handleChangeAirport(e.target.value)}>\n\t\t\t\t\t{airports.map((_airport, index) => (\n\t\t\t\t\t\t<option key={index} value={_airport}>\n\t\t\t\t\t\t\t{_airport}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t)\n\t}\n\t-------------------------------------------\n- **FormControlText.js**\n\t-------------------------------------------\n\texport const FormControlText = ({ label, text, handleChangeText }) => {\n\t\treturn (\n\t\t\t<div className=\"control_text\">\n\t\t\t\t<label>{label}</label>\n\t\t\t\t<input type=\"text\" value={text} onChange={(e) => handleChangeText(e.target.value)} />\n\t\t\t</div>\n\t\t)\n\t}\n\t-------------------------------------------\n- **FormControlDate.js**\n\t---------------------------------------------\n\texport const FormControlDate = ({ label, date, handleChangeDate }) => {\n\t\treturn (\n\t\t\t<div className=\"control_text\">\n\t\t\t\t<label>{label}</label>\n\t\t\t\t<input type=\"date\" value={date} onChange={(e) => handleChangeDate(e.target.value)} />\n\t\t\t</div>\n\t\t)\n\t}\n\t---------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-03 03:05:19","systemWhoCreated":"systemUnknown"},{"id":499,"category":"React","title":"Use DOM manipulation in a React site with UseRef","body":"- full code is here: [edwardtanguay/react-dom-connection](https://github.com/edwardtanguay/react-dom-connection.git)\n- this example shows how you can use useRef to create a JavaScript variable such as `containerElem` which is acts as a DOM element as in JavaScript/DOM programming\n- this is useful if you have e.g. legacy JavaScript/DOM code that needs to run in a React app\n- this examples shows that you can create a DOM element, change the style, add a class and an event listener to it:#gif#gifShowConnectionDomReact2\n- **App.js**\n\t------------------------------------\n\timport { useRef, useEffect } from 'react';\n\timport './App.scss';\n\n\tfunction App() {\n\n\t\tconst pianoElem = useRef(null);\n\t\tconst contents = useRef(null);\n\n\t\t// class JavaScript function\n\t\tconst showIt = () => {\n\t\t\tif (contents.current.innerHTML === '') {\n\t\t\t\tcontents.current.innerHTML = 'succeeded';\n\t\t\t} else {\n\t\t\t\tcontents.current.innerHTML = '';\n\t\t\t}\n\t\t}\n\n\t\tuseEffect(() => {\n\n\t\t\t// make classic DOM element\n\t\t\tconst para = document.createElement(\"p\");\n\t\t\tpara.innerText = \"click this text\";\n\t\t\tpara.classList.add('clickText');\n\n\t\t\t// attach DOM element to page \n\t\t\tpianoElem.current.appendChild(para);\n\n\t\t\t// manipulate DOM element\n\t\t\tpianoElem.current.style.color = 'red';\n\n\t\t\t// attach even to DOM element\n\t\t\tpianoElem.current.addEventListener(\"click\", showIt)\n\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Testing DOM to Vanilla JavaScript</h1>\n\t\t\t\t<div ref={pianoElem}></div>\n\t\t\t\t<div ref={contents}></div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-03 22:48:31","systemWhoCreated":"systemUnknown"},{"id":500,"category":"Sass","title":"How to convert .css files to .scss (Sass) files on the fly in VSCode","body":"- the easiest way to use Sass in a JavaScript/DOM project is as follows:\n- install the Live Sass Compiler extension##thelivesassss\n- note if the above extension doesn't work or causes problems, particularly on Ubuntu, there is another extension by Glenn Marks that may work:##noteIfNotWorkGlenn\n- create a Sass file in e.g. `css/main.scss`\n- you will then see a **Watch** button on the bottom status bar of VSCode:##seesasswatch\n- if you don't see this message, you might want to expend your VSCode to full screen or more to make sure there is room for it to be displayed on the bottom status bar\n- click it and all your **.css** files will be automatically converted into **.scss** files\n- in your `index.hmtl` file link to the .css file as always:##maincssasnormal","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-04 14:40:34","systemWhoCreated":"systemUnknown"},{"id":501,"category":"React","title":"How to capture and respond to key press on a React site","body":"- code is here: [edwardtanguay/react-keypress-event](https://github.com/edwardtanguay/react-keypress-event)\n- notice you can begin typing immediately after page load#gif#reactSiteTypeImmediate2\n- notice also that there is now margin problem (scroll bars don't show)\n- **App.js**\n\t-------------------------------------\n\timport { useState, useRef, useEffect } from 'react';\n\timport './App.scss';\n\n\tfunction App() {\n\t\tconst [text, setText] = useState('start typing');\n\t\tconst appElem = useRef(null);\n\n\t\tuseEffect(() => {\n\t\t\tappElem.current.focus();\n\t\t}, []);\n\n\t\tconst handleKeyPress = (e) => {\n\t\t\tsetText(e.key);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\" ref={appElem} onKeyPress={(e) => handleKeyPress(e)} tabIndex=\"0\">\n\t\t\t\t<p className=\"showText\">{text}</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t-------------------------------------\n- **App.scss**\n\t----------------------------\n\tbody {\n\t\tbackground: #333;\n\t\tcolor: #ccc;\n\t\tfont-size: 1.7rem;\n\t}\n\t.App {\n\t\tpadding: 50px;\n\t\tbox-sizing: border-box;\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\tfont-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\n\t\t.showText {\n\t\t\tfont-size: 9rem;\n\t\t}\n\t}\n\t----------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-09 17:36:28","systemWhoCreated":"systemUnknown"},{"id":502,"category":"JavaScript","title":"How to use recursion to find similar flights","body":"- get full code here: [edwardtanguay/test-recursion-flights](https://github.com/edwardtanguay/test-recursion-flights)\n- the task that this solution solves is: given an array of arrays of passenger flights to specific airports, **find all airports which every passenger flies to**\n- note that recursion is used, i.e. the function `compareFlights` is initially called which starts comparing arrays to arrays and if a match#gif#testRecursionFlights\n- **index.js** \n\t---------------------------------------\n\tconst flightCollections = [\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"berlin\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"london\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"paris\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"london\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"bordeux\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"paris\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"london\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"munich\"\n\t\t\t}\n\t\t]\n\t];\n\n\tconst commonDestinations = [];\n\n\tconst compareFlights = (currentIndex, currentAirport = null) => {\n\t\tconst flights1 = flightCollections[currentIndex];\n\t\tconst flights2 = flightCollections[currentIndex + 1];\n\t\tconst atEnd = flightCollections.length - currentIndex === 2;\n\n\t\tconst airportsAreTheSame = (currentAirport, flight1, flight2) => {\n\t\t\treturn (currentAirport === null || flight1.airport === currentAirport) && flight1.airport === flight2.airport;\n\t\t};\n\n\t\tif (!atEnd) {\n\t\t\tflights1.forEach((flight1) => {\n\t\t\t\tflights2.forEach(flight2 => {\n\t\t\t\t\tif (airportsAreTheSame(currentAirport, flight1, flight2)) {\n\t\t\t\t\t\tcompareFlights(currentIndex + 1, flight1.airport);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tflights1.forEach((flight1) => {\n\t\t\t\tflights2.forEach(flight2 => {\n\t\t\t\t\tif (airportsAreTheSame(currentAirport, flight1, flight2)) {\n\t\t\t\t\t\tcommonDestinations.push({ airport: flight1.airport });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tcompareFlights(0);\n\tconsole.log(commonDestinations);\n\t---------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-10 11:47:24","systemWhoCreated":"systemUnknown"},{"id":503,"category":"React","title":"React site with Audio element and JavaScript classes that interact with React function components","body":"- full code here: [edwardtanguay/test-react-class-component](https://github.com/edwardtanguay/test-react-class-component)\n- this example shows (1) how to play standard piano notes with AudioContext, as well as (2) how to allow JavaScript classes to interact with React functional components\n- note that Piano.js (React function compenent) imports both AudioManager (JavaScript class) and RecordingManager (React function manager). AudioManager is responsible for playing music, and RecordingManager for recording it. RecordingManager accepts AudioManager as a prop, while AudioManager then accepts an inject function from RecordingManager as a parameter.#gif#audioComponentsClasses\n- **Piano.js** (React function component)\n\t---------------------------------------\n\timport { AudioManager } from \"../classes/AudioManager\";\n\timport { RecordingManager } from \"../components/RecordingManager\";\n\timport { getNoteFromNoteName } from \"../utils/channelKeyMap\";\n\n\tconst audioManager = new AudioManager();\n\n\texport const Piano = () => {\n\n\t\tconst handlePianoKeyPress = (noteName) => {\n\t\t\tconst note = getNoteFromNoteName(noteName);\n\t\t\taudioManager.noteOn(note, 35);\n\t\t\taudioManager.noteOffWithKeyPress(note);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"component_piano\">\n\t\t\t\t<div className=\"piano\">\n\t\t\t\t\t{['C5', 'D5', 'E5', 'F5', 'G5', 'A5', 'B5', 'C6'].map((letter, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button key={i} className=\"whiteKey\" onClick={() => handlePianoKeyPress(letter)}>{letter.substring(1,0)}</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<RecordingManager audioManager={audioManager} />\n\t\t\t</div>\n\t\t)\n\t}\n\t---------------------------------------\n- **AudioManager.js** (JavaScript class)\n\t----------------------------\n\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\n\texport class AudioManager {\n\n\t\tconstructor() {\n\t\t\tthis.ctx = new AudioContext();\n\t\t\tthis.recordNote = null;\n\t\t\tthis.oscillators = {};\n\t\t}\n\n\t\tinjectRecordNote(recordNote) {\n\t\t\tthis.recordNote = recordNote;\n\t\t}\n\n\t\tmidiToFrequency(number) {\n\t\t\tconst a = 440;\n\t\t\treturn (a / 32) * 2 ** ((number - 9) / 12);\n\t\t}\n\n\t\tnoteOn(note, velocity) {\n\t\t\tconst oscGain = this.ctx.createGain();\n\t\t\toscGain.gain.value = 0.33;\n\t\t\tconst velocityGainAmount = (1 / 127) * velocity;\n\t\t\tconst velocityGain = this.ctx.createGain();\n\n\t\t\tconst osc = this.ctx.createOscillator();\n\t\t\tosc.type = 'sine';\n\t\t\tosc.frequency.value = this.midiToFrequency(note);\n\t\t\tvelocityGain.gain.value = velocityGainAmount;\n\n\t\t\tosc.connect(oscGain);\n\t\t\tosc.connect(velocityGain);\n\t\t\tvelocityGain.connect(this.ctx.destination);\n\n\t\t\tosc.gain = oscGain;\n\n\t\t\tconsole.log(osc.frequency.value);\n\t\t\tthis.oscillators[note.toString()] = osc;\n\t\t\tosc.start();\n\t\t\tthis.recordNote(note);\n\t\t}\n\n\t\tnoteOffWithKeyPress(note) {\n\t\t\tconst osc = this.oscillators[note.toString()];\n\t\t\tsetTimeout(() => {\n\t\t\t\tosc.stop();\n\t\t\t\tosc.disconnect();\n\t\t\t}, 200);\n\n\t\t\tdelete this.oscillators[note.toString()];\n\t\t}\n\t}\n\t----------------------------\n- **RecordingManager.js** (React functional component) \n\t----------------------------------------\n\timport { useState } from 'react';\n\timport { RiRecordCircleFill } from 'react-icons/ri';\n\n\texport const RecordingManager = ({ audioManager }) => {\n\t\tconst [isRecording, setIsRecording] = useState(false);\n\t\tconst [recordingArray, setRecordingArray] = useState([]);\n\n\t\tconst handleRecordButton = () => {\n\t\t\tsetIsRecording(!isRecording);\n\t\t}\n\n\t\tconst recordNote = (note) => {\n\t\t\tif (isRecording) {\n\t\t\t\trecordingArray.push(note);\n\t\t\t\tsetRecordingArray([...recordingArray]);\n\t\t\t}\n\t\t}\n\n\t\taudioManager.injectRecordNote(recordNote);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<button className={`recordButton${isRecording ? ' recording' : ''}`} onClick={handleRecordButton}><RiRecordCircleFill className=\"icon\" /><span>Record</span></button>\n\t\t\t\t<div className=\"recordedNotes\">\n\t\t\t\t\t{recordingArray.map((note) => note).join(', ')}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\t----------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-11 02:13:49","systemWhoCreated":"systemUnknown"},{"id":504,"category":"React","title":"Create a reusable todolist component in React that uses localStorage","body":"- full code here: [edwardtanguay/todolist-react-multiple-components](https://github.com/edwardtanguay/todolist-react-multiple-components)\n- use app live here: [https://todolist-react-multiple-components.netlify.app](https://todolist-react-multiple-components.netlify.app)\n- this sample app shows a number of concepts: (1) how to create components that are 100% separate from each other, you can create as many todolist components as you want, (2) how to use `useRef` to programmatically set focus in a field, (3) how to use `localStorage` to save todo-list data in the user's browser, and (4) how to use radio buttons in React#gif#reactMultipleComponentsTodolist\n- note that you send an idCode (e.g. `person001`) as a prop to each instance of the component\n\t- the component uses this idCode to keep e.g. the radio buttons and localStorage separate from the other components\n- **App.js**\n\t------------------------------\n\timport './App.scss';\n\timport { TodoList } from './components/TodoList';\n\n\tconst persons = ['person001','person002','person003','person004'];\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{persons.map(m => <TodoList idCode={m} key={m}/>)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t------------------------------\n- **TodoList.js**\n\t----------------------------------------\n\timport { useState, useRef, useEffect } from 'react';\n\n\texport const TodoList = ({ idCode }) => {\n\t\tconst [area, setArea] = useState('home');\n\t\tconst [todo, setTodo] = useState('');\n\t\tconst [todoList, setTodoList] = useState([]);\n\t\tconst todoInputBox = useRef(null);\n\n\t\tconst addPrefix = (text) => {\n\t\t\treturn `${idCode}-${text}`;\n\t\t}\n\n\t\tuseEffect(() => {\n\t\t\tconst _todoList = JSON.parse(localStorage.getItem(addPrefix('todoList')));\n\t\t\t_todoList !== null && setTodoList([..._todoList]);\n\t\t\tidCode === 'person001' && todoInputBox.current.focus();\n\t\t}, []);\n\n\t\tconst saveToLocalStorage = (_todoList) => {\n\t\t\tlocalStorage.setItem(addPrefix('todoList'), JSON.stringify(_todoList));\n\t\t}\n\n\t\tconst handleClearButton = (e) => {\n\t\t\te.preventDefault();\n\t\t\tsaveToLocalStorage([]);\n\t\t\tsetTodoList([]);\n\t\t\ttodoInputBox.current.focus();\n\t\t}\n\n\t\tconst handleAddTodoButton = (e) => {\n\t\t\te.preventDefault();\n\t\t\tif (todo.trim() !== '') {\n\t\t\t\ttodoList.push(`${todo} (${area})`);\n\t\t\t\tsaveToLocalStorage(todoList);\n\t\t\t\tsetTodo('');\n\t\t\t}\n\t\t\ttodoInputBox.current.focus();\n\t\t}\n\n\t\tconst handleAreaChange = (e) => {\n\t\t\tsetArea(e.target.value);\n\t\t\ttodoInputBox.current.focus();\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"todoListComponent\">\n\t\t\t\t<form>\n\t\t\t\t\t<input id={addPrefix('home')} type=\"radio\" name=\"area\" value=\"home\" checked={area === \"home\"} onChange={(e) => handleAreaChange(e)} />\n\t\t\t\t\t<label htmlFor={addPrefix('home')}>Home</label>\n\n\t\t\t\t\t<input id={addPrefix('work')} type=\"radio\" name=\"area\" value=\"work\" checked={area === \"work\"} onChange={(e) => handleAreaChange(e)} />\n\t\t\t\t\t<label htmlFor={addPrefix('work')}>Work</label>\n\n\t\t\t\t\t<span>{idCode}</span>\n\n\t\t\t\t\t<button className=\"clearButton\" onClick={(e) => handleClearButton(e)}>Clear</button>\n\n\t\t\t\t\t<div className=\"inputArea\">\n\t\t\t\t\t\t<input type=\"text\" ref={todoInputBox} value={todo} onChange={(e) => setTodo(e.target.value)} />\n\t\t\t\t\t\t<button onClick={(e) => handleAddTodoButton(e)}>Add Todo</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"todoList\">\n\t\t\t\t\t{todoList.map((m, i) => <div key={i}>{m}</div>)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t};\n\t----------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-12 00:36:35","systemWhoCreated":"systemUnknown"},{"id":505,"category":"Promises","title":"JavaScript try/catch, Promise consumed by .then(), Promise consumed by async/await","body":"- code is here: [edwardtanguay/promises-async-await](https://github.com/edwardtanguay/promises-async-await)\n- these examples show the evolution of asynchronous data fetching and error handling in JavaScript#gif#asyncawaittrycatch\n- **trycatch.js**\n\t------------------------------------\n\tconst getId = () => {\n\t\tconst id = Math.floor(Math.random() * 3); // 0, 1, 2\n\t\tif (id === 0) {\n\t\t\tthrow new Error('id not found');\n\t\t} else {\n\t\t\treturn id;\n\t\t}\n\t}\n\n\ttry {\n\t\tconst id = getId();\n\t\tconsole.log(id);\n\t}\n\tcatch (err) {\n\t\tconsole.log(err.message);\n\t}\n\t------------------------------------\n- **callback.js**\n\t-----------------------------------\n\tconst getId = (callback) => {\n\t\tsetTimeout(() => {\n\t\t\tconst id = Math.floor(Math.random() * 3); // 0, 1, 2\n\t\t\tif (id === 0) {\n\t\t\t\tthrow new Error(\"id not found\");\n\t\t\t} else {\n\t\t\t\tcallback(id);\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\tconst app = () => {\n\t\tconsole.log('getting id...');\n\t\ttry {\n\t\t\tgetId(id => {\n\t\t\t\tconsole.log(`ID is ${id}`);\n\t\t\t});\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.log(`ERROR: ${err.message}`);\n\t\t\t/*\n\t\t\t\"As far as I know, it is not possible to catch exceptions thrown in JavaScript callbacks (at least, not in any straightforward manner).\" \n\t\t\t\"If you can use Promises and async/await, it can be solved.\"\n\t\t\thttps://stackoverflow.com/questions/3677783/is-it-possible-to-catch-exceptions-thrown-in-a-javascript-async-callback\n\t\t*/\n\t\t}\n\t};\n\tapp();\n\t-----------------------------------\n- **promises.js**\n\t----------------------------------------\n\tconst getId = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst id = Math.floor(Math.random() * 3);\n\t\t\t\tid === 0 ? reject('id not found') : resolve(id);\n\t\t\t}, 1000);\n\t\t});\n\t};\n\n\tconst getEmployee = (id) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tswitch (id) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tname: \"Sancho Rodrigez\"\n\t\t\t\t\t\t});\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tname: \"Wolfram Randomlich\"\n\t\t\t\t\t\t});\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treject(`employee not found with id ${id}`);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t})\n\t}\n\n\t// call with .then\n\tconst app1 = () => {\n\t\tconsole.log('getting id...');\n\t\tgetId()\n\t\t\t.then(id => {\n\t\t\t\tconsole.log(`The id is: ${id}`);\n\t\t\t\tconsole.log('getting employee...');\n\t\t\t\tgetEmployee(id)\n\t\t\t\t\t.then(employee => {\n\t\t\t\t\t\tconsole.log(`Employee is: ${employee.name}`);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.log(`ERROR: ${error}`);\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(`ERROR: ${error}`);\n\t\t\t})\n\t};\n\tapp1();\n\n\t// call with async/await\n\tconst app2 = async () => {\n\t\tconsole.log('getting id...');\n\t\ttry {\n\t\t\tconst id = await getId();\n\t\t\tconsole.log(`ID is: ${id}`);\n\t\t\tconsole.log('getting employee...');\n\t\t\ttry {\n\t\t\t\tconst employee = await getEmployee(id);\n\t\t\t\tconsole.log(`Employee is: ${employee.name}`);\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tconsole.log(`ERROR: ${error}`);\n\t\t\t}\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.log(`ERROR: ${error}`);\n\t\t}\n\t}\n\t// app2();\n\t----------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-18 08:03:52","systemWhoCreated":"systemUnknown"},{"id":506,"category":"React","title":"Examples of consuming APIs with fetch and axios","body":"- full code at: [edwardtanguay/examples-of-fetch-and-axios](https://github.com/edwardtanguay/examples-of-fetch-and-axios)\n- data in this example is fetched from the [Northwind database JSON files](https://github.com/graphql-compose/graphql-compose-examples/tree/master/examples/northwind/data/json)\n- this code shows how to load data from APIs using both the standard `fetch()` as well as the library `axios()`##axiosandfetchok\n- **App.js**\n\t------------------------------------\n\timport { useState, useEffect } from 'react';\n\timport axios from 'axios';\n\timport './App.scss';\n\n\tconst employeesUrl = 'https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/employees.json';\n\tconst customersUrl = 'https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/customers.json';\n\n\tfunction App() {\n\t\tconst [employees, setEmployees] = useState([]);\n\t\tconst [customers, setCustomers] = useState([]);\n\n\t\tuseEffect(() => {\n\t\t\t(async () => {\n\t\t\t\tconst response = await fetch(employeesUrl);\n\t\t\t\tconst _employees = await response.json();\n\t\t\t\tsetEmployees([..._employees]);\n\t\t\t})();\n\t\t\t(async () => {\n\t\t\t\tconst response = await axios.get(customersUrl);\n\t\t\t\tsetCustomers([...response.data]);\n\t\t\t})();\n\t\t}, []);\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Example of fetch and axios</h1>\n\t\t\t\t<h2>Employees</h2>\n\t\t\t\t<ul>\n\t\t\t\t\t{employees.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={i}>{item.firstName} {item.lastName}</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<h2>Customers</h2>\n\t\t\t\t<ul>\n\t\t\t\t\t{customers.map((item, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={i}>{item.contactName}</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-18 08:43:27","systemWhoCreated":"systemUnknown"},{"id":507,"category":"GraphQL","title":"How to set up a GraphQL backend with MongoDB and Express","body":"- the project shows you how to setup a GraphQL server locally with Apollo and Express which serves data from a MongoDB database\n- full code is here: [edwardtanguay/graphql-apollo-express-mongodb](https://github.com/edwardtanguay/graphql-apollo-express-mongodb)\n- create a MongoDB collection called `persons` and fill with fake data\n\t- `npm init -y`\n- in **package.json**, remember to set type to modules##remembertypemoddd\n- install necessary packages\n\t- `npm i faker@5.5.3`\n\t- `npm i mongoose`\n- **createFakedata.js**\n\t-------------------------------------\n\timport mongoose from 'mongoose';\n\timport faker from 'faker';\n\n\tconst mongoURI = 'mongodb://localhost:27017/store';\n\n\tconst PersonSchema = new mongoose.Schema({\n\t\tfirstName: { type: String },\n\t\tlastName: { type: String },\n\t\temail: { type: String },\n\t},\n\t\t{\n\t\t\tcollection: \"persons\", versionKey: false\n\t\t}\n\t);\n\n\tconst Person = mongoose.model('Person', PersonSchema);\n\n\ttry {\n\t\tawait mongoose.connect(mongoURI);\n\t\tconsole.log(`connected to database`);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tprocess.exit(1)\n\t}\n\n\tconst persons = [];\n\n\tfor (let i = 1; i <= 20; i++) {\n\t\tconst firstName = faker.name.firstName();\n\t\tconst lastName = faker.name.lastName();\n\t\tconst email = faker.internet.email(`${firstName} ${lastName}`);\n\t\tpersons.push({\n\t\t\tfirstName: firstName,\n\t\t\tlastName: lastName,\n\t\t\temail: email\n\t\t});\n\t}\n\n\tpersons.forEach(person => Person.create(person));\n\t-------------------------------------\n- execute with `node createFakedata.js`\n- check your MongoDB to see that you have data in a `Persons` collection##seedatainmongo\n- then **set up your GraphQL server with Express** which reads from MongoDB\n- install necessary packages\n\t- `npm i apollo-server-express`\n\t- `npm i express`\n\t- `npm i graphql`\n- **server.js**\n\t----------------------------------------\n\timport { ApolloServer } from 'apollo-server-express';\n\timport { ApolloServerPluginLandingPageGraphQLPlayground } from 'apollo-server-core';\n\timport express from 'express';\n\timport mongoose from 'mongoose';\n\n\tconst port = 4044;\n\tconst mongoURI = 'mongodb://localhost:27017/store';\n\n\tconst typeDefs = `\n\t\ttype Query {\n\t\t\tcustomers(limit:Int): [Person]\n\t\t}\n\n\t\ttype Person {\n\t\t\tfirstName: String!\n\t\t\tlastName: String!\n\t\t\temail: String!\n\t\t}\n\n\t\tinput CreateCustomerInput {\n\t\t\tfirstName: String!\n\t\t\tlastName: String!\n\t\t\temail: String!\n\t\t}\n\n\t\ttype Mutation {\n\t\t\tcreateCustomer(input: CreateCustomerInput): Person\n\t\t}\n\t`;\n\n\tconst PersonSchema = new mongoose.Schema(\n\t\t{\n\t\t\tfirstName: { type: String },\n\t\t\tlastName: { type: String },\n\t\t\temail: { type: String }\n\t\t},\n\t\t{ collection: 'persons', versionKey: false }\n\t);\n\n\tconst Person = mongoose.model('Person', PersonSchema);\n\n\tconst resolvers = {\n\t\tQuery: {\n\t\t\tcustomers: async (_, { limit }) => {\n\t\t\t\treturn await Person.find().limit(limit);\n\t\t\t}\n\t\t},\n\t\tMutation: {\n\t\t\tcreateCustomer: async (_, {input}) => {\n\t\t\t\tconsole.log(input);\n\t\t\t\treturn await Person.create(input);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst app = express();\n\n\tconst server = new ApolloServer({\n\t\ttypeDefs,\n\t\tresolvers,\n\t\tplugins: [ApolloServerPluginLandingPageGraphQLPlayground()]\n\t});\n\n\tawait server.start();\n\n\tserver.applyMiddleware({ app });\n\n\tapp.listen(port, () => console.log(`server is running on: http://localhost:${port}`));\n\n\ttry {\n\t\tawait mongoose.connect(mongoURI);\n\t\tconsole.log('connected to database');\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tprocess.exit(1);\n\t}\n\t----------------------------------------\n- run your server with `node server.js` \n\t- you will get the following playground in your browser\n\t- type in query to get e.g. all firstNames:##getallfirstgraphql\n\t- Note that when querying GraphQL, **you cannot have all fields returned by default**, you have to specify each field that you want, this is by design\n\t\t- Stack Overflow: [How to query all the GraphQL type fields without writing a long query?](https://stackoverflow.com/questions/34199982/how-to-query-all-the-graphql-type-fields-without-writing-a-long-query)\n\t\t\t- *You're asking how to do something that GraphQL, by design, does not support.*\n\t\t\t- *Unfortunately what you'd like to do is not possible. GraphQL requires you to be explicit about specifying which fields you would like returned from your query.*\n\t- But note you can use [GraphQL Fragments](https://www.apollographql.com/docs/react/data/fragments):\n\t\t- define fragments:\n\t\t\t-----------------------------\n\t\t\tfragment NameParts on Person {\n\t\t\t  firstName\n\t\t\t  lastName\n\t\t\t}\n\t\t\t------------------------------------\n\t\t- use fragments:\n\t\t\t------------------------------------\n\t\t\tquery GetPerson {\n\t\t\t  people(id: \"7\") {\n\t\t\t\t...NameParts\n\t\t\t\tavatar(size: LARGE)\n\t\t\t  }\n\t\t\t}\n\t\t\t------------------------------------\n\t- type in mutation to create a new Person in the persons collection:##andthemutationforang\n- this Howto was based on this code: [NikoHamburg/graphDemo](https://github.com/NikoHamburg/graphDemo)\n- an example of a more complicated project using GraphQL: [NikoHamburg/graphQLAPI](https://github.com/NikoHamburg/graphQLAPI)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-23 12:00:44","systemWhoCreated":"systemUnknown"},{"id":508,"category":"Linux","title":"How to fix the \"System limit for number of file watchers reached\" error on Ubuntu","body":"- sometimes when working on Ubuntu in React projects, I have seen the following problem:##watchererrorubuntu\n- the solution appears to be to increase the **inotify watch limit**\n- a solution that worked for someone on Ubuntu in one instance was this:\n\t- edit system control configuration file\n\t\t- `sudo vi /etc/sysctl.conf` (edit\n\t- add the following line to the bottom of the file:\n\t\t-------------------------------------------\n\t\tfs.inotify.max_user_watches=524288\n\t\t-------------------------------------------\n\t\t- save and exit\n\t- load settings from the sysctl.conf file:\n\t\t- `sudo sysctl -p`\n- if that doesn't solve the problem for you, see more details in this Stack Overflow question: [React Native Error: ENOSPC: System limit for number of file watchers reached](https://stackoverflow.com/questions/55763428/react-native-error-enospc-system-limit-for-number-of-file-watchers-reached)","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-23 13:14:11","systemWhoCreated":"systemUnknown"},{"id":509,"category":"React Router","title":"How to create a vertical menu page with React Router v6","body":"- get full code here: [edwardtanguay/react-router-vertical-menu-page](https://github.com/edwardtanguay/react-router-vertical-menu-page)\n- this project was based on [this code](https://codesandbox.io/s/nested-routes-outlet-lpllv?file=/src/App.js)\n\t- note that I switched the data source from a JavaScript object to a JSON file, which makes the move to backend API easier#gif#theVerticalMenuReact\n- note the use of `<Outlet/>`\n\t- *\"An Outlet should be used in parent route elements to render their child route elements. This allows nested UI to show up when child routes are rendered. If the parent route matched exactly, it will render a child index route or nothing if there is no index route.\"* - [documentation](https://reactrouter.com/docs/en/v6/api)\n- **App.js**\n\t------------------------------------\n\timport * as React from 'react';\n\timport {\n\t\tBrowserRouter as Router,\n\t\tRoute,\n\t\tRoutes,\n\t\tNavLink\n\t} from 'react-router-dom';\n\timport './App.scss';\n\timport { PageHome } from './pages/PageHome';\n\timport { PageTopics } from './pages/PageTopics';\n\timport { PageResource } from './pages/PageResource';\n\timport { PageTopic } from './pages/PageTopic';\n\n\texport default function App() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>Edward's Howtos</h1>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<NavLink to=\"/\">Home</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<NavLink to=\"/topics\">Topics</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path=\"/\" element={<PageHome />} />\n\t\t\t\t\t\t<Route path=\"/topics\" element={<PageTopics />}>\n\t\t\t\t\t\t\t<Route path=\":topicId\" element={<PageTopic />}>\n\t\t\t\t\t\t\t\t<Route path=\":resourceId\" element={<PageResource />} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Routes>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n\t------------------------------------\n- **PageHome.js**\n\t-------------------------------\n\timport { NavLink } from 'react-router-dom';\n\n\texport function PageHome() {\n\t\treturn (\n\t\t\t<div className=\"areaHome\">\n\t\t\t\t<p>\n\t\t\t\t\tWelcome to our content index. Head over to <NavLink to=\"/topics\">topics</NavLink> to see our catalog.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n\t-------------------------------\n- **PageTopics.js**\n\t------------------------------------------\n\timport { Outlet, NavLink } from 'react-router-dom';\n\timport { getTopics } from '../tools/dataManager';\n\n\texport function PageTopics() {\n\t\tconst topics = getTopics();\n\n\t\treturn (\n\t\t\t<div className=\"areaTopics\">\n\t\t\t\t<ul>\n\t\t\t\t\t{topics.map(({ name, id }) => (\n\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t<NavLink to={id}>{name}</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<Outlet />\n\t\t\t</div>\n\t\t);\n\t}\n\t------------------------------------------\n- **PageTopic.js**\n\t------------------------------------------\n\timport { useParams, NavLink, Outlet } from 'react-router-dom';\n\timport { getTopic } from '../tools/dataManager';\n\n\texport function PageTopic() {\n\t\tconst { topicId } = useParams();\n\t\tconst topic = getTopic(topicId);\n\n\t\treturn (\n\t\t\t<div className=\"areaTopic\">\n\t\t\t\t<h2>{topic.name} Howtos</h2>\n\t\t\t\t<p>{topic.name}: {topic.description}</p>\n\t\t\t\t<ul>\n\t\t\t\t\t{topic.resources.map((sub) => (\n\t\t\t\t\t\t<li key={sub.id}>\n\t\t\t\t\t\t\t<NavLink to={sub.id}>{sub.name}</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<Outlet />\n\t\t\t</div>\n\t\t);\n\t}\n\t------------------------------------------\n- **PageResource.js**\n\t------------------------------------------\n\timport { useParams } from 'react-router-dom';\n\timport { getResource } from '../tools/dataManager';\n\n\texport function PageResource() {\n\t\tconst { topicId, resourceId } = useParams();\n\t\tconst { name, description, id } = getResource({ topicId, resourceId });\n\n\t\treturn (\n\t\t\t<div className=\"areaResource\">\n\t\t\t\t<h3>{name}</h3>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<div className=\"link\">\n\t\t\t\t\t&gt;&gt;&gt; <a target=\"_blank\" href={`https://edwardtanguay.netlify.app/howtos?id=${id}`} rel=\"noreferrer\">Go to Howto</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\t------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-02-25 08:39:12","systemWhoCreated":"systemUnknown"},{"id":510,"category":"JavaScript","title":"Use Northwind JSON files to practice JavaScript array functions","body":"- convert online JSON file into JavaScript object in a local JavaScript file that you can run in Node\n\t- go to [Northwind JSON files repository](https://github.com/graphql-compose/graphql-compose-examples/tree/master/examples/northwind/data/json)\n\t- click **employees.json**\n\t- click **Raw**\n\t- CTRL-A, CTRL-C to copy\n\t- go to [JSON-to-JavaScript-Object converter](https://www.convertsimple.com/convert-json-to-javascript)\n\t- paste in your JSON text into the left-hand side\n\t- note the only difference are the removal of the quotation marks on the keys##thediffjsonobj\n\t- on the right-hand side, click **Copy to Clipboard**\n- save the JavaScript object as a variable in a file\n\t- create file: `funcarrays.js`\n\t- type `const employees = ` and press CTRL-V to paste your code\n\t- add a semi-colon at the end\n\t- at bottom of file, type `console.log(employees.length);`\n\t- execute the file with `node funcarrays.js`\n\t- since there are 9 employee objects in the above array, you should see the number: `9` \n- move object to bottom of file, code to top\n\t- normally we would import this JavaScript object from another file, but for now let's make it so we can code at the top and have all our data stored somewhere under our code in the file\n\t- delete console.log line\n\t- convert `const employees` to a **classic function** (not an arrow function) \n\t\t- reason: **you can call classic functions before they are declared in code** (JavaScript weirdness hack)\n\t\t- top of function should look like this:\n\t\t\t-------------------------------\n\t\t\tfunction getEmployees() {\n\t\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\temployeeID: 2,\n\t\t\t\t\tlastName: \"Fuller\",\n\t\t\t-------------------------------\n\t\t- bottom of function should look like this:\n\t\t\t-------------------------------\n\t\t\t\t\t\t\t48304,\n\t\t\t\t\t\t\t55113,\n\t\t\t\t\t\t\t55439\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t\t-------------------------------\n\t- then above the `getEmployees()` function type this:\n\t\t----------------------------------\n\t\tconst employees = getEmployees();\n\t\tconsole.log(employees.length);\n\t\t----------------------------------\n\t- format your code so that you have a space at top to use your data, and a space for all the data you need at the bottom (we can create as many functions as we like, e.g. `getCustomers()`, `getProducts()`, `getOrders()`, etc.\n\t- also, install the VSCode **Quokka** extension, press **F1**, click on **Quokka.js: Start on Current File** and you have your\n\t- and add a comment separator between your code and data:##formatjscodejson\n\t- we can now add as many data `get()` functions as we want before this line and have access to them all in our code, so that we can practice querying and manipulating data with function arrays","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-01 07:07:51","systemWhoCreated":"systemUnknown"},{"id":511,"category":"JavaScript","title":"Join JavaScript arrays with ES6 functions in Export/Import modules","body":"- background\n\t- in the [previous howto](https://edwardtanguay.netlify.app/howtos?id=510), we loaded an array of employees from a `getEmployees()` function in the same JavaScript file\n\t- the problem with this is that it doesn't scale: if you have two or three functions such as `getCustomers()` and `getProducts()` then the file becomes long and cumbersome\n\t- JavaScript modules are a solution to encapsulate these functions so that you import them in one line from any file\n\t- the goal of this howto is to convert the `getEmployees()` function from the previous howto file to a module and import it from the main file\n\t- we will then import `customers` and `orders` from modules and combine them with ES6 array functions\n- set up project\n\t- using modules requires you to have a package.json file and hence a new directory and project\n\t- under you **projects** directory, create a directory called `moduletest`\n\t- go into it with `cd moduletest`\n\t- create `main.js` (this file will import your data modules)\n- create **customers** module and import into `main.js`\n\t- copy the [customers.json](https://github.com/graphql-compose/graphql-compose-examples/tree/master/examples/northwind/data/json) files into `data_customers.js`\n\t\t- (you can leave it as JSON format since it is also valid JavaScript object syntax)\n\t\t- your `customers.js` file should look like this:##customersFileLook\n\t- in main, import and display the number of customers:\n\t\t-----------------------------\n\t\timport { customers } from './customers.js';\n\n\t\tconsole.log(customers.length);\n\t\t-----------------------------\n\t- run it with `node main.js` and you will get this error:##thetypemoderror\n\t\t- set up an npm project by typing `npm init -y` which will create a `package.json` file\n\t\t- in the `package.json` file add `\"type\": \"module\" entry##addentrymodtyp\n\t\t- run `node main.js` again and it will display the number of customers in the JavaScript object in the `customers.js` file##gothe91\n- create **orders** module and import into `main.js`\n\t- create a `orders.js` file the same way as you created the `customers.js` file above and import it into main.js\n\t- display both with:\n\t\t-------------------------------------\n\t\tconsole.log(`There are ${customers.length} customers and ${orders.length} orders.`);\n\t\t-------------------------------------\n- practice basic ES6 functions\n\t- 1. display how many customers in London\n\t\t--------------------------------------\n\t\tconsole.log(`There are ${customers.filter(m => m.address.city === 'London').length} customers in London.`);\n\t\t--------------------------------------\n\t- 2. turn this into a function `getNumberOfCustomersInCity(city)` and display for **Nantes** and **Paris**\n\t- 3. display how many orders in 1996\n\t\t------------------------------------------\n\t\tconsole.log(`There were ${orders.fitler(m => m.orderDate.startsWith('1996')).length} orders in 1996`);\n\t\t------------------------------------------\n\t- 4. turn this into a function `getNumberOfOrdersForYear(year)` and display for 1997 and 1998\n\t- 5. display the company name of the customer with ID `CONSH`\n\t- 6. write a function `getCompanyNameById(id)` which returns the company names for `LAUGB`, `FRANR`, and `GALED`\n- use ES6 functions to join the two arrays together\n\t- 7. create function `getOrderDatesByCustomerId(customerId)` which e.g. if you send `LAUGB` as a parameter, it returns the object:\n\t\t-------------------------------------\n\t\t{\n\t\t\tname: \"Laughing Bacchus Wine Cellars\",\n\t\t\torderDates: [\n\t\t\t\t\"1997-04-03\",\n\t\t\t\t\"1997-08-05\",\n\t\t\t\t\"1998-01-01\"\n\t\t\t]\n\t\t}\n\t\t-------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-01 23:49:15","systemWhoCreated":"systemUnknown"},{"id":512,"category":"JavaScript","title":"Use ES6 functions to display data from two arrays in an HTML file","body":"- create a standard HTML file called `info.html` with the emmet **doc** command\n- in the HEAD area, connect the JavaScript file and enable ES6 modules:\n\t-----------------------------\n\t<script type=\"module\" defer src=\"./info.js\"></script>\n\t-----------------------------\n- create **info.js**\n\t- import arrays\n\t\t--------------------------------------------\n\t\timport { customers } from './customers.js';\n\t\timport { orders } from './orders.js';\n\t\t--------------------------------------------\n\t- display static title **Info Page** and dynamic data##displaydyanimsi\n\t\t- **info.html**\n\t\t\t--------------------------------------------\n\t\t\t\t<h1>Info Page</h1>\n\t\t\t\t<div class=\"mainInfo\"></div>\n\t\t\t--------------------------------------------\n\t\t- **info.js**\n\t\t\t-----------------------------------------------------\n\t\t\tconst mainInfoElem = document.querySelector('.mainInfo');\n\t\t\tmainInfoElem.innerHTML = `There are ${customers.length} customers and ${orders.length} orders.`;\n\t\t\t-----------------------------------------------------\n\t- display customers in France:##addcustomfran\n\t- display order information for a given array of order ids:\n\t\t- `const orderIds = [10839, 10810, 10825, 10829];`##thelistorderinfo","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-02 01:34:03","systemWhoCreated":"systemUnknown"},{"id":513,"category":"JavaScript","title":"JavaScript Closures","body":"- an example of closure, what's going on here?\n\t------------------------------------\n\tconst add = (function () {\n\t\tlet counter = 0;\n\t\treturn function () { counter += 1; return counter }\n\t})();\n\n\tconsole.log(add());\n\tconsole.log(add());\n\tconsole.log(add());\n\t------------------------------------\n- the same closure with arrow syntax, what's going on here?\n\t----------------------------------\n\tconst add = (() => {\n\t\tlet counter = 0;\n\t\treturn () => {\n\t\t\tcounter += 1;\n\t\t\treturn counter;\n\t\t}\n\t})();\n\n\tconsole.log(add());\n\tconsole.log(add());\n\tconsole.log(add());\n\t----------------------------------\n- the essence of closure:##whatisclosureexplanation\n- one of the best explanations of closures is at [w3schools: JavaScript closure](https://www.w3schools.com/js/js_function_closures.asp)\n- an example with a shopping cart made with closure that collects items\n\t----------------------------------------\n\tconst cart = (customerId) => {\n\t\tconst whenCreated = new Date();\n\t\tconst items = [];\n\t\treturn (item) => {\n\t\t\titems.push(item);\n\t\t\treturn `Cart for customer ${customerId} created at ${whenCreated.toISOString()} has ${items.length} items: ${items.join(', ')}`;\n\t\t};\n\t};\n\n\tconst cart1 = cart(111);\n\tconst cart2 = cart(222);\n\n\tconsole.log(cart1('milk'));\n\tconsole.log(cart2('bread'));\n\tconsole.log(cart1('apples'));\n\tsetTimeout(() => {\n\t\tconsole.log(cart1('butter'));\t\n\t}, 1000);\n\t----------------------------------------\n- a closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment)\n- you can use a closure anywhere that you might normally use **a JavaScript class object with only a single method**\n- today, a much more organized, robust and useful design pattern which enables you to take advantage of this private scope, is now built into ES6: **JavaScript classes**","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-07 05:38:12","systemWhoCreated":"systemUnknown"},{"id":514,"category":"JavaScript","title":"JavaScript Recursion","body":"- recursion jokes:\n\t- *To understand recursion, you must first understand recursion.*\n\t- search Google for *recursion*\n\t- here we go again:##recursiongoagain\n- example of recursion in code, what's going on here?\n\t---------------------------------\n\tconst countdown = (num) => {\n\t\tconsole.log(num);\n\t\tif (num > 0) {\n\t\t\tcountdown(num - 1);\n\t\t} else {\n\t\t\tconsole.log('blast off');\n\t\t}\n\t}\n\tcountdown(10);\n\t---------------------------------\n- concepts: base case, recursive case, return statement##recursionbasecase\n- a good site to learn basic recursion: [Programiz: JavaScript Recursion](https://www.programiz.com/javascript/recursion)\n- this recursive function reverses the order of characters in a string\n\t- identify the counter-intuitive aspect of this example of recursion:\n\t\t---------------------------------------------\n\t\tfunction reverseString(str) {\n\t\t\tif (str === '') {\n\t\t\t\treturn '';\n\t\t\t} else {\n\t\t\t\treturn reverseString(str.substring(1)) + str.charAt(0);\n\t\t\t}\n\t\t}\n\t\tconsole.log(reverseString(\"live\"))\n\t\t---------------------------------------------\n- real-life example of recursion: scan n number of arrays to find all items which are contained in each array\n\t-------------------------------------------\n\tconst flightCollections = [\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"berlin\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"paris\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"london\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"paris\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"paris\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"london\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"bordeux\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"paris\"\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tairport: \"hamburg\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"london\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tairport: \"paris\"\n\t\t\t}\n\t\t]\n\t];\n\n\tconst commonDestinations = [];\n\n\tconst compareFlights = (currentIndex, currentAirport = null) => {\n\t\tconst flights1 = flightCollections[currentIndex];\n\t\tconst flights2 = flightCollections[currentIndex + 1];\n\t\tconst atEnd = flightCollections.length - currentIndex === 2;\n\n\t\tconst airportsAreTheSame = (currentAirport, flight1, flight2) => {\n\t\t\treturn (currentAirport === null || flight1.airport === currentAirport) && flight1.airport === flight2.airport;\n\t\t};\n\n\t\tif (!atEnd) {\n\t\t\tflights1.forEach((flight1) => {\n\t\t\t\tflights2.forEach(flight2 => {\n\t\t\t\t\tif (airportsAreTheSame(currentAirport, flight1, flight2)) {\n\t\t\t\t\t\tcompareFlights(currentIndex + 1, flight1.airport);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tflights1.forEach((flight1) => {\n\t\t\t\tflights2.forEach(flight2 => {\n\t\t\t\t\tif (airportsAreTheSame(currentAirport, flight1, flight2)) {\n\t\t\t\t\t\tcommonDestinations.push({ airport: flight1.airport });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tcompareFlights(0);\n\tconsole.log(commonDestinations);\n\t-------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-07 06:39:04","systemWhoCreated":"systemUnknown"},{"id":515,"category":"JavaScript","title":"JavaScript Callbacks","body":"- basic callback example, what's going on here?\n\t-----------------------------------\n\tfunction messageDisplayer(message) {\n\t\tconsole.log(message);\n\t}\n\n\tfunction calculator(num1, num2, callback) {\n\t\tlet sum = num1 + num2;\n\t\tcallback(sum);\n\t}\n\n\tcalculator(5, 5, messageDisplayer);\n\t-----------------------------------\n- callback basics: [w3schools: JavaScript callbacks](https://www.w3schools.com/js/js_callback.asp)\n\t- JavaScript functions are executed in the sequence they are called, not in the sequence they are defined\n\t- when you pass a function as an argument, remember not to use parenthesis\n- dumb functions are flexible functions\n\t- a callback function is a function passed into another function as an argument which is then invoked inside the outer function to complete some kind of routine or action\n\t- a function that accepts other functions as arguments is called a higher-order function \n\t- a function is a value representing an **action**\n\t- regular values like strings or numbers represent data\n\t\t- a function represents an **action**\n\t- we can pass a call-back function to a higher-order function which executes the call-back function based on its own logic\n\t- the higher-order function doesn't know what it is doing\n\t\t----------------------------------------\n\t\tconst caller = func => {\n\t\t\tconsole.log(\"I accept a function and then call it.\")\n\t\t\tconsole.log(\"I have no idea what I'm going to say.\")\n\t\t\tfunc();\n\t\t\tconsole.log('---');\n\t\t}\n\n\t\tconst giveStatus = () => {\n\t\t\tconsole.log(\"All systems are running.\")\n\t\t}\n\n\t\tconst giveWeatherReport = () => {\n\t\t\tconsole.log(\"Tomorrow will be sunny.\")\n\t\t}\n\n\t\tconst giveLunchMenu = () => {\n\t\t\tconsole.log('Today we have soup.');\n\t\t}\n\n\t\tcaller(giveStatus);\n\t\tcaller(giveWeatherReport);\n\t\tcaller(giveLunchMenu);\n\t\t----------------------------------------\n- callbacks for unblocking code execution\n\t- some tasks take longer than others\n\t- want to keep the program flow moving\n\t\t----------------------------------------------\n\t\tconst getDataFromDistantServer = callback => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tcallback([\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\tfirstName: 'Harald',\n\t\t\t\t\t\tlastName: 'Stadthoven'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\tfirstName: 'Claudia',\n\t\t\t\t\t\tlastName: 'Berkson'\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}, 5000);\n\t\t};\n\n\t\tconst getData = () => {\n\t\t\tconsole.log(`retrieving data...`);\n\t\t\tgetDataFromDistantServer(records => {\n\t\t\t\tconsole.log(`I received ${records.length} records: ${records.map(m=> `${m.firstName} ${m.lastName}`).join(', ')}`);\n\t\t\t});\n\t\t\tconsole.log(`this may take awhile so giving control back to you...`);\n\t\t}\n\n\t\t// application\n\t\tconsole.log('first task');\n\t\tgetData();\n\t\tconsole.log('third task');\n\t\t----------------------------------------------\n- why we need callbacks on websites (because of asynchronous data fetching)\n\t-----------------------------------------------------\n\t<!DOCTYPE html>\n\t<html>\n\n\t<head>\n\t\t<title>Callback Demonstration</title>\n\t\t<script src=\"https://unpkg.com/vue@next\"></script>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground-color: #eee;\n\t\t\t\tfont-family: Arial, Helvetica, sans-serif;\n\t\t\t}\n\n\t\t\th2 {\n\t\t\t\tfont-size: 18px;\n\t\t\t\tmargin: 0 0 10px 0;\n\t\t\t\tfont-weight: normal;\n\t\t\t\tfont-style: italic;\n\t\t\t\tcolor: #888;\n\t\t\t}\n\n\t\t\tdiv#app {\n\t\t\t\tmargin: 30px;\n\t\t\t\tbackground-color: #ddd;\n\t\t\t\tpadding: 20px;\n\t\t\t\tborder: 1px solid #aaa;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\twidth: 900px;\n\t\t\t\tmin-height: 400px;\n\t\t\t}\n\n\t\t\tsection.header {\n\t\t\t\tborder-bottom: 1px solid #aaa;\n\t\t\t\tpadding-bottom: 10px;\n\t\t\t\tfont-size: 22px;\n\t\t\t}\n\n\t\t\tsection.site {\n\t\t\t\tborder-bottom: 1px solid #aaa;\n\t\t\t\tpadding: 10px 0;\n\t\t\t}\n\n\t\t\tsection.dataArea {\n\t\t\t\tpadding: 10px 0;\n\t\t\t}\n\n\t\t\tdiv.showInfoArea {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t.info {\n\t\t\t\tmargin: 0 0 0 10px;\n\t\t\t}\n\n\t\t\t.typeSomething {\n\t\t\t\tmargin: 10px 0 0 0;\n\t\t\t}\n\n\t\t\th5 {\n\t\t\t\tmargin: 20px 0 10px 0;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\n\t\t\tul {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\tbutton {\n\t\t\t\tmargin: 0 5px 0 0;\n\t\t\t}\n\n\t\t\t.loadingGraphic {\n\t\t\t\tmargin: 20px 0 0 10px;\n\t\t\t\twidth: 30px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<section class=\"header\">\n\t\t\t\tWhy-We-Need-Callbacks Demonstration\n\t\t\t</section>\n\t\t\t<section class=\"site\">\n\t\t\t\t<h2>Area with basic site interactivity:</h2>\n\t\t\t\t<div class=\"showInfoArea\">\n\t\t\t\t\t<button @click=\"showingInformation = !showingInformation\">Show Information</button>\n\t\t\t\t\t<div class=\"info\"\n\t\t\t\t\t\t v-show=\"showingInformation\">This is the information.</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"typeSomething\">\n\t\t\t\t\tYou can type something: <input type=\"text\">\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section class=\"dataArea\">\n\t\t\t\t<h2>Area where data is accessed from external APIs, etc.</h2>\n\t\t\t\t<div class=\"buttonArea\">\n\t\t\t\t\t<button @click=\"getLocalData()\">Get Local Data</button>\n\t\t\t\t\t<button @click=\"getExternalDataWithoutCallback()\">Get External Data Without Callback</button>\n\t\t\t\t\t<button @click=\"getSimulatedExternalDataWithCallback()\"\n\t\t\t\t\t\t\t:disabled=\"recordsStatus === 'loadingRecords'\">Get Simulated External Data With\n\t\t\t\t\t\tCallback</button>\n\t\t\t\t\t<button @click=\"getRealExternalDataWithCallback()\"\n\t\t\t\t\t\t\t:disabled=\"recordsStatus === 'loadingRecords'\">Get Real External Data With Callback</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"recordsArea\">\n\t\t\t\t\t<div v-show=\"recordsStatus === 'showingRecords'\">\n\t\t\t\t\t\t<h5>Records:</h5>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li v-for=\"record in records\">\n\t\t\t\t\t\t\t\t{{ record.firstName }} {{ record.lastName }}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-show=\"recordsStatus === 'loadingRecords'\">\n\t\t\t\t\t\t<img src=\"images/loading.gif\"\n\t\t\t\t\t\t\t class=\"loadingGraphic\"\n\t\t\t\t\t\t\t alt=\"loading\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t\t<script>\n\t\t\tconst App = {\n\t\t\t\tdata() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tshowingInformation: false,\n\t\t\t\t\t\trecordsStatus: 'noRecords',\n\t\t\t\t\t\trecords: []\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tmethods: {\n\t\t\t\t\tgetLocalData() {\n\t\t\t\t\t\tthis.records = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\tfirstName: 'Harald',\n\t\t\t\t\t\t\t\tlastName: 'Localmann'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\t\tfirstName: 'Claudia',\n\t\t\t\t\t\t\t\tlastName: 'Localmann'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t\tthis.recordsStatus = 'showingRecords';\n\t\t\t\t\t},\n\t\t\t\t\tgetExternalDataWithoutCallback() {\n\t\t\t\t\t\tthis.simulateBlockingWork(5000);\n\t\t\t\t\t\tthis.records = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\tfirstName: 'Leonard',\n\t\t\t\t\t\t\t\tlastName: 'Externalmann'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\t\tfirstName: 'Louis',\n\t\t\t\t\t\t\t\tlastName: 'Externalmann'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t\tthis.recordsStatus = 'showingRecords';\n\t\t\t\t\t},\n\t\t\t\t\tsimulateBlockingWork(ms) {\n\t\t\t\t\t\tvar start = new Date().getTime();\n\t\t\t\t\t\tlet now = 0;\n\t\t\t\t\t\tlet difference = 0;\n\t\t\t\t\t\tfor (var i = 0; i < 10000000000000000; i++) {\n\t\t\t\t\t\t\tnow = new Date().getTime();\n\t\t\t\t\t\t\tdifference = now - start;\n\t\t\t\t\t\t\tif (difference > ms) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tgetSimulatedExternalDataWithCallback() {\n\t\t\t\t\t\tthis.recordsStatus = 'loadingRecords';\n\t\t\t\t\t\tthis.getDataFromDistantServer(records => {\n\t\t\t\t\t\t\tthis.records = records;\n\t\t\t\t\t\t\tthis.recordsStatus = 'showingRecords';\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tgetRealExternalDataWithCallback() {\n\t\t\t\t\t\tthis.recordsStatus = 'loadingRecords';\n\t\t\t\t\t\tconst ts1 = new Date().getTime();\n\t\t\t\t\t\tfetch('https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/employees.json')\n\t\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t\t.then((records) => {\n\t\t\t\t\t\t\t\tconst ts2 = new Date().getTime();\n\t\t\t\t\t\t\t\tthis.records = records;\n\t\t\t\t\t\t\t\tthis.recordsStatus = 'showingRecords';\n\t\t\t\t\t\t\t\tconsole.log(`${ts2 - ts1} milliseconds`);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tgetDataFromDistantServer(callback) {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tcallback([\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\t\t\tfirstName: 'Harald',\n\t\t\t\t\t\t\t\t\tlastName: 'Callbackmann'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: 2,\n\t\t\t\t\t\t\t\t\tfirstName: 'Claudia',\n\t\t\t\t\t\t\t\t\tlastName: 'Callbackmann'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tVue.createApp(App).mount('#app');\n\t\t</script>\n\t</body>\n\n\t</html>\n\t-----------------------------------------------------\n- the problem with callbacks: callback hell (therefore: JavaScript promises and async/await)##callbackhellexample","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-07 07:51:16","systemWhoCreated":"systemUnknown"},{"id":516,"category":"JavaScript","title":"How to read and write to a JSON file via a JavaScript/DOM app (using Node/Express)","body":"- frontend code: [edwardtanguay/node-express-ejs-javascript-dom-json](https://github.com/edwardtanguay/node-express-ejs-javascript-dom-json)\n- backend code: [edwardtanguay/node-express-ejs-javascript-dom-json-backend](https://github.com/edwardtanguay/node-express-ejs-javascript-dom-json-backend)\n- This app shows how to create a frontend form in JavaScript/DOM which uses fetch to read and write to a JSON file via a Node/Express API#gif#apichangepassword\n- **FRONTEND**\n\t- **index.js**\n\t\t-------------------------------------------------\n\t\t<!DOCTYPE html>\n\t\t<html lang=\"en\">\n\n\t\t<head>\n\t\t\t<meta charset=\"UTF-8\">\n\t\t\t<meta name=\"viewport\"\n\t\t\t\t  content=\"width=device-width, initial-scale=1.0\">\n\t\t\t<title>read-json-site</title>\n\t\t\t<link rel=\"stylesheet\"\n\t\t\t\t  href=\"./css/main.css\">\n\t\t\t\t  <script src=\"./js/main.js\" defer type=\"module\"></script>\n\t\t</head>\n\n\t\t<body>\n\t\t\t<h1>Info Site</h1>\n\t\t\t<p>Message: <span class=\"message\"></span></p>\n\t\t\t<form>\n\t\t\t\t<input type=\"text\" class=\"newMessage\">\n\t\t\t\t<button class=\"btnChange\">Change</button>\n\t\t\t</form>\n\t\t</body>\n\n\t\t</html>\n\t\t-------------------------------------------------\n\t- **main.js**\n\t\t------------------------------------------\n\t\tconst messageElem = document.querySelector('.message');\n\t\tconst newMessageElem = document.querySelector('.newMessage');\n\t\tconst btnChange = document.querySelector('.btnChange');\n\n\t\tconst emulationLoadTimeInSeconds = 1000;\n\n\t\tmessageElem.innerHTML = '<span class=\"loading\">loading...</span>';\n\t\tnewMessageElem.value = '';\n\n\t\tconst setFormToLoading = () => {\n\t\t\tnewMessageElem.disabled = true;\n\t\t\tbtnChange.disabled = true;\n\t\t}\n\n\t\tconst setFormToReady = (data) => {\n\t\t\tmessageElem.innerHTML = data.message;\n\t\t\tnewMessageElem.value = data.message;\n\t\t\tnewMessageElem.disabled = false;\n\t\t\tbtnChange.disabled = false;\n\t\t}\n\n\t\tsetFormToLoading();\n\n\t\tbtnChange.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tsetFormToLoading();\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({ message: newMessageElem.value })\n\t\t\t};\n\t\t\tsetTimeout(() => {\n\t\t\t\t(async () => {\n\t\t\t\t\tconst response = await fetch('http://localhost:3100', requestOptions);\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tsetFormToReady(data);\n\t\t\t\t})();\n\t\t\t}, emulationLoadTimeInSeconds);\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\t(async () => {\n\t\t\t\tconst response = await fetch('http://localhost:3100');\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetFormToReady(data);\n\t\t\t})();\n\t\t}, emulationLoadTimeInSeconds);\n\t\t------------------------------------------\n- **BACKEND**\n\t- **api.js**\n\t\t--------------------------------------------\n\t\timport express from 'express';\n\t\timport cors from 'cors';\n\t\timport fs from 'fs';\n\n\t\tconst app = express();\n\t\tconst PORT = 3100;\n\n\t\tapp.use(cors());\n\t\tapp.use(express.json());\n\n\t\tapp.get('/', (req, res) => {\n\t\t\tfs.readFile('./api/data/data.json', (err, data) => {\n\t\t\t\tres.send(data.toString());\n\t\t\t});\n\t\t});\n\n\t\tapp.post('/', (req, res) => {\n\t\t\tconst message = req.body.message;\n\t\t\tconst data = {\n\t\t\t\tmessage\n\t\t\t};\n\t\t\tfs.writeFile('./api/data/data.json', JSON.stringify(data), (err) => {\n\t\t\t\tres.status(200).json({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tmessage\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tapp.listen(PORT, () => {\n\t\t\tconsole.log(`Listening on port http://localhost:${PORT}`);\n\t\t});\n\t\t--------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-09 07:04:22","systemWhoCreated":"systemUnknown"},{"id":517,"category":"JavaScript","title":"Two examples of OOP design patterns using JavaScript classes: Singleton and Factory","body":"- full code: [edwardtanguay/javascript-class-oop-patterns](https://github.com/edwardtanguay/javascript-class-oop-patterns)\n- This code shows two examples of design patterns using JavaScript classes: (1) Singleton Pattern and (2) Factory Pattern#gif#oopclassescode\n- I created three versions of the Singleton Pattern, the last two which use async since it makes more sense to have a singleton pattern when you have an object that is costly to instantiate, i.e. takes a certain amount of time to fetch data\n- **oop-10-simpleSingleton.js**\n\t--------------------------------------------\n\tclass Employees {\n\t\tconstructor() {\n\t\t\tif (Employees._instance) {\n\t\t\t\treturn Employees._instance\n\t\t\t}\n\t\t\tEmployees._instance = this;\n\n\t\t\tthis.employees = [\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\tlastName: \"Nordruf\",\n\t\t\t\t\tfirstName: \"Andreas\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 3,\n\t\t\t\t\tlastName: \"Moritor\",\n\t\t\t\t\tfirstName: \"Nico\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 4,\n\t\t\t\t\tlastName: \"Rothchild\",\n\t\t\t\t\tfirstName: \"Maria\"\n\t\t\t\t}\n\t\t\t];\n\t\t\tconsole.log('work done');\n\t\t}\n\n\t\tlist() {\n\t\t\treturn this.employees.map(m => `${m.firstName} ${m.lastName} (${m.id})`);\n\t\t}\n\t}\n\n\tconst employees = new Employees();\n\tconst emp = new Employees();\n\n\tconsole.log(employees.list());\n\tconsole.log(emp.list());\n\t--------------------------------------------\n- **oop-11-asyncSingleton.js**\n\t------------------------------------\n\timport fetch from 'node-fetch';\n\n\tclass Employees {\n\t\tconstructor() {\n\t\t\tif (Employees._instance) {\n\t\t\t\treturn Employees._instance\n\t\t\t}\n\t\t\tEmployees._instance = this;\n\n\t\t\tthis.emulatedWaitTimeInSeconds = 2;\n\t\t\tthis.employees = [];\n\t\t\tthis.dataLoaded = false;\n\n\t\t\tthis.url = 'https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/employees.json';\n\n\t\t\tthis.initPromise = (async () => {\n\t\t\t\t\tconst response = await fetch(this.url);\n\t\t\t\t\tthis.employees = await response.json();\n\t\t\t\t\tthis.dataLoaded = true;\n\t\t\t\t\tconsole.log(`work done: got ${this.employees.length} employees`);\n\t\t\t})();\n\t\t}\n\n\t\tasync list() {\n\t\t\tawait this.initPromise;\n\t\t\treturn this.employees.map(m => `${m.firstName} ${m.lastName} (${m.employeeID})`);\n\t\t}\n\n\t}\n\n\tconst employees = new Employees();\n\tconst emps = new Employees();\n\n\tconsole.log(111);\n\t(async () => {\n\t\tconsole.log(await employees.list());\n\t})();\n\tconsole.log(222);\n\t(async () => {\n\t\tconsole.log(await emps.list());\n\t})();\n\tconsole.log(333);\n\t------------------------------------\n- **oop-12-asyncSingletonEmulated.js**\n\t------------------------------------\n\tconst fetch = () => {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve({\n\t\t\t\t\tjson: () => new Promise((r) => r([\n\t\t\t\t\t\t{ firstName: 'Arthur', lastName: 'Pym', employeeID: 1 },\n\t\t\t\t\t\t{ firstName: 'August', lastName: 'Barnard', employeeID: 2 },\n\t\t\t\t\t\t{ firstName: 'Mildred', lastName: 'Poe', employeeID: 3 }\n\t\t\t\t\t]))\n\t\t\t\t});\n\t\t\t}, 3000);\n\t\t});\n\t}\n\n\tclass Employees {\n\t\tconstructor() {\n\t\t\tif (Employees._instance) {\n\t\t\t\treturn Employees._instance\n\t\t\t}\n\t\t\tEmployees._instance = this;\n\n\t\t\tthis.emulatedWaitTimeInSeconds = 2;\n\t\t\tthis.employees = [];\n\t\t\tthis.dataLoaded = false;\n\n\t\t\tthis.url = 'https://raw.githubusercontent.com/graphql-compose/graphql-compose-examples/master/examples/northwind/data/json/employees.json';\n\n\t\t\tthis.initPromise = (async () => {\n\t\t\t\tconst response = await fetch();\n\t\t\t\t// this.employees = await fetch2(); \n\t\t\t\tthis.employees = await response.json();\n\t\t\t\tthis.dataLoaded = true;\n\t\t\t\tconsole.log(`work done: got ${this.employees.length} employees`);\n\t\t\t})();\n\t\t}\n\n\t\tasync list() {\n\t\t\tawait this.initPromise;\n\t\t\treturn this.employees.map(m => `${m.firstName} ${m.lastName} (${m.employeeID})`);\n\t\t}\n\n\t}\n\n\tconst employees = new Employees();\n\tconst emps = new Employees();\n\n\tconsole.log(111);\n\t(async () => {\n\t\tconsole.log(await employees.list());\n\t})();\n\tconsole.log(222);\n\t(async () => {\n\t\tconsole.log(await emps.list());\n\t})();\n\tconsole.log(333);\n\t------------------------------------\n- the factory pattern shows how to make one class responsible for creating other classes, hence you have one central place to create objects so that you can do e.g. logging, reporting, etc.\n- **oop-20-factory.js**\n\t-------------------------------------\n\tclass Person {\n\t\tconstructor(firstName, lastName) {\n\t\t\tthis.firstName = firstName;\n\t\t\tthis.lastName = lastName;\n\t\t}\n\n\t\tdisplayAsLine() {\n\t\t\treturn `${firstName} ${lastName}`;\n\t\t}\n\t}\n\n\tclass Employee extends Person {\n\t\tconstructor(firstName, lastName, employeeNumber) {\n\t\t\tsuper(firstName, lastName);\n\t\t\tthis.employeeNumber = employeeNumber;\n\t\t}\n\n\t\tdisplayAsLine() {\n\t\t\treturn `${this.firstName} ${this.lastName} (empnr. ${this.employeeNumber})`;\n\t\t}\n\t}\n\n\tclass Customer extends Person {\n\t\tconstructor(firstName, lastName, company, salesPerYear) {\n\t\t\tsuper(firstName, lastName);\n\t\t\tthis.company = company;\n\t\t\tthis.salesPerYear = salesPerYear;\n\t\t}\n\n\t\tdisplayAsLine() {\n\t\t\treturn `${this.firstName} ${this.lastName} from ${this.company} with ${this.salesPerYear} sales per year`;\n\t\t}\n\t}\n\n\tclass PersonFactory {\n\t\tconstructor() {\n\t\t\tthis.personsCreated = [];\n\t\t}\n\n\t\tinstantiate(kind, obj) {\n\t\t\tswitch (kind) {\n\t\t\t\tcase 'employee':\n\t\t\t\t\tconst employee = new Employee(obj.firstName ?? '(unknown)', obj.lastName ?? '(unknown)', obj.employeeNumber ?? '(unknown)');\n\t\t\t\t\tthis.personsCreated.push(employee);\n\t\t\t\t\treturn employee;\n\t\t\t\tcase 'customer':\n\t\t\t\t\tconst customer = new Customer(obj.firstName ?? '(unknown)', obj.lastName ?? '(unknown)', obj.company ?? '(unknown)', obj.salesPerYear ?? 0);\n\t\t\t\t\tthis.personsCreated.push(customer);\n\t\t\t\t\treturn customer;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`unrecognized Person kind: \"${kind}`);\n\t\t\t}\n\t\t}\n\n\t\tgetReport() {\n\t\t\treturn `\n\tPersons Created:\n\t=============================\n\t${this.personsCreated.map(m => m.displayAsLine()). join('\\r\\n')}`;\n\t\t}\n\t}\n\n\tconst factory = new PersonFactory();\n\tfactory.instantiate('employee', {firstName: 'Johannes', lastName: 'Roberts', employeeNumber: 728 });\n\tfactory.instantiate('customer', {firstName: 'Friedrich', lastName: 'Schanz', company: 'Antwerp Ltd.'});\n\tfactory.instantiate('employee', {firstName: 'Angelika', lastName: 'Holzheim', employeeNumber: 234 });\n\n\tconsole.log(factory.getReport());\n\t-------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-10 07:44:41","systemWhoCreated":"systemUnknown"},{"id":518,"category":"Netlify","title":"How to solve a 404 error on a React Router site at Netlify","body":"- you set up a React site with React-Router\n- you published it to Netlify\n- your site works, you can click through the menu\n- then you make a copy of the url with a route, or make a bookmark and click on it, and you receive an error:#gif#netlify404reactrouter\n- **SOLUTION:**\n\t- create a file named `_redirects` in the **public** directory of your site, with this one line as content:\n\t\t---------------------------\n\t\t/* /index.html 200\n\t\t---------------------------\n\t- make sure it is in the **public** directory and not the root:##thefixnetlifyerrorreact\n\t- push your change to GitHub which will update your Netlify site\n\t- that should solve the problem","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-11 19:12:56","systemWhoCreated":"systemUnknown"},{"id":519,"category":"React","title":"Why you shouldn't hide sensitive information with React conditional rendering","body":"- it might be tempting to create a React website which allows a user to log in and see priviliged information\n- but one should remember that React is a **frontend** framework\n- this means that **all information** is sent to the browser, and then only then is hidden or shown\n- to demonstrate this, consider this React site:\n\t----------------------------------------\n\tconst loggedIn = false;\n\n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Website</h1>\n\t\t\t\t<hr />\n\t\t\t\t{loggedIn && (\n\t\t\t\t\t<div>secret</div>\n\t\t\t\t)}\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t);\n\t}\n\n\texport default App;\n\t----------------------------------------\n- if you inspect the page's DOM, you will see that the information is indeed not to be found:##reactnotloggedok\n- this may tempt you to store sensitive information in conditional rendering on a React site and show it only to logged-in users\n- however, if you right-click on your page and **View page source**:##viewpagesourcebrowser\n- you will see a small amount of HTML with a link to a JavaScript file:##smallhtmlreact\n- click on that link, look around in the file, and you will find your sensitive information in plain text even though it is being blended out in DOM with conditional rendering:##findinforeact","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-13 12:46:24","systemWhoCreated":"systemUnknown"},{"id":520,"category":"JavaScript","title":"How to use .map() to output an array in JavaScript/DOM","body":"- the main point you have to remember is that, unlike React, you have to export any HTML in backticked string literals##thelisthtmlshow\n- **index.html**\n\t-----------------------------------------\n\t<!DOCTYPE html>\n\t<head>\n\t\t<title>dcd test</title>\n\t\t<script src=\"./js/main.js\"\n\t\t\t\tdefer></script>\n\t</head>\n\t<body>\n\t\t<div class=\"content\"></div>\n\t</body>\n\t</html>\n\t-----------------------------------------\n- **js/main.js**\n\t------------------------------------------\n\tconst contentElem = document.querySelector('.content');\n\n\tconst colors = ['orange', 'yellow', 'black'];\n\n\tcontentElem.innerHTML = `\n\t<ul>\n\t\t${colors.map(color => {\n\t\t\treturn `<li>${color}</li>`;\n\t\t}).join('')}\n\t</ul>\n\t`;\n\t------------------------------------------","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-13 14:05:47","systemWhoCreated":"systemUnknown"},{"id":521,"category":"Netlify","title":"How to share .json files via fetch() on Netlify","body":"- you can put .json files in e.g. a `/share` folder in your `/public` folder of a React project\n- then you can access them in your browser e.g. [https://edwardtanguay.netlify.app/share/howtos.json](https://edwardtanguay.netlify.app/share/howtos.json)\n- but if you try to access them via `fetch()` as with this code:\n\t-----------------------------------\n\tconst contentElem = document.querySelector('.content');\n\n\tconst url = 'https://edwardtanguay.netlify.app/share/howtos.json';\n\n\t(async () => {\n\t\tconst response = await fetch(url);\n\t\tconst howtos = await response.json();\n\n\t\tcontentElem.innerHTML = `\n\t<ul>\n\t\t${howtos.sort((a,b) => a.systemWhenCreated > b.systemWhenCreated).map(howto => {\n\t\t\treturn `<li>${howto.title}</li>`;\n\t\t}).join('')}\n\t</ul>\n\t`;\n\t})();\n\t-----------------------------------\n- you will get a CORS error like this:##apinetflifycors","points":20,"extras":"$rank=4.9;$generalRank=4.6","systemWhenCreated":"2022-03-13 14:27:34","systemWhoCreated":"systemUnknown"}]
