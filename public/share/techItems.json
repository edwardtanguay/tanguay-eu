[
    {
        "body": "- an open-source mobile application framework created by Facebook, used to develop applications for Android, iOS and UWP by enabling developers to use React along with native platform capabilities\n- React Native lets you build mobile apps using only JavaScript\n- you don't have to build the same application for iOS and Android, separately as React Native allows your developers to reuse the common logic layer\n- the working principles of React Native are virtually identical to React except that React Native does not manipulate the DOM via the Virtual DOM. It runs in a background process (which interprets the JavaScript written by the developers) directly on the end-device and communicates with the native platform via a serialisation, asynchronous and batched Bridge\n- **Expo**\n- two ways to build React Native apps: with or without Expo\n- without Expo\n- you will have 5% tweaking of code in iOS and Android\n- with [Expo](https://docs.expo.dev/)\n- Expo is the fastest way to build React Native apps\n- you will never touch any native iOS or native Android code\n- don't need Xcode or Android Studio\n- over-the-air updates\n- expo features: camera, file system, location, social authentication, push notifications\n- free and open source\n- Expo has four tools:\n- Client (on device to debug)\n- Expo CLI (develop and publish)\n- Expo Snack (IDE)\n- SDK (apis)\n- install\n- on smartphone install expo app\n- `npm install --global expo-cli`\n- `expo init expo_prelive3`\n- tabs and TypeScript (complex)\n- `expo init expo_prelive4`\n- minimal\n- couldn't connect\n- `expo init expo_prelive5`\n- blank\n-\n- tabs and TypeScript (complex)\n-",
        "extras": "$rank=4.1;$quick=a popular JavaScript framework for building mobile apps;$todo=worth learning",
        "genericTermIdCode": "Mobile Framework",
        "id": 1,
        "systemWhenCreated": "2019-05-20 15:04:44",
        "systemWhoCreated": "systemUnknown",
        "title": "React Native"
    },
    {
        "body": "- {created 2013} by Facebook\n\t- **2013-2017**\n\t\t--------------------------\n\t\tvar CodeExercises = React.createClass({\n\t\t\trender: function() {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Testing</h1>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\t--------------------------\n\t- **2016**: Version 15.0.0\n\t- **2017**: Version 16.0.0\n\t\t------------------------------\n\t\timport React, { Component } from 'react'\n\n\t\tclass CodeExercises extends Component {\n\t\t\trender() {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Testing</h1>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t------------------------------\n\t- **2017**: Version 16.3.0\n\t\t- the Context API which worked similar to Redux and allowed to manage state in multiple components using Context Object, Provider, and Consumer\n\t\t\t- 2020: Facebook launched Recoil, which is a brand new experimental JavaScript state management library that addresses many of the problems larger applications face when using the existing Context API\n\t- **2019-02**: Version 16.8 (hooks)\n\t\t- add state to function components\n\t\t- hooks always start with use\n\t\t---------------------------\n\t\tfunction CodeExercises() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Testing</h1>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\t---------------------------\n\t- **2020-02**: Version 16.13\n\t- **2020-10**: Version 17\n- a JavaScript library for building user interfaces\n- is not a complete application framework like Angular, it is just a view layer\n- React itself is not a framework, you need to add extra stuff to make it shine\n- React by itself doesn’t do all the pieces, instead, it intends to be bolted onto an existing stack\n- **React abstracts away the DOM from you, giving a simpler programming model and better performance**\n- React hooks\n\t- useState()\n\t- useEffect()\n\t- useContext()\n\t- useReducer()\n\t- useRef() - access the DOM directly\n\t- useReducer() \n\t\t- complex logic, alternative to useState(), similar to Redux\n\t\t- more complex than useState\n\t\t- if you have many state variables\n\t\t- `const [state, dispatch] = useReducer(reducer, initialArg)\n\t- useContext() - global variables\n\t- useMemo() / useCallback() - optimize\n\t- customized hooks\t\n- React component lifecycle\n\t- both class and function components have life cycles\n\t\t- **function components are preferable to class components**\n\t\t\t- \"As of version 16.8 and 17.0, the term stateless functional components is misleading and should be avoided. Functional components can have a state and they can have hooks which act as the lifecycle methods, so they more or less overlap with class components and can be used instead of functional components.\"\n\t\t\t- two reasons why functional components are preferable in most cases\n\t\t\t\t- React provides **the `useEffect` hook which is a very clear and concise way to combine the `componentDidMount`, `componentDidUpdate` and `componentWillUnmount` lifecycle methods**\n\t\t\t\t- With hooks you can **more easily extract logic that can be easily shared across components** and testable, instead of bound up with individual classes or their parents. Classes are one big component that can't be broken down or reused\n\t\t- nevertheless, in order to be **backward-compatible** and understand React at a deeper level, one should at least have an understanding of class component life cycle that allows you to understand class component code\n\t- **class component life cycle**\n\t\t- Mounting methods\n\t\t\t- **constructor()**\n\t\t\t\t- as in any class, the constructor \"constructs the environment for the class,\" e.g. define variables with values for the class to use\n\t\t\t- componentWillMount()\n\t\t\t\t- deprecated\n\t\t\t\t- has little use since was between constructor and render\n\t\t\t- **render()**\n\t\t\t\t- implements the components on the DOM\n\t\t\t- **componentDidMount()**\n\t\t\t\t- after the HTML from render has finished loading\n\t\t\t\t- signals that the component and all its sub-components have rendered properly\n\t\t\t\t- the best place to make API calls \n\t\t\t\t- good place to do all the setup you couldn't have done without the DOM\n\t\t\t\t- add event listeners\n\t\t\t\t- draw on an element you just rendered\n\t\t- Updating methods\n\t\t\t- componentWillReceiveProps()\n\t\t\t\t- set to be deprecated in React 16.3.\n\t\t\t\t- here we have access to the next set of props and the present ones\n\t\t\t\t\t- check if anything has really changed\n\t\t\t- shouldComponentUpdate()\n\t\t\t\t- called before the component re-renders after receiving a new set of props or there's a new state\n\t\t\t\t- a good place to improve the performance of a component because it can help to prevent unnecessary re-rendering\n\t\t\t- componentWillUpdate()\n\t\t\t\t- deprecated in React 16.3\n\t\t\t- render()\n\t\t\t\t- implements the change on the DOM\n\t\t\t- **componentDidUpdate()**\n\t\t\t\t- called after any rendered HTML has finished loading\n\t\t\t\t- best place to perform an interaction with a non-React environment like the browser or making HTTP requests\n\t\t- Unmounting methods\n\t\t\t- **componentWillUnmount()**\n\t\t\t\t- called right before a component is removed from the DOM\n\t\t\t\t- perform any cleanups that should be done such as invalidating timers, canceling network requests, removing event listeners \n\t\t\t- componentDidCatch()\n\t\t\t\t- used to catch an unhandled JavaScript error in a child component tree and display a fallback UI instead of the component that crashed\n\t- **function component life cycle**\n\t\t- basic hooks\n\t\t\t- **useState()**\n\t\t\t\t- returns a stateful value, and a function to update it, and allows you to set a default value\n\t\t\t\t\t- `const [status, setStatus] = useState('online');`\n\t\t\t- **useEffect()**\n\t\t\t\t- like an escape hatch from React's purely functional world into the imperative world\n\t\t\t\t\t- *\"do this when this state variable changes\"*\n\t\t\t\t- by default, effects run after every completed render, but you can choose to fire them only when certain values have changed\n\t\t\t\t\t- `});`\n\t\t\t\t\t\t- execute everytime state variables change\n\t\t\t\t\t- `}, []);`\n\t\t\t\t\t\t- execute only on page load\n\t\t\t\t\t- `}, [firstName]);`\n\t\t\t\t\t\t- execute everytime the state variable `firstName` changes\n\t\t\t\t\t- `}, [firstName, lastName, status]);`\n\t\t\t\t\t\t- execute everytime one of the state variables `firstName`, `lastName` or `status` changes\n\t\t\t- **useContext()**\n\t\t\t\t- used to create common data that can be accessed throughout the component hierarchy without passing the props down manually to each level\n\t\t- additional hooks\n\t\t\t- useReducer()\n\t\t\t\t- alternative to useState\n\t\t\t\t- preferable to useState when you have complex state logic that involves multiple sub-values or when the next state depends on the previous one. useReducer also lets you optimize performance for components that trigger deep updates \n\t\t\t- **useRef()**\n\t\t\t\t- used primarily as a way to access the DOM\n\t\t\t\t\t- but also handy for keeping any mutable value around similar to how you'd use instance fields in classes\n\t\t\t\t\t- useRef() creates a plain JavaScript object\n\t\t\t\t- is like a box that can hold a mutable value in its `.current` property\n\t\t\t\t- keep in mind that useRef doesn’t notify you when its content changes\n\t\t\t\t- mutating the `.current` property doesn’t cause a re-render\n\t\t\t- useMemo()\n\t\t\t\t- used as a performance optimization\n\t\t\t\t- helps to avoid expensive calculations on every render\n\t\t\t- useCallback()\n\t\t\t\t- like `useMemo()` but passes an inline callback and an array of dependencies\n\t\t\t\t- `useCallback(fn, deps)` is equivalent to `useMemo(() => fn, deps)`\n\t\t\t- useImperativeHandle()\n\t\t\t\t- customizes the instance value that is exposed to parent components when using ref\n\t\t\t- useLayoutEffect()\n\t\t\t\t- signature is identical to useEffect, but it fires synchronously after all DOM mutations\n\t\t\t\t- use this to read layout from the DOM and synchronously re-render\n\t\t\t\t- updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint\n\t\t\t\t- if you're migrating code from a class component, note useLayoutEffect fires in the same phase as componentDidMount and componentDidUpdate\n\t\t\t\t- React recommends starting with useEffect first and only trying useLayoutEffect if that causes a problem\n\t\t\t- useDebugValue()\n\t\t\t\t- can be used to display a label for custom hooks in React DevTools\n\t\t- custom hooks\n\t\t\t- useToggle()\n\t\t\t\t- `const [isOnline, toggleIsOnline] = useToggle(false)`\n\t\t\t\t- `onClick={toggleIsOnline}`\n\t\t\t\t- `onClick={() => toggleIsOnline(true)}`\n\t\t\t\t- `onClick={() => toggleIsOnline(false)}`\n\t\t\t- useUpdateEffect()\n\t\t\t\t- execute only on update, not on page load\n\t\t\t- useArray()\n\t\t\t\t- `onClick={() => pushScore(7)}`\n\t\t\t\t- `onClick={() => update(1,9)}`\n\t\t\t\t- `onClick={() => remove(0)}`\n\t\t\t\t- `onClick={() => filter(n => n < 5)}`\n- tools\n\t- https://codesandbox.io\n- [MERN](https://codingthesmartway.com/the-mern-stack-tutorial-building-a-react-crud-application-from-start-to-finish-part-1/)\n- concepts\n\t- React Suspense\n\t\t- lazy loading components is the only use case supported by React.Suspense\n\t- Time Slicing\n\t\t- the most awaited feature in version 17\n\t\t\t- expected to hugely improve performance and demand little attention on the development side\n\t\t\t- slices the computations of updates for children components during the callback, therefore their rendering can be spread over time\n\t\t- React Suspense and Time Slicing are about optimizing heavy workloads for slow devices\n\t\t- React 17 along with Time Slice and Suspense API\n\t- concurrent mode\n\t\t- a change in how React schedules updates to your UI\n\t- React Async\n\t\t- You can find it as react-async on npm.\n\t\t- React Async uses the React Context API to pass data down to the helper components\n\t- [React Fire](https://github.com/facebook/react/issues/13525)\n\t\t- an effort to modernize React DOM\n\t\t- many of the polyfills in React are unnecessary for modern browsers, and some of them create more issues than they solve\n\t\t- to make React better aligned with how the DOM works\n\t\t- at this stage, the project is very exploratory\n- React State Management\n\t- Why state management?\n\t\t- \"In the simplest definition, State is a JavaScript object that represents the part of a component that can change based on a resultant action of a user. You could also say states are simply the memory of a component. When a user performs an action in a typical React app, changes occur in the component's state. While this isn't bad, it quickly becomes a problem if the app begins to scale; hence, such an app's complexity makes it extremely difficult to keep track of all dependencies.\"\n\t- SMALL STATE\n\t\t- 1. **useState** Hook - standard state variables\n\t\t- 2. **useReducer** Hook - group-organized useState variables\n\t\t- 3. **useContext** Hook - global state instead of prop-passing\n\t\t\t- makes up part of React's Context API, the other parts being the Provider and Consumer components\n\t\t\t- \"Context can make a nice simple alternative to Redux when your data is simple or your app is small.\"\n\t\t\t- \"You might also be wondering - what about React Context? Do you need a state management library at all? Using React Context does have some potential downsides when it comes to performance. Any changes to state will cause re-renders for components that are using that state.\"\n\t- LARGE STATE\n\t\t- 5. **Redux**\n\t\t\t- [https://react-redux.js.org](https://react-redux.js.org)\n\t\t\t- it provides a JavaScript object called the store, which, once set up, includes all states in your application and updates them when necessary\n\t\t\t- pros\n\t\t\t\t- widespread, active community\n\t\t\t\t- easy to test and debug\n\t\t\t\t- designed for use with frequently updated data\n\t\t\t\t- eliminates unnecessary re-renders and the view refreshes when changing a specific object in the store\n\t\t\t\t- tools to use async actions such as [Redux-Thunk](https://www.npmjs.com/package/redux-thunk) or [Redux-Saga](https://redux-saga.js.org)\n\t\t\t- cons\n\t\t\t\t- not built-in React which increases the ultimate size of the package\n\t\t\t\t- confusing for beginners due to its hidden logic\n\t\t\t\t- requires more configuration than Context API, and there's more terminology to learn\n\t\t\t\t- large boilerplate, but this can be solved by using [Redux-Toolkit](https://redux-toolkit.js.org)\n\t\t\t\t- \"I've been a fan of Redux in the past mostly for its functional style, it tends to be too much for your average application. It's a steep learning curve and quite a bit of boilerplate, but most of all it distances the data fetching from the data presentation. I like to keep things simple, so I went back to the basics: local useState.\"\n\t\t\t\t- \"Redux has been the go-to solution for state management since its conception in 2015. You-should-use-Redux became such a universal truth, that so many started using it without really understanding why. And there are situations where Redux isn't the best option.\"\t\t\t\t\n\t\t- 6. **Mobx**\n\t\t\t- [https://mobx.js.org](https://mobx.js.org)\n\t\t\t- simpler than Redux\n\t\t\t- use Redux for more complex applications\n\t\t\t- \"When it comes to implementing state management, developers often find it challenging dealing with boilerplate code in Redux. Hence, MobX has proved to be a good alternative to Redux which gives the same functionality with less code to write.\"\n\t\t- 7. **Recoil**\n\t\t\t- [https://recoiljs.org](https://recoiljs.org)\n\t\t\t- the newest tool on the state management community\n\t\t\t- \"Recoil feels like using a global version of React's useState\"\n\t\t\t- \"Recoil doesn't impose a strict learning curve as Redux and Mobx do. They aren't so much to learn asides from Atom and Selectors, which are easy to understand.\"\n\t\t\t- \"In Redux, we have the concept of a centralised store where all the data for our app lives. Recoil instead splits your state into individual atoms. You would have one atom for listName, and another for tasks. In our to-do list example, if we had 20 separate tasks, we would have 20 separate atoms. If we edited the fifth task, only the fifth task would need to re-render.\"\n\t\t\t- Recoil is still in an experimental phase, while Redux is an established library\n\t\t\t- \"the only reason I have used Recoil in any of my projects is when I don't intend to have so much Redux boilerplate in my codebase. I have used Recoil on production once, and nothing terrible has happened; everything still works very well to date\"\n\t\t\t- \"Recoil is for lovers of simplicity\"\n\n- [React Frameworks](https://coffeencoding.com/cra-vs-next-js-vs-gatsby)\n\t- [CRA](https://create-react-app.dev/docs/getting-started/)\n\t- [Next.js](https://nextjs.org/)\t\n\t\t- a minimalistic framework for server-rendered React applications\n\t\t- server side rendering just keeps getting better and better\n\t\t- instead of PHP, we build the app with JavaScript and React\n\t\t- Webpack-based dev environment\n\t\t- create-react-app can be classified as a tool in the \"JavaScript UI Libraries\" category, while Next.js is grouped under \"Frameworks (Full Stack)\"\n\t- [Gatsby](https://www.gatsbyjs.org/)\n\t\t- free and open source framework based on React that helps developers build blazing fast websites and apps\n- [Storybook for React](https://storybook.js.org/docs/guides/guide-react/)\n\t- a user interface development environment and playground for UI components\n\t- enables developers to create components independently and showcase components interactively in an isolated development environment\n\t- runs outside of the main app so users can develop UI components in isolation without worrying about app specific dependencies and requirements\n- [Docz](https://www.docz.site/)\n\t- powered by Gatsby since version 2\n\t- MDX is Markdown + JSX, it brings the world of components to Markdown. MDX makes it possible to import and use your components in Markdown-style files\n\t- Docz provides native TypeScript support for TSX components\n- [Emotion](https://emotion.sh/docs/introduction)\n\t- a CSS library designed for writing css styles with JavaScript\n- [styled-components](https://styled-components.com/docs/basics)\n\t- enhanced CSS for styling React component systems\n- CSR vs. SSR\n\t- client-side rendering\n\t\t- advantages\n\t\t\t- less work for the server\n\t\t- disadvantages\n\t\t\t- lots of round-trips\n\t- server-side rendering\n\t\t- advantages\n\t\t\t- less round trips\n\t\t- disadvantages\n\t\t\t- more stress on the server\n- design patterns\n\t- controlled/uncontrolled components\n\t\tuncontrolled components\n\t\t\t- components that keep track of their own state and release data only when event occurs\n\t\t\t- e.g. parent only sends in onSubmit but no data into the component\n\t\t- controlled components\n\t\t\t- parent sends them and their state\n\t\t\t- we prefer controlled components\n\t\t\t\t- more reusable \n\t\t\t\t- easier to test\n\t- onboarding flow\n\t\t- an onboarding experience of a new product should be fast, fun and educational\n\t\t- an onboarding flow is a series of information panels that a user clicks through\n\t\t- basic code\n\t\t\t-----------------------------\n\t\t\texport const onboardingFlow = ({ children, onFinish }) => {\n\t\t\t\tconst [onboardingData, setOnboardingData] = useState({});\n\t\t\t\tconst [currentIndex, setCurrentIndex] = useState(0);\n\n\t\t\t\tconst currentChild = React.Children.toArray(children)[currentIndex];\n\n\t\t\t\tif(React.isValidElement(currentChild)) {\n\t\t\t\t\treturn React.cloneElement(currentChild, { goToNext });\n\t\t\t\t}\n\t\t\t}\n\t\t\t-----------------------------\n\t\t- state variables\n\t\t\t-  = {}\n\t\t\t-  = 0\n\t\t\t- ``\n\t- higher order components \n\t\t- do not return JSX but another component\n\t\t- they add another level, somewhat like the Factory pattern in OOP\n\t\t- they are used to share behavior between components\n\t\t- don't start with a capital letter\n\t\t- often named with `with`\n- [DOM Testing Library](https://testing-library.com/docs/dom-testing-library/intro)\n\t- de la même manière que le ferait un utilisateur\n\t- il est déjà installée avec tout projet qui est été créé avec create-react-app\n\t- `npm i -D @testing-library/react`",
        "extras": "$rank=4.93;$quick=currently the most popular front-end JavaScript framework along with Vue and Angular;$todo=definitely learn this",
        "genericTermIdCode": "JavaScript Framework",
        "id": 2,
        "systemWhenCreated": "2019-05-22 16:45:55",
        "systemWhoCreated": "systemUnknown",
        "title": "React"
    },
    {
        "body": "- dependency injection is a technique whereby one object supplies the dependencies for another object\n- makes testing easy since you can send in completely mocked databases and other resources",
        "extras": "$rank=3.2;$quick=an advanced programming concept but necessary in complex applications;$todo=learn eventually",
        "genericTermIdCode": "Programming Concept",
        "id": 3,
        "systemWhenCreated": "2019-05-20 14:42:56",
        "systemWhoCreated": "systemUnknown",
        "title": "dependency injection"
    },
    {
        "body": "- {created: 2010}\n- syntactically similar to C++ but is designed to provide better memory safety while maintaining high performance\n- originally designed by Graydon Hoare at Mozilla Research\n- compiler is free and open-source \n- was the \"most loved programming language\" in the Stack Overflow Developer Survey for 2016, 2017, 2018, and 2019\n- intended to be a language for highly concurrent and highly safe systems, and programming in the large, that is, creating and maintaining boundaries that preserve large-system integrity",
        "extras": "$rank=2.1;$quick=a newer lower-level language like C++ with better memory safety;$todo=popular but not interesting for front-end developers",
        "genericTermIdCode": "Programming LanguageProgramming Language",
        "id": 4,
        "systemWhenCreated": "2019-05-20 15:12:35",
        "systemWhoCreated": "systemUnknown",
        "title": "Rust"
    },
    {
        "body": "- easy to learn, popular language popular with **data scientists, mathematicians, statisticians**\n- versions\t\n\t- {created: 1994}: Python 1.0 by Guido van Rossum\n\t- 2000: Python 2.0\n\t- 2008: Python 3.0\n\t- 2015: end-of-life date for Python 2.7\n\t- Oct 2019: Python 3.8\n\t- May 2020: Python 3.9\n\t- **Dec 2021: Python 3.10**\n\t\t- \"The Python language sheds its skin every [17 months](https://www.python.org/dev/peps/pep-0602/) and comes out as an improved creature.\"\n- PEP/PIP/PyPI\n\t- [PEP](https://en.wikipedia.org/wiki/Python_(programming_language)#Development) = Python Enhancement Proposal \n\t\t- Python's development is conducted largely through the Python Enhancement Proposal process, the primary mechanism for proposing major new features, collecting community input on issues and documenting Python design decisions\n\t\t- a PEP is a technical design doc for the Pythong community\n\t\t- three kinds of PEP\n\t\t\t- Standards Track PEP\n\t\t\t\t- new feature for Python\n\t\t\t- Informational PEP\n\t\t\t\t- Python design issue\n\t\t\t\t- don't necessarily represent a consensus in the community\n\t\t\t- Process PEP\n\t\t\t\t- procedures and guidelines\n\t\t\t\t- require community consensus\n\t\t- Python releases\n\t\t\t- every 17 months\n\t- [PIP](https://en.wikipedia.org/wiki/Pip_(package_manager)) = PIP Installs Packages\n\t\t- released 2011 by Ian Bicking (started 2008)\n\t\t- package manager for Python\n\t- [PyPI](https://en.wikipedia.org/wiki/Python_Package_Index) = Python Package Index\n\t\t- pronounced [pigh-pigh]\n\t\t- analogous to the CPAN repository for Perl[6] and to the CRAN repository for R\n\t\t- the official repository for third-party Python software\n\t\t- some package managers, including pip, use PyPI as the default source for packages and their dependencies\n- **collection types**\n\t- lists `[]`\n\t\t- like **arrays**\n\t\t- ordered, changeable and allow duplicates\n\t\t- **variable length**\n\t\t- more functionality than tuples\n\t- tuples `()`\n\t\t- ordered, unchangeable, and allow duplicates\n\t\t- **fixed length**\n\t\t- use to store a sequence of **items that will not change**\n\t- sets `{}`\n\t\t- unordered and unindexed\n\t\t- no duplicates\n\t\t- appear in a different order every time you use them\n\t\t- faster in determining if an item is present (i in s)\n\t- dictionaries `{--:--}`\n\t\t- like JSON or JavaScript objects\n- modules\n\t- venv\n\t\t- creates virtual environments with their own site directories\n\t\t\t- has its on Python version and packages\n\t\t\t- directories optionally separated from system site directories\n- [fourth most popular technology](https://insights.stackoverflow.com/survey/2019#technology)\n- 2019: Python is the most wanted language for the third year in a row\n- created by Guido van Rossum and first released in 1991\n- emphasizes code readability with its notable use of significant whitespace\n- described as a \"batteries-included language\" due to its comprehensive standard library\n- uses whitespace indentation, rather than curly brackets or keywords\n- libraries\n\t- Pandas\n\t- NumPy\n\t- [scikit-learn](https://scikit-learn.org/stable)\n- code examples\n\t- https://github.com/edwardtanguay/python2022",
        "extras": "$rank=4.3;quick=an older but pragmatic language and increasingly popular today used widely by scientists and mathematicians;$todo=easy to learn and worth it",
        "genericTermIdCode": "Programming Language",
        "id": 5,
        "systemWhenCreated": "2019-05-24 15:45:25",
        "systemWhoCreated": "systemUnknown",
        "title": "Python"
    },
    {
        "body": "- {created:2011}\n- a language designed to **interoperate fully with Java** and improve on it\n- type inference allows its syntax to be more concise\n- since May 2019, Kotlin is Google's **preferred language for Android** app development\n- mainly targets the JVM, but **also compiles to JavaScript**\n- sponsored by **JetBrains and Google** through the Kotlin Foundation.",
        "extras": "$rank=2.1;$quick=Google's new Java language;$todo=not that interesting for front-end development",
        "genericTermIdCode": "Programming LanguageProgramming Language",
        "id": 7,
        "systemWhenCreated": "2019-05-20 15:14:53",
        "systemWhoCreated": "systemUnknown",
        "title": "Kotlin"
    },
    {
        "body": "- 2000, a software versioning and revision control system, popular but being replaced by Git\n- now a top-level Apache project\n- CollabNet founded the Subversion project in 2000",
        "extras": "$rank=3.7;$quick=the second most popular revision control system behind Git;$todo=easy and worth learning",
        "genericTermIdCode": "Revision Control System",
        "id": 8,
        "systemWhenCreated": "2019-05-20 15:00:17",
        "systemWhoCreated": "systemUnknown",
        "title": "SVN"
    },
    {
        "body": "- **2015**, an open-source container orchestration system for automating application deployment, scaling, and management, works with e.g. Docker\n- **originally designed by Google**, and is now maintained by the Cloud Native Computing Foundation\n- works with a range of container tools, including Docker\n- Rancher is a good interface to it, makes Kubernetes simpler\n- versions\n\t- 2015 - Version 1.0\n\t- 2019-03 - Version 1.14\n\t- 2020-08 - Version 1.19",
        "extras": "$rank=2.9;$quick=platform used for large-scale application automation; $todo=learn if you get into cloud deployment and docker, etc.",
        "genericTermIdCode": "Container Platform",
        "id": 9,
        "systemWhenCreated": "2019-05-20 15:17:05",
        "systemWhoCreated": "systemUnknown",
        "title": "Kubernetes"
    },
    {
        "body": "- 2012, a JavaScript task runner, a tool used to automatically perform frequent tasks such as minification, compilation, unit testing, and linting.\n- written in Node.js",
        "extras": "$rank=4.8;$quick=the older of the two task runners Grunt and Gulp;$todo=worth learning, easier than Gulp",
        "genericTermIdCode": "Task Runner",
        "id": 10,
        "systemWhenCreated": "2019-05-20 15:31:44",
        "systemWhoCreated": "systemUnknown",
        "title": "Grunt"
    },
    {
        "body": "- 2017, a task runner built on Node.js and npm, used for automation of time-consuming and repetitive tasks involved in web development like minification, concatenation, cache busting, unit testing, linting, optimization",
        "extras": "$rank=4.7;$quick=the newer of the two popular JavaScript task runners;$todo=has a steeper learning curve than Grunt",
        "genericTermIdCode": "Task Runner",
        "id": 11,
        "systemWhenCreated": "2019-05-20 15:31:25",
        "systemWhoCreated": "systemUnknown",
        "title": "Gulp"
    },
    {
        "body": "- {created: 2005}\n- a distributed version-control system for tracking changes in source code during software, created by Linux Torvalds, becoming the default version-control system in software projects\n- **code areas**\n\t- 1. *work area* (VSCode = \"Changes\")\n\t\t- untracked files\n\t\t\t- files that you create\n\t\t- pull a file back out from *staging area* with `git reset another.txt`\n\t- 2. *staging area*\n\t\t- files are moved from *work area* to *staging area* with `git add .`\n\t\t- rational for a staging area\n\t\t\t- \"You've hammered-out a bug-fix in your workspace. Looking at the backlog however, you realize the bug-fix is really in two conceptual parts, addressing two distinct underlying issues. Having a staging area allows you to 'stage' first half the bug fix, and commit that to your local. Then, you can 'stage' the second half of the bug fix, and commit that separately.\"\n\t- 3. *local repository*\n\t- 4. *remote repository*\n- **remote branches**\n\t- branch tip\n\t\t- the last commit or most recent commit on a branch, basically the most up to date code in the branch\n\t- remote tracking branch\n\t\t- a local branch that stays in sync with its same-named remote branch\n\t- stale branch\n\t\t- a remote tracking branch that no longer tracks a remote branch because it has been deleted\n- **prune branches**\n\t- pruning\n\t\t- delete all stale remote-tracking branches\n\t- remote branches have three parts\n\t\t- et/feat/001 (remote branch)\n\t\t- origin/et/feat/011 (local snapshot)\n\t\t- et/feat/001 (remote tracking branch [local])\n\t\t- fetch does not automatically prune for us, so you have to do it yourself\n\t\t\t- `git remote prune origin` (`--dry-run`)\n\t\t\t- or fetch and prune at the same time: `git fetch --prune` or `git fetch -p`\n\t\t\t- or set globally\n\t\t\t\t- `git config --global fetch.prune true`\n\t\t- has NOTHING to do with `git prune` which is a part of `git gc` (garbage collection)\n- **tags**\n\t- a tag allows you to mark at point in your git history as being important\n\t\t- essentially a named reference to a commit\n\t- used to mark releases like v1.0\n\t- two types of tags\n\t\t- lightweight tag\n\t\t\t- `git tag issue136 655564565`\n\t\t- annotated tag (most popular)\n\t\t\t- `git tag -a v1.0 -m \"Version 1.0\" cfb0421`\n\t- list tags\n\t\t- `git tag -l`\n\t\t- `git tag -l \"v*\"`\n\t\t- `git tag -ln` (with a[n]notation)\n\t- use tags\n\t\t- `show v1.0`\n\t\t- `git diff v1.0..v2.0`\n\t- delete\n\t\t- `git tag -d v2.0`\n\t- pushing tags to remote\n\t\t- `git push` does not push tags\n\t\t- `git fetch` does retrieve tags\n\t\t- `git fetch --tags` (only fetch tags)\n\t\t- `git push origin v1.0`\n\t\t- `git push origin --tags` (push all tags)\n\t\t- `git push -d origin v1.1` (delete remote tag)\n\t- tags are not the same as branches\n\t\t- can't keep making commits on a tag\n\t\t- but tags can be checked out as a branch\n\t- using tags\n\t\t- when you `git checkout v1.1` you don't create a new branch but move back to that point in the git history and can try things out, then can later `git checkout main` again to get back to where you were\n\t\t\t- but if you add work and make commits at this point, you will run into problems\n\t\t\t- commits will eventually be garbage collected by Git\n\t\t\t- detached head state\n\t\t\t- but ways to save your work in detached head state\n\t\t\t\t- tag commits\n\t\t\t\t- create a branch\n\t\t\t\t- best: `git checkout -b /et/feat/003`\n\t\t- get back with `git checkout main`\n- **interactive staging**\n\t- allows staging of portions of changed files\n\t- get into interactive staging\n\t\t- `git add -i`\n\t- patch mode\n\t\t- stage only portions of file\n\t\t- hunk = areas where two files differ\n\t\t\t- can be stages, skipped or split into smaller hunks\n\t\t- patch mode is also for checkouts etc.\n\t\t\t- `git add -p`\n\t- edit hunk\n\t\t- useful when hunk has no unchanged lines between it to split\n\t\t- e = move into editor to change the + and - etc. \n- **cherry picking**\n\t- apply changes from one or more existing commits\n\t- each commit is recorded as a new commit on the current branch\n\t- these new commits have different SHAs\n\t- `git cherry-pick d5a345`\n\t- `git cherry-pick d5a345..a2e838`\n\t- you can even cherry-pick from a remote branch\n\t\t- but you can't cherry-pick from a merge commit, since it is merging together two sets\n\t- adding `-e` will allow you to edit the commit message\n\t- conflicts\n\t\t- shows conflict\n\t\t- `git status`\n\t\t- `git cherry-pick --continue`\n- **diff patches**\n\t- share changes via files\n\t- put changes into files, e-mail them\n\t- `git diff 324ae32 a323342 > for_review.diff`\n\t\t- the file is just the output of the diff command\n\t- diff has not history of changes\n\t\t- you have to commit them\n\t- make a branch from a certain commit\n\t\t- `git checkout -b et/feat/old003 324ae32`\n\t- `git apply for_review.diff`\n\t- formatted patches (git history is inside the patch)\n\t\t- UNIX mailbox format\n\t\t\t- also includes commit messages\n\t\t\t- 5 commits, 5 files \n\t\t- `git format-patch 324ae32 a323342 > for_review.diff`\n\t\t- `-o <directory>`\n\t\t- single file: `-- stdout feature.patch`\n\t\t- has [PATCH 1/2]\n\t\t- applying\n\t\t\t- `git am for_review.patch` (am - [a]pply [m]ailbox patch)\n\t- if you want to do something like cherry-picked, then use formatted patches, otherwise diff patches\n- **forced push**\n\t- when someone commits bad code and you need to force your version onto the remote repository and they need to reset it\n\t\t- you do `git push --force` and everyone else does `git reset --hard origin/main`\n- **branches**\n\t- create branch\n\t\t- `git checkout -b et/feat/001` (and switch to it)\n\t\t- `git branch et/feat/001`\n\t- find unmerged branches\n\t\t- which branches have been merged\n\t\t\t- `git branch --merged`\n\t\t\t- (for remote branches) `git branch -r --merged`\n\t\t- which branches contain commits that have not been added to the current branch\n\t\t\t- `git branch --no-merged`\n\t- merge branches\n\t\t- `git checkout main`\n\t\t- `git merge et_feat_miniframeworkImages`\n\t- delete branches\n\t\t- local\n\t\t\t- `git branch -d et/feat/add_checkboxes`\n\t\t\t- `git branch -D et/feat/add_checkboxes` (force)\n\t\t- remote\n\t\t\t- `get push origin :et/feat/add_checkboxes` (old syntax, you are pushing NOTHING to the remote branch, hence deleting it)\n\t\t\t- `git push --delete origin et/feat/another-useless-feature`\n\t\t\t- `git push -d origin et/feat/another-useless-feature` (newest syntax)\n\t- get a commit back from a branch you deleted\n\t\t- `git reflog`\n\t\t- (copy the sha of the commit you want)\n\t\t- `git checkout -b <branch> <sha>`\n- **basic commands**\n\t- an untracked file becomes a tracked file when it is added using git add [file]\n\t- `git remote set-url origin https://github.com/edwardtanguay/n49999_mysite.git`\n\t- commands when you set up a new repository\n\t\t- ...or push an existing repository from the command line\n\t\t- `git remote add origin https://github.com/edwardtanguay/test9999999.git`\n\t\t- `git branch -M main` (-M = rename)\n\t\t- `git push -u origin main` (-u = same as --set-upstream, add upstream (tracking) reference)\n- **rebasing commits**\n\t- take commits from a branch and replay them at the end of another branch\n\t- useful to integrate recent commits without merging\n\t- some large teams require rebasing of topic or feature branches\n\t- e.g. it takes e.g. a feature branch and replays the commits on top of the master branch\n\t\t- the SHA of the commits will change\n\t\t- you are just moving the commits of a branch down to the tip of another branch\n\t- vs. cherry-pick\n\t\t- git cherry-pick usually brings a commit from somewhere else and applies it on top of your current branch, recording a new commit, while git rebase takes your current branch and rewrites a series of its own tip commits in one way or another\n\t- vs. merging\n\t\t- both are ways to incorporate changes from one branch into another branch\n\t\t- both have similar ends but the means are different\n\t\t- **with rebase, the SHAs are changed, but not with merging**\n\t\t- merging\n\t\t\t- nondestructive\n\t\t\t- easy to undo (do a hard reset)\n\t\t\t- record of what happened\n\t\t\t- logs can become cluttered and non-readable, especially if you wait a month, etc. to merge branches\n\t\t- rebasing\n\t\t\t- **rebasing is no big deal if it happens cleanly, but big deal with there are conflicts**\n\t\t\t- **rebasing is a destructive process**\n\t\t\t\t- we will no longer have a complete record of what happened and when\n\t\t\t\t- **rebasing is more difficult than merging**\n\t\t- when to use\t\n\t\t\t- **merge when you you want commits to stand out and be clearly grouped**\n\t\t\t- merge to bring large topic branches back into the main branch\n\t\t\t- rebase to add minor commits in master to a topic branch\n\t\t\t- rebase to move commits from one branch to another\n\t\t\t- **merge when the topic branch is already public and being used by others**\n\t- `git rebase main` (rebase current branch onto tip of main)\n\t- `git rebase main new_feature` (rebase new_feature branch onto tip of main)\n\t\t- does an automatic checkout of new_feature first\n\t- visual branches\n\t\t- `git log --graph --all --decorate --oneline`\n\t- the main tip is still below the commits replayed on top of it\n\t- the Golden Rule of rebasing: **\"Thou shalt not rebase a public branch!\"**\n\t\t- because rebase abandons existing, shared commits\n\t\t- collaborators would see part of the project history vanish\n\t\t- getting all your collaborators back in sync can be a nightmare\n\t\t- therefore, **use rebase only on branches that you use exclusively**\n\t- \"Git Rebase: more than a machine gun to shoot yourself in the foot with.\"\n\t- \"When you shoot yourself in the foot with rebase, you can accidentally take out half a suburb with you.\"\n\t- resolving conflicts\n\t\t- Git pauses rebase before each conflicting commit\n\t\t- `git rebase --continue`\n\t\t- `git rebase --skip`\n\t\t- `git rebase --abort`\n\t\t- just add and continue (you don't have to commit)\n\t- undoing a rebase\n\t\t- easy to loose data\n\t\t- you can undo a simple rebase\n\t\t\t- `git reset --hard ORIG_HEAD`\n\t\t\t\t- the SHA will then be the same as before\n\t\t\t\t- ORIG_HEAD keeps track of where things were\n\t\t\t\t- can use provided it hasn't changed\n\t\t\t- do another rebase and put back to where it used to be\n\t\t\t\t- the SHAs change again\n\t- interactive rebasing\n\t\t- makes a todo list \n\t\t- \"Git, tell me what you plan to do, and let me give you input on how to complete those tasks\"\n\t\t- pick, drop\n\t\t- reword, edit\n\t\t- squash, fixup\n\t\t- exec (runs command from shell, not that useful)\n\t\t- `git rebase -i main new_feature`\n\t\t\t- -i = \"pause and let me give you some additional input\"\n\t\t\t- rebase new_feature to the tip of master\n\t\t- used to edit commits without moving them to a new merge base\n\t\t\t`git rebase -i HEAD~3`\n\t- Git **collects the commits in a feature branch and replays the commits at the end of the master branch**\n\t- Git will pick up the commits and replay them where we tell it\n\t- `git rebase master` (rebase current to master); \n\t- `git rebase master new_feature` (rebase new_feature to master\n\t\t- in both the new_feature is branched off of master\t\t\t\n\t- squashing\n\t\t- fold two or more commits into one\n\t\t- concatenate messages\n\t\t- fixup: variation on squash but discards message\n\t\t- first commit should be the author you want\n\t\t- `git rebase -i HEAD~3`\n\t\t\t- shows\n\t\t\t\t-----------------\n\t\t\t\tpick\n\t\t\t\tpick\n\t\t\t\tpick\n\t\t\t\t-----------------\n\t\t\t- change to\n\t\t\t\t-----------------\n\t\t\t\tpick\n\t\t\t\tsquash\n\t\t\t\tfixup\n\t\t\t\t-----------------\n\t- pull rebase\n\t\t- fetch from remote, then rebase instead of merging\n\t\t\t- but should only be local commits that have not yet been shared to a remote\n\t\t- `git pull` is just a fetch followed by a merge\n\t\t- \"recommit what I am working on, onto the tip of the last commit that just got brought down\"\n\t\t\t- no merge is needed\n\t\t\t- \"just keep moving my changes further down the timeline\"\n\t\t- `git pull -r`\n\t\t- `git pull -r --rebase=preserve` (preserves locally created merge commits, doesn't flatten them)\n\t\t- `git pull -r --rebase=interactive`\n- **log**\n\t- \"Reading through \"git help log\" is one of the best investments you can make in learning Git.\"\n\t- `git log -p`\n\t\t- includes diffs for each commit\n\t- `git log -L 10,20:index.js`\n\t\t- automatically applies `p`\n\t\t- search for changes on specific lines\n\t- when listing log, you can search for text with `/`\n- **blame**\n\t- `git blame`\n\t- `git blame -w` (skip whitespace)\n\t- `git blame -L 10,20 index.js`\n\t\t- same: `git blame -L 10,+10 index.js`\n\t- `git blame a452b3`\n\t- `git config --global alias.praise blame`\n- **bisect**\n\t- find the commit that introduced a bug in our code\n\t- tell it the first known good and bad revision\n\t- sets code to mid-point\n\t\t- you decide if it is good or bad at that point\n\t- `git bisect start`\n\t\t- `git bisect bad <treeish>`\n\t\t- `git bisect good <treeish>`\n\t\t- `git bisect reset`",
        "extras": "$rank=4.9;$quick=the most-used revision control system today;$todo=learn it well",
        "genericTermIdCode": "Revision Control System",
        "id": 12,
        "systemWhenCreated": "2019-05-22 16:31:49",
        "systemWhoCreated": "systemUnknown",
        "title": "Git"
    },
    {
        "body": "- a build tool similar to Make and Rake, but written in and for JavaScript\n- it's a port of Ruby's Rake, but inspired by the classic Make",
        "extras": "$related=make, rake;$rank=3.1;$quick=a popular JavaScript build too; $todo=know about it",
        "genericTermIdCode": "Build Tool",
        "id": 13,
        "systemWhenCreated": "2019-05-20 15:05:48",
        "systemWhoCreated": "systemUnknown",
        "title": "Jake"
    },
    {
        "body": "- Rake is a software task management and build automation tool, written in Ruby",
        "extras": "$rank=1.8;$quick=one of the many Make tools, written in Ruby; $todo=know about it",
        "genericTermIdCode": "Build Tool",
        "id": 14,
        "systemWhenCreated": "2019-05-20 15:21:34",
        "systemWhoCreated": "systemUnknown",
        "title": "Rake"
    },
    {
        "body": "- 1976, Make is a build automation tool that automatically builds executable programs and libraries from source code by reading files called Makefiles which specify how to derive the target program\n- Make is one of the most widespread, primarily due to its inclusion in Unix",
        "extras": "$rank=2.4;$quick=on of the oldest and most popular build tools;$todo=know about it",
        "genericTermIdCode": "Build Tool",
        "id": 15,
        "systemWhenCreated": "2019-05-20 15:22:00",
        "systemWhoCreated": "systemUnknown",
        "title": "Make"
    },
    {
        "body": "- created in 2011 by Anton Kovalyov \n\t- a fork of the JSLint project by Douglas Crockford\n\t- felt JSLint was getting too opinionated",
        "extras": "$rank=3.2;$idCode=jshint;$quick=a code analysis tool that will help you write better JavaScript;$todo=worth incorporating in your project (but also see ESLint)",
        "genericTermIdCode": "Code Analysis Tool",
        "id": 16,
        "systemWhenCreated": "2019-05-20 15:43:20",
        "systemWhoCreated": "systemUnknown",
        "title": "JSHint"
    },
    {
        "body": "- ESLint checks your coding style and checks your code for bugs and other problems as well\n- it is the newest of the JavaScript code analysis tools, newer than JSHint and JSLint",
        "extras": "$idCode=eslint;$rank=3.9;$quick=the newest JavaScript code analysis tool;$todo=worth incorporating in your project",
        "genericTermIdCode": "Code Analysis Tool",
        "id": 17,
        "systemWhenCreated": "2019-05-20 15:43:20",
        "systemWhoCreated": "systemUnknown",
        "title": "ESLint"
    },
    {
        "body": "- a JavaScript test framework for Node.js programs\n- can use assertion libraries such as Chai\n- one of the **most flexible**\n- requires some additional setup and configuration\n- c'est celui qui fait de l'ombre à Jasmine parce que c'est également un très bon framework et c'est très utilisé\n- ca tourne en Node.js et est vraiment génial à utiliser mais **plus orienté sur les grosses applications**",
        "extras": "$rank=3.6; $quick=one of the most popular JavaScript testing frameworks; $todo=learn this with Chai",
        "genericTermIdCode": "JavaScript Testing Framework",
        "id": 18,
        "systemWhenCreated": "2019-05-20 16:02:57",
        "systemWhoCreated": "systemUnknown",
        "title": "Mocha"
    },
    {
        "body": "- {create: 2014} by **Facebook**\n- a JavaScript testing framework with a focus on simplicity\n- works with projects using: Babel, TypeScript, Node, React, Angular, and Vue\n- runs your tests **concurrently in parallel**, providing a smoother, **faster test run**\n- comes not only with a test runner, but also with its own assertion (e.g. [Chai](https://onespace.netlify.app/techItems?id=20) is an assertion library) and mocking library\n\t- different from other testing frameworks, there is no need to install and integrate additional libraries to be able to mock, spy or make assertions\n- works right **out of the box**\n\t- you just have to install it through npm or yarn, write your test, and run jest\n- recognizes files in three ways\n\t- `.test.js` extension\n\t- `.spec.js` extension\n\t- instide `test` directory\n- [snapshot](https://jestjs.io/docs/snapshot-testing)\n\t- renders a UI component, takes a snapshot, then compares it to a reference snapshot file stored alongside the test. The test will fail if the two snapshots do not match\n- tools\n\t- [npm i supertest](https://www.npmjs.com/package/supertest) \n\t\t- provides a high-level abstraction for testing HTTP, while still allowing you to drop down to the lower-level API provided by superagent\n\t\t- tests GET, POST, PUT, PATCH, DELETE\n\t\t- `const request = require('supertest');`\n\t- [npm i cross-env](https://www.npmjs.com/package/cross-env)\n\t\t- helps solve ENV issue on Windows\n- commands\n\t- `beforeAll()` and `afterAll()`\n\t\t- one-time setup before and after tests run\n\t- `describe`\n\t\t- group tests\n\t- `test()` or `it()`\n\t\t- the individual test\n\t- `expect()`\n\t\t- tests and combines with:\n\t\t\t- `toBe()` vs. `toEqual()`\n\t\t\t\t- *\"When comparing primitive types, toEqual() and toBe() will yield the same result. When comparing objects, toBe() is a stricter comparison, and if it is not the exact same object in memory this will return false. So unless you want to make sure it's the exact same object in memory, use toEqual() for comparing objects.\"*\n\t\t\t- `toStrictEqual()`\n\t\t\t\t- for objects\n\t\t\t- more at the [documentation](https://jestjs.io/docs/expect)\n\t\t- here are some [examples](https://github.com/edwardtanguay/activity-javascript-functions-001/blob/master/ex003.test.js)\n- matchers\n\t- **most useful matchers:**\n\t\t- [expect.toBe()](https://jestjs.io/docs/expect#tobevalue)\n\t\t\t- use for simple numbers, strings, booleans\n\t\t\t- e.g. `expect.toBe('online')`\n\t\t- [expect.arrayContaining(array)](https://jestjs.io/docs/expect#expectarraycontainingarray)\n\t\t\t- the expected array is a subset of the received array\n\t\t\t- `it('matches even if received contains additional elements', () => {`\n\t\t- [expect.stringMatching(string)](https://jestjs.io/docs/expect#expectnotstringmatchingstring--regexp)\n\t\t\t--------------------------------------------\n\t\t\tit('matches if username has the correct prefix', () => {\n\t\t\t\texpect(functions.getUserName()).toEqual(expect.stringMatching('^user_'));\n\t\t\t});\n\t\t\t--------------------------------------------\n\t\t- [.toMatch(regexp | string)](https://jestjs.io/docs/expect#tomatchregexp--string)\n\t\t\t- check that a string matches a regular expression\n\t\t- [.toContain(item)](https://jestjs.io/docs/expect#tocontainitem)\n\t\t\t- check that an item is in an array\n\t\t- [.toHaveLength(number)](https://jestjs.io/docs/expect#tohavelengthnumber)\n\t\t\t- `expect([1, 2, 3]).toHaveLength(3);`\n\t\t- [.toHaveProperty(keyPath, value?)](https://jestjs.io/docs/expect#tohavepropertykeypath-value)\n\t\t\t--------------------------------\n\t\t\texpect(houseForSale).toHaveProperty('bath');\n\t\t\texpect(houseForSale).toHaveProperty('bedrooms', 4);\n\t\t\t--------------------------------\n\t\t- [.toEqual(value)](https://jestjs.io/docs/expect#toequalvalue)\n\t\t\t- compare recursively all properties of object instances (also known as \"deep\" equality)\n\t\t- [.toStrictEqual(value)](https://jestjs.io/docs/expect#tostrictequalvalue)\n\t\t\t- A class instance with fields a and b will not equal a literal object with fields a and b.\n\t\t\t- better to always use instead of toEqual\n\t\t- [.toBeCloseTo(number, numDigits?)](https://jestjs.io/docs/expect#tobeclosetonumber-numdigits)\n\t\t\t- fails:\n\t\t\t\t-----------------------------------\n\t\t\t\ttest('check addition', () => {\n\t\t\t\t  expect(0.2 + 0.1).toBe(0.3);\n\t\t\t\t});\n\t\t\t\t-----------------------------------\n\t\t\t- succeeds:\n\t\t\t\t---------------------------------\n\t\t\t\ttest('check addition', () => {\n\t\t\t\t  expect(0.2 + 0.1).toBeCloseTo(0.3, 5);\n\t\t\t\t});\n\t\t\t\t---------------------------------\n\t\t- [.toBeDefined()](https://jestjs.io/docs/expect#tobedefined)\n\t\t\t- check that a variable is not undefined\n\t\t- .toBeUndefined()\n\t\t- [.toBeGreaterThan(number | bigint)](https://jestjs.io/docs/expect#tobegreaterthannumber--bigint)\n\t\t\t- `expect(ouncesPerCan()).toBeGreaterThan(10);`\n\t\t\t- .toBeGreaterThanOrEqual(number | bigint)\n\t\t\t- .toBeLessThan(number | bigint)\n\t\t\t- .toBeLessThanOrEqual(number | bigint)\n\t\t- [.toBeInstanceOf(Class)](https://jestjs.io/docs/expect#tobeinstanceofclass)\n\t\t\t--------------------------------------\n\t\t\texpect(new A()).toBeInstanceOf(A);\n\t\t\texpect(() => {}).toBeInstanceOf(Function);\n\t\t\t--------------------------------------\n\t\t- [.toBeNull()](https://jestjs.io/docs/expect#tobenull)\n\t\t- [.toContainEqual(item)](https://jestjs.io/docs/expect#tocontainequalitem)\n\t\t\t- check that an item with a specific structure and values is contained in an array\n\t\t- [.toMatchObject(object)](https://jestjs.io/docs/expect#tomatchobjectobject)\n\t\t- [.toThrow(error?)](https://jestjs.io/docs/expect#tothrowerror)\n\t\t- create your own matchers\n\t\t\t- [expect.extend()](https://jestjs.io/docs/expect#expectextendmatchers)\n\t\t\t\t- e.g. `expect(100).toBeWithinRange(90, 110)`\n\t- matchers to research more:\n\t\t- [expect.assertions(number)](https://jestjs.io/docs/expect#expectassertionsnumber)\n\t\t\t- useful when testing asynchronous code, in order to make sure that assertions in a callback actually got called\n\t\t- [expect.hasAssertions()](https://jestjs.io/docs/expect#expecthasassertions)\n\t\t\t- useful when testing asynchronous code, in order to make sure that assertions in a callback actually got called\n\t\t- [expect.objectContaining(object)](https://jestjs.io/docs/expect#expectobjectcontainingobject)\n\t\t\t- matches any received object that recursively matches the expected properties\n\t\t- [expect.anything()](https://jestjs.io/docs/expect#expectanything)\n\t\t\t- you can use it inside toEqual or toBeCalledWith instead of a literal value\n\t\t- [expect.any(constructor)](https://jestjs.io/docs/expect#expectanyconstructor)\n\t\t- [expect.objectContaining(object)](https://jestjs.io/docs/expect#expectobjectcontainingobject)\n\t\t- [expect.addSnapshotSerializer(serializer)](https://jestjs.io/docs/expect#expectaddsnapshotserializerserializer)\n\t\t- [.resolves](https://jestjs.io/docs/expect#resolves)\n\t\t\t- to unwrap the value of a fulfilled promise so any other matcher can be chained\n\t\t- [.rejects](https://jestjs.io/docs/expect#rejects)\n\t\t\t- unwrap the reason of a rejected promise so any other matcher can be chained\n\t\t- .toHaveBeenCalled()\n\t\t- .toHaveBeenCalledTimes(number)\n\t\t- .toHaveBeenCalledWith(arg1, arg2, ...)\n\t\t\t- ensure that a mock function was called with specific arguments\n\t\t- .toHaveReturned()\n\t\t- .toHaveReturnedTimes(number)\n\t\t- .toHaveReturnedWith(value)\n\t\t- .toHaveLastReturnedWith(value)\n\t\t- .toMatchSnapshot(propertyMatchers?, hint?)\n\t- other matchers: \n\t\t- .toBeFalsy()\n\t\t- .toBeTruthy()\n\t\t- .toBeNaN()\n- code examples\n\t- **toBe()** for simple types\n\t\t--------------------------------\n\t\ttest('isPlainObject() is correctly implemented', () => {\n\t\t\texpect(isPlainObject({ a: 1 })).toBe(true);\n\t\t\texpect(isPlainObject({ a: 2, a: 3 })).toBe(true);\n\t\t\texpect(isPlainObject([1, 2, 3])).toBe(false);\n\t\t\texpect(isPlainObject(null)).toBe(false);\n\t\t});\n\t\t--------------------------------\n\t- **toStrictEqual()** for objects\n\t\t--------------------------------\n\t\ttest('makePairs() is correctly implemented', () => {\n\t\t\texpect(makePairs({ a: 1, b: 2 })).toStrictEqual([['a', 1], ['b', 2]]);\n\t\t\texpect(makePairs({})).toStrictEqual([]);\n\t\t\texpect(makePairs(null)).toStrictEqual([]);\n\t\t});\n\t\t--------------------------------\n- Test Driven Development (TDD)\n\t- five steps\n\t\t- 1. write test\n\t\t- 2. affirm test fails (confirms test is working correctly and code is needed to fulfill the feature)\n\t\t- 3. write code to pass the test, but not beyond the tested functionality\n\t\t- 4. affirm test passes (if fail, debug until it passes)\n\t\t- 5.refactor test and run tests again; tests should be small and incremental\n\t- advantages\n\t\t- improved code quality\n\t\t- more detailed project documentation\n\t\t- reduced project budget, reduce bugs\n\t- three types of TDD\n\t\t- unit tests,\n\t\t- integration tests\n\t\t- end-to-end tests\n- Jest cheetsheets\n\t- [good overview](https://github.com/sapegin/jest-cheat-sheet/blob/master/Readme.md)\n- useful commands\n\t- make Jest watch for changes: \n\t\t- `npm test -- --watch`\n- `test.each` with a backtick\n\t- example 1\n\t\t-------------------------------------------\n\t\tdescribe('capitalizeFirstCharacter() is correctly implemented', () => {\n\t\t\ttest.each`\n\t\t\tinput | expected\n\t\t\t${'test'} | ${'Test'}\n\t\t\t${'this is a test'} | ${'This is a test'}\n\t\t\t`('convert $input to $expected', ({ input, expected }) => {\n\t\t\t\texpect(tools.capitalizeFirstCharacter(input)).toBe(expected);\n\t\t\t});\n\t\t});\n\t\t-------------------------------------------\n\t- example 2\n\t\t---------------------------------------\n\t\tdescribe('convertObjectToArray should', () => {\n\t\t\ttest.each`\n\t\t\tinput| expected \n\t\t\t${{ \"1\": 10, \"2\": 20 }} | ${[[\"1\", 10], [\"2\", 20]]}\n\t\t\t${{ \"name\": \"John\", \"age\": 20 }} | ${[[\"name\", \"John\"], [\"age\", 20]]}\n\t\t\t`('convert object $input into a nested array with pairs of [property, value]', ({ input, expected }) => {\n\t\t\t\texpect(convertObjectToArray(input)).toStrictEqual(expected);\n\t\t\t});\n\t\t});\n\t\t---------------------------------------\n- tips\n\t- use ES6 modules instead of CommonJS: https://edwardtanguay.netlify.app/howtos?id=487\n\t- import your functions with the `* as` syntax so you don't have to list every function you test, and you get intellisense\n\t\t------------------------------------------------\n\t\timport * as functions from './functions.js';\n\n\t\ttest('isPlainObject() is correctly implemented', () => {\n\t\t\texpect(functions.isPlainObject('aaaaaaaaa')).toBe(false);\n\t\t\texpect(functions.isPlainObject([])).toBe(false);\n\t\t\texpect(functions.isPlainObject(undefined)).toBe(false);\n\t\t\texpect(functions.isPlainObject(null)).toBe(false);\n\t\t});\n\t\t------------------------------------------------\n- resources:\n\t- Video from Christoph Nakazawa, creator of Jest: [Building a JavaScript Testing Framework](https://cpojer.net/posts/building-a-javascript-testing-framework)",
        "extras": "$rank=3.8; $quick=a JavaScript testing framework like Mocha, but simpler; $todo=start with this before Mocha",
        "genericTermIdCode": "JavaScript Testing Framework",
        "id": 19,
        "systemWhenCreated": "2019-05-20 16:03:05",
        "systemWhoCreated": "systemUnknown",
        "title": "Jest"
    },
    {
        "body": "- an assertion library for node that can be paired with any javascript testing framework, e.g. often used with Mocha",
        "extras": "$rank=3.6; $quick=an assertion library for JavaScript testing often used with Mocha; $todo=perhaps learn it with Jest first",
        "genericTermIdCode": "Assertion Library",
        "id": 20,
        "systemWhenCreated": "2019-05-20 16:09:11",
        "systemWhoCreated": "systemUnknown",
        "title": "Chai"
    },
    {
        "body": "- an augmentation of PHP and Hack developed at Facebook to allow XML syntax for the purpose of creating custom and reusable HTML elements\n- Facebook have also developed a similar augmentation for JavaScript called JSX\n- XHP is to PHP what JSX is to React",
        "extras": "$idCode=xhp;$rank=1.4; $quick=allows XML syntax in PHP code; $todo=know what it is",
        "genericTermIdCode": "Language Extension",
        "id": 21,
        "systemWhenCreated": "2019-05-20 16:09:58",
        "systemWhoCreated": "systemUnknown",
        "title": "XHP"
    },
    {
        "body": "- a syntax extension to JavaScript used with React\n- JSX is optional and not required to use React\n- JSX is not a requirement for using React. Using React without JSX is especially convenient when you don’t want to set up compilation in your build environment. Each JSX element is just syntactic sugar for calling React.createElement(component, props, ...children). So, anything you can do with JSX can also be done with just plain JavaScript.",
        "extras": "$rank=4.2; $quick=a way of combining JavaScript and HTML; $todo=learn this when you learn React",
        "genericTermIdCode": "Language Extension",
        "id": 22,
        "systemWhenCreated": "2019-05-20 16:09:11",
        "systemWhoCreated": "systemUnknown",
        "title": "JSX"
    },
    {
        "body": "- a mobile application development framework **acquired by Adobe 2011** who **rebranded it as PhoneGap**\n- they later released an **open source version called Apache Cordova**\n- enables software programmers to **build applications for mobile devices using CSS3, HTML5, and JavaScript ** instead of relying on platform-specific APIs like those in Android, iOS, or Windows Phone\n- they are not just Web apps, but are packaged as apps for distribution and have access to native device APIs\n- Apache Cordova (formerly PhoneGap) \n- Cordova is a framework that gives you **Javascript bindings to invoke native functionality on a mobile device**\n- [Adobe/PhoneGap story explained](http://www.informit.com/articles/article.aspx?p=2478076)\n- PhoneGap is a distribution of Apache Cordova\n- **PhoneGap is Cordova plus some extra Adobe stuff**\n- **Cordova will always remain open source** and lets you create apps that are native to Android, iOS and Windows using web technologies like HTML, CSS, JavaScript\n- PhoneGap offers the same cross-platform environment as Cordova\n- the difference lies in the names of the same framework, with a catch that PhoneGap services are owned by Adobe and many not always be open-source and free-to-use",
        "extras": "$rank=2.7; $quick=framework that allows you to use CSS3, HTML5 and JavaScript to build platform-specific mobile apps; $todo=learn this if you get into mobile development",
        "genericTermIdCode": "Mobile Framework",
        "id": 23,
        "systemWhenCreated": "2019-05-20 16:21:20",
        "systemWhoCreated": "systemUnknown",
        "title": "Cordova"
    },
    {
        "body": "- {created:2013}\n- 2010 hybrid frameworks to target iSO/Android dual development began to appear\n- before version 5: only Angular\n- 2021: currently Version 5\n- version 5 works with Angular, React, Vue\n- **originally built on top of AngularJS and Apache Cordova**, now built on Angular\n- now **Ionic3 is built on top of Angular** (Angular2)\n- provides tools and services for developing **hybrid mobile apps** using Web technologies like CSS, HTML5, and Sass\n- a **free, open-source SDK** for hybrid mobile app development\n- the latest release was re-built as a set of Web Components: **can be used with Angular, React or Vue.js**\n- mobile apps can be built with these Web technologies and then **distributed through native app stores**\n- installed on devices by utilizing Cordova or Capacitor\n- can create apps that run in the App store\n- designed to work fast on all mobile devices\n- from Ionic you have access to the camer, geo-location and bluetooth\n- more than 5 million users\n\n-",
        "extras": "$rank=3.8; $quick=allows you to build hybrid mobile apps with CSS, HTML and JavaScript; $todo=if you get into mobile development, look into Ionic4 (2019)",
        "genericTermIdCode": "Mobile Framework",
        "id": 24,
        "systemWhenCreated": "2019-05-20 16:36:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Ionic"
    },
    {
        "body": "- Bookstrap 1 **created 2011**\n\t- Mark Otto and Jacob Thornton at Twitter\n- Bootstrap 2 - Jan 2012\n- Bootstrap 3 - Aug 2013\n- the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web\n- Bootstrap 4\n\t- **Bootstrap 4 announced in Oct 2014**\n\t- first alpha version of Bootstrap 4 was released on Aug 2015\n\t- first beta version Aug 2017\n\t- suspended work on Bootstrap 3 in Sep 2016\n\t- **Bootstrap 4 was finalized in Jan 2018**",
        "extras": "$rank=4.9; $quick=a ubiquitous CSS framework that simplifies website design; $todo=learn Bootstrap 4 well",
        "genericTermIdCode": "CSS Framework",
        "id": 25,
        "systemWhenCreated": "2019-05-20 16:36:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Bootstrap"
    },
    {
        "body": "- frontend framework\n- based on Material Design guidelines by Google",
        "extras": "$rank=1.7; $quick=something like Bootstrap but with a design philosophy called Material Design; $todo=know that this is an alternative to Bootstrap",
        "genericTermIdCode": "CSS Framework",
        "id": 26,
        "systemWhenCreated": "2019-05-20 16:36:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Materialize"
    },
    {
        "body": "- {created: 2018}\n\t- 2019-03 experimental release 0.9.0\n\t- 2020-03 Blazor WebAssembly 3.2.0 now available\n- a Web UI framework based on C#, Razor, and HTML that runs in the browser via WebAssembly\n- was designed to simplify the task of building fast single-page applications that run in any browser\n- you can use VSCode (you need to install .NET 5.0), Visual Studio Code 2019 or you can use **JetBrains Rider**\n- enables developers to **create web applications using C# and HTML**\n- there are **five different editions of Blazer**:\n\t- 1. **Blazor Server** \n\t\t- remote clients act as thin clients, meaning that the bulk of the processing load is on the server\n\t\t- client's web browser downloads a small page and updates its UI over a **SignalR** connection\n\t\t- **SignalR** is a free and open-source software library for Microsoft ASP.NET that allows server code to send asynchronous notifications to client-side web applications, the library includes server-side and client-side JavaScript components\n\t\t- was released as a part of .NET Core 3\n\t- 2. **Blazor WebAssembly**\n\t\t- single-page apps that are downloaded to the client's web browser before running\n\t\t- processing is entirely done on the client hardware\n\t\t- this client-side framework is written in WebAssembly, as opposed to JavaScript \n\t- 2021 planned:\n\t\t- 3. *Blazor PWA*\n\t\t\t- supports progressive web apps technology\n\t\t- 4. *Blazor Hybrid*\n\t\t\t- a platform-native framework (as opposed to a web framework) but still renders the user interface using web technologies (e.g. HTML and CSS)\n\t\t- 5. *Blazor Native*\n\t\t\t- platform-native framework that renders a platform-native user interface, has also been considered but has not reached the planning stage\n- support for Internet Explorer 11 is dropped when you use Blazor",
        "extras": "$rank=1.5; $quick=Microsoft's new WebAssembly technology; $todo=know that it exists",
        "genericTermIdCode": "Web UI Framework",
        "id": 27,
        "systemWhenCreated": "2019-05-20 16:46:55",
        "systemWhoCreated": "systemUnknown",
        "title": "Blazor"
    },
    {
        "body": "- {created:2009} by Ryan Dahl\n\t- 2010 npm introduced\n\t- 2011 Microsoft and Joyent implemented a native Windows version of Node.js\n\t- 2015 Node.js v0.12 and io.js v3.3 were merged back together into Node v4.0, which brought **V8 ES6 features** into Node.js\n\t- 2019 the JS Foundation and Node.js Foundation merged to form the OpenJS Foundation\n- open-source, cross-platform JavaScript run-time environment that executes JavaScript code outside of a browser\n- **shines at I/O** allowing you to make millions of requests to various databases and cache layers\n- the most significant difference between Node.js and PHP is that most functions in PHP block until completion, i.e. commands only execute after previous commands finish, while Node.js functions are non-blocking \n- created to improve Apache HTTP Server which can't handle more than 10,000 concurrent connections well\n- utilise la machine virtuelle V8, la librairie **libuv** pour sa boucle d'évènements, et implémente sous licence MIT les spécifications CommonJS\n\t- libuv provides mechanisms to handle file system, DNS, network, child processes, pipes, signal handling, polling and streaming as well as including a thread pool for offloading work for some things that can't be done asynchronously at the operating system level",
        "extras": "$idCode=node;$rank=4.923; $quick=extremely important and central JavaScript technology for web backend and application development; $todo=definitely learn this",
        "genericTermIdCode": "JavaScript Runtime Environment",
        "id": 28,
        "systemWhenCreated": "2019-04-27 15:52:18",
        "systemWhoCreated": "systemUnknown",
        "title": "Node"
    },
    {
        "body": "- {created: 2015} by Dan Abramov and Andrew Clark\n- similar to and **inspired by Facebook's Flux** architecture\n- **predictable state container** for JavaScript apps\n- helps you write applications that behave consistently\n- **makes it easy to trace when, where, why, and how your application's state changed**\n- most commonly used with libraries such as **React or Angular** for building user interfaces\n- c'est un petit peu compliqué à mettre en place",
        "extras": "$rank=3.8; $quick=JavaScript library for maintaining state, used with React and Angular; $todo=use this with React",
        "genericTermIdCode": "JavaScript Library",
        "id": 29,
        "systemWhenCreated": "2019-05-26 00:37:15",
        "systemWhoCreated": "systemUnknown",
        "title": "Redux"
    },
    {
        "body": "- invented in 1974, a language used to manage data in relational databases",
        "extras": "$idCode=sql;$rank=4.95; $quick=the standard language you use to get data from relational databases; $todo=extremely important to learn the basics",
        "genericTermIdCode": "Database Query Language",
        "id": 31,
        "systemWhenCreated": "2019-05-23 15:56:04",
        "systemWhoCreated": "systemUnknown",
        "title": "SQL"
    },
    {
        "body": "- HTML 1.0 released 1993, standard markup language for creating web pages and web applications\n- HTML5 released 2011",
        "extras": "$idCode=html5;$rank=5.0; $quick=the markup language that serves as the basis of websites; $todo=learn HTML5 very well",
        "genericTermIdCode": "Markup Language",
        "id": 32,
        "systemWhenCreated": "2019-04-27 15:52:18",
        "systemWhoCreated": "systemUnknown",
        "title": "HTML5"
    },
    {
        "body": "- 1996, CSS1 was released, enabling the styling of HTML elements in browsers\n- around 2014, CSS3 became the new standard",
        "extras": "$idCode=css3;$rank=4.989; $quick=the language used to style websites and a standard tool for web development; $todo=learn CSS3 well",
        "genericTermIdCode": "Style Sheet Language",
        "id": 33,
        "systemWhenCreated": "2019-04-27 15:52:18",
        "systemWhoCreated": "systemUnknown",
        "title": "CSS3"
    },
    {
        "body": "- {created: 1995}\n\t- JavaScript was written in 10 days with features we still use today\n- general history\n\t- 1995-2004 insignificant and weak scripting language\n\t\t- 1995 created\n\t\t- 1997 ECMAScript released, Netscape and Microsoft came together\n\t\t- 1999 Internet Explorer 5.0 is shipped with XMLHTTP, a browser API that could enable developers to take advantage of background requests.\n\t\t- 2001 JSON created, became popular because of simplicity\n\t- 2005-today became ubiquitous language of the web in browsers, and now on the back end with Node.js\n\t\t- 2005 shift toward AJAX, background requests without reloading pages\n\t\t- 2006 Firebug \n\t\t\t- The story of Firefox and Firebug are synonymous with the rise of the web. We fought the good fight and changed how developers inspect HTML and debug JS, discontinued in 2017\n\t\t- 2006 JQuery released\n\t\t\t- At its height, being a JavaScript developer and being a jQuery developer were interchangeable. \n\t\t- 2008 creation of V8\n\t\t\t- just-in-time compiler\n\t\t- 2008 first native developer tools\n\t\t\t- V8 introduced Developer Tools that are native to the browser\n\t\t- 2009 CommonJS moves to standardize modules\n\t\t\t- CommonJS project was an effort to elevate JavaScript into language for application development\n\t\t- 2009 Node.js takes JavaScript to backend\n\t\t- 2009 CoffeeScript sprinkles syntactic sugar\n\t\t\t- inspired by Ruby, Python and Haskell\n\t\t\t- exposed the good parts of JavaScript in a simple way\n\t\t- 2010 Node.js gets npm\n\t\t- 2010 Express is released\n\t\t\t- a minimal, un-opinionated web framework that provided routing, middleware, and other HTTP utilities\n\t\t\t- according to GitHub still most popular\n\t\t- 2010 JavaScript MVC frameworks born: **backbone.js, AngularJS**\n\t\t- 2011 **Ember.js** which introduced to JavaScript **convention over configuration**\n\t\t- 2012 **TypeScript** brought types to JavaScript\n\t\t- 2013 **React** broke away from MVC structure, it's just the V of MVC, most popular today\n\t\t- 2014 **Electron** put Node.js into desktop applications, e.g. GitHub Desktop, Slack, and Visual Studio Code\n\t\t- 2015 ECMAScript 6 (ES2015 or ES6)\n\t\t\t- support for export and import of modules (ES modules)\n\t\t\t- began the **CommonJS (require) vs ES6 modules (import/export)** issue\n\t\t- 2015 GraphQL becomes REST alternative\n\t\t- 2015 Node v4 released and the merging of io.js back into Node.js, adapted a release cycle that would keep it up to date with the latest V8 releases\n\t\t- 2016 lock files\n\t\t\t- left-pad incident \n\t\t\t- Yarn was created out of need for more consistency across machines\n\t\t\t- introduced the autogenerated lockfile to the JavaScript ecosystem\n\t\t- 2019 Node + JS = OpenJS\n\t\t\t- JS Foundation and Node.js Foundation merged into OpenJS\n\t\t- 2020 Deno has initial release",
        "extras": "$idCode=javascript;$rank=4.985; $quick=the main scripting language of the Web; $todo=get as good at JavaScript as possible",
        "genericTermIdCode": "Programming Language",
        "id": 34,
        "systemWhenCreated": "2019-05-25 17:46:10",
        "systemWhoCreated": "systemUnknown",
        "title": "JavaScript"
    },
    {
        "body": "- 2012, created\n- TypeScript is a superset of ECMAScript 6 (ES6), and is backwards compatible with ECMAScript 5 (i.e.: JavaScript), i.e. you can continue to write JavaScript and ease into TypeScript\n- it adds static typing to the JavaScript, so you get more information concerning errors at develop and compile time, which prevents them from occurring at run time\n- maintained by Microsoft and is therefore quite compatible and has similarities to .NET languages such as C#\n- works very well in VSCode\n- experiment at the [TypeScript Playground](https://www.typescriptlang.org/play)",
        "extras": "$idCode=typescript;$rank=4.555; $quick=has become the preferred way to program in JavaScript; $todo=definitely learn this",
        "genericTermIdCode": "Programming Language",
        "id": 35,
        "systemWhenCreated": "2019-05-24 16:16:05",
        "systemWhoCreated": "systemUnknown",
        "title": "TypeScript"
    },
    {
        "body": "- a TypeScript-based open-source web application framework led by the Angular Team at Google\n- when you talk about Angular, you have to be precise what you mean, as there are two kinds: AngularJS and Angular:\n\t- AngularJS (2009-2015)\n\t\t- Angular 1.x (now called AngularJS)\n\t\t- officially created by Google in 2012, since 2016 written in TypeScript\n\t\t- basically, you don't want to develop anymore in AngularJS, but instead use the latest version of Angular\n\t\t- today when someone says Angular, they means the Angular 2-10 versions, not AngularJS\n\t- Angular (2015-)\n\t\t- Angular 2 \n\t\t\t- a complete rewrite of Angular 1\n\t\t\t- written in TypeScript instead of JavaScript\n\t\t\t- renamed Angular 1 to AngularJS\n\t\t\t- 5 times faster than the AngularJS\n\t\t- (Angular 3 was skipped)\n\t\t- 2016-12: Angular 4\n\t\t- 2017-11: Angular 5\n\t\t- 2018-05: Angular 6\n\t\t- 2018-10: Angular 7\n\t\t\t- 2018: regarding AngularJS, \"We will release a couple more versions this summer that includes a few important features and fixes before we move into the mode of only making security and dependency related fixes, but that is all.\"\n\t\t\t- 2018, if you are moving away from AngularJS, your choices are React, Angular, and Vue.js\t\t\n\t\t\t- Having an AngularJS app in 2018 probably means one of two things: \n\t\t\t\t- 1. the app has been abandoned and isn't really used \n\t\t\t\t- 2. it's too expensive or troublsome to upgrade to Angular\n\t\t- 2019-05: Angular 8\n\t\t\t- Faster re-build time\n\t\t- 2020-02: Angular 9\n\t\t\t- moves all applications to use the **Ivy compiler** and runtime\n\t\t\t- TypeScript 3.6 and 3.7\n\t\t- 2020-06: Angular 10\n\t\t\t- New Date Range Picker (Material UI library)\n\t\t- 2020-11: Angular 11\n\t\t\t- support for inlining Google Fonts\n\t\t- 2021-05: Angular 12\n\t\t\t- Ivy Everywhere\n\t\t\t\t- Ivy: the code name for Angular's next-generation compilation and rendering pipeline\n\t\t- 2021-11: Angular 13\n\t\t\t- end of IE11 support\n\t\t\t- end of View Engine (now only Ivy)\n\t\t\t- Angular Package Format (APF) has been streamlined and modernized to better serve developers\n\t\t\t- now support for TypeScript 4.4\n\t\t\t- improvements to TestBed that now does a better job of tearing down test modules and environments after each test\n\t\t\t- support for inlining Adobe Fonts\n- LinkedIn tutorials\n\t- [2020-08/en: Angular: Creating and Hosting a Full-Stack Site (Shaun Wassell)](https://www.linkedin.com/learning/angular-creating-and-hosting-a-full-stack-site)\n\t- [2022-03/en: WebSocket Communications with Node and Angular](https://www.linkedin.com/learning/websocket-communications-with-node-and-angular/a-quick-look-at-angular)\n\t- [2021-07/sp: Angular esencial](https://www.linkedin.com/learning/angular-esencial-14069833/utilizar-operadores-adicionales-en-ngfor)\n\t- [2019-12/fr: L'essentiel d'Angular (Elise Patrikainen)](https://www.linkedin.com/learning/l-essentiel-d-angular/decouvrir-spa)",
        "extras": "$rank=4.92; $quick=together with React and Vue.js one of the three most popular JavaScript frameworks; $todo=learn this at some point",
        "genericTermIdCode": "Web Framework",
        "id": 36,
        "systemWhenCreated": "2019-05-25 17:47:30",
        "systemWhoCreated": "systemUnknown",
        "title": "Angular"
    },
    {
        "body": "- a JavaScript framework for building user interfaces and single-page applications\n- I use Vue.js in Datapod on the front and Node.js on the back end\n- here you can see the popularity of Vue.js##vuejsPopularity\n- Vue was created by Evan You after working for Google using AngularJS in a number of projects\n\t- \"I figured, what if I could just extract the part that I really liked about Angular and build something really lightweight.\"",
        "extras": "$idCode=vuejs;$rank=4.91; $quick=can easily be used to enhance existing applications as well as to create new applications; $todo=very useful to learn",
        "genericTermIdCode": "JavaScript Framework",
        "id": 37,
        "systemWhenCreated": "2019-05-24 16:44:30",
        "systemWhoCreated": "systemUnknown",
        "title": "Vue.js"
    },
    {
        "body": "- note when talking about Razor, one is talking about either Razor syntax or Razor Pages\n\t- **Razor syntax**\n\t\t- 2011: Razor syntax was released as part of MVC 3 and the WebMatrix tool set\n\t\t- Razor syntax is what you find in `.cshtml` pages, which are used in both ASP.NET MVC and ASP.NET Razor Pages\n\t\t- an ASP.NET template markup syntax based on the C# programming language that enables the programmer to use an HTML construction workflow\n\t\t- the design reduces the number of characters and keystrokes, and enables a more fluid coding workflow by not requiring explicitly denoted server blocks within the HTML code\n\t- **Razor Pages**\n\t\t- 2017: Razor Pages were first introduced with ASP.NET Core 2.0\n\t\t- the new ASP.NET Core Razor Pages is the next evolution of ASP.NET WebForms\n\t\t- a Razor page not only has a Razor view (`.cshtml` file) but also a tightly-integrated \"code-behind\" file (`.cshtml.cs` file) which defines the functionality for that page\n\t\t- Razor Pages doesn't use controllers\n\t\t- Razor Pages automatically implement antiforgery validation, which protects against cross-site request forgery (XSRF/CSRF) attacks, without using the [ValidateAntiForgeryToken] attribute\t\t\n- note when you create an ASP.NET Core Project in Visual Studio 2019, you have two choices:\n\t- Web Application = **ASP.NET Razor Pages** project\n\t- Web Application (Model-View-Controller) = **ASP.NET MVC** project##razorPagesAndMvc\n\t- this tutorial shows how to set up both MVC and Razor pages here: https://exceptionnotfound.net/razor-pages-how-does-it-differ-from-mvc-in-asp-net-core",
        "extras": "$rank=4.7; $quick=template markup syntax that mixes C# code and HTML; $todo=a must-learn if you are doing ASP.NET development",
        "genericTermIdCode": "Markup Language",
        "id": 38,
        "systemWhenCreated": "2019-05-24 13:51:18",
        "systemWhoCreated": "systemUnknown",
        "title": "Razor"
    },
    {
        "body": "- developed in the 1970s, but became very popular with web frameworks from the 1990s onward##mvcDiagram\n- has three interconnected parts\n\t- **Model**\n\t\t- represents the data that will be displayed in the view\n\t\t- gets the data from the database\n\t\t- responsibility: manages data\n\t- **View**\n\t\t- what the user sees, e.g. the HTML page\n\t\t- responsibility: displays data\n\t- **Controller**\n\t\t- the backend code class \n\t\t- accepts input from the user to e.g. save to the model\n\t\t- gets data from the model to display to the view\n\t\t- responsibility: sends data to the view and responds to user input\n- separate internal representations of information from the ways information is presented to and accepted from the user\n- is similar to MVVM\n- this is the MVC pattern as represented in the web framework Ruby on Rails:##rubymvcdiagr",
        "extras": "$rank=4.9; $quick=an architectural pattern commonly used particularly in web development; $todo=definitely know this",
        "genericTermIdCode": "Programming Concept",
        "id": 39,
        "systemWhenCreated": "2019-05-24 14:20:25",
        "systemWhoCreated": "systemUnknown",
        "title": "MVC"
    },
    {
        "body": "- object-relational mapping (ORM) framework for the .NET platform\n- enables developers to work with data in the form of domain-specific objects and properties, such as customers and customer addresses, without having to concern themselves with the underlying database tables and columns where this data is stored",
        "extras": "$rank=4.8; $quick=object-relational mapping (ORM) framework for .NET; $todo=learn this if you do .NET development;$cxategoryTitle=ORM Framework",
        "genericTermIdCode": "ORM Framework",
        "id": 40,
        "systemWhenCreated": "2019-05-24 14:44:41",
        "systemWhoCreated": "systemUnknown",
        "title": "Entity Framework"
    },
    {
        "body": "- released in 2002 and has been the basis for Microsoft software and web development ever since\n- 2002 .NET Framework 1.0\n\t- the old Visual Basic became Visual Basic .NET\n\t- the new language C# was created, which was very similar to Java\n\t- Visual Studio became the main development tool for .NET\n- 2007 .NET Framework 3.5\n- 2015 .NET Framework 4.6\n- 2019 .NET Framework 4.8\n- 2020-11-10 .NET Framework 5.0 (Visual Studio 2019 Version 16.8)\n- 2021-11-08 .NET Framework 6.0 (Visual Studio 2022 Version 17.0)\n\t- \"With the planned release of a unified platform in 2020, . NET Core will replace . NET Framework.\"\n\t- \".NET 6 unites the .NET Framework and .NET Core\"\n\t- \"Now, with .NET MAUI, i.e., the .NET Multi-platform App UI framework, the puzzle is complete\" (MAUI is still preview)\n\t- \"create the application you want and run it practically everywhere\"\n\t- \"build desktop and mobile native user interfaces with a single codebase\"\n\t- the final step in a .NET unification vision\n\t- C#10 \n\t\t- declare namespaces using a global using\n\t\t\t- declare your namespaces in a file named GlobalUsings.cs\n\t\t- instead of: `Func<string, int> parse = (string s) => int.Parse(s);`\n\t\t\t- you now write: `var parse = (string s) => int.Parse(s);`\n\t\t- hot reload\n\t\t\t- run application in development environment, make changes, and get the changes applied without stopping, rebuilding, and rerunning\n\t\t- minimal web APIs\n\t\t\t- build a fully working web API application with a few lines of code\n\t\t\t- **Program.cs**\n\t\t\t\t---------------------------------------\n\t\t\t\tvar app = WebApplication.CreateBuilder(args).Build();\n\t\t\t\tapp.MapGet(\"/\", () => \"Hello World!\");\n\t\t\t\tapp.Run();\n\t\t\t\t---------------------------------------\n\t- F#6\n\t\t- F#6 is Microsoft's effort to make F# simpler and boost performance\n\t\t- \"overloaded custom operations in computation expressions allows for simpler DSLs in F# including for web programming and validation\"\n\t\t- \"pattern matching now with optional Struct representations for active patterns\"\n\t\t- \"the “as” pattern can now itself be a pattern, which is important when a type test has given a stronger type to an input\"\n\t\t- \"in-memory cross-project referencing feature simplifies working between C# projects, as it allows C# projects to reflect immediately in an F# project without recompiling the C# project on disk\"\n- \"we will be making APIs with ASP.NET, i.e. ASP.NET Core, what was previously called .NET Core is now called .NET but the web portion is now called ASP.NET Core not to confuse it with the ASP.NET based on the ASP.NET framework\"\n- \"the thing that was previously called .NET Core\"\n- .NET 6 is a long-term support version\n- LinkedIn tutorials\n\t- [2022-03/en: Building Web APIs with ASP.NET Core in .NET 6 (Christian Wenz)](https://www.linkedin.com/learning/building-web-apis-with-asp-dot-net-core-in-dot-net-6)\n\t- [2022-02/sp: .NET 6 esencial](https://www.linkedin.com/learning/dot-net-6-esencial)\n\t- [2022-02/en: .NET 6 Deep Dive](https://www.linkedin.com/learning/dot-net-6-deep-dive)\n\t- [2021-10/fr: L'essentiel de .NET 6](https://www.linkedin.com/learning/l-essentiel-de-dot-net-6)\n\t- [2021-11/en: .NET 6: First Look](https://www.linkedin.com/learning/dot-net-6-first-look)\n\t- [2021-07/en: .NET Deep Dive: NuGet Package Manager](https://www.linkedin.com/learning/dot-net-deep-dive-nuget-package-manager)",
        "extras": "$idCode=dotnet;$rank=4.9; $quick=the main Windows development framework; $todo=important to know",
        "genericTermIdCode": "Software Framework",
        "id": 41,
        "systemWhenCreated": "2019-05-24 15:01:06",
        "systemWhoCreated": "systemUnknown",
        "title": ".NET"
    },
    {
        "body": "- 1991 first kernel version released by Linus Torvalds in Finland\n- Linux is a family of operating systems is based on the Linux kernel and is deployed on personal computers and servers, usually in the form of Linux distributions such as Ubuntu, Debian, Fedora, Suse, or Mint\n- Linux is ubiquitous now particularly on Servers\n- as a web developer, you are either working on Windows or Linux as your development computer, and work on Windows or Linux servers\n\t- if your development machine is an Apple Mac, the base operating system is BSD UNIX which is very Linux like\n\t- therefore, good Linux skills are a must as a software or web developer\n- Linux file system\n\t- FHS = Filesystem Hierarchy Standard\n\t- finding files\n\t\t- **PATH variable** places to look when use types in command, `echo $PATH`; to find files: `which`, `locate` (fast), `find` (slower but more up-to-date)\n\t- standard directories\n\t\t- **bin** binaries\n\t\t- **boot** contains initial RAM disk\n\t\t- **dev** files that refer to devices\n\t\t- **etc** configuration files\n\t\t- **home** user directories\n\t\t- **lib** libraries\n\t\t- **media** removable media\n\t\t\t- Ubuntu: empty\n\t\t- **mnt** other media like hard drives\n\t\t\t- Ubuntu: empty\n\t\t- **opt** optional packages\n\t\t- **proc** information about kernel and processes \n\t\t\t- many tools read from here\n\t\t- **root** home folder for root user\n\t\t- **run** info about running processes\n\t\t\t- lock files and process ids\n\t\t- **sbin** system binaries\n\t\t- **srv** place for info to share with other systems \n\t\t\t- FTP, NFS (Network File System)\n\t\t- **sys** lists of disks, devices\n\t\t- **tmp** temp info\n\t\t- **usr** for system binaries inc e.g. usr/bin, usr/local, usr/sbin\n\t\t- **var** files that vary often but are not temporary\n\t\t\t- e.g. logs\n- cronjobs\n\t- Ubuntu: *etc/crontab* file\n\t- run every five minutes: `*/5 * * * *     root    /home/test/scripts/write_mainlog.sh`\n\t- use anacron if you need to have tasks run even if machine is off, e.g. they will run when it comes back on\n- chroot\n\t- isolates a process from the rest of the filesystem\n\t- introduced during development of Version 7 Unix in 1979\n\t- you need to copy dependencies into the new root\n\t- useful to set up an environment that is as minimal as possible\n\t- containers offer a similar outcome with less manual setup\n- exploring a system\n\t- `cat /etc/*release`\n\t- `hostnamectl`\n\t- `uname -a`\n\t- `uptime`\n\t- `df -h` (space available)\n\t- `free` (memory)\n\t- `who`\n\t- `systemctl | grep running` (loaded services)\n\t- `top` (running processes)\n\t- `ip a` (like ifconfig)\n- Bash shell\n\t- Bash default on Mac\n\t- find out: `echo $0`\n\t- `l` [[TAB]]\n\t- expansion: \n\t\t- `echo h{e,a,u}llo`\n\t\t- `echo {0..1000..5}`\n\t- `echo \"It is \" $(date) \" today.\"`\n\t- [[CTRL-R]] then start typing a command from your history, then [[CTRL-R]] [[CTRL-R]]\n\t- `sudo !!` (redo the last command I typed as sudo)\n- commands\n\t- how many lines in man bash\n\t\t- `man bash | wc -l`\n\t- get info page for bash\n\t\t- `info bash`\n- bash scripts\n\t- setup\n\t\t- first line: `#!/bin/bash`\n\t\t- then e.g. `ls -al`\n\t\t- `chmod u+x`\n\t- `sleep 2`\n\t- `a=5`\n\t- `echo $a`\n\t- `export a` = available in other bash shells, in the environment\n\t- `compgen -k`\t\n- history of shells\n\t- 1971-1979 Thompson shell\n\t- Bourne Shell (precursor of BASH), (sh)\n\t- C-Shell (1979), (csh)\n\t\t- on many systems, such as macOS and Red Hat Linux, csh is actually tcsh, an improved version of csh\n\t- Kornshell, 1980s (ksh)\n\t- Bourne-Again-Shell (bash)\n- commands\n\t- date +%Y\n\t- <command>;<command>\n\t- <command>&&<command> (first command has to work)\n\t- ls -r\n\t- ls -altr (t for sort)",
        "extras": "$rank=4.9; $quick=an operating system used on many servers; $todo=very important to know, start with the Ubuntu distribution;$webdev=overviewLinux",
        "genericTermIdCode": "Modern Operating System",
        "id": 42,
        "systemWhenCreated": "2019-05-24 15:17:10",
        "systemWhoCreated": "systemUnknown",
        "title": "Linux"
    },
    {
        "body": "- for personal computers\n\t- 1990: Windows 3.0 was released\n\t- 1995: Windows 95\n\t- 1998: Windows 98\n\t- 2001: **Windows XP** (solid)\n\t- 2006: Windows Vista (slow and buggy)\n\t- 2009: **Windows 7** (solid)\n\t- 2012: Windows 8 (unpopular)\n\t- 2014: **Windows 10** (solid)\n- for servers\n\t- 1990s: Windows NT (networked computers for companies)\n\t- 2003: **Windows Server 2003**\n\t- 2008: **Windows Server 2008**\n\t- 2012: **Windows Server 2012**\n\t- 2016: Windows Server 2016\n\t- 2019: Windows Server 2019",
        "extras": "$rank=4.8; $quick=ubiquitous operating system for PCs and servers; $todo=know it well",
        "genericTermIdCode": "Modern Operating System",
        "id": 43,
        "systemWhenCreated": "2019-05-24 15:29:27",
        "systemWhoCreated": "systemUnknown",
        "title": "Windows"
    },
    {
        "body": "- created 1995 as a class-based, object-oriented language to write applications\n- compiled to bytecode and so was able to run on multiple operating systems\n- syntax similar to C and C++\n\t- but had a garbage collector which made memory management easier\n- Java is a popular language for devices, e.g. the Android mobile phone\n- was the inspiration for Microsoft to create C# in 2001\n- versions, roughly\n\t- 1996: Java 1\n\t- 2002: Java 4\n\t\t- Regular Expressions\n\t- 2004: Java 5\n\t\t- Enums, Generics\n\t- before this Java was known as J2SE, e.g. \"J2SE 5.0\" (\"Java 2 Platform, Standard Edition\")\n\t- after this point Java is known as Java SE, e.g. \"Java SE 6\" (\"Java Standard Edition\")\n\t- 2006: Java 6\n\t- 2011: Java 7\n\t- 2014: Java 8\n\t\t- Lambda expressions\n\t\t- Java 8 natürlich immer noch die am meisten genutzte Version\n\t- 2017: Java 9\n\t\t- no new language concepts\n\t\t-  APIs and diagnostic commands\n\t- 2018: Java 10\n\t\t- seit Java 10 können lokale Variablen mit dem Schlüsselwort var deklariert werden\n\t\t\t- `var zahl = 5; // int`\n\t\t- local variable type inference\n\t\t- Unicode 10\n\t- 2018-09: Java 11\n\t\t- Neu in Java 11 ist, dass man nun auch Lambda-Parameter mit var deklarieren kann. \n\t\t\t- `Consumer<String> printer = (var s) -> System.out.println(s);`\n\t\t- Java 11 was the last LTS (Long Term Support) which is supported for three years\n\t- 2019-03: Java 12\n\t\t- auf den ersten Blick sieht es nicht so viel aus\n\t\t- die Idee der halbjährlichen Releasezyklen ist es, dass neue Features parallel und ohne Zeitdruck, unabhängig von den nächsten Veröffentlichungsterminen entwickelt werden können\n\t\t- changes in Switch statement\n\t\t- new bench-marking tools\n\t- 2019-09: Java 13\n\t\t- die größte Änderung in Java 13 ist das Ersetzen des Schlüsselworts break in der Switch Expression durch yield\n\t\t- new memory management capabilities\n\t\t- in 2020-09, `java -version` showed: *java version \"13.0.1\" 2019-10-15*\n\t- 2020-03: Java 14 \n\t\t- Die halbjährlichen OpenJDK-Releases tun der Sprache und der Plattform gut.\n\t\t- Diesmal gab es sogar deutlich mehr neue Funktionen also noch bei Java 12 und 13\n\t\t- Text Blocks\n\t\t- brought switch expressions\n\t- 2020-09: Java 15\n\t\t- text blocks, hidden classes, the Z Garbage Collector, and previews of pattern matching and records\n\t\t- long text blocks that can be assembled with much more readable code\n\t\t- new garbage collectors\n\t\t- hidden classes designed for use by framework creators\n\t- 2021-03: Java 16\n\t- 2021-09: Java 17\n\t\t- this will be a LTS (Long Term Support) version, supported for three years\n- \"C# and Java are the big boys of yesteryear, not the sexiest languages but certainly worth learning. The only problem is figuring out which C# and which Java to learn, there have been so many versions of them and so much bad code out there.\"",
        "extras": "$rank=4.5; $quick=a popular and ubiquitious programming language; $todo=important for software development, not so much for web development",
        "genericTermIdCode": "Programming Language",
        "id": 44,
        "systemWhenCreated": "2019-05-24 15:44:55",
        "systemWhoCreated": "systemUnknown",
        "title": "Java"
    },
    {
        "body": "- created by Sebastian McKenzie\n- a JavaScript compiler and configurable transpiler\n- allows software developers to write source code in a preferred programming language or markup language and have it translated by Babel into JavaScript\n\t- e.g. you can use Babel to convert JSX markup into JavaScript using the Babel preset \"react\"\n- a popular tool for using the newest features of the JavaScript programming language\n- Babel's main purpose is to turn unsupported or cutting-edge language features into ES5\n\t- e.g. it can translate all kinds of high version ECMAScript into ES5, which most browsers can understand\n- Babel converts import and export declaration to CommonJS (require/module.exports) by default",
        "extras": "$rank=4.8; $quick=a JavaScript transpiler which enables you to use higher versions of ECMAScript; $todo=learn and use this",
        "genericTermIdCode": "JavaScript Transpiler",
        "id": 45,
        "systemWhenCreated": "2019-05-24 15:59:19",
        "systemWhoCreated": "systemUnknown",
        "title": "Babel"
    },
    {
        "body": "- 2010 created\n- package manager for JavaScript\n- default package manager for node.js\n- inspiration from shortcomings of PEAR and CPAN\n- makes finding, downloading, installing and using various JavaScript libraries much easier than before\n- npm started out managing node.js modules (that's why packages go into node_modules by default), but it works for the front-end too when combined with Browserify or WebPack\n- [npx](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b)\n\t- where npm makes it easy to install and manage dependencies hosted on the registry, npx **makes it easy to use CLI tools and other executables hosted on the registry**\n\t- trend is to install tools as project-local devDependencies, instead of requiring users to install them globally\n\t\t- tools like mocha, grunt, and bower, which were once primarily installed globally on a system, can now have their versions managed on a per-project basis\n\t\t- e.g. `npx mocha` is all you need to do to use your local installation\n\t\t- calling `npx <command>` when <command> isn’t already in your $PATH will automatically install a package with that name from the npm registry for you, and invoke it\n\t\t\t- the installed package won’t be anywhere in your globals\n\t- tools like *yeoman* or *create-react-app* are not used frequently\n\t\t- by the time you run them again, they’ll already be far out of date\n\t\t- with npx you don't have to install them every time you want to use them\n\t- npx can even apparently run GitHub gists",
        "extras": "$rank=4.924; $quick=the main package manager for JavaScript; $todo=extremely useful",
        "genericTermIdCode": "Package Manager",
        "id": 46,
        "systemWhenCreated": "2019-05-24 16:06:21",
        "systemWhoCreated": "systemUnknown",
        "title": "npm"
    },
    {
        "body": "- a package manager, like npm, which manages frameworks, libraries, assets, and utilities, installs them, and makes sure they are up to date\n- traditionally, many web development projects combined npm and Bower. npm was used to manage back-end dependencies, while Bower was used for front-end dependencies, in fact, you needed to use npm in order to install Bower in the first place\n- Dec 2017: \"**Bower is dead, long live npm. And Yarn. And webpack.**\"\n\t- Bower has been deprecated by its creators\n\t- Bower offered a flat dependency graph, which you can now get with NPM and Yarn\n\t- Bower put the burden of dependency management on the user\n- 2018 Update: bower is mostly deprecated **in favor of NPM**",
        "extras": "$rank=0.8; $quick=an older package manager for the frontend; $todo=today use npm, Yarn and Webpack",
        "genericTermIdCode": "Package Manager",
        "id": 47,
        "systemWhenCreated": "2019-05-24 16:14:01",
        "systemWhoCreated": "systemUnknown",
        "title": "Bower"
    },
    {
        "body": "- 2006 created\n- became the de facto JavaScript library for many years, altough after 2012 or so began to be replaced by more sophisticated JavaScript libraries such as Angular, React, and Vue.js\n\t- it's main drawback is that it works directly with the DOM whereas the newer libraries offer more sophisticated event-based patterns such as MVVM which maintain state on the page and continually update based on a data source, and so enable a developer to make much more sophisticated and robust, easy-to-maintain web applications\n- here you can see the popularity of jQuery rise, peak and fall##jqueryPopularity",
        "extras": "$idCode=jquery;$rank=4.4; $quick=a very useful and popular but older JavaScript library; $todo=learn the basics",
        "genericTermIdCode": "JavaScript Library",
        "id": 48,
        "systemWhenCreated": "2019-05-24 16:43:10",
        "systemWhoCreated": "systemUnknown",
        "title": "jQuery"
    },
    {
        "body": "- 2010 created\n- a JavaScript library with a RESTful JSON interface and based on the Model View Presenter (MVP) application design paradigm\n- lightweight\n- mirrored an application’s business logic\n- depends on underscore.js and jQuery\n- designed for developing **single-page web applications**\n- was created by **Jeremy Ashkenas, who is also known for CoffeeScript and Underscore.js\n**\n- popularity peaked around 2013##vuejsPopularity\n",
        "extras": "$rank=3.8; $quick=a JavaScript library that was popular back in 2010-2015; $todo=look into this as an alternative JavaScript framework",
        "genericTermIdCode": "JavaScript Library",
        "id": 50,
        "systemWhenCreated": "2019-05-24 16:46:46",
        "systemWhoCreated": "systemUnknown",
        "title": "Backbone"
    },
    {
        "body": "- {created: 1995}\n- a very popular, pragmatic and universal programming language for websites, the P in the very popular LAMP stack (Linux, Apache, MySQL, PHP)\n- PHP is loosely typed which means it does not require you to declare a variable type when declaring a variable, unlike C# and Java\n- 2005 added object-oriented features\n\t- after 2005 when PHP5 was released, it began to be taken more seriously since the new object-oriented features gave it the ability to implement more sophisticated OOP programming paradigms as one can in C# and Java-like\n- versions\n\t- 2015-12 = Version 7.0\n\t- 2016-05 = Training: What's New in PHP 7.0\n\t- 2018-12 = Version 7.3\n\t- 2019-11 = Version 7.4\n\t\t- support until Nov 2021\n\t- 2020-11 = Version 8.0\n\t- 2021-12 = Version 8.1.1\n- various\n\t- [info to new features](https://github.com/php/php-src/blob/master/UPGRADING)\n\t- run code in 300+ PHP versions simultaneous: https://3v4l.org\n\t- start server with PHP command:\n\t\t- go in directory with `index.php` file\n\t\t- `php -S localhost:3333`\n\t- useful VSCode extension for formatting, intellisense\n\t\t- PHP Intelephense\n- **PHP 7 features**\n\t- Linked-In Learning Tutorial: [PHP 7 New Features](https://www.linkedin.com/learning/php-7-new-features)\n\t- [9-minute video](https://feryn.eu/blog/php-7-is-now-available-new-features-improvements) of new PHP 7 features\n\t- performance\n\t\t- next generation engine\n\t\t\t- replacement of traditional Zend\n\t\t\t- 2-3 times as fast\n\t- **scalar type hints for `int`, `float`, `string` and `bool`**\n\t\t----------------------------\n\t\tdeclare(strict_types=1);\n\n\t\tfunction foobar(): int {\n\t\t\treturn 1.0; // strictly type-checked return\n\t\t}\n\t\t----------------------------\n\t- return type declarations\n\t\t------------------------------------\n\t\tfunction foo(): array {\n\t\t\treturn [];\n\t\t}\n\t\t------------------------------------\n\t- anonymous classes\n\t\t- a class without a programmer-declared name\n\t- Null Coalesce Operator\n\t\t- `$username = $_GET['user'] ?? 'nobody';`\n\t- Combined Comparison (Spaceship) Operator##spaceshipphpoper\n- **PHP 8 features**\n\t- see code here: https://github.com/edwardstudent/php8_showcase\n\t- [Union Types](https://github.com/edwardstudent/php8_showcase/blob/master/ex_unionTypes.php)\n\t- `?string` becomes `string|null`\n\t\t------------------------\n\t\tdeclare(strict_types=1);\n\n\t\tfunction doubleIt(int|float $num) : int|float {\n\t\t// function doubleIt(int $num) : int {\n\t\treturn $num * 2;\n\t\t}\n\n\t\t// echo doubleIt(3);\n\t\techo doubleIt(3.3);\n\t\t// echo doubleIt('test');\n\t\t------------------------\n\t- [Stringable Interface](https://github.com/edwardstudent/php8_showcase/blob/master/ex_stringable.php)\n\t\t- enables you to send either an object expressed as string or a string\n\t\t\t-----------------------------------\n\t\t\t<?php\n\t\t\tdeclare(strict_types=1);\n\n\t\t\tclass Tester {\n\t\t\tpublic function __toString() : string {\n\t\t\treturn 'this object represented as string';\n\t\t\t}\n\t\t\t}\n\n\t\t\tfunction showIt(Stringable|string $text) {\n\t\t\techo \"<p>$text</p>\";\n\t\t\t}\n\n\t\t\t$tester = new Tester();\n\t\t\tshowIt($tester);\n\t\t\tshowIt('this is a test');\n\t\t\t// showIt(234); // won't work\n\t\t\t-----------------------------------\n\t- [match](https://github.com/edwardstudent/php8_showcase/blob/master/ex_match.php)\n\t\t- with switch double-equals is used internally, match uses triple equals interally\n\t\t\t---------------------------------------\n\t\t\t<?php\n\t\t\t$score = 40;\n\n\t\t\t$status = match(true) {\n\t\t\t$score < 20 => 'beginner',\n\t\t\t$score >= 20 && $score < 80 => 'intermediate',\n\t\t\t$score >= 80 => 'expert'\n\t\t\t};\n\n\t\t\techo $status;\n\t\t\t---------------------------------------\n\t- [Nullsafe Operator](https://github.com/edwardstudent/php8_showcase/blob/master/ex_nullsafeOperator.php)\n\t\t-----------------------------------------------\n\t\t<?php\n\t\tini_set('display_errors', 1);\n\t\terror_reporting(~0);\n\n\t\t// this was PHP 7's null coalescing operator\n\t\t$result = null;\n\t\t$status = $result ?? '(unknown)';\n\t\techo $status;\n\t\t// but it didn't work for functions\n\n\t\t// therefore PHP 8's nullsafe operator\n\t\tclass User {\n\t\tprivate $firstName;\n\t\tprivate $lastName;\n\n\t\tfunction __construct($firstName, $lastName) {\n\t\t$this->firstName = $firstName;\n\t\t$this->lastName = $lastName;\n\t\t}\n\n\t\tfunction getFullName() {\n\t\treturn \"$this->firstName $this->lastName\";\n\t\t}\n\t\t}\n\n\t\t// $user = new User('Ivan', 'Ilroy');\n\t\t$user = null;\n\n\t\t// echo $user->getFullName(); // gets error if $user is null\n\t\techo $user?->getFullName();\n\t\t-----------------------------------------------\n\t- [named arguments](nnn)\n\t\t--------------------------------------------------\n\t\tfunction getFullName($firstName = '(unknown)', $lastName = '(unknown)') {\n\t\treturn \"$firstName $lastName\";\n\t\t}\n\n\t\techo \"<p>\" . getFullName('Wanda', 'Androshka') . \"</p>\";\n\t\techo \"<p>\" . getFullName('Wanda') . \"</p>\";\n\t\techo \"<p>\" . getFullName(lastName: 'Androshka') . \"</p>\";\n\t\t--------------------------------------------------",
        "extras": "$rank=4.61; $quick=very popular and pragmatic programming language for websites; $todo=PHP is a solid skill to have",
        "genericTermIdCode": "Programming LanguageProgramming Language",
        "id": 52,
        "systemWhenCreated": "2019-05-25 17:23:01",
        "systemWhoCreated": "systemUnknown",
        "title": "PHP"
    },
    {
        "body": "- ECMAScript 6\n- created to standardize JavaScript\n- JavaScript has remained the best-known implementation of ECMAScript since the standard was first published\n\t- e.g. Microsoft created an implementation of ECMAScript called JScript in the late 1990s which never got popular\n- ES1: June 1997\n- ES2: June 1998\n- ES3: Dec. 1999\n- ES4: (abandoned)\n- **ES5**: 2009\n- (moved to annual updates)\n- **ES6**: June 2015 (ES2015)\n\t- **ES6+ features:**\n\t\t- 1. **let and const**\n\t\t- 2. **default parameters**\n\t\t- 3. **arrow functions**\n\t\t- 4. **template literals**\n\t\t- 5. **object literals**\n\t\t- 6. **spread operators and rest parameters**\n\t\t- 7. **destructuring assignment**\n\t\t- 8. **modules**\n\t\t- 9. **classes**\n\t\t- 10. iterators/generators\n\t\t- 11. **promises/async/await**\n\t\t- 12. Set\n\t\t\t- like Map, contains key/value pairs\n\t\t\t- set, get, delete, find key/value pairs\n\t\t\t- cannot have duplicate values\n\t\t\t- values can be anything\n\t\t\t- methods: add, has, clear, delete, entries, forEach, values\n\t\t\t- size property\n\t\t- 13. Map\n\t\t\t- contains key/value pairs\n\t\t\t- set, get, delete, find key/value pairs\n\t\t\t- unlike Set, does not contain default keys\n\t\t\t- keys can be any value, e.g. emojis, not just string or symbol\n\t\t\t- has size property\n\t\t\t- cannot have duplicate keys\n\t\t\t- WeakMap\n\t\t\t\t- keys are weak and can be garbage collected\n\t\t\t\t- keys must be objects\n\t\t\t\t- cannot iterate over object or get its size\n\t\t\t\t- only has: set, get, has, delete\n\t\t- 14. Symbol\n\t\t- 15. **for..in / for..of / forEach**\n\t\t- 16. **map(), filter(), find(), reduce()**\n\t\t- 17. every() / some()\n\t\t- 18. includes() / search()\t\n\t- ES6 this is when transpiling to ES5 become popular\n- ES7: June 2016 (ES2016)\n\t- \"ES7 was a tiny update on top of ES6\"\n- ES8: June 2017 (ES2017)\n- ES9: June 2018 (ES2018)\n- ES.NEXT (always means the next version)",
        "extras": "$idCode=ecmascript;$rank=4.85; $quick=scripting-language specification for JavaScript; $todo=learn the new features of ES6 well",
        "genericTermIdCode": "Programming Language",
        "id": 53,
        "systemWhenCreated": "2019-05-27 09:13:22",
        "systemWhoCreated": "systemUnknown",
        "title": "ES6"
    },
    {
        "body": "- {created: 2012} developed internally by Facebook\n- 2015 released publically\n- 2018 established GraphQL Foundation, GraphQL now hosted by the non-profit Linux Foundation\n- a data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data\n- instead of working with rigid server-defined endpoints, you can send queries to get exactly the data you’re looking for in one request\n- is an efficient, powerful and flexible approach to developing web APIs, and has been compared and contrasted with REST and other web service architectures\n- consists of a type system, query language and execution semantics, static validation, and type introspection\n- resolvers\n\t- resolvers are functions \n\t\t- respond to queries and mutations\n\t\t- give us the result\n\t- file: resolvers.js\n\t\t- const resolvers\n\t\t\t- getFriend\n\t\t\t- createFriend\n\t- schema.js\n\t\t- type Query\n\t- index.js\n\t\t- import resolvers\n- example GraphQL data sources:\n\t- GitHub Explorer\n\t\t- https://docs.github.com/en/graphql/overview/explorer\n\t\t\t- simple query\n\t\t\t\t------------------------------\n\t\t\t\tquery { \n\t\t\t\t\tlicense(key: \"MIT\") { \n\t\t\t\t\t\tname\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tbody\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t------------------------------\n\t\t\t- query with parameters and pagination\n\t\t\t\t--------------------------------------\n\t\t\t\tquery { \n\t\t\t\t\tviewer {\n\t\t\t\t\t\trepositories(first: 5 orderBy: {field:CREATED_AT, direction:ASC}) {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\tdescription \n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcursor\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpageInfo {\n\t\t\t\t\t\t\t\thasNextPage\n\t\t\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t\t\t\tstartCursor\n\t\t\t\t\t\t\t\tendCursor\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t--------------------------------------\n- scalar types\n\t- come with GraphQL\n\t- Int, Float, String, ID, Boolean\n- type types of requests\n\t- query\n\t- mutation",
        "extras": "$idCode=graphql;$rank=4.5; $quick=a newer and more robust alternative to REST; $todo=learn it if you get a chance",
        "genericTermIdCode": "Query Language",
        "id": 54,
        "systemWhenCreated": "2019-05-27 09:34:30",
        "systemWhoCreated": "systemUnknown",
        "title": "GraphQL"
    },
    {
        "body": "- 2012 created\n- JavaScript module bundler\n- requires Node.js\n- it can be used from the command line, or can be configured using a config file which is named **webpack.config.js**\n- Webpack has **no preference for commonjs over AMD**\n- it can get **quite heavy** when you work on complex projects\n- in 2020 the current **standard way to bundle** websites, but being replaced by **Parcel** for simpler projects",
        "extras": "$rank=4.925; $quick=the most popular JavaScript module bundler; $todo=learn this",
        "genericTermIdCode": "Javascript Module Bundler",
        "id": 55,
        "systemWhenCreated": "2019-05-27 10:30:36",
        "systemWhoCreated": "systemUnknown",
        "title": "Webpack"
    },
    {
        "body": "- created **2010**, the oldest site bundler\n- allows you to write Node.js-style modules that compile for use in the browser\n- it **lets you use require on the front end**, the same way you'd use it in Node\n- a tool that brings all the resources of the NPM ecosystem off of the server, and into the client.\n- Browserify is an attempt to build a module loader on top of the NPM ecosystem and node modules\n- it uses CommonJS modules and integrates tightly with NPM\n- 2014: \"Browserify is an amazing tool that makes node modules work in the browser. If you're a front-end developer, browserify could change your life.\"",
        "extras": "$rank=4.2; $quick=gives you access to NPM modules in the browser; $todo=learn Webpack before Browserify",
        "genericTermIdCode": "Javascript Module Bundler",
        "id": 56,
        "systemWhenCreated": "2019-05-27 15:32:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Browserify"
    },
    {
        "body": "- 1985 created\n- programming language created as an extension of C, i.e. C with classes\n- today C++ is still used widely to write applications",
        "extras": "$idCode=cplusplus;$rank=2.3; $quick=low-level language for writing applications; $todo=not relevant to web development",
        "genericTermIdCode": "Programming Language",
        "id": 57,
        "systemWhenCreated": "2019-05-27 13:20:26",
        "systemWhoCreated": "systemUnknown",
        "title": "C++"
    },
    {
        "body": "- 2015 created\n- code editor developed by Microsoft for Windows, Linux and macOS\n- highly customizable, small and fast\n- free and open source\n- in 2019 at Stackoverflow, ranked the most popular developer environment tool\n- based on Electron, a framework which is used to deploy Node.js applications for the desktop running on the Blink layout engine",
        "extras": "$idCode=vscode;$rank=4.93; $quick=a very useful, cross-platform code editor; $todo=definitely use this even for non-.NET projects",
        "genericTermIdCode": "Code Editor",
        "id": 58,
        "systemWhenCreated": "2019-05-27 14:05:07",
        "systemWhoCreated": "systemUnknown",
        "title": "Visual Studio Code"
    },
    {
        "body": "- robust, full-featured, and convenient editor by Microsoft for developing .NET technologies\n- costs between $200 and $400\n- this is the editor you'll use if you work for a company doing .NET development",
        "extras": "$idCode=vsProfessional;$rank=4.2; $quick=the default code editor for .NET technologies; $todo=learn well if you do .NET development",
        "genericTermIdCode": "Code Editor",
        "id": 59,
        "systemWhenCreated": "2019-05-27 14:05:07",
        "systemWhoCreated": "systemUnknown",
        "title": "Visual Studio Professional"
    },
    {
        "body": "- free version of Visual Studio, the main .NET development environment by Microsoft\n- defined as a \"free, fully-featured IDE for students, open-source and individual developers\"\n- since 2015, before that this was known as the Express version\n- can be used to develop .NET web sites, desktop apps, and console apps",
        "extras": "$idCode=vsCommunity;$rank=4.2; $quick=free version of Visual Studio for .NET development; $todo=use this free tool to learn Visual Studio",
        "genericTermIdCode": "Code Editor",
        "id": 60,
        "systemWhenCreated": "2019-05-27 14:08:26",
        "systemWhoCreated": "systemUnknown",
        "title": "Visual Studio Community"
    },
    {
        "body": "- designed in 1998 by Dave Winer\n- a messaging protocol specification for exchanging structured information in the implementation of web services in computer networks",
        "extras": "$rank=1.9; $quick=the older way to make services available to software and other websites; $todo=learn REST instead",
        "genericTermIdCode": "Messaging Protocol",
        "id": 61,
        "systemWhenCreated": "2019-05-27 14:41:32",
        "systemWhoCreated": "systemUnknown",
        "title": "SOAP"
    },
    {
        "body": "- short for \"representational state transfer\"\n- Roy Fielding defined REST in his 2000 Ph.D. dissertation\n- allows requesting systems to access and manipulate resources on a server by using a uniform and predefined set of stateless operations\n- Web service APIs that adhere to the REST architectural constraints are called RESTful APIs",
        "extras": "$rank=4.5; $quick=a way to make services on a web available to software and other websites; $todo=important, learn this at some point",
        "genericTermIdCode": "Architectural Design Concept",
        "id": 62,
        "systemWhenCreated": "2019-05-27 14:41:32",
        "systemWhoCreated": "systemUnknown",
        "title": "REST"
    },
    {
        "body": "- any service provided by a web server which is intended for machine-to-machine communication for transferring machine-readable file formats such as XML and JSON\n- web services are either based on SOAP or REST",
        "extras": "$rank=2.8; $quick=a service that provides an object-oriented, Web-based interface to a database server; $todo=an important concept and technology",
        "genericTermIdCode": "Architectural Design Concept",
        "id": 63,
        "systemWhenCreated": "2019-05-27 14:41:56",
        "systemWhoCreated": "systemUnknown",
        "title": "Web Service"
    },
    {
        "body": "- the Apollo Client is a major GraphQL client, along with Relay\n- Airbnb uses Apollo for GraphQL\n- \"if you are going to do GraphQL, do Apollo\"",
        "extras": "$rank=2.5; $quick=the most popular GraphQL client; $todo=learn it if you get into GraphQL",
        "genericTermIdCode": "GraphQL Client",
        "id": 64,
        "systemWhenCreated": "2019-05-27 15:04:45",
        "systemWhoCreated": "systemUnknown",
        "title": "Apollo"
    },
    {
        "body": "- developed by Facebook to work with React\n- **Flux is a fancy name for the observer pattern** modified a little bit to fit React\n- it is not a framework or a library\n\t- it is an architecture that complements React",
        "extras": "$rank=2.1; $quick=an architecture and design pattern created by Facebook for React; $todo=know about this, but use Redux in React instead",
        "genericTermIdCode": "Architecture",
        "id": 65,
        "systemWhenCreated": "2019-05-27 15:18:08",
        "systemWhoCreated": "systemUnknown",
        "title": "Flux"
    },
    {
        "body": "- JavaScript file and module loader\n- implementation for asynchronous module definition in JavaScript\n- is optimized for in-browser use, but it can be used in other JavaScript environments, like Rhino and Node\n- Node already has a module loader, but by using RequireJS on the server, you can use one format for all your modules, whether they are running server side or in the browser",
        "extras": "$idCode=requirejs;$rank=1.4; $quick=an older JavaScript tool that loads JavaScript modules in the Browser; $todo=it's old, use Browserify or Webpack instead",
        "genericTermIdCode": "JavaScript Library",
        "id": 66,
        "systemWhenCreated": "2019-05-27 15:36:27",
        "systemWhoCreated": "systemUnknown",
        "title": "RequireJS"
    },
    {
        "body": "- 2001, the Mac operating system started with Mac OS X 10.0\n- it version number increases every year and in 2019 is at Mac OS X 10.15\n- the base operating system beneath the Mac OS is a variant of UNIX called BSD (Berkeley Software Distribution)\n\t- if you know your way around the Linux command line, you will feel comfortable developing on a Mac",
        "extras": "$idCode=macos;$rank=4.6; $quick=the operating system used on the Mac laptop, a very popular laptop for development; $todo=get access to a Mac and learn the environment as its quite different than Windows",
        "genericTermIdCode": "Modern Operating System",
        "id": 67,
        "systemWhenCreated": "2019-06-12 15:10:49",
        "systemWhoCreated": "systemUnknown",
        "title": "macOS"
    },
    {
        "body": "- 1977 created\n- written in C\n- 1995, the last release of BSD proper\n- today when one says *BSD*, one is referring to one of BSD's descendants, e.g. FreeBSD, OpenBSD, NetBSD,  DragonFly BSD, Darwin, or **most probably macOS**\n- this led to the Darwin operating system, which **led to macOS**",
        "extras": "$rank=0.3; $quick=a version of the UNIX operating system from the 1970s; $todo=know that it is the basis of the macOS;$categoryTitle=UNIX Operating System",
        "genericTermIdCode": "UNIX Operating System",
        "id": 68,
        "systemWhenCreated": "2019-06-12 15:42:59",
        "systemWhoCreated": "systemUnknown",
        "title": "BSD"
    },
    {
        "body": "- 1970s developed\n- still used in universities, research centers and largeand old corporations\n- Linux and macOS are both very similar to UNIX",
        "extras": "$idCode=unix;$rank=2.1; $quick=an old operating system from the 1970s; $todo=know that it still exists, e.g. at universities",
        "genericTermIdCode": "Old Operating System",
        "id": 69,
        "systemWhenCreated": "2019-06-12 16:31:29",
        "systemWhoCreated": "systemUnknown",
        "title": "UNIX"
    },
    {
        "body": "- 2004 released\n- free\n- built on Debian's architecture and infrastructure\n- GNOME 3 has been the default GUI\n- developed by Canonical, owned by Mark Shuttleworth, South Africa",
        "extras": "$rank=4.5; $quick=a very popular distribution of Linux; $todo=install, use and be comfortable with Ubuntu",
        "genericTermIdCode": "Linux Distribution",
        "id": 70,
        "systemWhenCreated": "2019-06-12 16:42:24",
        "systemWhoCreated": "systemUnknown",
        "title": "Ubuntu"
    },
    {
        "body": "- 1993 first version\n- one of the earliest operating systems based on the Linux kernel\n- Debian officially contains only free software, but non-free software can be downloaded and installed from the Debian repositories\n- Debian is a popular choice for servers, for example as the operating system component of a LAMP stack (Linux, Apache, MySQL, PHP)",
        "extras": "$rank=2.9; $quick=a more technical distribution of Linux than Ubuntu; $todo=know that it exists",
        "genericTermIdCode": "Linux Distribution",
        "id": 71,
        "systemWhenCreated": "2019-06-12 16:50:58",
        "systemWhoCreated": "systemUnknown",
        "title": "Debian"
    },
    {
        "body": "- released in 2006\n\t- based on Kubuntu, a flavor of Ubuntu\n- focuses on desktop users\n- Linux Mint 2.0 was based on Ubuntu 6.10\n- 2008, Linux Mint adopted the same release cycle as Ubuntu\n- primarily uses free and open-source software, making exceptions for some proprietary software",
        "extras": "$rank=3.9; $quick=an easy-to-use distribution of Linux; $todo=install it and try it out",
        "genericTermIdCode": "Linux Distribution",
        "id": 72,
        "systemWhenCreated": "2019-06-12 16:55:50",
        "systemWhoCreated": "systemUnknown",
        "title": "Linux Mint"
    },
    {
        "body": "- 1995 created by Swedish company MySQL AB \n- free and open-source\n- it is the database in the popular LAMP stack (Linux, Apache, MySQL, PHP)\n- runs on all operating systems: Windows, Linux, macOS, UNIX\n- 2008 Sun Microsystems acquired MySQL AB\n- 2010 Oracle acquired Sun Microsystems\n- **MariaDB** is a community-developed, commercially supported fork of the MySQL relational database management system, intended to remain free and open-source software under the GNU General Public License\n- versions\n\t- 1995 = Version 1.0\n\t- 2001 = Version 3.23 - MySAM replaced ISAM\n\t- 2003 = Version 4.0 - unions\n\t- 2008 = Version 5.1 - stored procedures, triggers, views\n\t- *Oracle acquired MySQL*\n\t- 2010 = Version 5.5 - default storage engine is InnoDB\n\t- 2015 = Version 5.7\n\t- 2018 = Version 8.0 - NoSQL Document Store\n\t\t- MySQL installed on Ubuntu 2020-09 was Version 8.0.21",
        "extras": "$idCode=mysql;$rank=4.8; $quick=the most popular and widespread database; $todo=learn it well",
        "genericTermIdCode": "Database",
        "id": 73,
        "systemWhenCreated": "2019-06-13 11:13:39",
        "systemWhoCreated": "systemUnknown",
        "title": "MySQL"
    },
    {
        "body": "- {created: 1996}\n\t- 1980s: developed at Berkeley\n- pronounced **[post-GRESS-kyew-ell]**\n- free and open-source\n- owned by PostgreSQL Global Development Group\n- 2018, PostgreSQL has gotten significantly better with features like **full-text search**, **JSON columns**, logical replication, upsert, and better scalability, which gets you close to, if not beyond, the performance of typical commercial databases while also allowing you to consolidate several database systems into one for less overhead and cost\n- 2018, the popular foreign-data-wrapper extension even lets you query external sources directly from within PostgreSQL if necessary",
        "extras": "$idCode=postgresql;$rank=4.7; $quick=a robust but less popular database than MySQL; $todo=use it in a project if you have a chance",
        "genericTermIdCode": "Database",
        "id": 74,
        "systemWhenCreated": "2019-06-13 11:33:20",
        "systemWhoCreated": "systemUnknown",
        "title": "PostgreSQL"
    },
    {
        "body": "- 1989 first release\n- in general in .NET projects, you don't access the SQL Server directly but set up and speak to Entity framework, which in turn access SQL Server\n- SQL Server Express Edition is a scaled down, free edition of SQL Server\n\t- while there are no limitations on the number of databases or users supported, it is limited to using one processor, 1 GB memory and 10 GB database files\n\t- so if you want to learn SQL Server, you can use SQL Server Express\n- supported versions\n\t- SQL Server 2008\n\t- SQL Server 2012\n\t- SQL Server 2014\n\t- SQL Server 2016\n\t- SQL Server 2017\t\n- SQL Server 2017 finally added Linux support for these Linux platforms: Red Hat Enterprise Linux, SUSE Linux Enterprise Server, Ubuntu & Docker Engine",
        "extras": "$idCode=sqlserver;$rank=4.63; $quick=popular database for .NET projects; $todo=learn it well if you develop in .NET",
        "genericTermIdCode": "Database",
        "id": 75,
        "systemWhenCreated": "2019-06-13 11:50:33",
        "systemWhoCreated": "systemUnknown",
        "title": "SQL Server"
    },
    {
        "body": "- created 2000\n- very popular  used today by several widespread browsers, operating systems, and embedded syxstems such as mobile phones, among others\n- implements most of the SQL standard, generally following PostgreSQL syntax\n- stores the entire database (definitions, tables, indices, and the data itself) as a single cross-platform file on a host machine\n- uses a dynamically and weakly typed SQL syntax that does not guarantee the domain integrity, which means that one can e.g. insert a string into a column defined as an integer\n- designed by Dwayne Hipp in 2000 while working for General Dynamics on contract with the United States Navy\n\t- design goals were to allow the program to be operated without installing a database management system or requiring a database administrator",
        "extras": "$idCode=sqlite;$rank=4.61; $quick=a very useful file-based database; $todo=use it in a project and learn the differences in SQL syntax from other databases",
        "genericTermIdCode": "Database",
        "id": 76,
        "systemWhenCreated": "2019-06-13 12:59:23",
        "systemWhoCreated": "systemUnknown",
        "title": "SQLite"
    },
    {
        "body": "- 2009, Johan Oskarsson, developer at Last.fm, introduced the term NoSQL when he organized an event to discuss open source distributed, non relational databases\n- a type of database that provides a mechanism for storage and retrieval of data that is modeled in means other than the tabular relations used in relational databases, e.g. in structured documents\n- used typically in big data and real-time web applications\n- kinds of NoSQL databases include:\n\t- Key-Value Cache (Memcached)\n\t- Key-Value Store (Redis)\n\t- Document Store (CouchDB, MongoDB)",
        "extras": "$idCode=nosql;$rank=4.927; $quick=a type of database used with big data; $todo=if you want to work with big data, learn a NoSQL database such as MongoDB or CouchDB",
        "genericTermIdCode": "Type of Database",
        "id": 77,
        "systemWhenCreated": "2019-06-13 14:29:44",
        "systemWhoCreated": "systemUnknown",
        "title": "NoSQL"
    },
    {
        "body": "- 2005 developed by by Damien Katz, a former Lotus Notes developer at IBM\n- 2008 became an Apache Incubator project\n- 2012 Katz left project to work on Couchbase Server\n- it uses JSON to store data, JavaScript as its query language\n- implements a form of multiversion concurrency control (MVCC) so it does not lock the database file during writes, onflicts are left to the application to resolve",
        "extras": "$idCode=couchdb;$rank=4.45; $quick=with MongoDB, a popular NoSQL document store; $todo=a good choice for a NoSQL database",
        "genericTermIdCode": "NoSQL Database",
        "id": 78,
        "systemWhenCreated": "2019-06-13 14:51:15",
        "systemWhoCreated": "systemUnknown",
        "title": "CouchDB"
    },
    {
        "body": "- {created:2007} by 10gen\n\t- 2009 - released\n\t- 2013 - 10gen changed name to MongoDB Inc.\n\t- 2017 - MongoDB became a publicly traded company\n\t- 2019 - Version 4\n\t- 2020-11 - Version 4.2\n- uses **JSON-like documents** with schema\n\t- every document has a unique id\n- can be used as a file system\n- stores {JSON}-like documents\n\t- JSON\n\t\t- based on a subset of the JavaScript scripting language (specifically, Standard ECMA-262 3rd Edition—December 1999) and is commonly used with JavaScript, but it is a language-independent data format\t\n\t- Mongo uses index to track\n- installation\n\t- Ubuntu\n\t\t- systemd or systemv init\n\t\t- `ps --no-headers -o comm 1`\n\t\t- `sudo systemctl start mongod`\n\t\t- `sudo systemctl status mongod`\n- basic commands\n\t- `show dbs`\n\t\t- shows default databases\n\t- `db`\n\t\t- current database\n\t- `use config`\n\t\t- use config database\n\t- `show collections`\n\t- `help`\n\t- `db.help()`\n\t- `cls`\n\t\t- clear screen\n\t- `exit`\n- more commands\n\t- `db.flashcards.insertMany([{\"front\":\"fff\",\"back\":\"bbb\"}])`\n\t- `db.flashcards.find()`\n\t- `db.flashcards.find().forEach(flashcard => print(\"Front: \" + flashcard.front))`\n\t- `pwd()`\n\t- `db.flashcards.insertOne({\"front\": \"thefff\"})`\n\t- updateOne\n\t- updateMany\n\t- replaceOne\n\t- deleteOne\n\t- deleteMany\n- queries\n\t- db.customers.find({customerID: \"FISSA\"}).pretty()\n\t- $elemMatch\n\t\t- do_articlesInsert.js\n\t\t\t--------------------------------\n\t\t\tdb.articles.insert([\n\t\t\t{\n\t\t\t\t\"_id\" : 1,\n\t\t\t\t\"description\" : \"DESCRIPTION ARTICLE AB\",\n\t\t\t\t\"article_code\" : \"AB\",\n\t\t\t\t\"purchase\" : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"company\" : 1,\n\t\t\t\t\t\t\"cost\" : NumberDecimal(\"80.010000\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"company\" : 2,\n\t\t\t\t\t\t\"cost\" : NumberDecimal(\"85.820000\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"company\" : 3,\n\t\t\t\t\t\t\"cost\" : NumberDecimal(\"79.910000\")\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"stock\" : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"country\" : \"01\",\n\t\t\t\t\t\t\"warehouse\" : {\n\t\t\t\t\t\t\t\"code\" : \"02\",\n\t\t\t\t\t\t\t\"units\" : 10\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"country\" : \"02\",\n\t\t\t\t\t\t\"warehouse\" : {\n\t\t\t\t\t\t\t\"code\" : \"02\",\n\t\t\t\t\t\t\t\"units\" : 8\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"_id\" : 2,\n\t\t\t\t\"description\" : \"DESCRIPTION ARTICLE AC\",\n\t\t\t\t\"article_code\" : \"AC\",\n\t\t\t\t\"purchase\" : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"company\" : 1,\n\t\t\t\t\t\t\"cost\" : NumberDecimal(\"90.010000\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"company\" : 2,\n\t\t\t\t\t\t\"cost\" : NumberDecimal(\"95.820000\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"company\" : 3,\n\t\t\t\t\t\t\"cost\" : NumberDecimal(\"89.910000\")\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"stock\" : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"country\" : \"01\",\n\t\t\t\t\t\t\"warehouse\" : {\n\t\t\t\t\t\t\t\"code\" : \"01\",\n\t\t\t\t\t\t\t\"units\" : 20\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"country\" : \"02\",\n\t\t\t\t\t\t\"warehouse\" : {\n\t\t\t\t\t\t\t\"code\" : \"02\",\n\t\t\t\t\t\t\t\"units\" : 28\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\t]);\n\t\t\t--------------------------------\n\t\t- `load('do_articlesInsert.js')`\n\t\t- query with find only:\n\t\t\t---------------------------------\n\t\t\tdb.articles.find({\n\t\t\t\t\"stock.country\" : \"01\",\n\t\t\t\t\"stock.warehouse.code\" : \"02\"\n\t\t\t}).pretty();\n\t\t\t---------------------------------\n\t\t- query with $elemMatch\n\t\t\t--------------------------------\n\t\t\tdb.articles.find(\n\t\t\t  { stock : { $elemMatch : { country : \"01\", \"warehouse.code\" : \"02\" } } }\n\t\t\t).pretty();\n\t\t\t--------------------------------\n\t\t- query with $elemMatch\n\t\t\t--------------------------------\n\t\t\tdb.articles.find(\n\t\t\t  { stock : { $elemMatch : { country : \"01\", \"warehouse.code\" : {$gte: 11} } } }\n\t\t\t).pretty();\n\t\t\t--------------------------------\n\t\t- `db.customers.find({\"address.city\" : \"Madrid\"}).pretty()`\n- execute scripts\n\t- doflash.js\n\t\t-------------------------------\n\t\tdb = db.getSiblingDB('test2');\n\t\tflashcards = db.flashcards.find();\n\t\tflashcards.forEach(f => print(\"front: \" + f.front));\n\t\t-------------------------------\n\t- `load('doflash.js')`\n- mongoimport\n\t- `mongimport --db test2 --collection customers --type json --file customers.json --jsonArray`\n- MongoDB Wire Protocol\n\t- MongoDB Wire Protocol is a simple socket-based, request-response style protocol. Clients communicate with the database server through a regular TCP/IP socket.\n\t- default port 27017\n- BSON\n\t- BSON is a computer data interchange format. The name \"BSON\" is based on the term JSON and stands for \"Binary JSON\". It is a binary form for representing simple or complex data structures including associative arrays, integer indexed arrays, and a suite of fundamental scalar types. BSON originated in 2009 at MongoDB\n\t- MongoDB stores data in BSON format both internally, and over the network, but that doesn’t mean you can’t think of MongoDB as a JSON database. Anything you can represent in JSON can be natively stored in MongoDB, and retrieved just as easily in JSON.\n\t- BSON can be used independently outside of MongoDB, designed to be efficient both in storage space and scan-speed\n\t- maximum size: 16MB\n\t\t- **GridFS** is a specification for storing and retrieving files that exceed the BSON-document size limit of 16 MB.\n\t- types\n\t\t- String\n\t\t- Integer (32 bits, 64 bits)\n\t\t- Boolean\n\t\t- Object\n\t\t- Array\n\t\t- ObjectId\n- OLTP\n\t- OLTP or Online Transaction Processing is a type of data processing that consists of executing a number of transactions occurring concurrently—online banking, shopping, order entry, or sending text messages, for example. ... Businesses usually have two types of data processing capabilities: OLTP and OLAP.\n\t\t- OLTP and OLAP: The two terms look similar but refer to different kinds of systems. Online transaction processing (OLTP) captures, stores, and processes data from transactions in real time. Online analytical processing (OLAP) uses complex queries to analyze aggregated historical data from OLTP systems.\n\t- OLTP\n\t\t- daily transactions\n\t\t- small\n\t\t- read/write\n\t\t- simple queries\n\t- OLAP\n\t\t- historical data\n\t\t- large\n\t\t- read only\n\t\t- complex queries",
        "extras": "$idCode=mongodb;$rank=4.5; $quick=with CouchDB, a popular NoSQL document store; $todo=the most popular choice for a NoSQL database",
        "genericTermIdCode": "NoSQL Database",
        "id": 79,
        "systemWhenCreated": "2019-06-13 14:51:15",
        "systemWhoCreated": "systemUnknown",
        "title": "MongoDB"
    },
    {
        "body": "- {created: 2008} by Facebook\n\t- 2009 became Apache incubator project\n\t- 2010 Apache top-level project\n- designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure\n- offers robust support for clusters spanning multiple datacenters\n- has Cassandra Query Language (CQL)",
        "extras": "$rank=2.1; $quick=a NoSQL database that handles large amounts of data; $todo=know that it exists",
        "genericTermIdCode": "NoSQL Database",
        "id": 80,
        "systemWhenCreated": "2019-06-13 15:11:14",
        "systemWhoCreated": "systemUnknown",
        "title": "Cassandra"
    },
    {
        "body": "- {created: 2009} by Salvatore Sanfilippo for his **Italian** startup\n- an in-memory data structure project implementing a distributed, in-memory **key-value database**\n- the **most popular key-value database**\n- supports different kinds of abstract data structures, such as strings, lists, maps, sets, sorted sets, HyperLogLogs, bitmaps, streams, and spatial indexes\n- made popular the idea of a system that can be considered **at the same time a store and a cache**, using a design where data is always modified and read from the main computer memory, but also stored on disk in a format that is unsuitable for random access of data, but only to reconstruct the data back in memory once the system restarts",
        "extras": "$rank=4.4; $quick=the most popular key-value database; $todo=know that it exists",
        "genericTermIdCode": "NoSQL Database",
        "id": 81,
        "systemWhenCreated": "2019-06-13 15:11:14",
        "systemWhoCreated": "systemUnknown",
        "title": "Redis"
    },
    {
        "body": "- {created: 2003} by Brad Fitzpatrick for his website LiveJournal\n\t- now a Google Engineer as part of the Go programming language team\n- a general-purpose distributed memory caching system\n- used to speed up dynamic database-driven websites by **caching data and objects in RAM** to reduce the number of times a database must be read",
        "extras": "$rank=2.7; $quick=the most popular memory caching system; $todo=use if you need to speed up access to database",
        "genericTermIdCode": "Memory Caching System",
        "id": 82,
        "systemWhenCreated": "2019-06-13 15:11:14",
        "systemWhoCreated": "systemUnknown",
        "title": "Memcached"
    },
    {
        "body": "- the four basic functions of persistent storage: **create**, **read**, **update**, and **delete**\n- popularized by James Martin in his 1983 book Managing the Data-base Environment\n- in SQL:\n\t- create = INSERT\n\t- read = SELECT\n\t- update = UPDATE\n\t- delete = DELETE\n- in HTTP:\n\t- create = POST\n\t- read = GET\n\t- update = POST\n\t- delete = DELETE\n- may be extended to CRUDL to cover listing of large data sets which bring additional complexity such as pagination when the data sets are too large to be easily held in memory",
        "extras": "$idCode=crud;$rank=0.5; $quick=a basic concept of data access and storage; $todo=know this acronym",
        "genericTermIdCode": "Database Concept",
        "id": 83,
        "systemWhenCreated": "2019-06-13 15:24:26",
        "systemWhoCreated": "systemUnknown",
        "title": "CRUD"
    },
    {
        "body": "- {created: 2011}\n\t- created by Yehuda Katz, a member of the jQuery, Ruby on Rails and SproutCore core teams\n\t- like many of Katz's other projects, it advocates convention over configuration\n- 2015 Ember 2.0\n- a forked version of an earlier project called SproutCore\n- introduced to JavaScript **convention over configuration**\n- used to create scalable **single-page web applications**\n- Ember's popularity **peaked around 2014**##vuejsPopularity\n- sets out to provide **a wholesale solution** to the client-side application problem, **not just V in MVC**\n\t- is in contrast to many JavaScript frameworks that start by providing a solution to the V in MVC (Model–View–Controller), and attempt to grow from there\n- based on **MVVM**\n- Ember.js is a part of a complete front-end stack, which comprises Ember CLI, Ember Data, Ember Inspector, Fastboot, and Liquid Fire. This allows developers to create beautifully rendered, dynamic SPAs\n- consists of five key concepts: routes, models, templates, components, services\n- unlike other projects such as AngularJS (Google) and React (Facebook) which have the backing of one main company, Ember has a variety of sponsors such as Yahoo!, LinkedIn and Bustle which are all major users of the framework\n- has a **steep learning curve**\n- **little flexibility**",
        "extras": "$rank=3.5; $quick=a full-featured JavaScript Web Framework but less popular today; $todo=try it out if you can but it has a steep learning curve",
        "genericTermIdCode": "JavaScript Framework",
        "id": 84,
        "systemWhenCreated": "2019-06-13 16:41:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Ember"
    },
    {
        "body": "- written in **Node.js**\n- Meteor actually modifies NodeJS and becomes your server\n- used for back-end development, management of the database, business logic and rendering of the front-end part of the websites are a major area where Meteor framework is used\n- you add frameworks on-top of Meteor's platform\n\t- **Meteor comes with a bunch of built-in frameworks**\n\t- one of the built-ins is a **View framework called Blaze** which can be compared one-to-one with Angular\n\t- Meteor's built-ins can be replaced, so if you want to replace Blaze with Angular then you can\n- **integrates with MongoDB**\n- Meteor can be used with its own Blaze templating engine, as well as with the Angular or React frameworks\n- in **2016** the Meteor Development Group (the open source organisation powering Meteor) started working on a new **backend layer based on GraphQL** to gradually replace their pub/sub system, largely isolated in the whole node.js ecosystem: the Apollo framework",
        "extras": "$rank=1.7; $quick=a backend JavaScript framework built on Node.js; $todo=know what it is",
        "genericTermIdCode": "JavaScript Framework",
        "id": 85,
        "systemWhenCreated": "2019-06-13 16:51:20",
        "systemWhoCreated": "systemUnknown",
        "title": "Meteor"
    },
    {
        "body": "- the implementation of the framework is easy since the functions are not derived from a base class\n- it's only about 8K, is fast and provides routing and XHR utilities out of the box\n- it has a few features similar to React\n- Mithril is pragmatic, in [this 10 minute guide](https://mithril.js.org/index.html), you learn how to create components, XHR and routing, and that's just about the right amount of knowledge needed to build useful applications\n- if you're starting something new, do consider giving Mithril a try, if nothing else, to see how much value Mithril adopters have been getting out of 8kb (gzipped) of code.\n- \"Hyperscript, which I thought I would hate, turned out to be one of my favorite parts of using Mithril especially when I paired it with Tailwind CSS. Since Hyperscript is pure JavaScript, doesn't require a build step, and is the standard way of writing Mithril components, integrating Mithril into our legacy JS app was absolutely dead simple.\"",
        "extras": "$rank=2.8; $quick=an interesting, small JavaScript framework for single-page applications; $todo=try this out on a new project at some point",
        "genericTermIdCode": "JavaScript framework",
        "id": 86,
        "systemWhenCreated": "2019-06-17 16:14:19",
        "systemWhoCreated": "systemUnknown",
        "title": "Mithril"
    },
    {
        "body": "- *2013* development began\n- being developed by **Google developers**\n- used by a number of Google services and websites, e.g. **used for the redesigned YouTube site**\n- in May 2018, the Polymer team announced that any future development in Polymer will shift away from its two-way binding and its template system, and will **focus on LitElement and one-way bindings**\n- it has a structured design process, allowing for an interoperable *lego-block architecture*\n- comes with quite a lot of **ready-made web-components** based components, which you can readily use in your projects\n- embraces the **Material Design** ideology\n\t- from a developer point of view, it comes in quite handy when the ready-made elements, provided by Polymer are beautifully crafted\n\t- projects made with Polymer **look quite good and are very accessible**, due to Polymer elements following Material Design Ideology very strictly",
        "extras": "$rank=2.3; $quick=a robust JavaScript framework created and used by Google; $todo=use this if you want to learn and use Material Design",
        "genericTermIdCode": "JavaScript framework",
        "id": 88,
        "systemWhenCreated": "2019-06-17 16:43:52",
        "systemWhoCreated": "systemUnknown",
        "title": "Polymer"
    },
    {
        "body": "- with Aurelia you're not so much using a framework, but rather you're just writing ES2015/2016 syntax Javascript with some sugar \n- has a good router\n- your controllers are just ES2015 classes, services, factories and providers are all classes, too\n- just a series of components that you can swap out\n- leverages the convention over configuration approach\n- you don't have to tell Aurelia the name of my accompanying view .html file, as it will just look for a file of the same name with the .html extension\n- Aurelia doesn’t have a Virtual DOM like React and Vue\n- small learning curve\n\t- you don't have to hire an Aurelia developer (as you have to e.g. hire a React or Angular developer), all you need to do is hire a competent front-end/Javascript developer\n\t- still has a little bit of buy-in with its templating language, but its manageable ",
        "extras": "$rank=2.2; $quick=a lesser-known JavaScript framework with a smaller learning-curve; $todo=try it out if you get a chance",
        "genericTermIdCode": "JavaScript framework",
        "id": 89,
        "systemWhenCreated": "2019-06-17 16:51:56",
        "systemWhoCreated": "systemUnknown",
        "title": "Aurelia"
    },
    {
        "body": "- 2010 created\n- uses the MVVM (Model-View-ViewModel) pattern\n- is quite minimalist\n- has a clear separation between domain data, view components and data to be displayed\n- it's perfect for creating rich and responsive user interfaces with a clean, underlying data model\n- has a clearly defined layer of specialized code to manage the relationships between the view components\n\t- makes the display more responsive and the user experience richer\n\t- Automatic UI refresh, i.e. when the data model's state changes, the UI updates automatically\n- there's one significant drawback that makes developers look for better options: tt lacks updates",
        "extras": "$rank=1.8; $quick=a minimalist JavaScript framework with MVVM pattern; $todo=interesting for its MVVM pattern, try it as a learning exercise",
        "genericTermIdCode": "JavaScript Framework",
        "id": 90,
        "systemWhenCreated": "2019-06-18 13:40:46",
        "systemWhoCreated": "systemUnknown",
        "title": "Knockout"
    },
    {
        "body": "- 2000 created\n- [versions](https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history)\n\t- 2002: C#1\n\t\t- Classes\n\t\t- Structs\n\t\t- Interfaces\n\t\t- Events\n\t\t- Properties\n\t\t- Delegates\n\t\t- Operators and expressions\n\t\t- Statements\n\t\t- Attributes\n\t- 2005: C#2\n\t\t- Generics\n\t\t- Partial types\n\t\t- Anonymous methods\n\t\t- Nullable value types\n\t\t- Iterators\n\t\t- Covariance and contravariance\t\n\t\t\t- covariance \n\t\t\t\t- enables you to pass a derived type where a base type is expected\n\t\t\t\t- in delegates allows flexibility in the return type of delegate methods\n\t\t\t- contravariance \n\t\t\t\t- applied to parameters \n\t\t\t\t- allows a method with the parameter of a base class to be assigned to a delegate that expects the parameter of a derived class\n\t- 2007: C#3\n\t\t- public double TotalPurchases { get; set; }\n\t\t- Auto-implemented properties\n\t\t- Anonymous types\n\t\t- Query expressions\n\t\t- Lambda expressions\n\t\t- Expression trees\n\t\t- Extension methods\n\t\t- Implicitly typed local variables\n\t\t- Partial methods\n\t\t- Object and collection initializers\n\t- 2010: C#4\n\t\t- Dynamic binding\n\t\t\t- type simplifies access to COM APIs such as the Office Automation APIs\n\t\t\t- resolved at run time\n\t\t- Named/optional arguments\n\t\t\t- `PrintOrderDetails(orderNum: 31, productName: \"Red Mug\", sellerName: \"Gift Shop\");`\n\t\t- Generic covariant and contravariant\n\t\t- Embedded interop types\n\t- 2012: C#5 (the async/await version)\n\t\t- Asynchronous members\n\t\t- Caller info attributes\n\t- 2015: C#6 (many smaller features)\n\t\t- Static imports\n\t\t- Exception filters\n\t\t- Auto-property initializers\n\t\t- Expression bodied members\n\t\t- Null propagator\n\t\t- String interpolation\n\t\t- `Console.WriteLine(\"Hello, {0}! Today is {1}, it's {2:HH:mm} now.\", name, date.DayOfWeek, date);`\n\t\t- nameof operator\n\t- 2017: C#7 (and 7.1, 7.2, 7.3) minor changes\n\t\t- Out variables\n\t\t\t- the out keyword causes arguments to be passed by reference\n\t\t- Tuples and deconstruction\n\t\t\t- `Tuple<int, string, string> person = new Tuple <int, string, string>(1, \"Steve\", \"Jobs\");`\n\t\t\t- without having to create a custom class. \n\t\t- Pattern matching\n\t\t- Local functions\n\t\t- Expanded expression bodied members\n\t\t- Ref locals and returns\n\t\t\t- a reference return value allows a method to return a reference to a variable, rather than a value, back to a caller\n\t- 2019: C#8 - first major C# release that specifically targets .NET Core\n\t\t- many small changes\n\t- 2020: C#9 - default language version for any assembly that targets the .NET 5 release\n\t- 2021: C#10 - type less code to express the same concepts\n\t\t- declare namespaces using a global using\n\t\t\t- declare your namespaces in a file named GlobalUsings.cs\n\t\t- instead of: `Func<string, int> parse = (string s) => int.Parse(s);`\n\t\t\t- you now write: `var parse = (string s) => int.Parse(s);`\n\t\t- hot reload\n\t\t\t- run application in development environment, make changes, and get the changes applied without stopping, rebuilding, and rerunning\n\t\t- minimal web APIs\n\t\t\t- build a fully working web API application with a few lines of code\n\t\t\t- **Program.cs**\n\t\t\t\t---------------------------------------\n\t\t\t\tvar app = WebApplication.CreateBuilder(args).Build();\n\t\t\t\tapp.MapGet(\"/\", () => \"Hello World!\");\n\t\t\t\tapp.Run();\n\t\t\t\t---------------------------------------\n- was Microsoft's respond to Java, and is very Java-like\n- began as a strict object-oriented language but has grown considerably since then\n- is strongly-typed like Java, unlike PHP\n- C# is the dominant language for the .NET platform\n- LinkedIn tutorials\n\t- [2021-01/fr: L'essentiel de Blazor](https://www.linkedin.com/learning/l-essentiel-de-blazor/)\n\t- [2018-08/fr: C# : Les collections et génériques](https://www.linkedin.com/learning/c-sharp-les-collections-et-generiques)\n\t- [2018-07/fr: C# : Délégués, évènements et expressions lambdas](https://www.linkedin.com/learning/c-sharp-delegues-evenements-et-expressions-lambdas)\n\t- [2021-10/en: C#: Interfaces and Generics](https://www.linkedin.com/learning/c-sharp-interfaces-and-generics-14335425)\n\t- [2020-08/en: Advanced C#: Functional Programming Patterns](https://www.linkedin.com/learning/advanced-c-sharp-functional-programming-patterns)",
        "extras": "$idCode=csharp;$rank=4.6; $quick=a clean, powerful language used on the .NET platform; $todo=very worth learning for job security and understanding high-level programming concepts",
        "genericTermIdCode": "Programming Language",
        "id": 91,
        "systemWhenCreated": "2019-06-18 14:32:27",
        "systemWhoCreated": "systemUnknown",
        "title": "C#"
    },
    {
        "body": "- 1972 developed at Bell Labs by Dennis Ritchie between \n\t- closely tied to the development of the Unix operating system\n- today is one of the most widely used programming languages\n- provides low-level access to memory\n- \"I never developed a fondness for C, mostly because I don't like pointer arithmetic and the language is barely a rung above assembler.\"",
        "extras": "$rank=1.1; $quick=low-level language used to program everything from hardware devices to operating systems; $todo=you don't need to learn C for anything that has to do with the Web",
        "genericTermIdCode": "Programming Language",
        "id": 92,
        "systemWhenCreated": "2019-06-18 14:41:37",
        "systemWhoCreated": "systemUnknown",
        "title": "C"
    },
    {
        "body": "- 1984 originally appeared, used by NeXT for its NeXTSTEP operating system\n- the main programming language supported by Apple for the macOS, iOS and iPadOS operating systems,\n- originally a very \"thin\" layer on top of C, and remains a strict superset of C that permits object-oriented programming using a hybrid dynamic/static typing paradigm\n- derives its syntax from both C and Smalltalk (for object-oriented features)\n- one of the most dreaded languages in Stackoverflow surveys\n- in Objective-C one does not call a method; one sends a message\n- at the 2006 Worldwide Developers Conference, Apple announced the release of Objective-C 2.0\n\t- a revision of the Objective-C language to include modern garbage collection, syntax enhancements, runtime performance improvements, and 64-bit support",
        "extras": "$idCode=objectivec;$rank=2.1; $quick=an unloved language but necessary for programming Apple devices; $todo=required to learn if you develop apps for the iPhone",
        "genericTermIdCode": "Programming Language",
        "id": 93,
        "systemWhenCreated": "2019-06-18 14:48:23",
        "systemWhoCreated": "systemUnknown",
        "title": "Objective-C"
    },
    {
        "body": "- {created: 2007} at Google to improve programming productivity in an era of multicore, networked machines and large codebases\n- the designers were primarily **motivated by their shared dislike of C++**\n- **syntactically similar to C, but with memory safety, garbage collection, structural typing**\n- **designed with the Internet in mind**\n- fast compilation\n- can have many connections and do multi-tasking\n- is influenced by C, but with greater simplicity and safety\n- the language is often referred to as Golang because of its domain name, golang.org, but the proper name is Go\n- Go was used **to write Docker and Kubernetes**\n- Go replaced Python in large part at Dropbox\n- other companies that use Go: {MongoDB}, Uber, Netflix, Mercado Libre",
        "extras": "$rank=1.1; $quick=a language that resembles C but with object-oriented features; $todo=you don't need to learn it as a web-developer",
        "genericTermIdCode": "Programming Language",
        "id": 94,
        "systemWhenCreated": "2019-06-18 14:57:30",
        "systemWhoCreated": "systemUnknown",
        "title": "Go"
    },
    {
        "body": "- 2011 developed by Google\n- an object-oriented, class defined, garbage-collected language using a C-style syntax that transcompiles optionally into JavaScript\n- heavily used to create a single page applications",
        "extras": "$rank=2.3; $quick=a Google replacement for JavaScript which transpiles to JavaScript; $todo=not necessary to learn unless you have a project that uses it",
        "genericTermIdCode": "Programming Language",
        "id": 95,
        "systemWhenCreated": "2019-06-18 15:14:36",
        "systemWhoCreated": "systemUnknown",
        "title": "Dart"
    },
    {
        "body": "- 1987 written by Larry Wall as a general-purpose Unix scripting language\n- Perl usually refers to Perl 5, but it may also refer to its redesigned sister language, Perl 6\n- in the 90s used for CGI scripts, i.e. the first backend programming language for the Web\n- today used for system administration and network programming\n- in 1998, it was referred to as the duct tape that holds the Internet together",
        "extras": "$rank=1.2; $quick=a language used most on Linux machines for writing sysadmin scripts; $todo=avoid this language if you can, unless you e.g. administer Linux machines",
        "genericTermIdCode": "Programming Language",
        "id": 96,
        "systemWhenCreated": "2019-06-18 15:21:29",
        "systemWhoCreated": "systemUnknown",
        "title": "Perl"
    },
    {
        "body": "- 1970 developed by Niklaus Wirth, a Swiss computer scientist\n- became very successful in the 1970s\n- used as a teaching language in university-level programming courses in the 1980s\n- was displaced by the C programming language during the late 1980s and early 1990s as UNIX-based systems became popular, and especially with the release of C++",
        "extras": "$rank=0.4; $quick=an old language no longer used; $todo=you don't need to learn this",
        "genericTermIdCode": "Programming Language",
        "id": 97,
        "systemWhenCreated": "2019-06-18 15:30:36",
        "systemWhoCreated": "systemUnknown",
        "title": "Pascal"
    },
    {
        "body": "- developed **1958**\n- the **second-oldest** high-level programming language in widespread use today, behind Fortran\n- Lisp has important design concepts and has evolved into other languages used today including Clojure, Common Lisp, and Scheme\n- after having declined somewhat in the 1990s, Lisp has experienced a resurgence of interest after 2000\n- many new Lisp programmers were inspired by writers such as Paul Graham and Eric S. Raymond to pursue a language others considered antiquated\n- Lisp programmers often describe the language as **an eye-opening experience** and claim to be substantially more productive than in other languages",
        "extras": "$rank=0.9; $quick=the second oldest computer language but which has important design features; $todo=as a software developer, you should be able to say intelligent things about Lisp",
        "genericTermIdCode": "Programming Language",
        "id": 98,
        "systemWhenCreated": "2019-06-18 15:39:30",
        "systemWhoCreated": "systemUnknown",
        "title": "Lisp"
    },
    {
        "body": "- 1957 developed by IBM\n- has been in continuous use for over six decades in computationally intensive areas such as numerical weather prediction, finite element analysis, computational fluid dynamics, computational physics, crystallography and computational chemistry\n- 1953 proposal submitted at IBM to develop a more practical alternative to assembly language for programming their IBM 704 mainframe computer\n- it reduced the number of programming statements necessary to operate a machine by a factor of 20\n- was widely adopted by scientists",
        "extras": "$rank=0.1; $quick=the oldest computer language from the 1950s; $todo=you don't need to learn this",
        "genericTermIdCode": "Programming Language",
        "id": 99,
        "systemWhenCreated": "2019-06-18 15:52:25",
        "systemWhoCreated": "systemUnknown",
        "title": "Fortran"
    },
    {
        "body": "- 1959 developed for business use\n- effectively designed from the ground up as a computer language for business, with an emphasis on inputs and outputs, whose only data types were numbers and strings of text\n- still widely used in legacy applications deployed on mainframe computers\n\t- primarily used in business, finance, and administrative systems for companies and governments\n- due to its declining popularity and the retirement of experienced COBOL programmers, programs are being migrated to new platforms, rewritten in modern languages or replaced with software packages\n- most programming in COBOL is now purely to maintain existing applications",
        "extras": "$rank=0.2; $quick=extremely old computer language hardly in use anymore; $todo=you don't need to learn this",
        "genericTermIdCode": "Programming Language",
        "id": 100,
        "systemWhenCreated": "2019-06-18 15:58:14",
        "systemWhoCreated": "systemUnknown",
        "title": "COBOL"
    },
    {
        "body": "- 1949 first appeared\n- not technically a language per se but symbolic machine code\n- usually refers to any low-level structured coding in which there is a very strong correspondence between the program's statements and the architecture's machine code instructions\n- Assembly language usually has one statement per machine instruction\n- an example of Assembly code:##assemblyCode",
        "extras": "$rank=0.09; $quick=the lowest level machine instructions, used since 1949; $todo=you don't need to learn this",
        "genericTermIdCode": "Programming Language",
        "id": 101,
        "systemWhenCreated": "2019-06-18 16:06:10",
        "systemWhoCreated": "systemUnknown",
        "title": "Assembly"
    },
    {
        "body": "- 2017 developed by the W3C, Google, Microsoft, Apple, Mozilla\n- often referred to as Wasm\n- a set of web standards that define a portable modular binary format, and a corresponding language, similar to the assembly language for executable program and environment-specific program interfaces\n- the main goal of WebAssembly is to enable high performance applications on web pages\n- does not replace JavaScript\n- there is direct DOM to access\n- precursor technologies were asm.js \n- WebAssembly code is intended to be run on a portable abstract structured stack machine, which is designed to be faster to parse than JavaScript, as well as faster to execute, and to enable very compact code representation.\n- it's not that important\n\t- every second post about WASM mentions that it will finally end the domination of JavaScript\n\t- for traditional web-development e.g. CRUD apps, e-commerce, i.e. 98% of what makes the web today, WASM is pretty useless\n\t\t- there's nothing JavaScript can't do in these areas \n\t- while it will definately be used and there'll be amazingly fast apps built with it, it won't be as widely used as current HTML5 web stack",
        "extras": "$idCode=webassembly;$rank=2.6; $quick=a new a upcoming technology to enable high performance applications on web pages; $todo=keep an eye on it but it is not significant yet",
        "genericTermIdCode": "Programming Language",
        "id": 102,
        "systemWhenCreated": "2019-06-18 16:13:16",
        "systemWhoCreated": "systemUnknown",
        "title": "WebAssembly"
    },
    {
        "body": "- 1993 created \n- Visual Basic for Applications, an implementation of Microsoft's event-driven programming language Visual Basic 6\n- although Visual Basic is no longer support, the VBA programming language was upgraded in 2010 with the introduction of Visual Basic for Applications 7 in Microsoft Office applications\n- VBA code only run within the host application, usually used in Microsoft Excel for complex macros and complex Excel interactive applications\n\t- less often in Microsoft Word\n- example of VBA code in Excel which is executed by a button in a spreadsheet##vbaExample\n- start VBA\n\t- ALT-F11\n- functions\n\t- lowercase: `LCase()`\n\t- uppercase: `UCase()`\n\t- get from string: \n\t\t- `Left(strCode, 5)`\n\t\t- `Right(strCode, 5)`\n\t\t- `Mid(strCode, 5, 3)`\n\t\t\t----------------------------------------\n\t\t\tSub TestString()\n\t\t\t\tDim strCode As String\n\n\t\t\t\tstrCode = \"This is a test.\"\n\t\t\t\tDebug.Print (Left(strCode, 4)) ' This\n\t\t\t\tDebug.Print (Right(strCode, 5)) ' test.\n\t\t\t\tDebug.Print (Mid(strCode, 11, 4)) ' test\n\t\t\t\tDebug.Print (Mid(strCode, 9)) ' a test.\n\t\t\tEnd Sub\n\t\t\t----------------------------------------\n\t- find position: \n\t\t- `InStr(strFullName, \" \")`\n\t\t- `InStrRev(strFileName, \".\")`\n\t\t\t-------------------------------------------\n\t\t    strFileName = \"asdf.sdfjksdfj.xls\"\n\t\t\tDebug.Print (InStr(strFileName, \".\")) ' 5\n\t\t\tDebug.Print (InStrRev(strFileName, \".\")) ' 15\n\t\t\t-------------------------------------------\n- input\n\t- get input and respond to it\n\t\t-------------------------------------------\n\t\tSub GetName()\n\t\t\tDim strCode As String\n\n\t\t\tstrCode = InputBox(\"Enter the code:\", \"Welcome\")\n\t\t\tIf (strCode = \"123\") Then\n\t\t\t\tDebug.Print \"correct\"\n\t\t\tElse\n\t\t\t\tDebug.Print \"wrong\"\n\t\t\tEnd If\n\n\t\tEnd Sub\n\t\t-------------------------------------------",
        "extras": "$rank=2.3; $quick=definitely an unliked and overly-simplistic language, but pragmatic and useful in Excel; $todo=learning it enough to make macros in Excel is a useful skill",
        "genericTermIdCode": "Programming Language",
        "id": 103,
        "systemWhenCreated": "2019-06-18 16:21:24",
        "systemWhoCreated": "systemUnknown",
        "title": "VBA"
    },
    {
        "body": "- 1964 designed at Darthmouth College\n- design philosophy emphasizes ease of use\n\t- designers wanted to enable students in fields other than science and mathematics to use computers\n- emergence of early microcomputers in the mid-1970s led to the development of the original Microsoft BASIC in 1975\n- Apple computers had Apple BASIC\n- BASIC fell from use during the later 1980s as newer machines with far greater capabilities came to market and other programming languages\n- 1991, Microsoft released Visual Basic, combining a greatly updated version of BASIC with a visual forms builder",
        "extras": "$rank=0.6; $quick=a simple language used in the 70s and 80s; $todo=you don't need to learn this",
        "genericTermIdCode": "Programming Language",
        "id": 104,
        "systemWhenCreated": "2019-06-18 16:30:24",
        "systemWhoCreated": "systemUnknown",
        "title": "BASIC"
    },
    {
        "body": "- 1996 first appeared, an object-layer improvement on Caml, which existed since 1985\n\t- Caml = Categorical Abstract Machine Language\n\t- OCaml = Objective Caml\n- some feel OCaml is better than C, but it is not more popular since C has been around for so much longer\n- principally maintained by the French Institute for Research in Computer Science and Automation (INRIA)\n- in the early 2000s, elements from OCaml were adopted by many languages, notably F# and Scala\n- OCaml unifies functional, imperative, and object-oriented programming under an ML-like type system, thus, programmers need not be highly familiar with the pure functional language paradigm to use OCaml\n- OCaml is perhaps most distinguished from other languages with origins in academia by its emphasis on performance",
        "extras": "$idCode=ocaml;$rank=1.1; $quick=an academic language created in France in the 1990s; $todo=know that it exists",
        "genericTermIdCode": "Programming Language",
        "id": 105,
        "systemWhenCreated": "2019-06-18 16:41:33",
        "systemWhoCreated": "systemUnknown",
        "title": "OCaml"
    },
    {
        "body": "- 2009 created\n- transcompiles to JavaScript\n- an attempt to make JavaScript more readable\n\t- by making many things optional, and, at the same time, enforcing other things\n\t- **blocks are all without braces and parenthesis, and whitespace is used to denote blocks, like in Python**\n- adds syntactic sugar inspired by Ruby, Python and Haskell in an effort to enhance JavaScript's brevity and readability\n- is just syntactic sugar on top of JavaScript\n- one of the pioneers of the compile-to-JavaScript concept\n- a reason to use it its **adherence to functional programming**\n\t- treats everything as expressions\n- CoffeeScript sprinkled syntactic sugar onto JavaScript\n\t- inspired by Ruby, Python and Haskell\n\t- exposed the good parts of JavaScript in a simple way",
        "extras": "$rank=3.3; $quick=one of the first languages that transpiled to JavaScript; $todo=not necessary to learn it unless if you have a project in it or to explore its simplicity and functional programming concepts",
        "genericTermIdCode": "Programming Language",
        "id": 106,
        "systemWhenCreated": "2019-06-20 11:55:37",
        "systemWhoCreated": "systemUnknown",
        "title": "Coffeescript"
    },
    {
        "body": "- created in 1986 by Betrand Meyer\n\t- a **French** academic, author, and consultant in the field of computer languages\n- object-oriented programming language \n- goal of increasing the reliability of commercial software development\n- has distinct principles\n\t- design by contract\n\t- command–query separation\n\t- the uniform-access principle\n\t- the single-choice principle\n\t- the open–closed principle\n\t- option–operand separation\n- many of the concepts found their way into **Java and C#**\n- class serves as the basic unit of decomposition",
        "extras": "$rank=0.4; $quick=a 1980s language that influenced Java and C#; $todo=just know about this language",
        "genericTermIdCode": "Programming Language",
        "id": 107,
        "systemWhenCreated": "2019-06-20 12:48:47",
        "systemWhoCreated": "systemUnknown",
        "title": "Eiffel"
    },
    {
        "body": "- 2005 created\n- a strongly typed functional-first language that uses type inference\n- you do not need to declare types, the compiler deduces types during compilation\n- every statement, including `if` expressions, `try` expressions and loops, is a composable expression with a static type",
        "extras": "$idCode=fsharp; $rank=3.4; $quick=a lesser-known .NET functional language; $todo=learn if you are doing algorithmic programming difficult in C#",
        "genericTermIdCode": "Programming Language",
        "id": 109,
        "systemWhenCreated": "2019-06-20 13:47:41",
        "systemWhoCreated": "systemUnknown",
        "title": "F#"
    },
    {
        "body": "- 2007 appeared\n- developed since 2003\n- a Java-syntax-compatible object-oriented programming language for the Java platform\n- 2015 became a top-level **Apache project**\n- most valid Java files are also valid Groovy files",
        "extras": "$rank=0.7; $quick=a Java-like language with dynamic typing (not good); $todo=if you use Java, you might want to familiarize yourself with Groovy",
        "genericTermIdCode": "Programming Language",
        "id": 110,
        "systemWhenCreated": "2019-06-20 13:57:49",
        "systemWhoCreated": "systemUnknown",
        "title": "Groovy"
    },
    {
        "body": "- {created: 1985}\n- a purely functional programming language \n- designed by David Turner as a successor to his earlier programming languages SASL and KRC, using some concepts from ML and Hope\n- produced by Research Software Ltd. of England and was the first purely functional language to be commercially supported\n- had a strong influence on the later Haskell programming language",
        "extras": "$rank=0.2; $quick=an almost unknown language from the 1980s that influenced Haskell; $todo=you don't need to know this language",
        "genericTermIdCode": "Programming Language",
        "id": 111,
        "systemWhenCreated": "2019-06-20 14:15:12",
        "systemWhoCreated": "systemUnknown",
        "title": "Miranda"
    },
    {
        "body": "- {created: 1990}\n- functional language\n- the latest standard of Haskell is Haskell 2010\n- as of May 2016, the Haskell committee is working on the next standard, Haskell 2020\n- widely used in academia and industry\n- **Purescript** has Haskell syntax",
        "extras": "$rank=0.8; $quick=an old language used mostly in academics; $todo=you might want to learn this if you study computer science",
        "genericTermIdCode": "Programming Language",
        "id": 112,
        "systemWhenCreated": "2019-06-20 14:15:27",
        "systemWhoCreated": "systemUnknown",
        "title": "Haskell"
    },
    {
        "body": "- {created:1993} created by Ross Ihaka and Robert Gentleman at the University of Auckland, **New Zealand**\n- widely used among **statisticians and data miners** for developing statistical software and data analysis\n- supported by the R Foundation for Statistical Computing\n- the R software environment is written primarily in C, Fortran and R itself\n- although R has a command line interface, there are several graphical user interfaces, such as **RStudio**, an integrated development environment\n- R is an **interpreted language** and users typically access it through a command-line interpreter\n- uno de los lenguajes más populares en el campo de la minería de datos, la investigación biomédica, la bioinformática y las matemáticas financieras",
        "extras": "$rank=0.9; $idCode=rLanguage; $quick=a popular language for statistical analysis; $todo=you only need to learn this if you get into pure statistical programming",
        "genericTermIdCode": "Programming Language",
        "id": 113,
        "systemWhenCreated": "2019-06-20 14:38:02",
        "systemWhoCreated": "systemUnknown",
        "title": "R"
    },
    {
        "body": "- 1976 released \n- one of several statistical computing languages that were designed at Bell Laboratories\n- before S, much of the statistical computing was done by directly calling Fortran subroutines\n- S was designed to offer an alternate and more interactive approach",
        "extras": "$rank=0.3; $idCode=sLanguage;$quick=a 1970s statistical language; $todo=know of this language in a historical sense",
        "genericTermIdCode": "Programming Language",
        "id": 114,
        "systemWhenCreated": "2019-06-20 14:38:02",
        "systemWhoCreated": "systemUnknown",
        "title": "S"
    },
    {
        "body": "- 1975 released\n- created during the early 1970s at the MIT AI Lab \n- primarily a functional programming language\n- Scheme's simple syntax is based on s-expressions, parenthesized lists in which a prefix operator is followed by its arguments\n- its reliance on lists as data structures is shared by all Lisp dialects\n- one of the three main dialects of Lisp, alongside Common Lisp and Clojure",
        "extras": "$rank=0.4; $quick=a derivative of the Lisp language created in the 1970s; $todo=just know about Scheme in a historical sense",
        "genericTermIdCode": "Programming Language",
        "id": 116,
        "systemWhenCreated": "2019-06-20 14:41:53",
        "systemWhoCreated": "systemUnknown",
        "title": "Scheme"
    },
    {
        "body": "- 2016 created\n- it is written \"ReasonML\" but when talking, one says \"Reason\"\n- a syntax extension and toolchain for OCaml created by Jordan Walke at Facebook\n- offers a syntax familiar to JavaScript programmers, and transpiles to OCaml\n- **it compiles to JavaScript**\n- \"ReasonML takes the advantages of both OCaml and JavaScript and can compile to both languages.\"\n- ReasonML isn't a new language, it's a new syntax for OCaml.\n- it is a new C-like syntax for the programming language OCaml\n\t- new syntax is intended to make interoperation with JavaScript and adoption by JavaScript programmers easier\n\t- it removes idiosyncrasies of OCaml's syntax\n- ReasonML is based on OCaml\n- ReasonML's default compilation target is JavaScript (browsers and Node.js)\n- \"ReasonML feels much like what you'd get if you cleaned up JavaScript and turned it into a statically typed functional programming language.\"\n- free online book: [Exploring ReasonML](http://reasonmlhub.com/exploring-reasonml/toc.html)\n- ReasonML brings the strong typing and functional style of OCaml to the web in a syntax that’s familiar to JavaScript developers.\n- You write your code in ReasonML, the reformat parser converts it to OCaml AST (abstract syntax), from which the BuckleScript compiler produces JavaScript\n- Reason is not a new language; it’s a new syntax and toolchain powered by the battle-tested language, OCaml\n\t- Reason gives OCaml a familiar syntax geared toward JavaScript programmers, and caters to the existing NPM/Yarn workflow folks already know",
        "extras": "$rank=3.2;$idCode=reasonml; $quick=a TypeScript-like extension to the functional programming language OCaml; $todo=not necessary to learn but would be interesting to explore",
        "genericTermIdCode": "Programming Language",
        "id": 117,
        "systemWhenCreated": "2019-06-20 15:34:47",
        "systemWhoCreated": "systemUnknown",
        "title": "ReasonML"
    },
    {
        "body": "- created 1995\n- designed and developed by Yukihiro \"Matz\" Matsumoto in Japan\n- dynamically typed and garbage-collected\n- influenced by Perl, Smalltalk, Eiffel, Ada, and Lisp\n- Matsumoto on the creation of Ruby: \"I was talking with my colleague about the possibility of an object-oriented scripting language. I knew Perl (Perl4, not Perl5), but I didn't like it really, because it had the smell of a toy language (it still has). The object-oriented language seemed very promising. I knew Python then. But I didn't like it, because I didn't think it was a true object-oriented language – OO features appeared to be add-on to the language. As a language maniac and OO fan for 15 years, I really wanted a genuine object-oriented, easy-to-use scripting language. I looked for but couldn't find one. So I decided to make it.\"\n- Ruby is object-oriented: **every value is an object**, including classes and instances of types that many other languages designate as primitives (such as integers, booleans, and \"null\")\n- variables always hold references to objects\n- every function is a method and methods are always called on an object\n- RubyGems is Ruby's package manager\n- **Bundler** provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed\n\t- similar to Node's npm or PHP's Composer",
        "extras": "$rank=3.8; $quick=a strictly object-oriented language; $todo=worth learning, especially with Ruby on Rails",
        "genericTermIdCode": "Programming Language",
        "id": 118,
        "systemWhenCreated": "2019-06-20 15:47:39",
        "systemWhoCreated": "systemUnknown",
        "title": "Ruby"
    },
    {
        "body": "- {created: 2001} by **Martin Odersky**\n\t- der Entwickler von *javac*\n\t- got his Ph.D. at ETH Zurich under the supervision of Niklaus Wirth (Swiss computer scientist who designed Pascal)\n\t- idea for Scala was mainly academic\n\t- more practical than Haskell or Clojure\n- released in 2004 \n\t- at École Polytechnique Fédérale de Lausanne\n- combines the best of both worlds: OOP and functional programming\n\t- it is primarily object-oriented but incorporates functional paradigms\n\t- sehr reactive applications\n\t\t- this means non-blocking\n- compared to other languages that run on the JVM\n\t- Groovy\n\t\t- is also functional and object-oriented\n\t\t- but not strongly typed (bad)\n- common editor is IntelliJ IDEA\n- scala.js\n\t- Scala compiled to ES6\n- Scala Native\n\t- goal is to start without a runtime\n\t- compiled with LLVM (low level virtual machine)\n\t- but is only experimental\n- can access all libraries that Java can access\n\t- but also has 3000+ libraries which are only for Scala\n\t\t- e.g. Spark\n- associated with the company Typesafe\n- Akka is written in Scala\n\t- Akka is a free and open-source toolkit and runtime simplifying the construction of concurrent and distributed applications on the JVM. Akka supports multiple programming models for concurrency, but it emphasizes actor-based concurrency, with inspiration drawn from Erlang.\n\t- Language bindings exist for both Java and Scala. Akka is written in Scala and, as of Scala 2.10, the actors in the Scala standard library are deprecated in favor of Akka.\n- runs on JVM\n\t- compatible with existing Java programs\n- both functional and object-oriented\n- everything in Scala is an **object**\n\t- **does not include primitive data types such as int, double, boolean**\n\t- even functions are objects\n\t- you can pass functions to methods and return them from methods\n\t- you can assign functions to variables\n\t- supports anonymous functions, or lambdas\n- supports currying\n- statically typed\n- Java code can also call into Scala code\n- Scala takes a more minimalistic approach than Java.\n- designed to be concise, many of Scala's design decisions aimed to address criticisms of Java\n- Scala source code is intended to be **compiled to Java bytecode**, so that the resulting executable code runs on a Java virtual machine. \n- Scala is **influenced by Lisp**, but it isn't a dialect\n- Scala has become popular because of Apache Spark\n\t- Spark 0.9.1 uses Scala 2.10.",
        "extras": "$rank=2.1; $quick=a Java-like language with more functional features; $todo=may be interesting if you do intensive Java programming",
        "genericTermIdCode": "Programming Language",
        "id": 119,
        "systemWhenCreated": "2019-06-20 16:04:00",
        "systemWhoCreated": "systemUnknown",
        "title": "Scala"
    },
    {
        "body": "- created 1962\n\t- at the Norwegian Computing Center in Oslo\n- considered the first object-oriented programming language\n- introduced objects, classes, inheritance, subclasses, and garbage collection\n- as the name suggests, was designed for doing simulations\n- influence of Simula is often understated, and Simula-type objects are reimplemented in C++, Object Pascal, Java, C# and several other languages",
        "extras": "$rank=0.4; $quick=the first object-oriented language created in 1962 in Oslo; $todo=know that Simula and Smalltalk are the first two object-oriented languages",
        "genericTermIdCode": "Programming Language",
        "id": 120,
        "systemWhenCreated": "2019-06-20 16:35:40",
        "systemWhoCreated": "systemUnknown",
        "title": "Simula"
    },
    {
        "body": "- create in 1972\n\t- in part for educational use at the Learning Research Group of Xerox PARC\n- Smalltalk-like languages are in continuing active development and have gathered loyal communities of users around them, ANSI Smalltalk was ratified in 1998 and represents the standard version of Smalltalk",
        "extras": "$rank=0.4; $quick=an educational, object-oriented language created in the 1970s that influenced Ruby and Objective-C; $todo=people talk about it a lot as a theoretically ideal language, but nobody uses it",
        "genericTermIdCode": "Programming Language",
        "id": 121,
        "systemWhenCreated": "2019-06-20 16:35:40",
        "systemWhoCreated": "systemUnknown",
        "title": "Smalltalk"
    },
    {
        "body": "- created for Microsoft SQL Server in early 1990s\n- also known as T-SQL\n- is central to using Microsoft SQL Server\n- expands on the SQL standard to include procedural programming, local variables, various support functions for string processing, date processing, mathematics, etc. and changes to the DELETE and UPDATE statements",
        "extras": "$idCode=tsql;$rank=3.5; $quick=the language used in Microsoft SQL Server; $todo=learn this if you do .NET development",
        "genericTermIdCode": "Programming Language",
        "id": 122,
        "systemWhenCreated": "2019-06-20 16:44:20",
        "systemWhoCreated": "systemUnknown",
        "title": "Transact-SQL"
    },
    {
        "body": "- released in 1989\n- a command language widely distributed today as the default login shell for most Unix and Linux distribution, as well as Apple's macOS and Solaris 11\n- a version is also available for Windows\n- Bash is a command processor that typically runs in a text window where the user types commands that cause actions\n it can also read and execute commands from a file, called a shell script\n- it supports wildcard matching, piping, here documents, command substitution, variables, and control structures for condition-testing and iteration\n- Bash has become by far the most popular shell among users of Linux",
        "extras": "$rank=3.8; $quick=the default command language script on Linux, macOS and UNIX; $todo=worth learning if you work on Linux or Mac",
        "genericTermIdCode": "Programming Language",
        "id": 123,
        "systemWhenCreated": "2019-06-21 12:46:55",
        "systemWhoCreated": "systemUnknown",
        "title": "Bash"
    },
    {
        "body": "- 1991 created\n- relatively easy to learn and use\n- was derived from BASIC and enabled rapid application development of graphical user interface applications and access to databases\n- over time the community of programmers developed third-party components\n- 1998 final release as version 6\n- 2008 declared legacy\n- a dialect of Visual Basic, Visual Basic for Applications (VBA), is used as a macro or scripting language particularly within Excel",
        "extras": "$idCode=visualbasic;$rank=0.5; $quick=the standard way to develop windows applications in the 1990s; $todo=don't learn this",
        "genericTermIdCode": "Programming Language",
        "id": 124,
        "systemWhenCreated": "2019-06-21 14:04:29",
        "systemWhoCreated": "systemUnknown",
        "title": "Visual Basic"
    },
    {
        "body": "- 2001 released\n- the successor to its original Visual Basic language, i.e. Visual Basic 6.0 from the 1990s\n- the primary .NET language is C#, and the only reason you would use Visual Basic .NET, which has the same functionality as C# if not less, is that you are used to the syntax of Visual Basic 6.0 and don't want to learn C#\n\t- the language was created in addition to C# to attract Visual Basic 6.0 programers to the .NET platform",
        "extras": "$idCode=visualbasicnet;$rank=0.65; $quick=.NET language created to attract Visual Studio 6.0 programmers from the 1990s; $todo=you don't need to learn this, learn C# instead to program on .NET",
        "genericTermIdCode": "Programming Language",
        "id": 125,
        "systemWhenCreated": "2019-06-21 15:02:14",
        "systemWhoCreated": "systemUnknown",
        "title": "Visual Basic .NET"
    },
    {
        "body": "- 1984 developed\n- Common Lisp is not an implementation, but rather a language specification\n- a dialect of the Lisp programming language\n- Common Lisp sought to unify, standardize, and extend the features of other Lisp dialects\n- influenced Clojure",
        "extras": "$idCode=commonlisp;$rank=0.63; $quick=a language specification derived from lisp that inspired Clojure; $todo=just know that it exists",
        "genericTermIdCode": "Programming Language",
        "id": 126,
        "systemWhenCreated": "2019-06-21 15:24:15",
        "systemWhoCreated": "systemUnknown",
        "title": "Common Lisp"
    },
    {
        "body": "- 1998 created\n- a language for transforming XML documents into other XML documents\n- XSLT is influenced by functional languages\n- the XSLT processor takes one or more XML source documents, plus one or more XSLT stylesheets, and processes them to produce an output document\n- in contrast to imperative programming languages like C, XSLT is declarative\n\t- the basic processing paradigm is pattern matching",
        "extras": "$rank=2.2; $quick=a language for transforming XML documents into other XML documents; $todo=learn this at some point, useful when working with XML",
        "genericTermIdCode": "Programming Language",
        "id": 127,
        "systemWhenCreated": "2019-06-21 15:33:22",
        "systemWhoCreated": "systemUnknown",
        "title": "XSLT"
    },
    {
        "body": "- {created: 2007} by Rich Hickey\n- [CLOH-zhur]\n- a modern, dynamic, and **functional dialect of Lisp** on the Java platform\n- focus on programming with immutable values and explicit progression-of-time constructs is intended to facilitate developing more robust programs, especially multithreaded ones\n- while its type system is entirely dynamic, recent efforts have also sought the implementation of gradual typing\n- Rich Hickey as its benevolent dictator for life (BDFL)",
        "extras": "$rank=1.15; $quick=dialect of Lisp for the Java platform; $todo=learn this if you want to get into Lisp and functional programming",
        "genericTermIdCode": "Programming Language",
        "id": 128,
        "systemWhenCreated": "2019-06-21 15:45:24",
        "systemWhoCreated": "systemUnknown",
        "title": "Clojure"
    },
    {
        "body": "- developed  **2016 by Facebook**\n- compatible with the public npm registry and **uses npm by default**\n- designed to address some of the shortcomings of npm at the time",
        "extras": "$rank=3.1; $quick=a replacement for npm; $todo=learn npm first which is more standard, and perhaps later learn Yarn",
        "genericTermIdCode": "JavaScript package manager",
        "id": 129,
        "systemWhenCreated": "2019-07-11 15:46:50",
        "systemWhoCreated": "systemUnknown",
        "title": "Yarn"
    },
    {
        "body": "- 2005 created\n- uses the MVC pattern, as well as convention over configuration (CoC), don't repeat yourself (DRY), and the active record pattern\n- greatly influenced web app development through innovative features such as seamless database table creations, migrations, and scaffolding of views to enable rapid application development\n- **influenced Django, CakePHP, Laravel, and Sails.js**\n- David Heinemeier Hansson (Danish programmer) extracted Ruby on Rails from his work on the project management tool Basecamp at the web application company also called Basecamp, in 2007, the framework reached a milestone when Apple released Ruby on Rails with Mac OS X v10.5 Leopard",
        "extras": "$rank=4.0; $quick=an older web application framework with solid paradigms worth learning; $todo=try to do a project in Ruby on Rails at some point",
        "genericTermIdCode": "web application framework ",
        "id": 130,
        "systemWhenCreated": "2019-07-12 10:15:05",
        "systemWhoCreated": "systemUnknown",
        "title": "Ruby on Rails"
    },
    {
        "body": "- 2012 created\n- web application framework developed atop the **Node.js and Express.js**\n- borrows concepts from **Ruby on Rails**\n- provides **ORM interface** using Waterline.js (inherits the best parts of ORMs like ActiveRecord, Hibernate, and Mongoose)\n\t- enables a uniform API regardless of the underlying database being used\n- offers a host of features out of the box and leads as the generally accepted Node.js framework for both full-stack development and REST APIs",
        "extras": "$rank=3.2; $quick=solid MVC web application framework for Node.js; $todo=try it out at some point",
        "genericTermIdCode": "MVC web application framework",
        "id": 131,
        "systemWhenCreated": "2019-07-12 10:28:19",
        "systemWhoCreated": "systemUnknown",
        "title": "Sails.js"
    },
    {
        "body": "- 2005 created\n- web framework that uses Python\n- follows the model-template-view (MTV) pattern\n- used to create complex, database-driven websites\n- Python is used throughout, even for settings files and data models\n- **Instagram** apparently uses Django: [Instagram Makes a Smooth Move to Python 3](https://thenewstack.io/instagram-makes-smooth-move-python-3)\n\t- \"Instagram serves this incredible amount of traffic, reliably and steadily so, by running Python (with a little help from Django) under the hood\"\n- the version control hosting service **Bitbucket** was created with Django\n- forays\n\t- install Django on Windows\n\t\t- setting up environment for Django site:\n\t\t\t- `mkdir djangosite`\n\t\t\t- `python3.9 -m venv .env`\n\t\t\t-  j'ai reçu l'erreur: `bash: python3.9: command not found`\n\t\t\t-  but `python -m venv .env` worked\n\t\t\t-  now I have a `.env` file\n\t\t\t-  installing Python 3.10.2 via https://www.python.org/downloads\n\t\t\t-  there is still no bin directory in .env\n\t\t\t-  see: https://stackoverflow.com/questions/13206990/virtualenv-env-not-creating-bin-directory-in-windows-7\n\t\t\t-  `source .env/Scripts/activate` executed\n\t\t- using `pip` to set up Django environment\n\t\t\t- `pip -V` --> pip 19.0.3 (2022-01-22)\n\t\t\t\t- got error: `Could not install packages due to an EnvironmentError: [WinError 5] Accès refusé: 'C:\\\\Users\\\\ADMIN\\\\AppData\\\\Local\\\\Temp\\\\pip-uninstall-p82up12y\\\\pip.exe'\n\tConsider using the `--user` option or check the permissions.`\n\t\t\t- executing Windows CLI as administrator\n\t\t\t\t- still got the error:##evenwithadminnoposs\n\t\t\t- ok but upgraded so seems to have worked well enough##alreadsatttt\n\t\t- installing Django\n\t\t\t- `pip install django==3.1.6`\n\t\t\t- `python -m django --version` (3.1.6)\n\t\t\t- `python`\n\t\t\t\t- `import django` (if nothing shows, no erros, then Django is correctly installed)\n\t\t\t- you can always type `source .env/Scripts/activate` again to make sure you are in the virtual environment, it will also show **(.env)**##typesourceagainforsure\n\t\t\t- `pip freeze > requirements.txt` (somewhat like package.json)\n\t\t\t\t----------------------\n\t\t\t\tasgiref==3.4.1\n\t\t\t\tDjango==3.1.6\n\t\t\t\tpytz==2021.3\n\t\t\t\tsqlparse==0.4.2\n\t\t\t\ttyping_extensions==4.0.1\n\t\t\t\t----------------------\n\t\t- uninstall Django\n\t\t\t- `pip uninstall django`\n\t\t- reinstall Django\n\t\t\t- `pip install -r requirements.txt`\n\t\t- install Django project\n\t\t\t- `django-admin startproject django001`\n\t\t\t- `django-admin --help`\n\t\t\t- rename main directory: `src\\django001`\n\t\t\t\t- but not the second one since it is used in settings.py\n\t\t- start server\n\t\t\t- `cd src`\n\t\t\t- `python manage.py runserver`",
        "extras": "$rank=3.1; $quick=Python-based web framework; $todo=would be a good way to learn Python",
        "genericTermIdCode": "Python-based web framework",
        "id": 132,
        "systemWhenCreated": "2019-07-12 10:36:23",
        "systemWhoCreated": "systemUnknown",
        "title": "Django"
    },
    {
        "body": "- 2014 developed at Facebook and is often used with React\n- static type checker for JavaScript code\n- lets you annotate the variables, functions, and React components with a special type syntax, and catch mistakes early\n- in 2017, Facebook announced that it would re-license Flow, Jest, React, and Immutable.js under a standard MIT License\t\n- **Flow is being replaced by TypeScript**",
        "extras": "$rank=2.9; $quick=static type checker for JavaScript; $todo=look into this if you develop in React",
        "genericTermIdCode": "static type checker for JavaScript",
        "id": 133,
        "systemWhenCreated": "2019-07-12 11:06:11",
        "systemWhoCreated": "systemUnknown",
        "title": "Flow"
    },
    {
        "body": "- 1986 created\n- has garbage collection\n- has immutable data\n- main strength is support for concurrency\n\t- the ability of different parts or units of a program, algorithm, or problem to be executed out-of-order or in partial order, without affecting the final outcome",
        "extras": "$rank=0.4; $quick=a little-known functional language from the 1980s; $todo=just know that it exists",
        "genericTermIdCode": "functional language",
        "id": 134,
        "systemWhenCreated": "2019-07-12 11:35:48",
        "systemWhoCreated": "systemUnknown",
        "title": "Erlang"
    },
    {
        "body": "- {created:2011}\n- a functional, concurrent, general-purpose programming language that runs on the Erlang (1986) virtual machine\n- was built to enable **higher extensibility and productivity in the Erlang VM** while keeping compatibility with Erlang's ecosystem\n- builds on top of Erlang and shares the same abstractions for building distributed, fault-tolerant applications\n- *\"Users send hundreds of messages per minute, now what? You could learn Elixir and Erlang, but is that really where you want your career to go? Or you could try Kafka or Hadoop, tools designed for big data.\"*",
        "extras": "$rank=0.5; $quick=a little-known functional programming language that improves on Erlang; $todo=know that it exists",
        "genericTermIdCode": "functional programming language",
        "id": 135,
        "systemWhenCreated": "2019-07-12 11:35:51",
        "systemWhoCreated": "systemUnknown",
        "title": "Elixir"
    },
    {
        "body": "- {created: 2002}\n- issue-tracking product developed by {Atlassian}, their flagship product\n- that allows bug tracking and agile project management\n- license states \"free for use by official non-profit organizations, charities, and open-source projects, but not governmental, academic or religious organizations\"",
        "extras": "$rank=2.1; $quick=popular bug-tracking software; $todo=know about this, it is often used in projects",
        "genericTermIdCode": "bug-tracking software",
        "id": 136,
        "systemWhenCreated": "2019-07-19 10:07:20",
        "systemWhoCreated": "systemUnknown",
        "title": "Jira"
    },
    {
        "body": "- a virtual machine is a software emulation of an computer operating system\n- the following are the main applications which allow you to create virtual machines\n\t- Hyper-V\n\t\t- since 2008 from Microsoft\n\t\t- replaced Microsoft Virtual PC as the virtualization solution in Windows 10 onwards\n\t- VirtualBox\n\t\t- since 2007 from Oracle\n\t- VMWare Server\n\t\t- 2006-2010 from WMWare\n\t\t\t- was discontinued in 2010 but can still be downloaded\n\t\t- VMWare makes it more difficult to use for free than Hyper-V or VirtualBox, but VMWare is a leader in the industry as a paid solution\n\t- Parallels Desktop \n\t\t- since 2006 from Apple\n\t\t- the virtualization software for macOS\n\t- KVM\n\t\t- runs on Linux\n\t\t- (Kernel-based Virtual Machine)\n\t\t- released 2007",
        "extras": "$rank=3.1; $quick=a way to run a full operating system as a piece of software; $todo=definitely learn how to use the Hyper-V, VirtualBox or VMWare",
        "genericTermIdCode": "operating system virtualization solution",
        "id": 137,
        "systemWhenCreated": "2019-07-19 10:59:04",
        "systemWhoCreated": "systemUnknown",
        "title": "virtual machine"
    },
    {
        "body": "- {created: 2013} launched by Solomon Hykes\n- a set of coupled software-as-a-service and platform-as-a-service products that use operating-system-level virtualization to **develop and deliver software in packages called containers**\n- the software that hosts the containers is called **Docker Engine**\n- **containers are isolated from each other and bundle their own software, libraries and configuration files**\n\t- communicate with each other through **well-defined channels**\n- containers are run by a single operating-system kernel and are thus **more lightweight than virtual machines**\n- Solomon Hykes started Docker in France as an internal project within dotCloud\n\t- Solomon Hykes est né à New York d'un père américain et d'une mère franco-canadienne\n\t- le 28 mars 2018, Solomon Hykes annonce officiellement qu'il quitte son poste de CEO7 mais se maintient au conseil d'administration de l'entreprise valorisée 1,3 milliard de dollars\n- A good [getting started tutorial on Docker](https://docker-curriculum.com)\n\t- allows users to **package an application with all of its dependencies into a standardized unit**\n- containers do not have high overhead and hence enable **more efficient usage of the underlying system and resources than virtual machines**\n\t- containers provide most of the isolation of virtual machines at **a fraction of the computing power**\n\t- containers give developers the ability to **create predictable environments that are isolated** from the rest of the applications and can be run anywhere\n- Will Stern: **Docker rules and runs the DevOp world**",
        "extras": "$rank=4.5; $quick=a software virtualization solution that allows each application to run in a separate container; $todo=definitely learn this",
        "genericTermIdCode": "software virtualization solution",
        "id": 138,
        "systemWhenCreated": "2019-07-19 10:59:04",
        "systemWhoCreated": "systemUnknown",
        "title": "Docker"
    },
    {
        "body": "- 2005 began as a project\n- 2011 released under the name Jenkins\n- helps to automate the software development process\n- has hundreds of available plugins, enabling it to support building, deploying and automating any project\n- supports version control tools, including CVS, Subversion, Git, Mercurial, and can execute Apache Ant and Apache Maven as well as arbitrary shell scripts and Windows batch commands",
        "extras": "$rank=3.3; $quick=a very popular build automation tool used in companies; $todo=be familiar with it",
        "genericTermIdCode": "build automation tool",
        "id": 139,
        "systemWhenCreated": "2019-07-19 12:52:29",
        "systemWhoCreated": "systemUnknown",
        "title": "Jenkins"
    },
    {
        "body": "- 2011 launched\n- a web-based DevOps lifecycle tool that provides a Git-repository manager providing wiki, issue-tracking and CI/CD (continuous integration and continuous delivery) pipeline\n\t- or \"web-based code management and CI/CD system\"\n- core is free and open-source but there are commercial options\n- initially focused on code management\n- Git tracks changes, not files.\n\t- this makes Git faster than other source control software\n- covers all stages of the DevOps lifecycle for Product, Development, QA, Security, and Operations teams to work concurrently on the same project\n- code was originally written in Ruby, with some parts later rewritten in Go\n\t- the current technology stack includes Go, Ruby on Rails and Vue.js\n- MIT License\n- GitLab doesn't have AWS integration. \n- it has very good integration with Kubernetes, but it doesn't have good integration with, for example, AWS",
        "extras": "$rank=3.8; $quick=a popular tool to organize the lifecyle of software development; $todo=learn this at some point",
        "genericTermIdCode": "software lifecycle and build tool",
        "id": 140,
        "systemWhenCreated": "2019-07-19 12:52:29",
        "systemWhoCreated": "systemUnknown",
        "title": "GitLab"
    },
    {
        "body": "- 1998, initially defined\n- XML = eXtensible Markup Language\n- a markup language which focuses on structuring documents, although the language is widely used for the representation of arbitrary data structures such as those used in web services\n- there are many popular schemas which prescribe how specific kinds of XML documents are allowed to be formatted for information storage and exchange\n\t- RSS - format for news aggregator\n\t- XAML - Microsoft's Extensible Application Markup Language\n\t- MathML - Mathematical Markup Language\n\t- SVG - Scalable Vector Graphics\n\t- OpenDocument (ODF) - a document file format used for describing electronic documents\n\t- SOAP - a protocol for exchanging XML-based messages over computer networks\n\t- SMIL - Synchronized Multimedia Integration Language describes multimedia presentations\n\t- ebXML - a collection of Electronic Business specifications\n\t- VoiceXML - format for specifying interactive voice dialogues between a human and a computer\n\t- XHTML - a markup language that has the same depth of expression as HTML, but with a syntax conforming to XML",
        "extras": "$rank=4.3; $quick=markup language for defining and transmitting data and documents; $todo=learn XML well",
        "genericTermIdCode": "markup language",
        "id": 141,
        "systemWhenCreated": "2019-07-19 13:32:17",
        "systemWhoCreated": "systemUnknown",
        "title": "XML"
    },
    {
        "body": "- early 2000s, Douglas Crockford specified the JSON format\n- an open-standard file format that uses human-readable text to transmit data objects consisting of attribute–value pairs and array data types\n- JSON = JavaScript Object Notation\n- a common data format used for asynchronous browser–server communication, including as a replacement for XML \n- grew out of a need for stateless, real-time server-to-browser communication protocol without using browser plugins such as Flash or Java applets, the dominant methods used in the early 2000s",
        "extras": "$rank=4.3; $quick=a popular standard for storing and transmitting information and data objects, particularly in JavaScript; $todo=easy to learn and important",
        "genericTermIdCode": "open-standard file format",
        "id": 142,
        "systemWhenCreated": "2019-07-19 13:32:17",
        "systemWhoCreated": "systemUnknown",
        "title": "JSON"
    },
    {
        "body": "- {created:2014}\n- compiles small pieces of code into something larger and more complex, such as a library or application\n- it **uses ES6 import format for code modules** instead of previous idiosyncratic solutions such as CommonJS and AMD\n- the ES6 revision of JavaScript included a syntax for importing and exporting functions and data so they can be shared between separate scripts\n\t- the specification is now fixed, but it is only implemented in modern browsers and not finalised in Node.js\n\t- Rollup allows you to write your code using the new module system, and will then compile it back down to existing supported formats such as CommonJS modules, AMD modules, and IIFE-style scripts\n\t- this means that you get to write future-proof code, and you also get the tremendous benefits of\n- in addition to enabling the use of ES modules, Rollup also statically analyzes the code you are importing, and **will exclude anything that isn't actually used**\n- Rollup is used by {Svelte}",
        "extras": "$rank=3.5; $quick=the second most popular module bundler for JavaScript; $todo=learn the more popular Webpack first, then Rollup",
        "genericTermIdCode": "module bundler for JavaScript",
        "id": 143,
        "systemWhenCreated": "2019-07-19 14:03:22",
        "systemWhoCreated": "systemUnknown",
        "title": "Rollup"
    },
    {
        "body": "- {created: 2008}, same year as Github\n- hosts development projects that use Mercurial (since launch) or Git (since 2011)\n- 2010 acquired by {Atlassian} who also owns the bug-tracking software {Jira} \n- is written in Python using the Django web framework",
        "extras": "$rank=2.9; $quick=the second most popular version control hosting service; $todo=learn GitHub first, then Bitbucket",
        "genericTermIdCode": "version control hosting service",
        "id": 144,
        "systemWhenCreated": "2019-07-19 14:33:59",
        "systemWhoCreated": "systemUnknown",
        "title": "Bitbucket"
    },
    {
        "body": "- {created: 2008}\n- 2018 bought by Microsoft\n- the largest host of source code in the world\n- provides hosting for software development version control using Git\n- offers all of the distributed version control and source code management functionality of Git as well as adding its own features\n- developed using Ruby on Rails using Ruby and Erlang\n- GitHub Actions\n\t- workflows\n\t\t- saved in `.github/workflows`\n\t- runners\n\t\t- the runner is the application that runs a job from a GitHub Actions workflow\n\t\t- each job can use a different runner\n\t- actions can be sources from three locations\n\t\t- public repository\n\t\t- same repository as workflow\n\t\t- a docker image\n\t- example workflow:##gitactionworkflowexamp\n\t- you just push to your repository",
        "extras": "$rank=4.5; $quick=the standard place to store, publish, and share code projects on the web; $todo=learn this wells;$webdev=overviewVcs",
        "genericTermIdCode": "version control hosting service",
        "id": 145,
        "systemWhenCreated": "2019-07-19 14:33:59",
        "systemWhoCreated": "systemUnknown",
        "title": "Github"
    },
    {
        "body": "- 2007 created\n- a **NoSQL, graph database management system**\n- an **ACID-compliant** transactional database with native graph storage and processing\n- the most popular graph database\n- **implemented in Java** and accessible from software written in other languages using the Cypher Query Language through a transactional HTTP endpoint\n\t- the \"j\" stands for Java\n- can be installed on **Windows, Linux, and Unix**\n- comes with web browser utility tool to provide data visualization \n- supports the development environments of **.NET, Java, PHP, Python, and Ruby**\n- what is a graph database\n\t- a database that uses graph structures for semantic queries with nodes, edges, and properties to represent and store data\n\t\t- edges represent relationships between the nodes\n\t- graph databases are part of NoSQL databases\n\t- they store knowledge graphs\n\t- **employs nodes, properties, and edges**\n\t\t- nodes: instances such as people, businesses, accounts\n\t\t- properties: information about the nodes\n\t\t- edges: lines that connect nodes to other nodes representing the relationship between them\n\t- allow simple and fast retrieval of complex hierarchical structures that are difficult to model in relational systems\n\t- retrieving data from a graph database **requires a query language other than SQL**, which was designed for the manipulation of data in a relational system and therefore cannot “elegantly” handle traversing a graph\n\t- graph databases are typically maintained by highly qualified data engineers or Semantic Web experts\n\t- the reason behind such imminent rise of graph databases is to map the hierarchical and complex relationships of the data structures with fast data analytics\n- five types of graphs\n\t- **social graph**: connections between people\n\t- **intent graph**: reasoning and motivation\n\t- **consumption graph**: tracks the consumption or payment of individual customers\n\t- **interest graph**: maps a person's interests and is often complemented by a social graph\n\t- **mobile graph**: tracks users motions and locations\n- \"I like it and hate it. I hate it because we have to build these ugly dynamic queries in C# that I feel are very brittle. It leaves me longing for SQL Server stored procedures.\"",
        "extras": "$rank=2.1; $quick=a NoSQL, graph database management system; $todo=you don't need to know this unless you use it in a project",
        "genericTermIdCode": "graph database",
        "id": 146,
        "systemWhenCreated": "2019-07-30 13:15:48",
        "systemWhoCreated": "systemUnknown",
        "title": "neo4j"
    },
    {
        "body": "- **Trusted Platform Module**\n- 2011 TPM 1.2\n- 2016 TMP 2.0\n- a TPM is a chip embedded into the motherboard\n- often referred to as a **TPM security chip**\n- it creates a nearly unforgeable hash key summary of the hardware and software configuration\n- computer programs can use a TPM to **authenticate hardware devices**\n- ensures thatthe boot process starts from a trusted combination of hardware and software\n- full disk encryption utilities, such as **dm-crypt and BitLocker**, can use this technology to protect the keys used to encrypt the computer's storage devices\n- starting in 2006, many new laptops have been sold with a built-in TPM chip",
        "extras": "$kind=sysadmin; $rank=0.5; $quick=international standard to secure hardware; $todo=know about it",
        "genericTermIdCode": "hardware security standard",
        "id": 147,
        "systemWhenCreated": "2019-07-31 14:18:57",
        "systemWhoCreated": "systemUnknown",
        "title": "TPM"
    },
    {
        "body": "- 2007 released\n- **Microsoft** technology\n- a full volume encryption feature included **since Windows 7 / Windows Server 2008**\n- protects data by providing **encryption for entire volumes**\n- when enabled, TPM and BitLocker can ensure the integrity of the trusted boot path (BIOS and boot sector), in order to prevent most offline physical attacks and boot sector malware",
        "extras": "$kind=sysadmin; $rank=1.1; $quick=a Microsoft encryption feature; $todo=know about this",
        "genericTermIdCode": "encryption feature",
        "id": 148,
        "systemWhenCreated": "2019-07-31 14:41:15",
        "systemWhoCreated": "systemUnknown",
        "title": "Bitlocker"
    },
    {
        "body": "- Very high speed digital subscriber line\n- 52 Mbit/s downstream and 16 Mbit/s upstream\n- capable of supporting applications such as high-definition television, VoIP, and general Internet access over a single connection\n- Deutsche Telekom initially started VDSL2 deployment in **late 2006**, with VDSL2 offered in the 12 largest cities in Germany, by 2007 residents in over 50 cities had access to VDSL2\n- VDSL2 can reach theoretic downstream and upstream data rates of up to 200 Mbps at its source",
        "extras": "$kind=sysadmin; $rank=1.2; $quick=a kind of fast Internet connection; $todo=know about this",
        "genericTermIdCode": "Internet connection",
        "id": 149,
        "systemWhenCreated": "2019-07-31 14:54:31",
        "systemWhoCreated": "systemUnknown",
        "title": "VDSL"
    },
    {
        "body": "- **Network Attached Storage**\n- a file-level computer data storage server connected to a computer network providing data access to a heterogeneous group of clients\n- is often manufactured as a computer appliance – a purpose-built specialized computer\n- contains **one or more storage drives** often arranged into logical, redundant storage containers or RAID\n- a convenient method of **sharing files among multiple computers**\n- a NAS is usually not designed to be a general-purpose server\n- when you search for a NAS-drive online, the market is dominated by **Synology and QNAP** mainly\n\t- both Synology and QNAP units will arrive with their own desktop user interface packed in a proprietary operating system\n\t- you can still access a NAS device the traditional way (as a network drive) and through an IP address – from a Windows, MAC or Linux",
        "extras": "$kind=sysadmin; $rank=2.2; $quick=file-based data storage server; $todo=know about this, set one up if you can",
        "genericTermIdCode": "data storage",
        "id": 150,
        "systemWhenCreated": "2019-07-31 15:10:28",
        "systemWhoCreated": "systemUnknown",
        "title": "NAS"
    },
    {
        "body": "- Network Address Translation\n- a method of remapping one IP address space into another by modifying network address information in the IP header of packets while they are in transit across a traffic routing device\n- it has become a popular and essential tool in conserving global address space in the face of IPv4 address exhaustion\n- allows many devices on a private network to share a single gateway to the internet\n\t- all of those devices will have the same public IP address—that of the gateway—and unique private IP addresses\n\t- e.g. all of the devices connected to a NAT-enabled wifi router have different private IP addresses, but share the router’s public IP address\n- the router tracks basic data about each active connection (particularly the destination address and port), when a reply returns to the router, it uses the connection tracking data it stored during the outbound phase to determine the private address on the internal network to which to forward the reply\n- **IP masquerading**: Computers and servers on the internet can only see the public IP address of the router and none of the private IP addresses of specific devices, like phones, laptops, smart TVs, internet-of-things devices, and game consoles\n- not everyone agrees that NAT firewalls and VPNs are a good combination",
        "extras": "$kind=sysadmin; $rank=1.7; $quick=a way to remap private IP addresses and expose them as one IP address to the Internet; $todo=know about this",
        "genericTermIdCode": "IP remapping method",
        "id": 151,
        "systemWhenCreated": "2019-07-31 15:22:06",
        "systemWhoCreated": "systemUnknown",
        "title": "NAT"
    },
    {
        "body": "- stands for demilitarized zone\n- a physical or logical subnetwork that contains and exposes an organization's external-facing services to an untrusted network, usually a larger network such as the Internet\n- an external network node can access only what is exposed in the DMZ, while the rest of the organization's network is firewalled\n- a small, isolated network positioned between the Internet and the private network\n- allows the organization extra time to detect and address breaches before they would further penetrate into the internal networks\n- hosts in the DMZ are permitted to have only limited connectivity to specific hosts in the internal network, as the content of DMZ is not as secure as the internal network",
        "extras": "$kind=sysadmin; $rank=1.1; $quick=subnetwork that contains and exposes an organization's external-facing services to an untrusted network; $todo=know about this",
        "genericTermIdCode": "subnetwork",
        "id": 152,
        "systemWhenCreated": "2019-08-01 09:15:24",
        "systemWhoCreated": "systemUnknown",
        "title": "DMZ"
    },
    {
        "body": "- created **2006**\n- Apache Hadoop\n- got its start as a **Yahoo** project\n- a collection of open-source software utilities that facilitate **using a network of many computers** to solve problems involving **massive amounts of data** and computation\n- consists of a storage part, known as Hadoop Distributed File System (HDFS), and a processing part which is a **MapReduce** programming model\n- the term Hadoop is used for both base modules and sub-modules and also the **ecosystem**, or collection of additional software packages that can be installed on top of or alongside Hadoop, such as Apache Pig, Apache Hive, Apache HBase, Apache Phoenix, Apache {Spark}, Apache ZooKeeper, Cloudera Impala, Apache Flume, Apache Sqoop, Apache Oozie, and Apache Storm\n- **peaked about 2016**, then lost popularity",
        "extras": "$rank=0.5; $quick=a general-purpose form of distributed processing; $todo=just know about this",
        "genericTermIdCode": "distributed processing system",
        "id": 153,
        "systemWhenCreated": "2019-08-05 15:44:28",
        "systemWhoCreated": "systemUnknown",
        "title": "Hadoop"
    },
    {
        "body": "- 2005, developed\n- a cross-platform game engine\n- around 2008, the engine was uncontested on the iPhone and it became well-known with iOS game developers\n- in 2018, supports more than 25 platforms\n- 2010, expanded with the graphics features for desktop computers and video game consoles\n- aims to democratize game development by making it accessible to more developers\n- gives users the ability to create games and experiences in both 2D and 3D\n- offers a primary scripting API in C# for both the Unity editor in the form of plugins and games themselves\n\t- has drag and drop functionality\n- prior to C# being the primary programming language used for the engine, it previously supported Boo, which was removed with the release of Unity 5 in 2015\n\t- there was a version for JavaScript called UnityScript, which was deprecated in August 2017 in favor of C#.",
        "extras": "$rank=1.6; $quick=a cross-platform game engine; $todo=might be a fun way to get into C# programing",
        "genericTermIdCode": "game engine",
        "id": 154,
        "systemWhenCreated": "2019-08-06 09:54:47",
        "systemWhoCreated": "systemUnknown",
        "title": "Unity"
    },
    {
        "body": "- launched 2006\n- many services\n\t- Amazon Elastic Compute Cloud (Amazon {EC2}) - virtual cluster of computers\n\t- Amazon Simple Storage Service (Amazon {S3}) - an object storage service\n\t- Elastic Block Storage ({EBS})\n\t- Elastic File System ({EFS})\n- AWS offering services are categorized into 3 types such as Infrastructure as a service (IaaS), software as a service (SaaS) and platform as a service (PaaS)\n- emulate most of the attributes of a real computer",
        "extras": "$idCode=aws;$rank=3.5;$quick=a subsidiary of Amazon that provides on-demand cloud computing platforms",
        "genericTermIdCode": "cloud computing service",
        "id": 155,
        "systemWhenCreated": "2020-04-14 15:18:56",
        "systemWhoCreated": "systemUnknown",
        "title": "AWS"
    },
    {
        "body": "- created 2008\n- full name: ***Google Cloud Platform**",
        "extras": "$idCode=gcp;$rank=3.5;$quick=a suite of cloud computing services that runs on the same infrastructure that Google uses internally for its end-user products, such as Google Search, Gmail and YouTube",
        "genericTermIdCode": "GCP",
        "id": 156,
        "systemWhenCreated": "2020-04-14 15:37:34",
        "systemWhoCreated": "systemUnknown",
        "title": "Google Cloud"
    },
    {
        "body": "- created 2010 by Microsoft\n- pronounced [AA-zhur, \"AA\" as in \"apple\"]\n- Azure Sphere OS\n\t- a custom high-level Linux-based operating system\n\t- provides a platform for Internet of Things application development\n- ARM templates\n\t- Azure Resource Manager\n\t- to implement infrastructure as code\n\t- JSON format",
        "extras": "$idCode=azure;$rank=3.5;$quick=a cloud computing service created by Microsoft for building, testing, deploying, and managing applications and services",
        "genericTermIdCode": "cloud computing service",
        "id": 157,
        "systemWhenCreated": "2020-04-14 15:37:34",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure"
    },
    {
        "body": "- Kernel-based Virtual Machine\n- released 2007\n- the GUI interface makes the management of KVM easier than ever before\n- cons\n\t- initial setup of this solution is more difficult than some of the competing products and it could be improved\n\t- could be more user friendly, we are struggling with the command lines",
        "extras": "$idCode=kvm;$rank=3.2;$quick=a virtualization module in the Linux kernel that allows the kernel to function as a hypervisor",
        "genericTermIdCode": "Virtualization Hypervisor",
        "id": 158,
        "systemWhenCreated": "2020-04-15 17:21:18",
        "systemWhoCreated": "systemUnknown",
        "title": "KVM"
    },
    {
        "body": "- the original author, TJ Holowaychuk, described it as a **Sinatra-inspired** server\n\t- Sinatra, a free and open source software web application library and domain-specific language written in Ruby\n- relatively **minimal** with many features available as plugins\n- also sometimes refered to as express.js \n",
        "extras": "$idCode=express;$rank=4.7;$quick=a web application framework for Node.js and the de facto Node standard for building web applications and APIs",
        "genericTermIdCode": "Web Application Framework",
        "id": 159,
        "systemWhenCreated": "2020-04-17 10:31:37",
        "systemWhoCreated": "systemUnknown",
        "title": "Express"
    },
    {
        "body": "- created 1995 by Tatu Ylönen, a researcher at Helsinki University of Technology\n- SSH is short for **Secure Shell**\n- SSH provides a secure channel over an unsecured network by using a client–server architecture, connecting an SSH client application with an SSH server\n- history\n\t- 1995: Version 1.x\n\t- 2006: Version 2.x",
        "extras": "$idCode=ssh;$rank=3.5;$quick=a cryptographic network protocol for operating network services securely over an unsecured network",
        "genericTermIdCode": "cryptographic network protocol",
        "id": 161,
        "systemWhenCreated": "2020-04-17 11:11:01",
        "systemWhoCreated": "systemUnknown",
        "title": "SSH"
    },
    {
        "body": "- Domain Name System\n- an essential component of the functionality of the Internet **since 1985**\n- A record\n\t- an A record points a name to an IP\n\t- e.g. `blog.dnsimple.com. A 185.31.17.133`\n- CNAME record\n\t- A CNAME record can point a name to another CNAME or to an A record.\n\t- e.g. `blog.dnsimple.com. CNAME aetrion.github.io.`\n- MX record\n\t- specifies the mail server responsible for accepting email messages on behalf of a domain name",
        "extras": "$idCode=cns;$rank=3.5;$quick=a hierarchical and decentralized naming system for computers, services, or other resources connected to the Internet or a private network",
        "genericTermIdCode": "naming system",
        "id": 162,
        "systemWhenCreated": "2020-04-17 11:19:38",
        "systemWhoCreated": "systemUnknown",
        "title": "DNS"
    },
    {
        "body": "- created **2006** by Natalie Weizenbaum, Chris Eppstein\n- SASS stands for **syntactically awesome style sheets**\n- Article: [Sass vs. SCSS: which syntax is better?](http://thesassway.com/editorial/sass-vs-scss-which-syntax-is-better)",
        "extras": "$idCode=sass;$rank=4.6;$quick=a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets",
        "genericTermIdCode": "stylesheet language",
        "id": 163,
        "systemWhenCreated": "2020-04-17 11:55:02",
        "systemWhoCreated": "systemUnknown",
        "title": "SASS"
    },
    {
        "body": "- created by Alexis Sellier in **2009**\n- stands for **Leaner Style Sheets**\n- Less is influenced by Sass and has influenced the newer SCSS syntax of Sass, which adapted its CSS-like block formatting syntax\n- **mixins** allow embedding all the properties of a class into another class by including the class name as one of its properties, thus behaving as a sort of constant or variable",
        "extras": "$idCode=less;$rank=4.0;$quick=a dynamic preprocessor style sheet language that can be compiled into CSS",
        "genericTermIdCode": "stylesheet language",
        "id": 164,
        "systemWhenCreated": "2020-04-17 11:55:02",
        "systemWhoCreated": "systemUnknown",
        "title": "LESS"
    },
    {
        "body": "- created by [Adam Wathan](https://adamwathan.me) in **2019**\n- Will Stern of learncode.academy speaks highly of Tailwind CSS\n\t- his favorite\n\t- the most lightweight CSS library\n- a good [tutorial](https://blog.logrocket.com/tailwind-css-is-it-tomorrows-bootstrap-ebe560f9d00b/)\n- uses utility classes\n\t- Utility classes are CSS class names that serve one particular purpose, and are named as such. Typically a class like .bg-blue would give you background-color: blue, for example.\n- \"I can understand the confusion of some, but this is the framework I've been waiting for. No more starting from scratch, and no more backtracking bootstrap.\"\n- \"out of genuine curiosity, have you ever tried a utility-based CSS framework? I get that they can look strange at first, but this way of doing CSS is becoming more and more popular\"\n- \"Tailwind CSS (350kB minified) has a section on controlling file size that recommends setting up PurgeCSS.\"\n- \"we decided to use TailwindCSS, a utility class framework, which provides a bunch of classes you can apply to your projects to rapidly build a UI.\"",
        "extras": "$idCode=tailwindCss;$rank=3.5;$quick=a highly customizable, low-level, low-opinionated CSS framework",
        "genericTermIdCode": "CSS framework",
        "id": 165,
        "systemWhenCreated": "2020-04-17 13:35:48",
        "systemWhoCreated": "systemUnknown",
        "title": "Tailwind CSS"
    },
    {
        "body": "- npm scripts (package manager)\n\t- entries in the scripts field of the package.json\n\t- learn: [Three Things You Didn't Know You Could Do with npm Scripts](https://www.twilio.com/blog/npm-scripts)\n- Webpack (module loader / bundler)\n\t- Will Stern: \"the definitive bundler of 2019 although HTTP/2 is becoming better\"\n\t\t- Let’s start with a myth about HTTP/2: With HTTP/2 you don’t need to bundle your modules anymore. HTTP/2 can multiplex all your modules over the same connection in parallel. So there are no additional round trips for the many requests. Each module can be separately cached. Sadly it’s not that easy in reality.\n\t- can bundle CommonJS, ECMAScript and AMD modules\n\t\t- **AMD** (define) = takes a browser approach, no knowledge of file i/o\n\t\t\t-  implemented by Dojo Toolkit and RequireJS\n\t\t- **CommonJS** (require, export) = takes a backend approach\n\t\t-  **UMD** (Universal Module Definition) is a variant paradigm that takes advantage of the commonalities to support both AMD and CommonJS\n\t\t- **ES6** (import/export) = 2015\n\t- can be installed with npm or yarn\n- Rollup (ES module bundler)\n\t- Rollup has support for relative paths, whereas webpack does not, so we either use path. resolve or path.\n\t- webpack was started in 2012 by Tobias Koppers to solve a hard problem that existing tools didn’t address: building complex single-page applications (SPAs).\n\t\t- Rollup was created for a different reason: to build flat distributables of JavaScript libraries as efficiently as possible, taking advantage of the ingenious design of ES2015 modules.\n\t- Use webpack for apps, and Rollup for libraries\n\t- similar to Browserify but bundles ECMAScript modules instead of CommonJS ones)\n- Parcel (module bundler)\n\t- is drastically simpler than Webpack, love it for non-complex work\n\t- can replace create-react-app\n- Grunt (task runner)\n\t- pros\n\t\t- Huge ecosystem of plugins\n\t- cons\n\t\t- Can become complicated as the configuration grows\n\t\t- Lack of flexibility with uncommon tasks\n\t\t- gradually becoming outdated\n- Gulp (task runner)\n\t- Eighteen months after Grunt, GulpJS was released\n\t- where GruntJS uses configuration objects to define tasks declaratively, Gulp defines them as JavaScript functions\n\t- It builds on top of the piping concepts (sources, filters, sinks), similar to Unix operating systems.\n\t- pros\n\t\t- Requires less amount of code, comparing to Grunt\n\t\t- Large ecosystem of Gulp plugins\n\t- con: Initially streams and promises are hard to understand\n- Yarn (package manager)\n\t- can be used as an alternative to npm\n\t- is a node.js package\n\t- if you are a heavy user, it can be a good idea to look into Yarn that takes pride in ultrafast build times\n\t- speeds up the build process by caching every package so that you don’t have to download your dependencies multiple times\n- Browserify (module loader / bundler)\n\t- node.js package\n\t- bundle your front-end dependencies and load them as a **single JavaScript file** in the user’s browser\n\t- package managers such as npm and Yarn load modules on the server-side using **Node.js’ require() function** (CommonJS) designed for loading modules. Browserify brings the require() method (CommonJS) to the client-side, which can result in a huge performance gain\n\t- your user’s browser has to load only one static JavaScript file that contains all the dependencies your project relies on\n\t- you can only use it to load Node.js modules but not other types of JavaScript (or other) files.",
        "extras": "$idCode=buildTools;$rank=3.5;$quick=tools that accelerate web development",
        "genericTermIdCode": "Web Developer Tools",
        "id": 166,
        "systemWhenCreated": "2020-04-17 14:14:12",
        "systemWhoCreated": "systemUnknown",
        "title": "build tools"
    },
    {
        "body": "- Will Stern recommends it\n- [New Relic website](https://newrelic.com/products/logs)\n- limitless log management in the cloud\n- all your logs in one place\n- expensive but useful\n- \"you will never have to SSH into your servers again to observe what they are doing\"\n- use a familiar query language to build powerful and sophisticated queries that can quickly scan vast qualities of aggregated log messages, no indexing required",
        "extras": "$idCode=newRelic;$rank=3.5;$quick=tool for limitless log management in the cloud",
        "genericTermIdCode": "server monitoring tool",
        "id": 167,
        "systemWhenCreated": "2020-04-17 15:25:43",
        "systemWhoCreated": "systemUnknown",
        "title": "New Relic"
    },
    {
        "body": "- functional programming may not improve your ability to get a job, but it stretches your skills and makes you a hipster",
        "extras": "$idCode=functionalProgramming;$rank=3.5;$quick=a style of programming that avoids changing-state and mutable data",
        "genericTermIdCode": "programming paradigm",
        "id": 168,
        "systemWhenCreated": "2020-04-17 16:33:08",
        "systemWhoCreated": "systemUnknown",
        "title": "functional programming"
    },
    {
        "body": "- supports three data models: key/value, documents, graphs\n- a unified query language AQL (ArangoDB Query Language)\n- ArangoDB is a NoSQL database system but AQL is similar in many ways to SQL",
        "extras": "$idCode=arangoDb;$rank=2.2;$quick=a free and open-source native multi-model database system",
        "genericTermIdCode": "Database",
        "id": 169,
        "systemWhenCreated": "2020-04-17 17:08:24",
        "systemWhoCreated": "systemUnknown",
        "title": "ArangoDB"
    },
    {
        "body": "- a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents\n- developed in Java\n- clients are available in Java, .NET (C#), PHP, Python, Apache Groovy, Ruby\n- CakePHP 3 integrated Elasticsearch",
        "extras": "$idCode=elasticsearch;$rank=3.9;$quick=a search engine based on the Lucene library",
        "genericTermIdCode": "Database",
        "id": 170,
        "systemWhenCreated": "2020-04-17 17:08:24",
        "systemWhoCreated": "systemUnknown",
        "title": "Elasticsearch"
    },
    {
        "body": "- includes new storage engines like Aria, ColumnStore, and MyRocks",
        "extras": "$idCode=mariaDb;$rank=3.8;$quick=community-developed, commercially supported fork of MySQL",
        "genericTermIdCode": "Database",
        "id": 171,
        "systemWhenCreated": "2020-04-17 17:08:24",
        "systemWhoCreated": "systemUnknown",
        "title": "MariaDB"
    },
    {
        "body": "- an online tool for creating and sharing mindmaps and flow charts##coggleitexample\n- I learned about this from seeing Will Stern use it in his [2020 Web Technology Video](https://www.youtube.com/watch?v=SBB1YtwODT0), here is the [coggle diagram](https://coggle.it/diagram/XfeRbWj7xy3dsEX8/t/web-development-in-2020) he created for it\n- sign up at the [coggle.it](https://coggle.it/) website and try it out\n- free account\n\t- unlimited public diagrams",
        "extras": "$idCode=coggle;$rank=3.5;$quick=an online tool for creating and sharing mindmaps and flow charts",
        "genericTermIdCode": "productivity tool",
        "id": 172,
        "systemWhenCreated": "2020-04-20 17:41:02",
        "systemWhoCreated": "systemUnknown",
        "title": "Coggle"
    },
    {
        "body": "- Tippy.js is the complete tooltip, popover, icon dropdown, and menu solution websites, powered by Popper.js.##tippyexampleskdfj\n- this is the [official Tippy website](https://atomiks.github.io/tippyjs)\n- it uses Popper, which is descripbed at a positioning engine\n\t- Popper is also used by Bootstrap",
        "extras": "$idCode=tippy;$rank=2.5;$quick=tooltip, popover, icon dropdown, and menu solution websites",
        "genericTermIdCode": "tooltip library",
        "id": 173,
        "systemWhenCreated": "2020-04-21 13:04:10",
        "systemWhoCreated": "systemUnknown",
        "title": "Tippy.js"
    },
    {
        "body": "- created **2010** by developers at Pivotal Labs\n- aims to run on any JavaScript-enabled platform, to not intrude on the application nor the IDE, and to have easy-to-read syntax\n- does not rely on browsers, DOM, or any JavaScript framework\n- suited for websites, Node.js\n- Bootstrap 5 is apparently moving their testing infrastructure from QUnit to Jasmine\n- can get started without much setup",
        "extras": "$idCode=jasmine;$rank=3.5;$quick=an open-source testing framework for JavaScript",
        "genericTermIdCode": "Javascript Testing Framework",
        "id": 174,
        "systemWhenCreated": "2020-04-23 16:44:42",
        "systemWhoCreated": "systemUnknown",
        "title": "Jasmine"
    },
    {
        "body": "- created **2011**, almost as old as Browserify\n- compared to Gulp, Brunch operates on a higher level of abstraction, it uses a declarative approach similar to webpack's",
        "extras": "$idCode=brunch;$rank=3.1;$quick=one of the oldest site bundlers (2011) with Browserify (2010)",
        "genericTermIdCode": "Site Bundler",
        "id": 175,
        "systemWhenCreated": "2020-05-06 17:10:11",
        "systemWhoCreated": "systemUnknown",
        "title": "Brunch"
    },
    {
        "body": "- created **2017**\n- 2020-06: Parcel 2 beta 1\n- much simpler than Webpack\n- everything just worked out of the box\n\t- no additional plugins, configuration or anything else has been required",
        "extras": "$idCode=parcel;$rank=4.68;$quick=the up-and-coming module bundler which challenges WebPack",
        "genericTermIdCode": "Site Bundler",
        "id": 176,
        "systemWhenCreated": "2020-05-06 17:10:11",
        "systemWhoCreated": "systemUnknown",
        "title": "Parcel"
    },
    {
        "body": "- created **2016**\n- focused on speed\n- uses a zero-configuration approach and aims to be usable out of the box\n- while FuseBox already comes with all plugins available from the core their dependencies must still be installed when required",
        "extras": "$idCode=fusebox;$rank=3.5;$quick=site bundler focused on speed and zero-configuration",
        "genericTermIdCode": "Site Bundler",
        "id": 177,
        "systemWhenCreated": "2020-05-06 17:10:11",
        "systemWhoCreated": "systemUnknown",
        "title": "FuseBox"
    },
    {
        "body": "- 2007 created\n\t- then supported only **Ruby**\n\t- PAAS - Platform as a Service\n- 2010 acquired by Salesforce.com\n- 2011 Yukihiro \"Matz\" Matsumoto, the chief designer of the Ruby programming language, joined the company \n- 2011 Heroku and Facebook introduced Heroku for Facebook\n- now supports \n\t- Java, Node.js, Scala, Clojure, Python, PHP, and Go\n\t- Redis databases in addition to its standard PostgreSQL\n- Git friendly\n- has a great free tier\n\t- except that free applications that haven't been touched for awhile take a few seconds to start up\n- static files don't work well on Heroku\n\t- e.g. these will not work:\n\t\t- `app.use(express.static(__dirname + '/htdocs'));` will not work\n\t\t- `app.use(express.static('../htdocs'));`\n\t- instead use the public directory instead",
        "extras": "$idCode=heroku;$rank=4.6;$quick=a polyglot PAAS platform that supports Ruby, Java, Node.js, Scala, Clojure, Python, PHP, and Go",
        "genericTermIdCode": "Code Analysis Tool",
        "id": 178,
        "systemWhenCreated": "2020-08-08 15:40:18",
        "systemWhoCreated": "systemUnknown",
        "title": "Heroku"
    },
    {
        "body": "- versions\n\t- Version 1.0\n\t\t- **Taylor Otwell** created Laravel as an attempt to provide a more advanced alternative to the **CodeIgniter** framework\n\t\t\t- Laravel was born out of frustration with CodeIgniter\n\t- {created: 2013, \"rewritten\"}: Version 4.0\n\t\t- **complete rewrite of the Laravel framework**\n\t- 2015: Version 5\n\t\t- 2017-09 training: Laravel 5\n\t- 2018-02: Version 5.6\n\t\t- 2018-06 training: New in 5.6\n\t- 2018-09: Version 5.7\n\t- 2019-02: Version 5.8\n\t\t- 2019-09 tutorial was on Laravel 5.7\n\t- 2019-09: Version 6\n\t- 2020-03: Version 7\n\t\t- requires PHP 7.2 - 8.0\n\t- **2020-09: Version 8**\n\t\t- requires PHP 7.3 - 8.1\n\t- *2022-01: Version 9*\n\t\t- requires PHP 8.0 - 8.1\n\t\t- introduces Laravel Jetstream\n- characteristics\n\t- *\"Once you start to wander away from the MVC paradigm, Laravel can't help you.\"*\n\t- you can use Composer components from other frameworks\n\t\t- Laravel itself **uses 14 Symfony components**\n\t- Laravel is very **JSON and REST friendly**\n\t- Middleware is [PSR-7 compliant](https://www.php-fig.org/psr/psr-7)\n- ecosystem\n\t- 1. [Laravel Echo](https://www.npmjs.com/package/laravel-echo): real-time development using web-sockets\n\t- 2. [Laravel Eloquent](https://laravel.com/docs/8.x/eloquent): ORM which gives each table a corresponding model, provides ActiveRecord implementation\n\t\t- [Laravel Scout](https://laravel.com/docs/8.x/scout): provides search for Eloquent models\n\t- 3. [Laravel Passport](https://laravel.com/docs/8.x/passport): provides a full OAuth2 server implementation for your Laravel application \n\t- 4. [Laravel Artisan](https://laravel.com/docs/8.x/artisan): command line interface for building Laravel sites, e.g. does migrations\n\t- 5. [Laravel Blade](https://laravel.com/docs/8.x/blade): templating engine that does not restrict you from using plain PHP code \n\t\t- [Jigsaw](https://jigsaw.tighten.co): Blade isn't an option if you are building a simple static site, but Jigsaw brings Blade to the static site world, so you can use the same templating engine for simple websites as you do for complex web applications\n\t\t\t- [Essential Jigsaw for PHP and Laravel Developers](https://www.linkedin.com/learning/essential-jigsaw-for-php-and-laravel-developers)\n\t\t- [Livewire](https://jetstream.laravel.com/2.x/stacks/livewire.html): enables you to build reactive, dynamic interfaces using Laravel Blade \n\t- 6. [Laravel Homestead](https://laravel.com/docs/8.x/homestead): a pre-packaged Vagrant box that provides you a Laravel development environment without requiring you to install PHP\n\t\t- *\"If you are using Windows, you may need to enable hardware virtualization (VT-x). It can usually be enabled via your BIOS. If you are using Hyper-V on a UEFI system you may additionally need to disable Hyper-V in order to access VT-x.\"*\n\t\t- [Laravel Valet](https://laravel.com/docs/8.x/valet): a development environment for macOS minimalists that configures a Mac to always run Nginx in the background when your machine starts using only 7 MB of RAM, not a complete replacement for Sail or Homestead, but a good alternative if you want speed and a small footprint\n\t- 7. [Laravel Cashier](https://laravel.com/docs/8.x/billing): an interface to [Stripe](https://stripe.com)'s subscription billing services\n\t- 8. [Lumen](https://lumen.laravel.com): builds Laravel-based micro-services and APIs\n\t- 9. [Statamic](https://statamic.com): a flat-file CMS based on Laravel, used by Der Spiegel\n\t\t- Tutorial: [Essential Statamic for PHP and Laravel Developers](https://www.linkedin.com/learning/essential-statamic-for-php-and-laravel-developers)\n\t- 10. [Laravel Jetstream](https://jetstream.laravel.com): application starter kit, introduced with Laravel 8 in January 2022\n\t\t- [Inertia](https://jetstream.laravel.com/2.x/stacks/inertia.html): the Inertia stack is provided by Jetstream and uses Vue.js, it's like building a typical Vue application; however, you will use Laravel's router instead of the Vue router\n\t- 11. [Laravel Sanctum](https://github.com/laravel/sanctum): a featherweight authentication system for SPAs and simple APIs, created by Taylor Otwell\n\t- 12. [Laravel Sail](https://laravel.com/docs/8.x/sail): a light-weight command-line interface for interacting with Laravel's default Docker development environment, provides a starting point for building a Laravel application using PHP, MySQL, and Redis without requiring prior Docker experience\n\t- 13. [Laravel Forge](https://forge.laravel.com): server management, provision and deploy unlimited PHP applications on DigitalOcean, Linode, Vultr, Amazon, Hetzner and more\n\t- 14. [Laravel Vapor](https://vapor.laravel.com): serverless deployment platform for Laravel powered by AWS\n\t- 15. [Laravel Nova](https://nova.laravel.com): administration panel, made by creators of Laravel\n\t- 16. [Laravel Envoyer](https://envoyer.io): deployment tool for Laravel, integrated with Laravel Forge\n\t- 17. [Laravel Dusk](https://laravel.com/docs/8.x/dusk): browser-based automation and testing API, does not require JDK or Selenium to be installed on local computer, uses a stand-alone ChromeDriver\n\t- 18. [Laravel Echo](https://laravel.com/docs/8.x/broadcasting): broadcasting is accomplished by a server-side broadcasting driver that broadcasts Laravel events so that Laravel Echo (a JavaScript library) can receive them within the browser client\n\t- 19. [Laravel Horizon](https://laravel.com/docs/8.x/horizon): dashboard and code-driven configuration for Laravel-powered Redis queues\n\t- 20. [Laravel Telescope](nnn): dashboard that provides insight into the requests coming into your application, exceptions, log entries, database queries, queued jobs, mail, notifications, cache operations, scheduled tasks, variable dumps\n- resources\n\t- 2019-09.fr: https://www.linkedin.com/learning/l-essentiel-de-laravel-5-7\n\t- 2021-03.de: https://www.linkedin.com/learning/laravel-grundkurs-2-rest-apis-und-formulare\n\t- 2021-03: https://www.linkedin.com/learning/building-restful-apis-in-laravel-8532490\n\t- 2020-07.de: https://www.linkedin.com/learning/laravel-grundkurs-1-installation-datenbankkonfiguration-und-grundlegende-features\n\t- 2019-02: https://www.linkedin.com/learning/building-laravel-and-vue-js-web-apps\n\t- 2019-10: https://www.linkedin.com/learning/laravel-5-essential-training-2\n\t- 2019-02: https://www.linkedin.com/learning/advanced-laravel\n\t- 2018.es: https://www.linkedin.com/learning/laravel-practico-api-rest-para-app-corporativa-web-y-movil-de-hotel\n- VSCode extensions\n\t- Laravel Blade formatter\n\t- Laravel Blade Snippets\n\t- laravel-blade (syntax highlighting)\n- links\n\t- [Blade layouts](https://www.digitalocean.com/community/tutorials/simple-laravel-layouts-using-blade)\n\t- [Deploying your Laravel Application with SQLite to Heroku](https://medium.com/@nzubeanthony4/deploying-your-laravel-application-with-sqlite-to-heroku-1c9f68f9448e)\n\t- [Deploying Laravel with SQLite to Heroku](https://dtang.dev/deploying-laravel-with-sqlite-to-heroku)\n- database/models\n\t- `php artisan make:model Article --migration`\n\t- `php artisan make:controller ArticleController --resource`\n\t- `php artisan make:seeder ArticlesTableSeeder`\n\t- `php artisan db:seed --class=ArticlesTableSeeder`\n- authentication\n\t- `php artisan make:auth`;\n\t- `composer require laravel/ui`\n\t- `php artisan ui vue --auth`\n\t- `php artisan migrate`",
        "extras": "$idCode=laravel;$rank=4.7;$quick=PHP framework released 2013 now most popular in 2022",
        "genericTermIdCode": "PHP Framework",
        "id": 179,
        "systemWhenCreated": "2020-09-03 16:36:43",
        "systemWhoCreated": "systemUnknown",
        "title": "Laravel 8"
    },
    {
        "body": "- versions\n\t- {created: 2007}: Version 1.0\n\t\t- named Sensio Framework\n\t- 2011: Version 2.0\n\t\t- renamed to Symfony from version 2 and on\n\t\t- more flexibility in using components in an adhoc basis\n\t- 2015: Version 3.0\n\t\t- Version 3 became a stable version, subsequent versions are mostly fixes\n\t\t- 2017-09 training: Symfony 3\n\t- 2017-11: Version 4.0\n\t\t- 2019-05 training: Symfony 4\n\t\t- 2019-09 training: Symfony 4\n\t- 2019-11: Version 5.0\n- has a solid code-base community and docs\n- components that Symfony uses can be used by other applications\n- not too overwelming to get started\n- is quite modular\n- backed by French company SensioLabs\n\t- the first name was **Sensio Framework**, and all classes were therefore prefixed with sf\n- MIT license\n- two parts\n\t- framework\n\t- decoupled components\n\t\t- **Drupal** uses some of their components\n- installing\n\t- has its own installer\n\t- or you can use Composer\n\t- you can install demo\n\t- you can install CMF (Content Management Framework)\n\t- you can install Rest\n\t- is very **object oriented**\n- ecosystem\n\t- [Twig](https://twig.symfony.com): template engine, has sandbox, you can create your own custom tags and filters to create your own DSL\n\t- [Doctrine](https://symfony.com/doc/current/doctrine.html): ORM for databases used with Symfony\n- concepts\n\t- bundles\n\t\t- everything is in a **bundle**\n\t\t- entire application\n\t- routing\n\t\t- using YML\n\t- controller\n\t- **twig templates**\n\t- Doctrine ORM\n\t\t- optional\n\t- dependency injection\n\t\t- like Zend\n\t\t- helps for testing\n\t- events\n\t\t- used throughout\n\t- PSR-FIG standards\n\t\t- PSR-0 and PSR-4 autoloading\n\t- [HttpFoundation](https://symfony.com/doc/current/components/http_foundation.html)\n\t\t- defines an object-oriented layer for the HTTP specification\n\t\t- replaces `$_GET, $_POST, $_FILES, $_COOKIE, $_SESSION` and `echo, header(), setcookie()` with an object-oriented layer\n\t\t- request and response are provided by this\n\t\t- `composer require symfony/http-foundation`\n\t- profiler\n\t\t- gives detailed information about the execution of any request, used only in dev mode, not production mode",
        "extras": "$idCode=symfony;$rank=4.5;$quick=a popular PHP framework created in 2007, today second in popularity behind Laravel",
        "genericTermIdCode": "PHP Framework",
        "id": 180,
        "systemWhenCreated": "2020-09-03 16:36:43",
        "systemWhoCreated": "systemUnknown",
        "title": "Symfony 5"
    },
    {
        "body": "- versions\n\t- 2008 released\n\t\t- originally developed by Varien, Inc, a US private company headquartered in Culver City, California\n\t- 2011 eBay invested\n\t- 2015-11 break up with eBay, new owner Permira private equity fund \n\t- 2018-05 **aquired by Adobe**\n\t\t- Adobe announced that it was acquiring Magento for $1.68 billion\n- Magento provides two distinct platforms: Magento Open Source (previously Magento Community Edition) and Magento Commerce\n- uses multiple other PHP frameworks such as Laminas and Symfony\n- more than 100,000 online stores have been created on this platform\n- employs the MySQL or MariaDB relational database management system, the PHP programming language, and elements of the Zend Framework\n- has conventions of object-oriented programming and model–view–controller architecture",
        "extras": "$idCode=magento;$rank=4.1;$quick=an e-commerce PHP framework created in 2008, now owned by Adobe",
        "genericTermIdCode": "PHP Framework",
        "id": 181,
        "systemWhenCreated": "2020-09-03 22:58:10",
        "systemWhoCreated": "systemUnknown",
        "title": "Magento"
    },
    {
        "body": "- versions\n\t- 2006: Version 1\n\t\t- released by **EllisLab** on February 28, 2006\n\t- 2011-2014: it stalled\n\t\t- because of this, it is a little bit behind the other frameworks\n\t\t- EllisLab lack of resources to give the framework the attention they felt it deserved\n\t\t- this is when Taylor Otwell created Laravel as an attempt to provide a more advanced alternative to the CodeIgniter framework\n\t- 2014: changed stewardship from Ellislab to **British Columbia Institute of Technology**\n\t\t- first version at BCIT was 3.0\n\t\t- MIT license\n\t\t\t- previous license was copy-left (if you want to change the core files, you have to include those open source)\n\t\t- 2019-02: Training on CogeIgniter 3.2\n\t- 2019-10: CodeIgniter Foundation controls it now\n\t- 2020-02: CogeIgniter 4\n- quite popular but **it's not modernized** and there's no PHP-FIG\n- a favorite for developers who want a lighter-weight framework\n- has a very small footprint that does little more than enforce the MVC pattern\n- it's decoupled and flexible\n\t- you can use a lot of the other elements if you don't want to use the MVC pattern\n\t- allows you to take and pick what you choose\n- downsides\n\t- hasn't upgraded much for newer versions of PHP\n\t- doesn't have official Composer integration\n\t- **no PSR/PHP-FIG support**\n\t\t- PSR = PHP Standard Recommendation\n\t\t- FIG = Framework Interoperability Group\n\t\t\t- plan to have some support in the 4.0 release",
        "extras": "$idCode=cogeIgniter;$rank=4.1;$quick=PHP Framework created 2006 loosely based on MVC",
        "genericTermIdCode": "PHP Framework",
        "id": 182,
        "systemWhenCreated": "2020-09-03 23:01:53",
        "systemWhoCreated": "systemUnknown",
        "title": "CogeIgniter"
    },
    {
        "body": "- versions\n\t- 2001: Version 1.0\n\t\t- originally written by **Belgian programmer** Dries Buytaert as a message board\n\t- 2009: Acquia helped re-launch Whitehouse.gov on Drupal\n\t- 2015: Drupal 8 \n\t\t- 2016: latest English course\n\t\t- 2018-03: French Tutorial Drupal 8 (https://www.linkedin.com/learning/l-essentiel-de-drupal-8/creer-de-nouveaux-champs)\n\t- 2020-06: Drupal 9\n\t- 2022-07: Drupal 10\n- 2.3% of all websites, ranging from personal blogs to corporate, political, and government sites\n- standard release of Drupal, known as Drupal core, contains basic features common to content-management systems",
        "extras": "$idCode=drupal;$rank=4.1;$quick=content management PHP framework written by Belgian in 2001",
        "genericTermIdCode": "PHP Framework",
        "id": 183,
        "systemWhenCreated": "2020-09-03 23:36:40",
        "systemWhoCreated": "systemUnknown",
        "title": "Drupal 8"
    },
    {
        "body": "- Zend Framework, which was formerly led and managed by Rogue Wave Software, is now called the Laminas Project, and is managed by the Linux Foundation. \n\t- https://www.zend.com/blog/evolution-zend-framework-laminas-project\n- has seen wide adoption across the PHP ecosystem, with an emphasis on the Enterprise market\n- versions\n\t- 2006 Zend Framework 1\n\t\t- 2007: the main framworks at that time were Symfony 1, CodeIgniter, CakePHP and the Zend Framework\n\t\t- 2011: Magento apparently used Zend Framework 1 as a base\n\t\t- stated end of life: 2016-09\n\t- 2012 Zend Framework 2\n\t\t- stated end of life: 2018-03\n\t- 2016-06  Zend Framework 3\n\t\t- 2019-02: Training on Zend 3\n\t- 2019-04 Laminas\n- loosely coupled: you can pull libraries out of zend and use it for other purposes\n- the most commercial of the PHP frameworks\n- it has a well-tested code base\n- has a steep learning curve\n- it's not as active or popular as it once was (2019)",
        "extras": "$idCode=zend;$rank=3.9;$quick=popular, corporate-ownded PHP framework created in 2006",
        "genericTermIdCode": "PHP Framework",
        "id": 184,
        "systemWhenCreated": "2020-09-03 23:39:18",
        "systemWhoCreated": "systemUnknown",
        "title": "Zend 3"
    },
    {
        "body": "- versions\n\t- 1997: pre-version\n\t\t- initially authored by Kasper Skårhøj from **Denmark**\n\t\t\t- nach einem abgebrochenen Ingenieurstudium arbeitete er als selbstständiger Webdesigner und begann 1997 TYPO3 für seine Kunden zu entwickeln\n\t- 2001: Version 3.0 \n\t\t- first public release\n\t- 2014: Version 7.0\n\t- 2016-03: Version 8.0\n\t\t- 2016-06: last French videos \"What's New in TYPO3 7 and 8\"\n\t- 2017-12: Version 9.0\n\t\t- 2018-10: Training \"TYPO3 CMS 9: Neue Funktionen\"\n\t- 2020-04: Version 10.4\n- TYPO3 is, along with Drupal, Joomla, and WordPress, among the most popular content management systems worldwide\n\t- more widespread in Europe \n\t- biggest market share i sin German-speaking countries\n- from small sites for individuals or nonprofit organizations to multilingual enterprise solutions for large corporations",
        "extras": "$idCode=typo3;$rank=3.9;$quick=free content management system written in PHP, created in 2001 by Dane, popular in German-speaking countries",
        "genericTermIdCode": "PHP Framework",
        "id": 185,
        "systemWhenCreated": "2020-09-03 23:49:43",
        "systemWhoCreated": "systemUnknown",
        "title": "TYPO3"
    },
    {
        "body": "- versions\n\t- 2005: Version 1.0\n\t\t- released as a rebranded/fork release of Mambo\n\t\t- Joomla developers created a website called OpenSourceMatters.org (OSM) to distribute information to the software community\n\t\t- Project leader Andrew Eddie is from Australia\n\t\t- Joomla is the anglicized spelling of the Swahili word jumla, meaning all together or as a whole\n\t- 2012: Version 3.0\n\t- 2017-05: French course: https://www.linkedin.com/learning/l-essentiel-de-joomla-3-6/bienvenue-dans-l-essentiel-de-joomla-3-6\n\t- 2018-05, English course: https://www.linkedin.com/learning/joomla-3-essential-training-1-working-with-content/welcome-2\n\t- 2020-07, Version 3.9.20",
        "extras": "$idCode=joomla;$rank=4.2;$quick=PHP content management framework created by Australian in 2005",
        "genericTermIdCode": "PHP Framework",
        "id": 186,
        "systemWhenCreated": "2020-09-04 00:05:46",
        "systemWhoCreated": "systemUnknown",
        "title": "Joomla"
    },
    {
        "body": "- version\n\t- 2003: Version 1.0\n\t\t- b2/cafelog, more commonly known as b2 or cafelog, was the precursor to WordPress\n\t\t- released its founders, American developer Matt Mullenweg (living in Houston) and English developer Mike Little (living in Stockport, England)\n\t- 2020-08: Version 5.5",
        "extras": "$idCode=wordpress;$rank=3.9;$quick=most popular content management system written in PHP",
        "genericTermIdCode": "PHP Framework",
        "id": 187,
        "systemWhenCreated": "2020-09-04 00:24:05",
        "systemWhoCreated": "systemUnknown",
        "title": "Wordpress"
    },
    {
        "body": "- modeled after the concepts of Ruby on Rails\n- MIT license\n- versions\n\t- 2005 started work on it\n\t\t- CakePHP started in April 2005 by **Polish programmer** Michal Tatarynowicz\n\t\t\t- he wanted to have something more like Ruby on Rails for PHP\n\t\t- MIT license\n\t\t- opened it up to online community of developers\n\t\t- L. Masters and G. J. Woodworth founded the Cake Software Foundation\n\t\t\t- The Cake Software Foundation is a not-for-profit corporation based in Nevada, United States. The organization was formed in 2005, to help promote the development of the CakePHP framework, as well as support the project.\n\t- 2006: Version 1.0\n\t- **2015: CakePHP 3**\n\t\t- 2015-01: CakePHP 2 and CakePHP 3 are worlds different with a fairly sizable learning curve\n\t\t- new in Version 3 and 3.3\n\t\t\t- modernized\n\t\t\t- namespaces\n\t\t\t- support for PHP 7\t\n\t\t\t- PSR support (PHP Standard Recommendation)\n\t\t\t\t- **PSR-7 HTTP Middleware** compliant\n\t\t\t- full Composer integration\n\t\t\t- rebuilt the ORM from scratch\n\t\t\t- integrated Elastic Search\n\t- 2016-03 Training mentioned CakePHP 3 \n\t- 2019-02: Training on Cake 3\n\t\t- now has a company called CakeDC behind it\n\t\t\t- \"CakeDC offers you access to the leading CakePHP developers from around the world. Faster CakePHP development that will have your application growth ready and stable.\"\n\t- today (2020-09)\n\t\t- the [Cake Software Foundation](https://cakefoundation.org) website says it is going through some changes\n\t\t- CakePHP 4 Strawberry\n- good features\n\t- borrows concepts from **Ruby on Rails**\n\t\t- convention over configuration\n\t- has **Back command-line interface**\n\t- scaffolding for RAD (Rapid Application Development) and prototyping\n\t\t- builds CRUD code for you\n\t- MVC-based\n- overcome\n\t- used to be bloated and slow (pre CakePHP 3)",
        "extras": "$idCode=cakePhp;$rank=3.9;$quick=MVC framework written in PHP, started by Polish developer in 2005",
        "genericTermIdCode": "PHP Framework",
        "id": 188,
        "systemWhenCreated": "2020-09-04 00:36:31",
        "systemWhoCreated": "systemUnknown",
        "title": "CakePHP"
    },
    {
        "body": "- Yii is pronounced as \"Yee\" \n\t- in Chinese it means \"simple and evolutionary\" and it is an acronym for \"Yes It Is!\"\n- pre-version\n\t- 2004: PRADO project was started by Qiang Xue\n\t\t- inspired by Apache Tapestry\n\t\t- convention over configuration\n\t\t- borrowed ideas from Borland Delphi\n\t- Yii started as an attempt to fix perceived drawbacks of the PRADO framework\n- versions\n\t- 2008: Version 1.0\n\t- 2010: Version 1.1\n\t\t- adding a form builder, relational Active record queries, a unit testing framework \n\t- **2011: Version 2.0**\n\t\t- added some PSR support for some of the core\n\t\t\t- e.g. autoloading standards\n\t\t- one of the first to integrate **Composer support**\n\t\t- added namespaces\n\t- 2019-02 training, \"currently at Version 2.0\"\n\t- 2019-05: Version 2.0.19 \n- low-profile, high performance\n- managed by small company called Yii Software, LLC\n- uses BSD license (quite similar to MIT)\n- aims to do things simply\n- Yii is full stack, so once you commit to Yii, you're going to use Yii.",
        "extras": "$idCode=yii;$rank=3.9;$quick=an open source, object-oriented, component-based MVC PHP framework created in 2008",
        "genericTermIdCode": "PHP Framework",
        "id": 189,
        "systemWhenCreated": "2020-09-04 00:47:54",
        "systemWhoCreated": "systemUnknown",
        "title": "Yii 2"
    },
    {
        "body": "- versions\n\t- 2011: started development\n\t\t- developed by Nils Adermann and Jordi Boggiano, who continue to manage the project\n\t- 2012: Version 1.0\n- inspired by Node's npm and Ruby's bundler",
        "extras": "$idCode=composer;$rank=4.5;$quick=the standard package manager for PHP",
        "genericTermIdCode": "PHP Package Manager",
        "id": 190,
        "systemWhenCreated": "2020-09-04 13:28:38",
        "systemWhoCreated": "systemUnknown",
        "title": "Composer"
    },
    {
        "body": "- history\n\t- 1996: IIS 1.0 - Add-on for Windows NT 3.51\n\t- 1996: IIS 2.0 - Released with Windows NT 4.0 RTM\n\t- 1996: IIS 3.0 - Released with Windows NT 4.0 SP3\n\t- 1997: IIS 4.0 - Released with Windows NT Internet Option Pack\n\t- 2000: IIS 5.0 - Released with Windows 2000\n\t- 2002: IIS 5.1 - Released with Windows XP Professional\n\t- 2003: IIS 6.0 - Released with Windows Server 2003\n\t- 2008: IIS 7.0 - Released with Windows Server 2008 and Windows Vista\n\t- 2009: IIS 7.5 - Released with Windows Server 2008 R2 and Windows 7\n\t- 2012: IIS 8.0 - Released with Windows Server 2012 and Windows 8\n\t- 2013: IIS 8.5 - Released with Windows Server 2012 R2 and Windows 8.1 \n\t- 2016: IIS 10.0 version 1607\n\t- 2017: IIS 10.0 version 1709\n\t- 2018: IIS 10.0 version 1809 \n\t- 2020: my machine has \"Version 10.0.19041.450\"",
        "extras": "$idCode=iis;$rank=4.223;$quick=Microsoft's standard web server",
        "genericTermIdCode": "Web Server",
        "id": 191,
        "systemWhenCreated": "2020-09-09 17:34:49",
        "systemWhoCreated": "systemUnknown",
        "title": "IIS"
    },
    {
        "body": "- versions\n\t- 1995: Version 1.0\n\t- 2000: Version 1.1\n\t- 2002: Version 2.0\n\t- 2005: Version 2.2\n\t- 2012: Version 2.4\n\t- 2020-08: Version 2.4.46",
        "extras": "$idCode=apache;$rank=4.223;$quick=most popular web server",
        "genericTermIdCode": "Web Server",
        "id": 192,
        "systemWhenCreated": "2020-09-09 17:35:01",
        "systemWhoCreated": "systemUnknown",
        "title": "Apache"
    },
    {
        "body": "- history\n\t- 2002: Igor Sysoev began development\n\t- 2004: Version 1.0\n\t- 2011: Nginx Inc. founded by Igor Sysoev and Maxim Konovalov, San Francisco",
        "extras": "$idCode=nginx;$rank=4.223;$quick=a fast web server that can also be used as a reverse proxy, load balancer, mail proxy and HTTP cache",
        "genericTermIdCode": "Web Server",
        "id": 193,
        "systemWhenCreated": "2020-09-09 17:35:01",
        "systemWhoCreated": "systemUnknown",
        "title": "Nginx"
    },
    {
        "body": "- history\n\t- 2009: conceived by a small team at VMware led by Derek Collison\n\t- **2011**: initial release\n\t- 2013: Pivotal was created from EMC and VMware, to market assets including Cloud Foundry, RabbitMQ and Spring\n\t- 2019: VMware took over Pivotal\n- Cloud Foundry’s container-based architecture runs apps in any programming language over a variety of cloud service providers. ",
        "extras": "$idCode=cloudFoundry;$rank=4.2;$quick= open source, multi-cloud application platform as a service (PaaS)",
        "genericTermIdCode": "Platform as a Service",
        "id": 194,
        "systemWhenCreated": "2020-09-10 13:28:15",
        "systemWhoCreated": "systemUnknown",
        "title": "Cloud Foundry"
    },
    {
        "body": "- **pre-history**\n\t- *in the beginning there were global variables, and they were bad*\n\t\t- you may have conflicts with other libraries using the same variable names\n\t\t\t- this is why jQuery eventually made the [noConflict() method](https://www.w3schools.com/jquery/jquery_noconflict.asp)\n\t\t- you cannot correctly make cyclic references: if an A module depends on a B module and vice versa, you don't know which order to put the <script> tags\n\t\t- the larger your application, the more difficult it became to maintain\n\t- IIFE (Immediately Invoked Function Expression) was used as a way to create enclosures so different JavaScript code sections didn't conflict with each other\n- **early history of JavaScript modules**\n\t- when Node.js and other server-side JavaScript solutions started to appear they agreed on a way to fix this problem\n\t\t- they created a broader specification called CommonJS\n\t\t- CommonJS is not the only specification, there are others such as UMD that, in fact, can be used in both: frontend and backend\n\t\t- larger code bases in the frontend and the need to share code between frontend and backend, many tools such as browserify and webpack started to implement and understand the CJS specification as a way to bypass the platform limitations\n\t\t\t- i.e. these were bundlers, which bundles javascript into one file\n\t- 2009 **CommonJS** begins standardizing modules\n\t\t- CommonJS project began as an effort to elevate JavaScript into language for application development\n\t- other solutions not as important as CommonJS and ES6 modules\n\t\t- **RequireJS**\n\t\t\t- an implementation of AMD\n\t\t\t- optimized for in-browser use\n\t\t\t- but can be used in Rhino and Node\n\t\t\t- current version: 2.3.6 (27. August 2018)\n\t\t\t- *\"in 2015, the time has come to move on from RequireJS to Browserify or Webpack\"*\n\t\t- **AMD/UMD**\n\t\t\t- 2014\n\t\t\t\t- Asynchronous Module Definition (AMD) has gained traction on the frontend, with RequireJS being the most popular implementation\n\t\t\t\t- CommonJS is a style you may be familiar with if you're written anything in Node, which uses a slight variant\n\t\t\t\t\t- `var $ = require('jquery');`\n\t\t\t\t- UMD is admittedly ugly, but it is both AMD and CommonJS compatible, as well as supporting the old-style global variable definition\n\t\t\t- **Webpack was an attempt to unify the modules landscape by supporting AMD, CommonJS and ES6 modules**\n\t\t\t- the UMD pattern typically attempts to offer compatibility with the most popular script loaders of the day (e.g RequireJS amongst others)\n\t\t\t\t- in many cases UMD uses AMD as a base, with special-casing added to handle CommonJS compatibility\n- 2015: **beginning of the modern JavaScript module age, i.e. CommonJS vs. ES6 modules**\n\t- what's wrong with CommonJS?\n\t\t- browsers don't support CommonJS since it is not a good solution for browsers since it loads modules synchronously meaning the call stack is going to be frozen while a module loads\n\t\t- with CommonJS require(), loading is synchronous, meaning it happens in the process foreground\n\t\t\t- with ES6 import, loading is asynchronous, which drastically improves performance when importing modules\n\t- import syntax:\n\t\t- `const { helloWorld } = require('./b.js')` // CommonJS\n\t\t- `import { helloWorld } from './b.js'` // ES modules\t\t\n\t- export syntax:\n\t\t- CommonJS:\n\t\t\t-------------------\n\t\t\texports.helloWorld = () => {\n\t\t\t  console.log('hello world')\n\t\t\t}\t\t\t\n\t\t\t-------------------\n\t\t- ES modules:\n\t\t\t------------------------------\n\t\t\texport function helloWorld () {\n\t\t\t  console.log('hello world')\n\t\t\t}\t\t\t\n\t\t\t------------------------------\n\t- difference in loading\n\t\t- ES6 modules are first parsed (without being executed), then the runtime looks for imports, loads them and finally it executes the code. This is called async loading\n\t\t\t- on the other hand, Node.js loads the dependencies (requires) on demand while executing the code. Which is very different. In many case this may not make any difference, but in other cases it is a completely different behavior\n\t- a note on Babel\n\t\t- Babel implements ES6 modules, but incorrectly, it doesn’t implement the full spec\n\t\t\t- so beware that if you are using Babel when switching to a native ES6 modules implementation, you may have side-effects\n\t- why ES6 modules are good:\n\t\t- they are a cross-platform standard: they will work in both Node.js and web browsers\n\t\t- imports and exports are static, you cannot do import `'engine-' + browserVersion` and this is good for a reason: tools can do static analysis of the code, figure out which code is actually being used and tree shake it, this is specially useful when using third-party libraries: you never use all the functionality they provide, so you can remove lots of bytes of code that the user won’t ever execute\n\t\t\t- different than with ES6 modules, with CommonJS you could do this:\n\t\t\t\t--------------------------------------\n\t\t\t\tconst provider = process.env.EMAIL_PROVIDER\n\t\t\t\tconst emailClient = require(`./email-providers/${provider}`)\n\t\t\t\t--------------------------------------\n\t\t\t- but with ES6, there’s a stage-3 proposal (which means it will likely be approved soon) that adds an import() function, this function accepts a path and returns the exported functionality as a promise, so with ES6 modules and import() we will get the best of both worlds\n\t- 2017: \"even though ES modules are not implemented in Node.js, they are implemented already in some browsers\"\n\t- as of 2018, all major web browsers support ES Modules\n\t- pre-ES2015 (ES6), the most widely used approach to adding various library modules to JavaScript files' scope was via CommonJS. \n\t\t- Node uses it, and it's the system used by most packages on npm today\n\t\t- the main concept in CommonJS modules is **a function called require**\n\t\t- when you call this with the module name of a dependency, it makes sure the module is loaded and returns its interface to be used in the file's scope\n\t- for a long while, CommonJS modules worked quite well and allowed the JavaScript community, via npm, to share code on a large scale\n\t- but **CommonJS had quirks** \n\t\t- require is a normal function call taking any kind of argument, not just a string literal, which makes it hard to determine the dependencies of a module without running its code\n\t- ES2015 (ES6) introduced its own module system, and in doing so, integrated the new module support notation into the language\n\t\t- the main concepts of dependencies and interfaces remain the same, but the details differ\n\t\t- ES6 module syntax;\n\t\t\t- `import carTires from './autoParts/tires.js';`\n\t\t\t- `import carTires, * as tireOptions from './autoParts/tires.js';`\n\t\t\t- `import { carrots, potatoes, onions } from './plants/veggies.js';`\n\t\t\t- `let vehicles = await import('./waysToTravel.js');`\n\t- **pro ES6/import over CommonJS/require**\n\t\t- you can use named imports to selectively load only the pieces you need, which can save memory\n\t\t- `import` can be asynchronous (and in the current ES6 Module Loader, it in fact is) and can perform a little better\n\t- **in September 2017, Node.js added support for ES modules**, alongside CommonJS modules, with the release of Node.js 8.5, using the **.mjs (Micheal Jackson Script) extension** to differentiate ES modules from CommonJS modules\n\t\t- as of Node 13, you can trigger support by setting \"type\": \"module\", in package.json\n\t\t- an MJS file is a source code file containing an ES Module (ECMAScript Module) for use with a Node.js application\n\t\t- TypeScript cannot transpile to .mjs files.\n\t\t\t- Workaround: Transpile to ES2015 target, and use a post compile script to rename the files to .mjs from .js\n\t\t- TypeScript cannot import .mjs files.\t\n\t\t\t- Workaround: There is none, unfortunately you can't do it today, you can import .ts files written with ES2015 syntax though\n\t\t- TypeScript allows the use of CommonJS require() and ES module import syntax in the same module. Node.js does not.\n\t\t\t- Workaround: ensure any TypeScript you write only uses ES module syntax, you should rewrite any instances of require() syntax to use import() syntax\n- Deno\n\t- uses the ES6 module syntax by default\n\t- \n\tWith import, you can selectively load in modules from a package, saving memory",
        "extras": "$rank=4.3; $quick=the method to separate code in JavaScript applications;$idCode=javascriptModules",
        "genericTermIdCode": "ES6 Technology",
        "id": 195,
        "systemWhenCreated": "2020-09-27 15:46:57",
        "systemWhoCreated": "systemUnknown",
        "title": "JavaScript modules"
    },
    {
        "body": "- 1997: Charles River Software founded it (Massachusetts)\n- 2000: Revit released\n- **2002: Autodesk acquired Revit**\n\t- best known for its {AutoCAD} line of products\n\t- Autodesk was founded 1982 in Mill Valley, California (San Francisco)\n\t\t- almost every computer graphics in Hollywood movies used their solution\n\t\t- the problem is they needed more power in their arsenal, because AutoCAD can’t handle more than what it can handle, so now they have Revit for BIM, andhey have Inventor for manufacturing, each of them are good\n- it is BIM software (Building Information Modeling)\n\t- the term BIM was first introduced around 1980\n- MEP = Mechanical, Electrical, and Plumbing\n- is a 4D building information modeling tool capable of planning and tracking various stages in the building's lifecycle, from concept to construction and later maintenance and/or demolition\n- **Revit** = full-featured version\n\t- $305 per month\n- **Revit LT** = feature limited version of Revit for the entry level \n\t- 2012: released\n\t- $55 per month\n\t- a number of features such as rendering and multi user environments removed\n- With their Revit platform, Autodesk is a significant player in the BIM market together with Nemetschek (makers of ArchiCAD, Allplan and Vectorworks), and Gehry Technologies with CATIA based Digital Project.\n- two courses on how to create Revit plugins using C# and {Python}:\n\t- LinkedIn Learning course: [Revit: Creating C# Plugins](https://www.linkedin.com/learning/revit-creating-c-sharp-plugins/getting-started)\n\t\t- With the **Revit application programming interface** (API) and an understanding of C#, any motivated Revit user, BIM manager, architect, or engineer can create their own **custom plugins**.\n\t- LinkedIn Learning course: [Dynamo for Revit: Python Scripting](https://www.linkedin.com/learning/dynamo-for-revit-python-scripting-2/jumping-into-python-and-dynamo)\n\t\t- Python allows you to **create powerful custom nodes that extend the functionality of Dynamo** and solve your Revit modeling challenges in smarter, faster ways.\n- dozens of of hour-long courses on Revit at LinkedIn Learning:\n\t- LinkedIn Learning course: [Revit for Interior Architecture](https://www.linkedin.com/learning/revit-for-interior-architecture/welcome)\n\t- [see all courses on Revit](https://www.linkedin.com/learning/search?entityType=COURSE&keywords=Revit&sortBy=RECENCY)",
        "extras": "$idCode=revit;$rank=4.7;$quick=a 4D building information modeling tool",
        "genericTermIdCode": "Architecture Software",
        "id": 196,
        "systemWhenCreated": "2020-10-26 01:04:03",
        "systemWhoCreated": "systemUnknown",
        "title": "Revit"
    },
    {
        "body": "- 1982: release\n- general computer-aided design (CAD) and drafting software application\n- AutoCAD LT\n\t- 1993 released\n\t- $50 per month\n- AutoCAD 360\n\t- used to be free",
        "extras": "$idCode=autocad;$rank=4.5;$quick=an old and well-established commercial computer-aided-design and drafting software application",
        "genericTermIdCode": "Architecture Software",
        "id": 197,
        "systemWhenCreated": "2020-10-26 01:04:19",
        "systemWhoCreated": "systemUnknown",
        "title": "AutoCAD"
    },
    {
        "body": "- history\n\t- 1999: developed by startup company @Last Software of Boulder, Colorado\n\t- 2000: released\n\t- **2006: Google acquired @Last Software** attracted by @Last Software's work developing a plugin for Google Earth\n\t- 2007: Google announced Google SketchUp 6, a free downloadable version of SketchUp\n\t\t- \"toolbox enables a viewer to \"walk around\" and see things from different viewpoints and supports labels for models\"\n\t- 2008: SketchUp 7, easier to use\n\t- 2010: SketchUp 8 was released with model geolocation with Google Maps \n\t\t- Geolocation information is always stored in the KMZ file\n\t- 2017: SketchUp Free released, free and browser-based\n\t- **2012: Trimble Inc. acquired SketchUp from Google** \n- a **3D modeling computer program** for a wide range of drawing applications such as architectural, interior design, landscape architecture, civil and mechanical engineering\n\t- original motto: \"a software program that would allow design professionals to draw the way they want by emulating the feel and freedom of working with pen and paper in a simple and elegant interface, that would be fun to use and easy to learn and that would be used by designers to play with their designs in a way that is not possible with traditional design software\"\n- currently available in three versions:\n\t- **SketchUp Make**: a freeware version **discontinued in 2017**, users are encouraged to move to Sketchup Free\n\t\t- **but you may want to still use this for extensions**\n\t\t- no longer on the download site\n\t\t- SketchUp Free, the web-based version, does not support extensions which severely limits the functionality of the tool.\n\t- 1. **SketchUp Free**: a free, web-based application\n\t\t- access it here: https://app.sketchup.com\n\t\t\t- Firefox, Chrome, Edge\n\t\t\t- Google Account\n\t\t\t- you have cloud account called Trimble Connect\n\t\t- drawings can be saved to the cloud, saved locally as a native SKP file, or exported as an STL file\n\t\t- compared to Make, SketchUp Free does not support extensions, creation and editing of materials\n\t\t- **SketchUp Free is a lot different than SketchUp Pro**\n\t\t\t- your Internet speed will impact performance of SketchUp Free\n\t\t- SketchUp Free doesn't have:\n\t\t\t- ability to edit materials\n\t\t\t- the outliner\n\t\t\t- ability to work with solids\n\t\t\t- the rich plug-in library\n\t\t- LinkedIn course: [Learning SketchUp Free](https://www.linkedin.com/learning/learning-sketchup-free)\n\t- 2. **SketchUp Shop**: specifically for DIY designers, makers, and woodworkers\n\t\t- it is **only a web version** whereas SketchUp Pro is a desktop version\n\t\t- **$119 per year**\n\t\t- **no extensions**\n\t- 3. **SketchUp Pro**: a paid version with additional functionality\n\t\t- has 30-day free trial\n\t\t- **$299 per year**\n\t\t- Core Ruby API & Extension Warehouse\n\t\t\t- you can [write extensions in Ruby](https://ruby.sketchup.com/Geom/BoundingBox.html)\n\t\t- LinkedIn Course: [SketchUp Pro 2019 Essential Training](https://www.linkedin.com/learning/sketchup-2019-essential-training/build-your-design-ideas-with-sketchup-pro)\n\t\t- LinkedIn Course: [SketchUp Pro 2019 for Architecture](https://www.linkedin.com/learning/sketchup-for-architecture-2/welcome-to-sketchup-for-architecture)\n- **3D Warehouse** is an open library in which SketchUp users may upload and download 3D models to share\n\t- the models can be downloaded right into the program without anything having to be saved onto your computer's storage\n- **LinkedIn Learning courses** on SketchUp\n\t- dozens in **English**\n\t\t- https://www.linkedin.com/learning/topics/sketchup?entityType=COURSE\n\t- one old one in **German** on SketchUp Make from 2014\n\t\t- https://www.linkedin.com/learning/sketchup-make-grundkurs/willkommen-zu-sketchup-make-grundkurs\n\t- a course in **French** from 2017\n\t\t- https://www.linkedin.com/learning/sketchup-2017-les-nouveautes/bienvenue-dans-sketchup-2017-les-nouveautes\n- how SketchUp is used\n\t- carpenter\n\t\t--------------------------\n\t\t\"I am a cabinetmaker by trade, when I retired there was no internet as we know it, definitely no virtual reality software. With SketchUp I am now able, to design furniture, (or anything else) digitally. Why? To see what it looks like, if it's complicated whether it will work or not, to see that every part fits, (correct size), change anything quickly, and send it to the printer, to any scale as in an illustration, (in image above), or full scale if it is a pattern to be cut out.\n\n\t\tYou can build anything you like, change quickly, to any scale, any dimension, metric or imperial measurements, with perfect accuracy and place parts with absolute precision. View it from any angle at any zoom. My work-space is infinite. I can group parts together for convenience or move groups apart to see how it all goes together (this is the case if you are using someone else's model downloaded from SketchUp Warehouse, library, it must be checked), or you can just use the x-ray option. I can add visual dimensions to my models or not. I can measure anything with a digital tape measure, and add any kind of text, of any size, or color. I can create cutting lists. \n\n\t\tThe same goes for how parts are placed on sheets to test if they fit into a sheet. I also do this manually, (still digitally in SketchUp) by copying the parts and placing them economically onto the sheet, or timber. I can clad or render models in any material, from within SketchUp or from the net. You do not have to make your models from scratch, as SketchUp has a library of models called SketchUp Warehouse, so you simply find something similar to what you require and modify it to your own liking. By no means have I covered everything here, (use of layers etc) but the capabilities and potential seem to be endless.\n\n\t\tIf your just getting started then, the latest official version is Sketchup Free, and you can use it online indefinitely.\"\n\t\t--------------------------\t\n\t- interior designer\n\t\t----------------------------\n\t\tI use sketchup because its easiest for me to use when doing interior design. I can import my AutoCad Floor plan and trace the lines and do the exterior real quick. Its also has excellent rendering plugins to make realistic perspectives for clients to picture the space more clearly.\n\n\t\tI use V-Ray as the render plugin to create realistic scenes. Since my computer can't handle rendering I just send it to Renderwow which is an excellent renderfarm to use. You just send your scenes to their servers and renders automatically and since its free right now I just use because there's no harm.\n\n\t\tI also love Sketchup because theres some fast shortcuts and tricks I know now that help me finish my projects faster than I would when I first learned sketchup.\n\n\t\tOverall its user friendly and easy to use once you know what each tool does. Happy Modelling!\n\t\t----------------------------\n\t- graphic artist\n\t\t---------------------------------\n\t\tI started out with Google Sketchup, as many other 3D modelers have as well. The word “sketch” is in the title for a reason. Many professional 3D modelers utilize Sketchup for just that, sketching out their ideas. \n\n\t\tThe fact that you can swiftly slap on a texture on your building to see what kind of brick, stone, wood, etc you like, playing with the colors, all that, saves tons of time, and often achieves a much better more well-thought-out result/final render.\n\t\t---------------------------------\n\t- interior designer\n\t\t--------------------------\n\t\tSketchUp is widely used for those in the design industry, namely interior designers and architects. Many designers prefer to use SketchUp since it's very user-friendly, especially compared to other applications like AutoCAD. \n\n\t\tSome 3D modelling platforms require at least a month of just learning how to use the application, but most people can become quite proficient in SketchUp in a matter of days, it's definitely a shallow learning curve. \n\n\t\tPlus, designers have the flexibility of creating something extremely basic and simple, or they can design a space that is extremely complex. The opportunities are endless, and it appeals to a much larger audience.\n\t\t--------------------------",
        "extras": "$idCode=sketchup;$rank=4.6;$quick=a 3D modeling computer program with a free version",
        "genericTermIdCode": "Architectural Tool",
        "id": 198,
        "systemWhenCreated": "2020-10-26 10:44:11",
        "systemWhoCreated": "systemUnknown",
        "title": "SketchUp"
    },
    {
        "body": "- Enscape is an essential tool for collaboration and review in the **AEC industry (Architecture, Engineering, and Construction)**\n- it enables real-time rendering with popular BIM software such as **Revit, SketchUp, and ARCHICAD**\n- with Enscape, **you can produce many different iterations of your designs** and even create professional-looking **videos that allow clients to experience their designs in motion**\n- it has three courses on LinkedIn Learning: \n\t- LinkedIn course: [Enscape Essential Training (2019)](https://www.linkedin.com/learning/enscape-essential-training-2019/create-and-render-in-real-time-with-enscape)",
        "extras": "$idCode=enscape;$rank=3.7;$quick=a tool for collaboration and e.g. videos for clients to review",
        "genericTermIdCode": "Architectural Tool",
        "id": 199,
        "systemWhenCreated": "2020-10-26 13:06:07",
        "systemWhoCreated": "systemUnknown",
        "title": "Enscape"
    },
    {
        "body": "- $196 per month: https://www.scan2cad.com/cad/archicad-pricing\n- an architectural BIM CAD software for Macintosh and Windows developed **by the Hungarian company Graphisoft** \n\t- Graphisoft has been a part of the **Nemetschek Group** since its acquisition in 2007\n- history\n\t- 1982: started for MacIntosch\n\t- 1987: official launch\n\t- 2007: Nemetschek Group (German, offices next to Microsoft in Munich) acquired Graphisoft\n- the first CAD product on a personal computer able to create both 2D and 3D geometry\n- today, it has over 120,000 users \n- commercial, educational and fully functional 30-day trial versions can be installed with the same installer\n\t- trial version is a 30-day fully functional version in which you can save, print and publish projects\n- it only has three courses on LinkedIn Learning: \n\t- LinkedIn course: [ARCHICAD 23 Essential Training](https://www.linkedin.com/learning/archicad-23-essential-training/design-your-vision-with-archicad-3)",
        "extras": "$idCode=archicad;$rank=4.55;$quick=the oldest architectural BIM CAD software",
        "genericTermIdCode": "Architectural Tool",
        "id": 200,
        "systemWhenCreated": "2020-10-26 13:06:13",
        "systemWhoCreated": "systemUnknown",
        "title": "ArchiCAD"
    },
    {
        "body": "- Dynamo is a **visual** programming tool that works with **Revit**\n- it extends the power of Revit by **providing access to the Revit API** in a more accessible manner. \n- it's an approach to programming **better suited for visually oriented types** like architects, designers, and engineers\n- in Dynamo, each node performs a specific task. Nodes have inputs and outputs. The outputs from one node are connected to inputs on another using \"wires\"##thenodeswires\n- Dynamo users can also create node libraries or “packages” and **upload them to a central repository**\n- \"Say you need to renumber your rooms according to a particular sequence. There’s a node for that! What about creating ducts from lines? There’s a node for that too!\"\n- LinkedIn Learning courses:\n\t- 2019: [Dynamo 2.x Essential Training](https://www.linkedin.com/learning/dynamo-2-x-essential-training/automate-your-bim-workflows-with-dynamo)\n\t- 2018: [Dynamo for Revit: Python Scripting](https://www.linkedin.com/learning/dynamo-for-revit-python-scripting-2/jumping-into-python-and-dynamo)\n\t\t- Python allows you to **create powerful custom nodes that extend the functionality of Dynamo** and solve your Revit modeling challenges in smarter, faster ways.\n\t- [numerous other courses on Dynamo](https://www.linkedin.com/learning/search?keywords=Dynamo)",
        "extras": "$idCode=dynamo;$rank=3.8;$quick=visual programming tool that works with Revit",
        "genericTermIdCode": "Architectural Tool",
        "id": 201,
        "systemWhenCreated": "2020-10-26 13:55:30",
        "systemWhoCreated": "systemUnknown",
        "title": "Dynamo"
    },
    {
        "body": "-  a CAD software platform for two and three dimensional design and drafting\n- history\n\t- 1980s first release\n- Bentley MicroStation is a highly optimized 2D and 3D CAD and information-modeling program used by architects and engineers around the world\n- multiple LinkedIn Learning courses, e.g.:\n\t- 2015: [Learning Bentley MicroStation](https://www.linkedin.com/learning/learning-bentley-microstation/welcome-to-microstation-v8i-2d)\n\t\t- shows you how to complete simple 2D drawing projects, edit graphics, reference title blocks, and generate a plot of the final results with MicroStation\n\t\t- the course features both architectural and civil examples, so you'll get a good understanding of MicroStation's many applications: in architecture, engineering, construction, utility systems, roads and rail, communications networks, water and wastewater networks, process plants, mining, and more\n\t- 2017: [MicroStation 3D Essential Training](https://www.linkedin.com/learning/microstation-3d-essential-training/welcome)\n\t\t- the course covers the user interface and explains how to set drawing preferences and working units. After providing you with an introduction to the software, he dives into several drawing and dimensioning projects—a basic one-view drawing, a three-view orthographic projection drawing, an auxiliary-view drawing, and a four-part assembly drawing",
        "extras": "$idCode=microstation;$rank=4.2;$quick=2D and 3D CAD and information-modeling program used by architects and engineers",
        "genericTermIdCode": "Architectural Tool",
        "id": 202,
        "systemWhenCreated": "2020-10-26 14:22:03",
        "systemWhoCreated": "systemUnknown",
        "title": "Bentley MicroStation"
    },
    {
        "body": "- a visual programming language and environment that runs within the Rhino CAD application\n- advanced uses of Grasshopper include parametric modelling for structural engineering, parametric modelling for architecture and fabrication, lighting performance analysis for eco-friendly architecture and building energy consumption\n- history\n\t- 2007: first version releasted, called *Explicit History*\n- two reasons to use Grasshopper in the archicture work\n\t- automate things (having to draw 1000 perpendicular lines)\n\t- encapsulate frequent tasks (similar to macros)\n- it is popular among students and professionals, endemic in the architectural design world\n- provides an intuitive way to explore designs without having to learn to script\n- LinkedIn Learning courses: \n\t- 2019: [Grasshopper: Generative Design for Architecture](https://www.linkedin.com/learning/grasshopper-generative-design-for-architecture/cyborg-designers)\n\t- 2020: [Grasshopper and Rhino: C# Scripting](https://www.linkedin.com/learning/grasshopper-and-rhino-c-sharp-scripting/pushing-grasshopper-with-c-sharp)",
        "extras": "$idCode=grasshopper;$rank=3.5;$quick=a visual programming language and environment that runs within the Rhino CAD application",
        "genericTermIdCode": "Architectural Tool",
        "id": 203,
        "systemWhenCreated": "2020-10-26 16:52:37",
        "systemWhoCreated": "systemUnknown",
        "title": "Grasshopper"
    },
    {
        "body": "- a commercial 3D computer graphics and CAD application\n- used in industries including architecture, industrial design (e.g. automotive design, watercraft design), product design (e.g. jewelry design) as well as for multimedia and graphic design\n\t- has a wide use, e.g. rendering animation, architecture, marine, jewelry, engineering, prototyping, etc.\n- a visual scripting language add-on for Rhino is called **Grasshopper**\n\t- Grasshopper is an algorithmic modeling plugin for Rhino that uses a visual programming language, developed by David Rutten as an official plugin of Rhino\n\t- Grasshopper allows you to reference Rhino geometry objects from it (points, curves, surfaces, etc.), create geometry or bake Grasshopper geometry back into Rhino\n- **RhinoBIM is a suite of plugins** to extend the capabilities of Rhino for the AEC industries\n\t- designed by Virtual Build Technologies\n- LinkedIn Learning courses: \n\t- 2016: [Architectural Documentation in Rhino](https://www.linkedin.com/learning/architectural-documentation-in-rhino/welcome)\n\t\t- Learn how to create architectural documentation and presentation images that make your designs shine. \n\t\t- Find out how to create fast and easy presentations with Rhino's built-in viewport modes—no rendering required! Next, learn how to create exploded and isometric views of your buildings. \n\t\t- Then take a trip into **Photoshop**, where instructor Dave Schultze shows how to edit backgrounds, add shading, and make your images pop. \n\t\t- Back in Rhino, Dave shows how to create section cuts of your project with the cutting plane, and use page layouts to prepare designs of any scale for printing and publication. Stay tuned at the end of the course for some of Dave's bonus tips and tricks for workflow strategies.\n- 2016: [Rhino: Architectural Interior & Detail](https://www.linkedin.com/learning/rhino-architectural-interior-detail/welcome)",
        "extras": "$idCode=rhino;$rank=4.2;$quick=a commercial 3D computer graphics and CAD application",
        "genericTermIdCode": "Architectural Tool",
        "id": 204,
        "systemWhenCreated": "2020-10-26 16:52:41",
        "systemWhoCreated": "systemUnknown",
        "title": "Rhino"
    },
    {
        "body": "- ist ein BIM/CAD-Programm des Unternehmens Allplan GmbH, **einer Tochter der Nemetschek SE**, für Architekten, Bauingenieure und Bauausführende\n\t- (SE = Societas Europaea)\n- Allplan has the same address as ArchiCAD, near Microsoft in Munich: Konrad-Zuse-Platz 1\n- auch der Import und Export zu SketchUp und Rhino ist möglich\n- **no LinkedIn Learning courses**",
        "extras": "$idCode=allplan;$rank=2.9;$quick=lesser-known German company/software that imports/exports to SketchUp and Rhino",
        "genericTermIdCode": "Architectural Tool",
        "id": 205,
        "systemWhenCreated": "2020-10-26 17:07:49",
        "systemWhoCreated": "systemUnknown",
        "title": "Allplan"
    },
    {
        "body": "- history\n\t- 1985: first version, company was called \"MiniCad\" \n\t- 1999: MiniCad became Vectorworks\n- it does everything that standard 2D/3D CAD programs do\n- Vectorworks helps users design and create projects using an eﬃcient workflow\n- a versatile, on-premise application that provides extensive 2D drafting, 3D modeling, BIM and rendering capabilities for your architectural and landscape design needs.\n- Vectorworks learning curve is subjectively much less steep than Revit and the software is also comparatively cheaper than Revit\n- unlike CAD programs like AutoCAD that create elements made of entities like lines and circles, Vectorworks considers everything it creates as an object\n- 123 GBP per month: https://www.vectorworks.net/en-GB/architect/buy\n- one LinkedIn Learning course: \n\t- 2017: [Learning Vectorworks](https://www.linkedin.com/learning/learning-vectorworks-2/welcome)",
        "extras": "$idCode=vectorworks;$rank=3.1;$quick=a lesser-known CAD program that does everything that standard 2D/3D CAD programs do",
        "genericTermIdCode": "Architectural Tool",
        "id": 206,
        "systemWhenCreated": "2020-10-26 17:08:39",
        "systemWhoCreated": "systemUnknown",
        "title": "Vectorworks"
    },
    {
        "body": "- based in Portland, Oregon\n- history\n\t- complicated history in the 1990s with buyouts, etc.\n\t- 2001: IntelliCAD 3\n- unlike typical CAD programs, ITC IntelliCAD is not sold directly to end users\n\t- price is unclear\n\t- other software is based on IntelliCAD\n- has a set of commands similar to AutoCAD by Autodesk\n- no LinkedIn Learning courses",
        "extras": "$idCode=intellicad;$rank=1.6;$quick=AutoCAD-like CAD application not sold to end users but used as basis of other products",
        "genericTermIdCode": "Architectural Tool",
        "id": 207,
        "systemWhenCreated": "2020-10-26 17:14:38",
        "systemWhoCreated": "systemUnknown",
        "title": "IntelliCAD"
    },
    {
        "body": "- a virtual environment mimics a full system install of Python and all of the desired modules without interfering with any system on which the application might run\n- interessant, wenn man bestimmte Versionen eines Moduls benötigt\n- install: `python -m pip install --user virtualenv`\n- create virtual environment: `python -m venv sqlalchemy-workspace`\n\t- on Linux: `source bin/activate`\n\t- on Windows: \n\t\t- `cd Scripts`\n\t\t- `activate`\n- there is also **virtualenvwrapper** that extends virtualenv to make it easier to work with multiple virtualenvs\n\t- many people use the virtualenvwrapper tool, which keeps all virtualenvs in the same place (the ~/.virtualenvs directory) and allows shortcuts for creating and keeping them there.",
        "extras": "$idCode=virtualenv;$rank=3.5;$quick=tool for working with your Python packages in isolation; $parent=python",
        "genericTermIdCode": "Python Tool",
        "id": 208,
        "systemWhenCreated": "2020-11-19 17:13:12",
        "systemWhoCreated": "systemUnknown",
        "title": "virtualenv"
    },
    {
        "body": "- created 2006\n- creator: Michael Bayer\n- very useful in Python\n- one of the most widely used object-relational mapping tools in the Python community, alongside Django's ORM\n- \"SQLAlchemy considers the database to be a relational algebra engine, not just a collection of tables.\"\n- \"instead of hiding away SQL and object relational details behind a wall of automation, all processes are fully exposed within a series of composable, transparent tools\"\n- \"the main goal of SQLAlchemy is to change the way you think about databases\"\n- two largest components\n\t- 1. SQLAlchemy Core\n\t\t- schema-centric view\n\t- 2. SQLAlechemy ORM\n\t\t- object-centric view\n- unlike many ORMs, you can mix and match ORM and SQL concepts\n- install with: `pip3 install sqlalchemy`",
        "extras": "$idCode=sqlalchemy;$rank=3.9;$quick=a Python SQL toolkit and Object Relational Mapper;$parent=python",
        "genericTermIdCode": "ORM",
        "id": 209,
        "systemWhenCreated": "2020-11-19 17:13:12",
        "systemWhoCreated": "systemUnknown",
        "title": "SQLAlchemy"
    },
    {
        "body": "- version 1 {created:2016} by {Rich Harris}\n\t- 2018: version 2\n\t- 2019: version 3 {writtenIn:TypeScript}\n- Svelte applications do not include framework references\n\t- instead, building a Svelte application **generates code to manipulate the DOM**\n\t- reduces the size of transferred files \n\t- gives better client startup and run-time performance\n- has its own compiler written in {TypeScript}\n- introduces **extra compile step** into your process\n\t- unlike Vue.js, you won't be able to just include a script tag to load the framework\n- **does not use a virtual DOM**\n- designed so that you write less code\n- predecessor of Svelte was Ractive.js\n- Svelte applications and components are defined in .svelte files, which are HTML files extended with templating syntax that is {similarTo:JSX}\n- {Vue.js|vuejs} modelled its API and single-file components after Ractive.js, the predecessor of Svelte\n- the weighs 3.6kb zipped in comparison to React plus ReactDOM without any app code which weighs 45kb zipped\n- Svelte uses {Rollup} as its build tool\n\t- the reason Svelte uses Rollup as a bundle instead of Webpack is because Svelte and Rollup were both made by the same person\n\t- the [Svelte website](https://svelte.dev) has an easy-to-use REPL and an extensive tutorial\n- styles are scoped\n\t- if you need global styles",
        "extras": "$idCode=svelte;$rank=4.5;$quick=JavaScript framework that merely generates code to manipulate the DOM",
        "genericTermIdCode": "JavaScript Framework",
        "id": 210,
        "systemWhenCreated": "2020-11-21 11:37:36",
        "systemWhoCreated": "systemUnknown",
        "title": "Svelte"
    },
    {
        "body": "- pronounced [NOO-get]\n- {created:2010} by Microsoft\n- a NuGet package is a single ZIP file that bears a .nupack filename extension and contains .NET assemblies and their needed files\n- NuGet's client, nuget.exe is a free and open-source, command-line app that can both create and consume packages",
        "extras": "$idCode=nuget;$rank=4.1;$quick=the package manager for .NET",
        "genericTermIdCode": "package manager",
        "id": 211,
        "systemWhenCreated": "2020-11-21 13:41:51",
        "systemWhoCreated": "systemUnknown",
        "title": "NuGet"
    },
    {
        "body": "- released {(created):2017} by Microsoft\n- a machine-level, command-line package manager and installer for Windows software\n- uses the NuGet packaging infrastructure and Windows PowerShell to simplify the process of downloading and installing software\n- the name is an extension on a pun of NuGet (from \"nougat\") because everyone loves Chocolatey nougat\n- you can install VirtualBox with: `choco install virtualbox`\n- you can install Vagrant with: `choco install vagrant`\n- a tutorial used Chocolately to install Deno",
        "extras": "$idCode=chocolately;$rank=3.7;$quick=package manager for Windows based on NuGet;$uses=nuget",
        "genericTermIdCode": "package manager",
        "id": 212,
        "systemWhenCreated": "2020-11-21 13:41:51",
        "systemWhoCreated": "systemUnknown",
        "title": "Chocolately"
    },
    {
        "body": "- {created:2013}\n- PostCSS is a framework to develop CSS tools\n\t- it can be used to develop a template language such as Sass and LESS\n- PostCSS and its plugins are written in JavaScript and distributed through {npm}\n- there are tools that make it possible to use PostCSS with Webpack, Gulp, and Grunt\n- \"Babel, PostCSS, Webpack and friends\"",
        "extras": "$idCode=postCss;$rank=3.5;$quick=a tool for transforming CSS with JavaScript",
        "genericTermIdCode": "CSS Framework",
        "id": 213,
        "systemWhenCreated": "2020-11-22 14:53:20",
        "systemWhoCreated": "systemUnknown",
        "title": "PostCSS"
    },
    {
        "body": "- {created:2005} as the Arduino Project\n- [Arduino timeline](https://core-electronics.com.au/tutorials/history-of-arduino.html)\n\t- 2003-2012 maker boards\n\t\t- 2003 Massimo Banzi\n\t\t\t- Bar de Re Arduino\n\t\t\t- Interaction Design Institute Ivrea\n\t\t- 2005 first boards and IDE\n\t\t\t- serial (eventually became Uno)\n\t\t- 2006\n\t\t\t- still maker boards\n\t\t- 2007\n\t\t\t- LilyPad wearables\n\t\t- 2008\n\t\t\t- Duemillanove\n\t\t\t\t- most Uno-like before Uno\n\t\t\t- Pro\n\t\t\t\t- didn't take off\n\t\t\t\t- led to Pro Mini\n\t\t\t- Pro Mini (fourth size of Uno, no USB)\n\t\t- 2008 Nano\n\t\t- 2009 Mega\n\t\t- **2010 big year**\n\t\t\t- Mega 2560 is still available\n\t\t\t- **Uno comes out**\n\t\t\t\t- ATmega328 becomes Uno\n\t\t\t- IoT\n\t\t\t\t- Fio, not popular\n\t\t\t- we just had 2G, 3G\n\t\t- 2011 Leonardo\n\t\t\t- Mega ADK\n\t\t\t- Ethernet board\n\t\t\t\t- was quite popular\n\t\t- no new maker boards made after this\n\t\t\t- Uno stayed pretty much the same, serves its purpose\n\t- 2013-2020 Beyond Maker boards\n\t\t- new era for Arduino \n\t\t- 2012 \n\t\t\t- Due\n\t\t\t\t- first board to use **32-bit processor**\n\t\t\t\t\t- before then it was 8 chips\n\t\t\t\t- more memory, hardware\n\t\t\t- LilyPad wearables\n\t\t\t\t- sewable technology\n\t\t\t\t- was produced in 2007 but 2012 they were cool\n\t\t\t- LilyPad Simple\n\t\t\t- LilyPad Snap\t\t\t\n\t\t\t- Esplora (educational)\n\t\t- 2013\n\t\t\t- Robot (educational)\n\t\t\t- Yun (industrial)\n\t\t- 2015\n\t\t\t- becomes Genuino and Arduino\n\t\t- 2016\n\t\t\t- IoT takes off\n\t\t\t\t- Wifi\n\t\t- 2017 \n\t\t\t- Primo\n\t\t\t- Genuino and Arduino formed one company again\n\t\t- 2018 arduino-cli\n\t\t- 2019-10 early access to a new Arduino Pro IDE with debugging and other advanced features\n- kinds\n\t- maker\n\t\t- **Uno**\n\t\t\t- **great choice for your first Arduino**\n\t\t- Leonardo\n\t\t- Mini / Pro Mini\n\t\t- Nano / Micro\n\t\t- Mega2560 / ADK\n\t\t\t- Uno's big brother\n\t\t- Primo\n\t\t- Due\t\t\n\t- wearables\n\t\t- LilyPad\n\t\t- LilyPad Simple\n\t\t- LilyPad Snap\n\t\t- LilyPad USB\n\t\t- Primo Core\n\t- educational\n\t\t- Esplora\n\t\t- Robot\n\t- IoT\n\t\t- MKR1000\n\t\t- MKRZero\n\t\t- MKRFOX1200\n\t\t- Uno Wi-Fi\n\t\t- Ethernet\n\t\t- Primo\n\t- industrial\n\t\t- Yun/Yun Mini\n\t\t- Zero\n\t\t- MO/MO Pro\n\t\t- Tian\n\t\t\t- two co-processors\n\t\t\t- like Raspberry Pi\n\t\t\t- designed to run Linux\n\t\t- 101/Industrial 101\n- the microcontrollers can be programmed using the C and C++ programming languages, using a standard API which is also known as the Arduino language\n- the Arduino project provides an integrated development environment (IDE) and a command line tool (arduino-cli) developed in Go\n- \"If you can live with the constraints of having the Arduino attached to the USB port of the computer, you can run Node.js code on it using the Johnny Five project, which is pretty cool.\"\n- terms\n\t- PWM = Pulse Width Modulation\n\t- SPI = Serial Peripheral Interface",
        "extras": "$idCode=arduino;$rank=3.7;$quick=a single-board microcontroller kit programmable in C++",
        "genericTermIdCode": "Microcontroller",
        "id": 214,
        "systemWhenCreated": "2020-11-22 21:27:01",
        "systemWhoCreated": "systemUnknown",
        "title": "Arduino"
    },
    {
        "body": "- {created:2012}\n- cost from $35-$75 \n- a low cost, credit-card sized computer that plugs into a computer monitor or TV\n- uses standard keyboard and mouse\n- people use it to learn how to program in languages like Scratch and Python\n- started as way to teach computers in developed countries\n\t- became popular for robotics\n- developed in the United Kingdom \n- by 2019, thirty million sold\n- most Pis are made in a Sony factory in Pencoed, Wales",
        "extras": "$idCode=raspberrypi;$rank=3.8;$quick=a tiny and affordable single-board computer",
        "genericTermIdCode": "single-board computer",
        "id": 215,
        "systemWhenCreated": "2020-11-22 21:27:12",
        "systemWhoCreated": "systemUnknown",
        "title": "Raspberry Pi"
    },
    {
        "body": "- general history\n\t- in the late 1940s, Toyota started studying supermarkets with the idea of applying shelf-stocking techniques to the factory floor\n\t\t- customers generally retrieve what they need at the required time\n\t- a scheduling system for lean manufacturing and just-in-time manufacturing \n\t- takes its name from the cards that track production within a factory\n\t- also known as the \"Toyota nameplate system\"\n\t- effective tool to support running a production system as a whole\n\t- establishes an upper limit to work in process inventory to avoid overcapacity\n\t- goal: limit the buildup of excess inventory at any point in production\n\t- similar: CONWIP (CONstant work in process) \n- applied to software development\n\t- in the same category of development scheduling tools such as Scrum and Extreme Programming\n\t- it's a lean mindset, not an actual methology like Scrum\n\t- **seven lean values**\n\t\t- eliminate waste\n\t\t\t- redundancy\n\t\t- amplify learning\n\t\t\t- gather feedback\n\t\t\t- analyze in teams\n\t\t\t- A/B testing\n\t\t\t\t- testing a subject's response to variant A against variant B, and determining which of the two variants is more effective\n\t\t- decide as late as possible\n\t\t\t- wait till you have more information\n\t\t- deliver as fast as possible\n\t\t\t- get users using our products\n\t\t- empower the team\n\t\t\t- an empowered team is a committed team\n\t\t- build integrity in\n\t\t\t- ensure product is useful to users\n\t\t- see the whole\n\t\t\t- understand what everything is used for\n- **four principles**\n\t- (shallow or deep implementations)\n\t- 1. start with what you do now\n\t\t- define how your team develops software now\n\t\t- everyone on same page\n\t- 2. agree to pursue incremental change\n\t\t- see it as a marathon, not a sprint\n\t\t- team sport\n\t- 3. inspect existing roles, responsibilities\n\t\t- part of defining how you currently develop\n\t- 4. encourage acts of leadership at every level\n\t\t- not top-down\n- why Kanban?\n\t- what value are you delivering?\n\t- is it what your users really want?\n\t- are results delivered on time?\n\t- is pace sustainable?",
        "extras": "$idCode=kanban;$rank=3.2;$quick=a scheduling system for lean manufacturing and just-in-time manufacturing",
        "genericTermIdCode": "scheduling system",
        "id": 216,
        "systemWhenCreated": "2020-11-30 15:39:00",
        "systemWhoCreated": "systemUnknown",
        "title": "Kanban"
    },
    {
        "body": "- Node.js framework for building efficient, reliable and scalable server-side applications\n- allows you to write clearer, reusable code with higher-level constructs like filters, pipes, interceptors\n- written entirely with Typescript\n- you can bind the controller to routes, set request method, inject request body or parse params, control auth/role guards beautifully with decorators\n- Architecture wise NEST is heavily inspired by Angular, it's a module, service, controller, pipe, decorators — everything’s syntax, usage, and philosophy exactly matches that of Angular\n\t- A frontend Angular developer can easily jump into the backend NEST project — feeling like working in the same project.\n- Nest comes with its own CLI to initiate and scaffold a project quickly.\n- default testing environment configured with Jest framework.\n- NestJS is one of the most rapidly growing Node.js framework in 2018/2019.\n- NestJS store Modules from Angular, and Repositories, Services, Entity annotations from Spring.\n- Want to create a table for your database? Nothing easier. Just create a JavaScript class and annotate/decorate it with @Entity(). Voila! Table created.\n- What NestJS can do\n\t- interacts with your database easily in an abstracted manner, you just create and annotate classes with decorators\n\t- use services in other services with the help of dependency injection\n\t- create controllers which can easily respond to HTTP requests\n\t- makes it easy to guard your API so only logged in users can access it, be it with basic authorization, JWT, etc.\n\t- easy to create microservices\n\t- build a GraphQL interface easily\n\t- integrate message queues into your app",
        "extras": "$idCode=nestjs;$rank=4.4;$quick=a Node.js framework for building efficient, reliable and scalable server-side applications",
        "genericTermIdCode": "Node.js framework",
        "id": 217,
        "systemWhenCreated": "2020-11-30 17:41:09",
        "systemWhoCreated": "systemUnknown",
        "title": "NestJS"
    },
    {
        "body": "- {created: 2016}\n- a \"meta-framework for universal applications\"\n\t- i.e. components that work both as single-page-apps as well as server-based\n\t- also can have pre-rendered on the server and served in the manner of static site generators\n\t\t- improved SEO\n\t- configuration and setup of such applications simplified and seamless to the application developer, who can simply develop UI portions of the application as if it were a more common Vue.js single file application\n- helps you build server-rendered Vue.js applications easily\t\n- it's similar to Angular Universal for Angular, and Next.js for React\n- its main scope is UI rendering while abstracting away the client/server distribution\n- another great feature of Nuxt.js is its ability to generate static websites with the generate command, providing features similar to popular static generation tools like Jekyll\n- uses Vue.js 2.0, Vue-Router, Vuex (when using the store option), Vue Server Renderer, and vue-meta\n\t- all this at **only 60KB with vuex**\n- uses webpack with vue-loader and babel-loader to bundle, code-split and minify code\n- based on Vue.js\n- `npx create-nuxt-app`\n- choose from more than 50 modules\n\t- get PWA benefits\n\t- add Google Analytics\n\t- generate a sitemap\n- optimized out of the box",
        "extras": "$idCode=nuxtjs;$rank=4.42;$quick=a web framework that extends Vue.js for server-rendering and static sites",
        "genericTermIdCode": "JavaScript Framework",
        "id": 218,
        "systemWhenCreated": "2020-12-01 15:51:18",
        "systemWhoCreated": "systemUnknown",
        "title": "Nuxt.js"
    },
    {
        "body": "- {created: 2016}\n\t- 2017: Version 2.0 - improvements for smaller websites\n\t- 2018-09: Version 7.0 - error handling, routes, upgraded to Webpack 4\n\t- 2019-02: **Version 8.0 - first version to offer serverless deployment of applications**\n\t\t- code is split up into lambda functions that are run on demand\n\t- 2020-03: Version 9.3 - global Sass and CSS module support\n- is a React framework that enables several extra features, including server-side rendering and generating static websites\n- utilizes JAMstack architecture\n\t- which distinguishes between front-end and back-end and allows for efficient front-end development that is independent of any back-end APIs\n- supports common CSS as well as precompiled Scss and Sass, CSS-in-JS, and styled JSX, and TypeScript\n- integrates with Redux for state management and uses the GraphQL query language for API calls\n- hot-reloading feature detects changes as they are made and re-renders the appropriate pages so the server avoids the need to be restarted\n- allows teams to quickly create static and dynamic JAMstack websites\n- one of several recommended toolchains available when starting a new React app\n- six principles: \n\t- out-of-the box functionality requiring no setup\n\t- JavaScript everywhere\n\t- all functions are written in JavaScript\n\t- automatic code-splitting and server-rendering\n\t- configurable data-fetching\n\t- simplifying deployment\n- copyright and trademarks for Next.js are owned by Vercel\n\t- original author, Guillermo Rauch, is currently the CEO of Vercel\n- Google has donated to the Next.js project\n- used by Netflix, Docker, GitHub, Uber, and Starbucks\n- see [bulma555](https://github.com/edwardtanguay/bulma555)\n- use Next.js for server-side rendering##cranextjsgatsby",
        "extras": "$idCode=nextjs;$rank=4.45;$quick=a React framework that enables server-side rendering",
        "genericTermIdCode": "JavaScript Framework",
        "id": 219,
        "systemWhenCreated": "2020-12-01 15:51:43",
        "systemWhoCreated": "systemUnknown",
        "title": "Next.js"
    },
    {
        "body": "- every element in Bulma is mobile-first and optimizes for vertical reading, so by default on mobile\n\t- [Bulma has 5 breakpoints](https://bulma.io/documentation/overview/responsiveness):\n\t\t- mobile: up to 768px\n\t\t- tablet: from 769px\n\t\t- desktop: from 1024px\n\t\t- widescreen: from 1216px\n\t\t- fullhd: from 1408px",
        "extras": "$idCode=bulma;$rank=3.5;$quick=a simpler CSS framework than Bootstrap",
        "genericTermIdCode": "CSS Framework",
        "id": 220,
        "systemWhenCreated": "2020-12-01 15:53:57",
        "systemWhoCreated": "systemUnknown",
        "title": "Bulma"
    },
    {
        "body": "- {created: 2015} by Progress\n- built using JavaScript, or by using any programming language that transpiles to JavaScript, such as TypeScript\n- a run-time that leverages JavaScript virtual machines on the underlying platform\n\t- JavaScript Core is to iOS as V8 is to Android\n\t- uses reflection\n- **supports the Angular and Vue JavaScript frameworks**\n- uses the same APIs as if they were developed in Xcode or Android Studio\n\t- without webviews (embedded web pages)\n- can re-purpose third-party libraries from CocoaPods, Maven, and npm.js in their mobile applications without the need for wrappers\n- uses npm packages called CocoaPods and Gradle\n\t- Gradle:  build automation tool for multi-language software development\n- uses GUI tool called NativeScript Sidekick\n- works with Angular 2+\n\t- Angular is platform agnostic, so can work in Browser or in a native smartphone environment",
        "extras": "$idCode=nativescript;$rank=4.63;$quick=framework to develop mobile apps on the Apple iOS and Android platforms",
        "genericTermIdCode": "Mobile JavaScript Framework",
        "id": 221,
        "systemWhenCreated": "2020-12-01 17:36:32",
        "systemWhoCreated": "systemUnknown",
        "title": "NativeScript"
    },
    {
        "body": "- {created:2011}\n\t- 2016: version 4\n\t\t- not compatible with version 3\n\t\t- is modular (version 3 had one file to download)\n\t- 2020-11: version 6.2.0\n- D3 stands for Data-Driven Documents\n- uses SVG, HTML and CSS\n- enables you to create spatial maps, tree diagrams, and stack charts\n- mainly for statisticians, scientists, mathematicians, and analysts\n- replaced Protovis framework\n\t- Prefuse (2005, Java), Flare (2007, Flash/ActionScript), and Protovis frameworks all tried to bring data visualization to browsers, all predecessors of D3.js\n- created in Stanford University's Stanford Visualization Group \n- uses pre-built functions to select elements, create SVG objects, style them, or add transitions, dynamic effects or tooltips to them\n\t- can be styled with CSS\n- data can be in formats: JSON, XML, CSV and geoJSON files",
        "extras": "$idCode=d3js;$rank=4.34;$quick=a JavaScript library for producing dynamic, interactive data visualizations",
        "genericTermIdCode": "JavaScript Library",
        "id": 222,
        "systemWhenCreated": "2020-12-02 17:10:21",
        "systemWhoCreated": "systemUnknown",
        "title": "D3.js"
    },
    {
        "body": "- {created:2013}\n\t- 2020-12-01 Salesforce acquires Slack for $27.7 billion\n- offers many IRC-style features, including persistent chat rooms (channels) organized by topic, private groups, and direct messaging\n- competes with Teams\n- began as an internal tool for Stewart Butterfield's company Tiny Speck during the development of Glitch, an online game\n- three versions\n\t- free\n\t\t- voice and video calls one-to-one only\n\t\t- searchable 10K of team's recent messages\n\t\t- 5GB total\n\t\t- 10 Integrationen mit Apps wie Google Drive, Office 365 und vielen weiteren\n\t- standard\n\t\t- 7€/month\n\t\t- 15 people on voice and video\n\t\t- 10GB per team member\n\t- plus\n\t\t- 12€/month\n\t\t- 20GB per team member\n- red numbers mean match of name or preferences\n- in messages as in markdown, you can use stars for bold\n- to get emoticon quick, type colon and then e.g. `:muscle`\n- CTRL-L in browser to get link from browser and copy in\n- CTRL-K to jump to channel; **all shortcuts: CTRL-/**; ALT-back\n- two guests: multi-channel guests, single-channel guests for external \n- create channel and invite people\n- channels: 21 characters\n\t- no reserved words\n- @channel to notify everyone on the channel \n-",
        "extras": "$idCode=slack;$rank=2.6;$quick=popular business communication platform",
        "genericTermIdCode": "business communication platform",
        "id": 223,
        "systemWhenCreated": "2020-12-03 13:10:00",
        "systemWhoCreated": "systemUnknown",
        "title": "Slack"
    },
    {
        "body": "- {created:2001}\n\t- 2003 documentation\n- Yellowdog Updater, Modified\n- aimed to address both the perceived deficiencies in the old APT-RPM\n- evolved primarily to update and manage **Red Hat** Linux systems, then also **Fedora**, **CentOS**\n- a basic knowledge of YUM is often included as a requirement for Linux system-administrator certification\n- based on RPM\n- is implemented as libraries in Python \n- a rewrite of YUM named DNF replaced YUM as the default package manager in Fedora 22",
        "extras": "$idCode=yum;$rank=3.8;$quick=command-line package-management utility that uses RPM",
        "genericTermIdCode": "package management tool",
        "id": 224,
        "systemWhenCreated": "2020-12-03 14:43:11",
        "systemWhoCreated": "systemUnknown",
        "title": "yum"
    },
    {
        "body": "- {created: 2007} when OpenID 2.0 was finalized and published\n\t- 2016 - over 1 billion OpenID-enabled accounts on the Internet\n- not to be confused with OpenID Connect\n- used by: AOL, Flickr, France Telecom, Google, Amazon.com, Canonical (Ubuntu), Microsoft Novell, Orange, Sears, Sun, Telecom Italia, VeriSign, WordPress, Yahoo!, BBC, IBM, and PayPal\n- an open standard and decentralized authentication protocol\n- allows users to be authenticated by co-operating sites using a third-party service, eliminating the need for webmasters to provide their own ad hoc login systems, and allowing users to log into multiple unrelated websites without having to have a separate identity and password for each",
        "extras": "$idCode=openid;$rank=3.7;$quick=open standard and decentralized authentication protocol",
        "genericTermIdCode": "open standard authentication protocol",
        "id": 225,
        "systemWhenCreated": "2020-12-09 16:21:55",
        "systemWhoCreated": "systemUnknown",
        "title": "OpenID"
    },
    {
        "body": "- also known as **OIDC**\n- not to be confused with OpenID\n- **a simple authentication layer used on top of OAuth 2.0**\n- obtains basic profile information about the end-user in an interoperable and REST-like manner\n- specifies a RESTful HTTP API, using JSON as a data format\n- allows a range of kinds of clients, including Web-based, mobile, and JavaScript clients, to request and receive information about authenticated sessions and end-users",
        "extras": "$idCode=oidc;$rank=4.2;$quick=simple authentication layer for APIs",
        "genericTermIdCode": "authorization tool",
        "id": 226,
        "systemWhenCreated": "2020-12-09 16:21:55",
        "systemWhoCreated": "systemUnknown",
        "title": "OpenID Connect"
    },
    {
        "body": "- {created:2006} by when Blaine Cook was developing the Twitter OpenID implementation\n\t- 2007 OAuth discussion group was created\n\t- **2010 OAuth 1.0** published as RFC 5849\n\t- 2010 all third party Twitter applications have been required to use OAuth\n\t- **2012 OAuth 2.0** framework was published as RFC 6749\n- grants APIs access to their information without passwords\n- provides clients a \"secure delegated access\" to server resources on behalf of a resource owner\n- designed to work with HTTP\n- uses an authorization server\n- used by Amazon, Google, Facebook, Microsoft and Twitter \n- OAuth 1.0 is still around in some places but support is dwindling\n- OAuth is unrelated to XACML, which is an authorization policy standard\n\t- OAuth can be used in conjunction with XACML, where OAuth is used for ownership consent and access delegation whereas XACML is used to define the authorization policies (e.g., managers can view documents in their region)\n\t- XACML and OAuth can be combined together to deliver a more comprehensive approach to authorization\n\t- OAuth does not provide a policy language with which to define access control policies\n\t- XACML can be used for its policy language\n\t- XACML provides more fine-grained access control than OAuth does\n\t- XACML can work transparently across multiple stacks (APIs, web SSO, ESBs, home-grown apps, databases) whereas OAuth focuses exclusively on HTTP-based apps\n- OAuth 2.0 is not backwards compatible with OAuth 1.0\n\t- provides specific authorization flows for web applications, desktop applications, mobile phones, and smart devices\n- Google supports OAuth 2.0 as the recommended authorization mechanism for all of its APIs\n- Microsoft also supports OAuth 2.0 for various APIs and its Azure Active Directory service\n- uses\n\t- OAuth can be used as an authorizing mechanism to consume secured RSS/ATOM feeds\n- \"At first glance, OAuth 2.0 seems hard, and it is.\"\n- \"OAuth 2.0 is the recommended approach for APIs. It's not always well understood, but it's well established.\"\n- **OAuth is an authorization protocol**, rather than an **authentication** protocol\n\t- using OAuth on its own as an authentication method may be referred to as pseudo-authentication",
        "extras": "$idCode=oauth;$rank=4.7;$quick=most popular authorization tool for APIs",
        "genericTermIdCode": "authorization tool",
        "id": 227,
        "systemWhenCreated": "2020-12-09 16:21:55",
        "systemWhoCreated": "systemUnknown",
        "title": "OAuth 2.0"
    },
    {
        "body": "- {created: 2009}\n\t- developed by the SQL Server Analysis Services team at Microsoft as part of Project Gemini\n\t- with the first version of the PowerPivot for Excel 2010 Add-in\n\t- Both DAX and MDX can be used to query PowerPivot and Tabular models, however only MDX may be used to query multidimensional SSAS models (cubes) in versions of SSAS up to SQL Server 2012 RTM (Release To Manufacturing)\n\t- 2016:  marks a significant improvement with the rapid adoption of Microsoft Power BI and SQL Server 2016\n- native formula and query language for Microsoft PowerPivot, Power BI Desktop and SQL Server Analysis Services (SSAS)\n- includes some of the functions that are used in Excel formulas \n\t- with additional functions that are designed to work with relational data and perform dynamic aggregation\n- an evolution of the Multidimensional Expression (MDX) language developed by Microsoft\n- designed to be simple and easy to learn, while exposing the power and flexibility of PowerPivot and SSAS tabular models.\n- define custom calculations for Calculated Columns, Measures, Calculated Tables, Calculation Groups, Custom Format Strings\n- DAX has a powerful type-handling system so that you do not have to worry much about data types\n\t- seven data types: \n\t\t- Integer\n\t\t- Real\n\t\t- Currency\n\t\t- Date (datetime)\n\t\t- TRUE/FALSE (Boolean)\n\t\t- String\n\t\t- Variant",
        "extras": "$idCode=dax;$rank=4.1;$quick=native formula and query language for Microsoft Power BI",
        "genericTermIdCode": "query language",
        "id": 228,
        "systemWhenCreated": "2020-12-16 17:29:30",
        "systemWhoCreated": "systemUnknown",
        "title": "DAX"
    },
    {
        "body": "- BI = business intelligence\n- {created: 2010}\n\t- Thierry D'Hers and Amir Netz of the SQL Server Reporting Services Team at Microsoft\n\t- 2013 unveiled by Microsoft as Power BI for Office 365\n\t\t- this first release of Power BI was based on the Microsoft Excel–based add-ins: Power Query, Power Pivot and Power View\n\t\t- then added features like Question and Answers\n\t- 2015 released to general public\n- a business analytics service by Microsoft\n- aims to provide interactive visualizations and business intelligence capabilities with an interface **simple enough for end users** to create their own reports and dashboards\n- services\n\t- Power BI Services - cloud based\n\t\t- LinkedIn Learned: [Learning Power BI Service for Consumers](https://www.linkedin.com/learning/learning-power-bi-service-for-consumers/analyze-and-visualize-your-business-data)\n\t- Power BI Desktop - free app available via the Microft app store\n\t- Power BI Embedded - 2016 on Azure\n- **Power Pivot**\n\t- created 2010\n\t- available as **Excel Add-In** \n\t- allows user to build ROLAP models in Power Pivot, and use pivot tables to explore the model once it is built\n\t\t- this allows Excel to act as a Self-Service BI platform, implementing professional expression languages to query the model and calculate advanced measures \n\t- primarily uses DAX (Data Analysis Expressions) as its expression language\n\t- intended to allow **users with no specialized BI or analytics training** to develop data models and calculations\n\t- a companion feature to Power Pivot named Power Query, in Excel 2010 and 2013, was renamed to Get & Transform in Excel 2016",
        "extras": "$idCode=powerbi;$rank=3.5;$quick=Microsoft's main business analytics service",
        "genericTermIdCode": "business intelligence software",
        "id": 229,
        "systemWhenCreated": "2020-12-17 23:54:10",
        "systemWhoCreated": "systemUnknown",
        "title": "Power BI"
    },
    {
        "body": "- {created: 2003}\n\t- 2019 Salesforce acquired Tableau for $15.7 billion\n- **Tableau Software** is an interactive data visualization software company founded in Mountain View, California\n\t- created by students at Stanford University who researched data cubes\n- queries relational databases, online analytical processing cubes, cloud databases, and spreadsheets to generate graph-type data visualizations\n- able to plot latitude and longitude coordinates \n\t- KLM files\n- 2010 Wikileaks issue about deleting data\n- there's a public (free) version of the tool, but with limited capabilities\n- screenshot:##screenshotTableau",
        "extras": "$idCode=tableau;$rank=3.5;$quick=business intelligence software created in Mountain View",
        "genericTermIdCode": "business intelligence software",
        "id": 230,
        "systemWhenCreated": "2020-12-17 23:54:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Tableau"
    },
    {
        "body": "- {created:1995} as Numeric\n\t- 2006  Travis Oliphant created NumPy by adding to Numeric\n- adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays\n- 2005, Travis Oliphant created NumPy by incorporating features of the competing Numarray into Numeric\n- In early 2005, NumPy developer Travis Oliphant wanted to unify the community around a single array package and ported Numarray's features to Numeric, releasing the result as NumPy 1.0 in 2006",
        "extras": "$idCode=numpy;$rank=4.1;$quick=popular mathematics library for Python",
        "genericTermIdCode": "mathematics library",
        "id": 231,
        "systemWhenCreated": "2020-12-18 16:00:50",
        "systemWhoCreated": "systemUnknown",
        "title": "NumPy"
    },
    {
        "body": "- {created:2008}\n- for manipulating numerical tables and time series\n- free software\n- name comes from the term \"panel data\", an econometrics term for data sets that include observations over multiple time periods for the same individuals\n\t- name is a play on the phrase \"Python data analysis\"",
        "extras": "$idCode=pandas;$rank=4.1;$quick=popular data manipulation library for Python",
        "genericTermIdCode": "data manipulation library",
        "id": 232,
        "systemWhenCreated": "2020-12-18 16:00:50",
        "systemWhoCreated": "systemUnknown",
        "title": "Pandas"
    },
    {
        "body": "- {created:2007}\n- alternative to other Ruby web frameworks such as Ruby on Rails, Merb, Nitro, and Camping\n- dependent on the Rack web server interface\n- small and flexible\n- **does not follow the typical MVC pattern** used in other frameworks, such as Ruby on Rails\n- focuses on **quickly creating web-applications in Ruby with minimal effort**\n- because of smaller size, called microframework\n- a faster and simpler alternative to Ruby on Rails\n- low memory requirements\n- add features as you need them\n- designed for simplicity and speed\n- does two things\n\t- routes browser requests to code\n\t- from there it renders templates\n\t- therefore it is the leanest possible version of Ruby on Rails\n\t\t- this was the goal of the project\n\t\t- difference between Ruby on Rails and Sinatra:##sinatrubycomp\n- [hosting options](https://www.reddit.com/r/ruby/comments/2bva4x/rubysinatra_hosting_options) for Sinatra",
        "extras": "$idCode=sinatra;$rank=3.9;$quick=popular web application framework for Ruby",
        "genericTermIdCode": "Ruby web application framework",
        "id": 233,
        "systemWhenCreated": "2020-12-18 17:45:21",
        "systemWhoCreated": "systemUnknown",
        "title": "Sinatra"
    },
    {
        "body": "- {created: 1984}\n\t- 1970s Cleve Moler, the chairman of the computer science department at the University of New Mexico, started developing MATLAB in the late 1970s\n\t- 2020 more than 4 million users worldwide\n- intended primarily for numeric computing\n- allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages\n- abbreviation of \"matrix laboratory\"\n- written in C/C++\n- pricing starts at $203.63 per year, per user",
        "extras": "$idCode=matlab;$rank=4.1;$quick=numeric computing environment developed by MathWorks",
        "genericTermIdCode": "multi-paradigm programming language",
        "id": 234,
        "systemWhenCreated": "2020-12-19 22:42:44",
        "systemWhoCreated": "systemUnknown",
        "title": "MATLAB"
    },
    {
        "body": "- {created: 2015} by Google\n\t- 2011 DistBelief - a proprietary machine learning system based on deep learning neural networks\n- free and open-source software library for machine learning\n- written in Python, C++, CUDA\n- focus on training and inference of deep neural networks\n- TensorFlow.js ist eine JavaScript-Bibliothek zum Trainieren und Bereitstellen von Modellen im Browser und auf Node.js\n\t- runs in browser and in Node.js",
        "extras": "$idCode=tensorFlow;$rank=3.5;$quick=Google Brain's second-generation system",
        "genericTermIdCode": "library for machine learning",
        "id": 235,
        "systemWhenCreated": "2020-12-21 13:56:13",
        "systemWhoCreated": "systemUnknown",
        "title": "Tensorflow"
    },
    {
        "body": "- {created: 2019}\n\t- 2019 support for HTTP/3 added to Chrome\n- Nginx support for HTTP/3 is slated for the 1.19 release\n- QUIC (pronounced \"quick\") is a general-purpose transport layer network protocol initially designed by Jim Roskind at Google",
        "extras": "$idCode=http3;$rank=3.9;$quick=web application layer protocol released in 2019",
        "genericTermIdCode": "web application protocol",
        "id": 237,
        "systemWhenCreated": "2020-12-21 13:56:45",
        "systemWhoCreated": "systemUnknown",
        "title": "HTTP/3"
    },
    {
        "body": "- {created: 2015}\n\t- 2018 powered 80% of all transactions on the web\n- a major revision of the HTTP network protocol\n- HTTP/2 is the first new version of HTTP since HTTP/1.1,\n- has half the use of websites\n- most major browsers had added HTTP/2 support by the end of 2015\n- goal\n\t- maintain high-level compatibility with HTTP/1.1",
        "extras": "$idCode=http2;$rank=3.9;$quick=web application layer protocol released in 2015",
        "genericTermIdCode": "web application protocol",
        "id": 238,
        "systemWhenCreated": "2020-12-21 13:56:45",
        "systemWhoCreated": "systemUnknown",
        "title": "HTTP/2"
    },
    {
        "body": "- {created: 1989} by Tim Berners-Lee at CERN in 1989\n\t- 1997 HTTP/1.1\n\t- 2015 HTTP/2\n\t\t- now supported by virtually all web browsers\n\t- 2019 HTTP/3\n\t\t- third version \n- the foundation of data communication for the World Wide Web\n- functions as a request–response protocol in the client–server computing model\n- the term hypertext was coined by Ted Nelson in 1965 in the Xanadu Project\n- goals\n\t- uses plain language and human readable, e.g. get, post, put, delete, connect, head\n\t- stateless protocol\n\t\t- no request is connect to another request\n\t\t- an HTTP request has no memory of previous requests\n\t\t- sessions fix this, and sessions depend on cookies\n\t- works on request/response pairs",
        "extras": "$idCode=http;$rank=3.9;$quick=a web application layer protocol for distributed, collaborative, hypermedia information systems",
        "genericTermIdCode": "web application protocol",
        "id": 239,
        "systemWhenCreated": "2020-12-21 13:57:25",
        "systemWhoCreated": "systemUnknown",
        "title": "HTTP"
    },
    {
        "body": "- data sent using a TCP protocol is guaranteed to be delivered to the receiver\n- if data is lost in transit it will recover the data and resend it\n- TCP will also check packets for errors and track packets so that data is not lost or corrupted\n- used for transfer of e-mails and websites since error loss is not tolerable",
        "extras": "$idCode=tcp;$rank=3.5;$quick=connection-oriented protocol for the web",
        "genericTermIdCode": "connection-oriented protocol",
        "id": 240,
        "systemWhenCreated": "2020-12-21 15:10:18",
        "systemWhoCreated": "systemUnknown",
        "title": "TCP"
    },
    {
        "body": "- does not provide guaranteed delivery and a datagram packet may become corrupt or lost in transit\n- used for VoIP and video streaming because packet loss is tolerable",
        "extras": "$idCode=udp;$rank=3.5;$quick=connectionless protocol for the web",
        "genericTermIdCode": "connectionless protocol",
        "id": 241,
        "systemWhenCreated": "2020-12-21 15:10:18",
        "systemWhoCreated": "systemUnknown",
        "title": "UDP"
    },
    {
        "body": "- {created: 2002} by Douglas Crockford\n- a code analysis tool for checking if JavaScript source code complies with coding rules\n- in 2011, Anton Kovalyov created a fork, called JSHint",
        "extras": "$idCode=jslint;$rank=3.3;$quick=the first JavaScript syntax checker",
        "genericTermIdCode": "Code Analysis Tool",
        "id": 242,
        "systemWhenCreated": "2020-12-21 15:26:24",
        "systemWhoCreated": "systemUnknown",
        "title": "JSLint"
    },
    {
        "body": "- a simpler static site generator and alternative to Jekyll\n- written in JavaScript\n- transforms a directory of templates into HTML\n- works with HTML, Markdown, Liquid, Nunjucks, Handlebars, Mustache, EJS, Haml, Pug, and JavaScript Template Literals",
        "extras": "$idCode=eleventy;$rank=4.6;$quick=static site generator and alternative to Jekyll",
        "genericTermIdCode": "static site generator",
        "id": 243,
        "systemWhenCreated": "2020-12-21 23:57:54",
        "systemWhoCreated": "systemUnknown",
        "title": "Eleventy"
    },
    {
        "body": "- {created: 1983}\n- full name: Master boot record",
        "extras": "$idCode=mbr;$rank=3.5;$quick=older partitioning structure for hard drives",
        "genericTermIdCode": "partitioning structure for hard drives",
        "id": 244,
        "systemWhenCreated": "2020-12-24 11:27:09",
        "systemWhoCreated": "systemUnknown",
        "title": "MBR"
    },
    {
        "body": "- {created: 2005}\n- full name: GUID Partition Table",
        "extras": "$idCode=gpt;$rank=3.5;$quick=newer partitioning structure for hard drives",
        "genericTermIdCode": "partitioning structure for hard drives",
        "id": 245,
        "systemWhenCreated": "2020-12-24 11:27:09",
        "systemWhoCreated": "systemUnknown",
        "title": "GPT"
    },
    {
        "body": "- {created: 1983} by Scott Cook and Tom Proulx in Palo Alto, California\n\t- 1984: first version of Quicken was coded in Microsoft's BASIC programming language for the IBM PC and UCSD Pascal for the Apple II by Tom Proulx \n- products include \n\t- TurboTax: tax preparation application \n\t- Mint: personal finance app \n\t- QuickBooks: the small business accounting program QuickBooks\n- TurboTax allows individuals making less than $66,000 a year to use a free version of TurboTax",
        "extras": "$idCode=intuit;$rank=3.4;$quick=financial software company that made Quicken and TurboTax",
        "genericTermIdCode": "business and financial software company",
        "id": 246,
        "systemWhenCreated": "2020-12-25 12:24:23",
        "systemWhoCreated": "systemUnknown",
        "title": "Intuit"
    },
    {
        "body": "- {created: 2006} in Sweden\n\t- 2015: \"Spotify now does videos and podcasts. Spotify is no longer just a music service\"\n- freemium service with advertisements\n- unlike physical or download sales, which pay artists a fixed price per song or album sold, Spotify pays royalties based on the number of artist streams as a proportion of total songs streamed\n- it distributes approximately 70% of its total revenue to rights holders (often record labels), who then pay artists based on individual agreements",
        "extras": "$idCode=spotify;$rank=3.7;$quick=audio streaming provider based in Stockholm;$kind=/socialMediaApp/",
        "genericTermIdCode": "Audio Streaming Provider",
        "id": 247,
        "systemWhenCreated": "2020-12-25 12:24:23",
        "systemWhoCreated": "systemUnknown",
        "title": "Spotify"
    },
    {
        "body": "- {created: 2004} based in San Fansisco\n\t- 2004 $1 million funding\n\t- 2005 site launch\n\t- 2006 $10 million funding\n\t- 2009 to 2012: Yelp expanded throughout Europe and Asia\n\t- 2010: had $30 million in revenue\n\t- has a complicated relationship with small businesses\n- publishes crowd-sourced reviews about businesses\n- founded in 2004 by former PayPal employees Russel Simmons and Jeremy Stoppelman\n- also operates an online reservation service called Yelp Reservations",
        "extras": "$idCode=yelp;$rank=3.8;$quick=San Francisco based company that publishes crowd-sourced business reviews",
        "genericTermIdCode": "Business Review Company",
        "id": 248,
        "systemWhenCreated": "2020-12-25 12:24:23",
        "systemWhoCreated": "systemUnknown",
        "title": "Yelp"
    },
    {
        "body": "- {created:2006} as an {AWS} service\n\t- 2010 Amazon switched its own retail website platform to EC2 and AWS\n- full name: **Elastic Compute Cloud**\n- allows users to rent virtual computers on which to run their own computer applications\n- a user can boot an Amazon Machine Image (AMI) to configure a virtual machine, which Amazon calls an instance\n- each virtual machine, called an **instance**, functions as a virtual private server\n- Elastic Load Balancing (ELB) is a service included with EC2",
        "extras": "$idCode=ec2;$rank=4.5232;$quick=Amazon's product for virtual machines in the cloud",
        "genericTermIdCode": "virtual computers in the cloud",
        "id": 249,
        "systemWhenCreated": "2020-12-25 12:26:10",
        "systemWhoCreated": "systemUnknown",
        "title": "EC2"
    },
    {
        "body": "- {created: 2009}\n- full name: **Virtual Private Cloud**\n- by giving the user the option of selecting which AWS resources are public facing and which are not, VPC provides much more granular control over security\n- the customer can assign IP numbers of their choosing from one or more subnets\n- initially, users are able to choose a range of IP addresses for their VPC\n- when a consistent IP address is needed, a third type of IP Address, Elastic IP addresses, can be used in place of public IP addresses",
        "extras": "$idCode=vpc;$rank=3.3;$quick=Amazon's private cloud product",
        "genericTermIdCode": "cloud computing service",
        "id": 250,
        "systemWhenCreated": "2020-12-25 12:26:10",
        "systemWhoCreated": "systemUnknown",
        "title": "VPC"
    },
    {
        "body": "- {created: 2011} in New York by Ben and Moisey Uretsky \n\t- 2013, DigitalOcean opened its first European data center located in Amsterdam\n- provides services to deploy and scale applications that run simultaneously on multiple computers\n- offers virtual private servers (VPS), or droplets using DigitalOcean terminology, using KVM as the hypervisor\n- can be managed through a web interface or using doctl command line\n- supposedly has the easiest to understand pricing model\n- \"Digital Ocean is not for everybody. You need to be at least a little savvy with Linux.\"",
        "extras": "$idCode=digitalOcean;$rank=4.5;$quick=leading VPS hosting and cloud infrastruture provider based in New York",
        "genericTermIdCode": "VPS Hosting and Cloud Provider",
        "id": 251,
        "systemWhenCreated": "2020-12-25 13:23:19",
        "systemWhoCreated": "systemUnknown",
        "title": "DigitalOcean"
    },
    {
        "body": "- {created: 2003}\n\t- 2008: transitioned from UML to Xen virtualization \n\t\t- User-Mode Linux is generally considered to have lower performance than some competing technologies, such as Xen and OpenVZ\n\t- 2019: announced the availability of its managed Kubernetes engine service\n- the name Linode is a portmanteau of the words **Linux and node**\n- shared instance for $5 per month",
        "extras": "$idCode=linode;$rank=3.1;$quick=cloud hosting company based in Philadelphia",
        "genericTermIdCode": "VPS Hosting and Cloud Provider",
        "id": 252,
        "systemWhenCreated": "2020-12-25 13:23:19",
        "systemWhoCreated": "systemUnknown",
        "title": "Linode"
    },
    {
        "body": "- {created: 2008}\n\t- 2020 EBS volumes can be up to 2 TiB in size using the {MBR} partitioning scheme, and up to 16 TiB using the {GPT} partitioning scheme\n- full name: **Elastic Block Store**\n- range of options\n\t- SSD-backed storage\n\t\t- for transactional workloads, such as databases and boot volumes \n\t- disk-backed storage \n\t\t- for throughput intensive workloads\n\t\t- MapReduce and log processing \n- provides raw block-level storage that can be attached to Amazon {EC2} instances and is used by Amazon Relational Database Service ({RDS})\n- EBS volumes are **built on replicated back end storage**, so that the failure of a single component will not cause data loss\n- using EBS would include formatting the device with a filesystem and mounting it",
        "extras": "$idCode=ebs;$rank=3.5;$quick=Amazon's mass storage service",
        "genericTermIdCode": "mass storage service",
        "id": 253,
        "systemWhenCreated": "2020-12-25 13:23:45",
        "systemWhoCreated": "systemUnknown",
        "title": "EBS"
    },
    {
        "body": "- {created: 2016}\n- virtual private server offering intended to compete against {Linode} and {DigitalOcean}\n- Lightsail packages together a compute server, storage, and transfer into fixed-price plans, like VPS (Virtual Private Server) providers do\n- screenshot of creating a Lightsail instance:##createlightsailinstance",
        "extras": "$idCode=lightsail;$rank=3.5;$quick=Amazon's virtual private server packaging",
        "genericTermIdCode": "virtual private server offering",
        "id": 254,
        "systemWhenCreated": "2020-12-25 13:23:45",
        "systemWhoCreated": "systemUnknown",
        "title": "Lightsail"
    },
    {
        "body": "- {created: 2006}\n\t- 2006 launched in the U.S.\n\t- 2007 launched in Europe\n- full name: **Simple Storage Service**\n- provides object storage through a web service interface\n- can store any type of object \n- basic storage units of Amazon S3 are objects which are organized into **buckets**\n- buckets can be managed using \n\t- console provided by Amazon S3\n\t- programmatically using the AWS SDK\n\t- Amazon S3 REST API\n- **objects can be up to 5 TB in size** with two kilobytes of metadata",
        "extras": "$idCode=s3;$rank=3.5;$quick=AWS service that provides object storage through a web service interface",
        "genericTermIdCode": "cloud-based object storage",
        "id": 255,
        "systemWhenCreated": "2020-12-25 19:21:09",
        "systemWhoCreated": "systemUnknown",
        "title": "S3"
    },
    {
        "body": "- {created: 2012}\n- designed for long-term storage of data that is infrequently accessed and for which retrieval latency times of 3 to 5 hours are acceptable\n- storage costs are substantially cheaper than {S3}\n- goal of this service is to move businesses on-premises tape backup drives to cloud-based backup storage\n- has two costs, one for storage and one for retrieval",
        "extras": "$idCode=glacier;$rank=3.0;$quick=Amazon's cloud-based backup storage",
        "genericTermIdCode": "cloud-based backup storage",
        "id": 256,
        "systemWhenCreated": "2020-12-25 19:37:41",
        "systemWhoCreated": "systemUnknown",
        "title": "Glacier"
    },
    {
        "body": "- {created: 2014}\n\t- 2014 offered {MySQL} compatible service\n\t- 2017 offered {PostgreSQL} compatible service\n\t- 2018-08 **Amazon Aurora Serverless**, an on-demand, auto-scaling configuration where the database will automatically start up, shut down, and scale capacity up or down based on your application's needs it enables \n\t\t- due to limitations, serverless is better mainly for dev environments or such systems which are needed for just a few hours\n- available as part of the Amazon Relational Database Service ({RDS})\n- allocates database storage space in 10-gigabyte increments, as needed, up to a maximum of 128 terabytes\n- tools for querying and managing MySQL databases such as the mysql command-line client and the **MySQL Workbench can be used**\n- when on the main dashboard of AWS, there is no link to Aurora\n\t- you need to first click on RDS to go to the RDS page \n\t- there at the top of the page is a kind of reminder notice that informs you that, by the way, you might want to create an Aurora database if you want##auroraAtRdsAws\n\t- this notice can then be closed by clicking the **X**\n\t- after this there is no other mention of an Aurora database\n\t- to create an Aurora database, you have to click on **Create Database**\n\t- then you have three levels of choices for Aurora##auroraChoices\n\t\t- 1. you choose Aurora (instead of a RDS database with MySQL, Postgresql, Oracle, or SQL Server, which can't be auto-scaled)\n\t\t- 2. you choose if you want **Aurora MySQL** or **Aurora Postgresql**\n\t\t- 3. you choose if you want **provisioned or serverless**, only serverless has automatic auto-scaling\n\t\t\t- if you pick **provisioned**, you pick how many servers you want and how large they should be and these servers run 24/7 \n\t\t\t- if you pick **serverless**, AWS takes over that decision step as well and auto-scales capacity to meet demand\n\t\t\t\t- good for **unpredictable workloads**\n\t\t\t\t- use case: an application that is **only used for a few minutes several times per day or week**, such as a low-volume blog site\n\t\t\t\t- port number for connections must be 3306\n- **Aurora RDS for MySQL is a fork of MySQL** with a custom storage engine which allows them to **scale the storage across datacenters**\n- if you are using MySQL or PostgreSQL, you can basically migrate to Aurora without any changes to your application code",
        "extras": "$idCode=aurora;$rank=3.5;$quick=Amazon's newer, faster, more expensive cloud relational database service",
        "genericTermIdCode": "cloud relational database service",
        "id": 257,
        "systemWhenCreated": "2020-12-25 21:04:46",
        "systemWhoCreated": "systemUnknown",
        "title": "Aurora"
    },
    {
        "body": "- {created: 2009}\n\t- 2009 {MySQL} support\n\t- 2011 {Oracle} support\n\t- 2012 {SQL Server} support \n\t- 2013 {Postgresql} support \n\t- 2014 {Aurora} launched with MySQL support\n- full name: **Relational Database Service**\n- a cloud web service designed to simplify the setup, operation, and scaling of a relational database\n- storage and compute resources can be performed by a single API call \n- AWS does not offer an SSH connection to the underlying virtual machine as part of the managed service\n- RDS is backed up, fault tolerant, and you don't need to touch it",
        "extras": "$idCode=rds;$rank=3.5;$quick=Amazon's older cloud relational database service",
        "genericTermIdCode": "cloud relational database service",
        "id": 258,
        "systemWhenCreated": "2020-12-25 21:04:46",
        "systemWhoCreated": "systemUnknown",
        "title": "RDS"
    },
    {
        "body": "- {created: 1979}\n- commonly used for running online transaction processing (OLTP) and data warehousing (DW) database workloads\n- Larry Ellison and his two friends and former co-workers, Bob Miner and Ed Oates, started a consultancy called Software Development Laboratories (SDL) in 1977, which developed the original version of the Oracle software",
        "extras": "$idCode=oracle;$rank=4.4;$quick=old database used for data warehousing",
        "genericTermIdCode": "database management system",
        "id": 259,
        "systemWhenCreated": "2020-12-25 21:14:00",
        "systemWhoCreated": "systemUnknown",
        "title": "Oracle"
    },
    {
        "body": "- {created: 2011}\n- orchestrates {EC2}, {S3}, {SNS}, {CloudWatch}, {auto-scaling}, and {ELB}\n- provides an additional layer of abstraction over the bare server and OS, users instead see a pre-built combination of OS and platform, e.g.\n\t- *64bit Amazon Linux 2014.03 v1.1.0 running Ruby 2.0 (Puma)*\n\t- *64bit Debian jessie v2.0.7 running Python 3.4 (Preconfigured - Docker)*\n- requires a number of components to be defined: \n\t- an **application** as a logical container for the project\n\t- a **version** which is a deployable build of the application executable\n\t- a **configuration template** that contains configuration information for both the Beanstalk environment and for the product\n\t- an **environment** combines a version with a configuration and deploys them",
        "extras": "$idCode=beanstalk;$rank=3.9;$quick=Amazon's application orchestration service",
        "genericTermIdCode": "application orchestration service",
        "id": 260,
        "systemWhenCreated": "2020-12-26 00:32:48",
        "systemWhoCreated": "systemUnknown",
        "title": "Elastic Beanstalk"
    },
    {
        "body": "- {created: 2008}\n- **Amazon's CDN service**\n- provides a **globally-distributed network of proxy servers** which cache content\n- has servers located in \n\t- Europe (United Kingdom, Ireland, The Netherlands, Germany, Spain)\n\t- Asia (Hong Kong, Singapore, Japan, Taiwan and India)\n\t- Australia\n\t- South America\n\t- Africa\n\t- several major cities in the United States\n- operates on a pay-as-you-go basis\n- competes with larger content delivery networks such as Akamai and Limelight Networks\n- use cases include:\n\t- website acceleration\n\t- video streaming\n\t- content download\n\t- static or dynamic content",
        "extras": "$idCode=cloudFront;$rank=4.4;$quick=Amazon's CDN solution",
        "genericTermIdCode": "content delivery network",
        "id": 261,
        "systemWhenCreated": "2020-12-26 00:32:48",
        "systemWhoCreated": "systemUnknown",
        "title": "CloudFront"
    },
    {
        "body": "- {created: 2012}\n\t- 2013: local development version of DynamoDB for developers to test DynamoDB-backed applications locally\n- fully managed proprietary **NoSQL database service** that supports key-value and document data structures\n- differs from other Amazon services by allowing developers to purchase a service based on throughput, rather than storage\n- if Auto Scaling is enabled, then the database will scale automatically\n- offers integration with {Hadoop} via Elastic {MapReduce}",
        "extras": "$idCode=dynamodb;$rank=4.1;$quick=Amazon's NoSQL cloud database service",
        "genericTermIdCode": "NoSQL cloud database service",
        "id": 262,
        "systemWhenCreated": "2020-12-26 00:32:48",
        "systemWhoCreated": "systemUnknown",
        "title": "DynamoDB"
    },
    {
        "body": "- {created: 2010}\n- a scalable and highly available **Domain Name System (DNS)** service\n- the name is a reference to **TCP or UDP port 53**, where DNS server requests are addressed\n- in addition to being able to route users to various AWS services including {EC2} instances, Route53 also enables AWS customers to **route users to non-AWS infrastructure** and to monitor the health of their application and its endpoints\n- supports full, end-to-end DNS resolution over **IPv6**\n- allows programmatic access to the service that allows customers to **modify DNS records via web service calls**\n\t- this allows a developer to programmatically bring up a machine and point to components that have been created via other service calls such as those to create new {S3} buckets or {EC2} instances",
        "extras": "$idCode=route53;$rank=3.5;$quick=Amazon's cloud DNS service",
        "genericTermIdCode": "cloud DNS service",
        "id": 263,
        "systemWhenCreated": "2020-12-26 00:59:57",
        "systemWhoCreated": "systemUnknown",
        "title": "Route 53"
    },
    {
        "body": "- {created: 2010}\n- full name: **Simple Notification Service**\n- provides a low-cost infrastructure for the mass delivery of messages, predominantly to mobile users\n- also can deliver messages by SMS to 200+ countries\n- uses the **publish/subscribe model** for push delivery of messages\n- recipients subscribe to one or more topics \n- receipt of a message may also be hidden from the user: this service is **largely aimed at the internal processing** of specific apps, rather than as a generic email substitute\n- costs (2016) are quoted as $1.00 to send one million mobile notifications",
        "extras": "$idCode=sns;$rank=3.6;$quick=Amazon's cloud notification service",
        "genericTermIdCode": "cloud notification service",
        "id": 265,
        "systemWhenCreated": "2020-12-26 02:12:42",
        "systemWhoCreated": "systemUnknown",
        "title": "SNS"
    },
    {
        "body": "- {created: 2016}\n- communications service that lets you meet, chat, and place business calls inside and outside your organization, using a single application",
        "extras": "$idCode=chime;$rank=3.1;$quick=Amazon's cloud collaboration service",
        "genericTermIdCode": "cloud collaboration service",
        "id": 266,
        "systemWhenCreated": "2020-12-26 02:17:06",
        "systemWhoCreated": "systemUnknown",
        "title": "Chime"
    },
    {
        "body": "- {created: 2017}\n\t- 2015 released under code name \"Sky\"\n- framework for frontend development: \n\t- Android/iOS (the original focus of the framework)\n\t- web\n\t- desktop\n- has a unique approach than other cross-platform frameworks\n\t- others use web technologies\n\t- Flutter\n\t\t- uses **rendering engine called Skia**\n\t\t\t- Skia is also used in Chrome\n\t\t- uses the programming language **Dart**\n\t- Dart is converted into the code for the target operating system\n\t\t- otherwise one would have to use low-level languages like C++\n\t\t- so Flutter is native development\n- Flutter uses Flutter components and thus is a declarative UI\n- why Flutter\n\t- cross-platform\n\t- fast\n\t- simple (e.g. compiled to classic iOS development)\n\t- growing fast and has Google behind it (2020-05)\n\t- has an ease with animation\n- who uses Flutter\n\t- Google's {Stadia}\n\t- **Alibaba**\n\t- **Tencent**\n- major components\n\t- {Dart} platform\n\t\t- uses hot-reload\n\t\t- runs in the Dart virtual machine\n\t- Flutter engine\n\t\t- written primarily in {C++}, provides low-level rendering support using Google's Skia graphics library\n\t- Foundation library\n\t\t- written in Dart\n\t\t- provides basic classes and functions that are used to construct applications \n\t- Design-specific widgets\n\t\t- Google's Material Design\n\t\t- Apple's iOS Human interface guidelines",
        "extras": "$idCode=flutter;$rank=4.5;$quick=Google's software development kit for mobile apps",
        "genericTermIdCode": "mobile software development kit",
        "id": 267,
        "systemWhenCreated": "2020-12-26 14:32:46",
        "systemWhoCreated": "systemUnknown",
        "title": "Flutter"
    },
    {
        "body": "- {created: 2011} by James Tamplin and Andrew Lee of Envolve\n\t- 2014: acquired by Google\n\t- today: Google's flagship offering for app development\n- a platform developed by Google for creating mobile and web applications",
        "extras": "$idCode=firebase;$rank=4.5343;$quick=a platform developed by Google for creating mobile and web applications",
        "genericTermIdCode": "mobile/web application platform",
        "id": 268,
        "systemWhenCreated": "2020-12-27 11:13:57",
        "systemWhoCreated": "systemUnknown",
        "title": "Firebase"
    },
    {
        "body": "- {created: 2018}\n- an open-source library that you can use to build sophisticated cloud-based mobile and web apps\n- a set of tools and services that can be used together or on their own, to help front-end web and mobile developers build scalable full stack applications, powered by AWS\n- supports popular web **frameworks including {React}, {Angular}, {Vue.js}, {Next.js}**, and mobile platforms including Android, iOS, {React Native}, {Ionic}, and {Flutter} \n- provides a **command-line interface** to do the heavy lifting on AWS for you\n- command-line interface helps with \n\t- integrating your app with cloud operations: functionality, data storage, file storage\n\t- quick setup and configuration\n\t- setting things up locally and then uploading it to the server\n\t- hosting and streaming\n\t- authorization and storage\n\t- monitor usage with campaign analytics\n- *\"It made utilizing cloudfront very simple.\"*\n- *\"I really like Amplify for deploying static front-end sites. The nice thing is that it runs {S3}, {Cloudfront} and {Route 53} for you in the Background and you don't have to worry about configuring these services. It also gives you the possibility to deploy a serverless backend.\"*",
        "extras": "$idCode=amplify;$rank=3.5;$quick=Amazon's service for building cloud-based mobile and web apps",
        "genericTermIdCode": "service for building cloud-based mobile and web apps",
        "id": 269,
        "systemWhenCreated": "2020-12-27 11:14:13",
        "systemWhoCreated": "systemUnknown",
        "title": "Amplify"
    },
    {
        "body": "- {created: 2014}\n\t- 2018: custom runtime support was added to AWS Lambda, giving developers the ability to run a Lambda in the language of their choice\n- event-driven, serverless computing platform\n- runs code in response to events and automatically manages the computing resources required by that code\n- AWS targets starting a Lambda instance within milliseconds of an event\n- supported technologies supported in 2018: {Node.js}, {Python}, {Java}, {Go}, {Ruby}, and {C#} through .NET Core\n- was designed for use cases such as image or object uploads to Amazon S3, updates to DynamoDB tables, responding to website clicks or reacting to sensor readings from an IoT connected device\n- spins down services when not in use\n- custom HTTP requests are configured in AWS API Gateway, which can also handle authentication and authorization in conjunction with AWS {Cognito}\n- Lambda is an example of serverless computer\n\t- 1. pay for services you use\n\t- 2. don't need to manage infrastructure\n\t- 3. scale up and down\n- how to use\n\t- 1. upload your code (many ways)\n\t- 2. set up code triggers\n\t- 3. AWS will run the code when it's triggered\n- use-case scenarios for Lambda\n\t- real-time analytics of data\n\t- backend code\n\t- Internet of Things\n\t- handle events in your infrastructure\n\t- cron job similar tasks: send a message at 2:00 every day\n- anti-use-case scenarios\n\t- when you need real-time response time\n\t\t- Lambda may not always responde immediately\n\t- very complex computing\n\t\t- Lambda is more generic\n\t- when 100% reliability is needed such as life-support systems\n\t\t- avoid third-party services for this in general\n- pricing is based on \n\t- number of requests\n\t- duration of each request\n\t- amount of memory used",
        "extras": "$idCode=lambda;$rank=4.6;$quick=Amazon's event-driven, serverless cloud platform",
        "genericTermIdCode": "event-driven, serverless cloud platform",
        "id": 270,
        "systemWhenCreated": "2020-12-27 13:33:54",
        "systemWhoCreated": "systemUnknown",
        "title": "Lambda"
    },
    {
        "body": "- {created: 2012}\n- provides authentication, authorization, and user management for your web and mobile apps\n- users can sign in directly with a user name and password, or through a third party such as **Facebook, Amazon, Google or Apple**\n- two main components of Amazon Cognito are \n\t- **user pools**\n\t\t- user directories that provide sign-up and sign-in options for your app users\n\t\t- users can sign in to your web or mobile app through Amazon Cognito, or federate through a third-party identity provider \n\t\t- all members of the user pool have a directory profile that you can access through an SDK\n\t- **identity pools**\n\t\t- enable you to grant your users access to other AWS services\n\t\t- users can obtain temporary {AWS} credentials to access AWS services, such as Amazon {S3} and {DynamoDB}\n\t\t- support anonymous guest users\n- **Cognito can produce {JWT}s for authenticated users**\n\t- you can attach code via {Lambda}s to stages of the authentication process e.g. add claims to the {JWT}, or perform the password check yourself",
        "extras": "$idCode=cognito;$rank=3.7;$quick=Amazon's authentication and authorization service",
        "genericTermIdCode": "cloud authentication and authorization service",
        "id": 271,
        "systemWhenCreated": "2020-12-27 14:33:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Cognito"
    },
    {
        "body": "- {created: 2004}\n- a **programming model** and an associated implementation for processing and **generating big data sets** with a parallel, distributed algorithm on a cluster\n- composed of a map procedure, which performs filtering and sorting \n- the model is a specialization of the split-apply-combine strategy for data analysis",
        "extras": "$idCode=mapReduce;$rank=3.555;$quick=programming model for processing big data sets with parallel computing",
        "genericTermIdCode": "programming model",
        "id": 272,
        "systemWhenCreated": "2020-12-27 19:27:17",
        "systemWhoCreated": "systemUnknown",
        "title": "MapReduce"
    },
    {
        "body": "- {created: 2014}\n- provides an interface for programming entire clusters with implicit data parallelism and fault tolerance\n- developed at the University of California, Berkeley's AMPLab, the Spark codebase was later donated to the Apache Software Foundation",
        "extras": "$idCode=spark;$rank=3.5;$quick=an open-source distributed general-purpose cluster-computing framework",
        "genericTermIdCode": "general-purpose cluster-computing framework",
        "id": 273,
        "systemWhenCreated": "2020-12-27 19:42:58",
        "systemWhoCreated": "systemUnknown",
        "title": "Apache Spark"
    },
    {
        "body": "- {created: 2016}\n- an Amazon {EC2} service based on {Hadoop} and {MapReduce}\n- full name: **Elastic MapReduce**\n- **you can install {Spark} on an EMR cluster** along with other Hadoop applications, and it can also leverage the EMR file system (EMRFS) to directly access data in Amazon {S3}\n- big data platform for processing vast amounts of data using open source tools such as Apache {Spark}, Apache Hive, Apache HBase, Apache Flink, Apache Hudi, and Presto\n- you can run workloads on {EC2} instances, on {EKS} clusters, or on-premises using EMR on AWS Outposts",
        "extras": "$idCode=emr;$rank=3.2;$quick=Amazon's service for big data processing and analysis",
        "genericTermIdCode": "Hadoop/MapReduce data processing service",
        "id": 274,
        "systemWhenCreated": "2020-12-27 19:43:08",
        "systemWhoCreated": "systemUnknown",
        "title": "EMR"
    },
    {
        "body": "- {created: 2015}\n- full name: **JSON Web Token**\n- JWT is pronounced **[jot]**\n- tokens are signed either using a private secret or a public/private key\n\t- e.g. a server could generate a token that has the claim \"logged in as admin\" and provide that to a client\n- used to add authentication to your API\n- uses the HMACSHA-265 [aych-mac-SHAH] algorithm\n- **three sections**:\n\t- 1. header\n\t\t- algorithm##jwtheader\n\t- 2. payload\n\t\t- claim information for an entity\n\t\t- most likely a user for your application\n\t\t- iat = issue at (timestamp)\n\t\t- exp = expiration (timestamp)##jwtuser\n\t- 3. signature\n\t\t- a string that consists of the header and the payload##jwtsecret\n\t- JWT is then these three sections separated by dots:##jwtdots\n- you can decode and verify JWTs at: https://jwt.io\n- a **client sends its JWT to the API on every request** in the authorization header\n- video: What Is JWT and Why Should You Use JWT: https://www.youtube.com/watch?v=7Q17ubqLfaM\n\t- classic authorization\n\t\t- id stored in session\n\t\t- id sent to client stored in cookie\n\t\t- id sent back to server\n\t\t- server looks up user again\n\t- JWT\n\t\t- is authorization not authentication\n\t\t- server creates JSON web token, signed with key\n\t\t- sends to browser\n\t\t- nothing is stored on the server\n\t\t- client always sends the web token back to server\n\t\t- server verifies that web token has not been changed\n\t\t- if JSON web token hasn't been changed\n\t\t\t- has all information about user in it so server uses it\n\t\t- the server doesn't have to remember anything\n\t\t- https://jwt.io\n\t\t\t- JSON web token\n\t\t\t\t- (separated by periods)\n\t\t\t\t- header\n\t\t\t\t\t- (base64 encoded)\n\t\t\t\t\t- alg: HS256\n\t\t\t\t- payload, e.g.\n\t\t\t\t\t- sub: id of user\n\t\t\t\t\t- name:\n\t\t\t\t\t- iat (issued at): 23434234234\n\t\t\t\t\t- ext (expired at): 23234\n\t\t\t\t- verify signature\n\t\t\t\t\t- makes sure token isn't changed\n\t\t\t\t\t- takes header and payload and combines it together\n\t\t\t\t\t- has secret key\n\t\t\t\t\t- words like password hashing\n\t\t\t\t\t- it is hashed in a way that it can't be unhashed\n\t\t\t- scenarios\n\t\t\t\t- company has two different types of servers\n\t\t\t\t\t- bank wants customers to be able to use two servers by only logging into one\n\t\t\t\t\t- the JSON web token is stored on the client\n\t\t\t\t- load balancing\n\t\t\t\t\t- multiple servers all accept the same tokens\n\t\t\t\t- microservices",
        "extras": "$idCode=jwt;$rank=3.9;$quick=Internet standard for creating data with signature and encryption that asserts claims",
        "genericTermIdCode": "Internet standard for claim-asserting tokens",
        "id": 275,
        "systemWhenCreated": "2020-12-27 20:58:59",
        "systemWhoCreated": "systemUnknown",
        "title": "JWT"
    },
    {
        "body": "- {created: 2015}\n- modeled after Apache {Kafka}\n- makes it easy to collect, process, and analyze real-time streaming data\n- features: real-time, full-managed, scalable, pay-as-you-go\n- it is a **BaaS** service, Backend-as-a-Service\n- four services\n\t- 1. **Kinesis Data Streams** (KDS)\n\t\t- build custom, real-time applications that process data streams\n\t- 2. **Kinesis Video Streams**\n\t\t- e.g. stream videos to AWS for machine learning\n\t- 3. **Kinesis Data Firehose**\n\t\t- load data streams into AWS data stores\n\t\t- can send data streams to {Redshift}\n\t- 4. **Kinesis Data Analytics**\n\t\t- analyze data streams with SQL or Java\n- use cases\n\t- log and event data collection\n\t- real-time analytics\n\t\t- gain insights from your data as it is streaming\n\t- mobile data capture\n\t\t- Kinesis collects data from thousands of devices and makes data available to you\n\t- gaming data feed\n\t\t- collect data about interactions of players in games\n- key concepts\n\t- **shard = base throughput unit of the stream**\n\t\t- an append-only log\n\t\t- contains sequence of records ordered by arrival time\n\t\t- ingests 1 MB/sec\n\t\t- you specify the number of shards needed when creating the stream, but you can change this dynamically\n\t- **data stream = logical grouping of shards**\n\t\t- data retention is 24 hours to 7 days\n\t- **partition key = meaningful identifier**\n\t\t- useful to users since it can be used to build or replay a history of a stream\n\t- **sequence number = unique identifier for each data record**\n\t\t- assigned by Kinesis when a new record is added\n\t- **data record = unit of data stored in a stream**\n\t\t- composed of a sequence number, partition key and a data blob (maximum 1 MB)\n\t- **data producer = the application that emits records to a Kinesis data stream**\n\t\t- assigns partition keys to records\n\t- **data consumer = application that receives the data from the stream**\n\t\t- retrieves the most recent data in the shard",
        "extras": "$idCode=kinesis;$rank=3.5;$quick=Amazon's real-time data processing platform",
        "genericTermIdCode": "real-time data processing platform",
        "id": 276,
        "systemWhenCreated": "2020-12-27 21:31:41",
        "systemWhoCreated": "systemUnknown",
        "title": "Kinesis"
    },
    {
        "body": "- {created: 2010} **by LinkedIn**\n\t- 2012 became top-level for the Apache Software Foundation\n\t- 2014 developers of Kafka founded the Confluent company from LinkedIn\n- open-source stream-processing software platform developed by the Apache Software Foundation\n- excels at real-time data streams: Fast Data and Big Data\n- is made up of brokers, or instances\n\t- distributed to many machines for fault tolerance\n\t- brokers save data as key-value\n\t- topics are partitioned\n\t\t- messages save in topics\n- four interfaces\n\t- Producer API\n\t- Consumer API\n\t- Connector API\n\t- Kafka Streams API\n- producer is decoupled from consumer\n\t- they don't have to know what each other does\n- scenarios\n\t- company has batch files that reads data, processes it and makes it available in another form for other systems\n\t\t- the larger the amount of data, the longer it takes to process\n\t\t- Kafka, however, allows the processing of real-time and near-time (periodically) data\n- excels at processing data in real-time\n\t- Real-Time Data Pipeline\n- uses ETL (extract, transform, load) and batch\n- Linked in processes 4 billion messages per day\n- written in Scala and Java\n- today, the company behind Kafka is Confluent\n- aims to provide a unified, high-throughput, low-latency platform for **handling real-time data feeds**\n- can connect to external systems for data import/export via Kafka Connect and provides Kafka Streams\n- uses a binary {TCP}-based protocol optimized for efficiency \n- relies on a message set abstraction that naturally groups messages together to reduce the overhead of the network roundtrips\n- **Jay Kreps** named the software after Franz Kafka because it is a system optimized for writing\n- Apache Kafka stellt eine einzigartige Streaming-Plattform dar, die sowohl Messaging- und Stream-Verarbeitungsfähigkeiten besitzt, aber auch die Möglichkeit Daten zu speichern, was zur ihrer steigenden Popularität beiträgt",
        "extras": "$idCode=kafka;$rank=4.5;$quick=open-source stream-processing software platform developed by the Apache Software Foundation",
        "genericTermIdCode": "stream-processing software",
        "id": 277,
        "systemWhenCreated": "2020-12-27 21:44:54",
        "systemWhoCreated": "systemUnknown",
        "title": "Apache Kafka"
    },
    {
        "body": "- {created: 2006}\n\t- 2006: Zimki first pay-as-you-go execution platform, but not commercially successful\n\t- 2008: Google App engine\n- *\"The first thing you need to know about serverless architecture is that is has servers. But the general idea is that for something to be serverless, it should (1) charge you only for what you use, (2) require zero server maintenance, (3) provide continuous scaling, and (4) support built-in high availability and fault tolerance.\"*\n- a cloud computing execution model in which the cloud provider allocates machine resources on demand\n- serverless computing does not hold resources in volatile memory\n\t- computing is rather done in **short bursts** with the results persisted to storage\n- when an app is not in use, there are no computing resources allocated to the app\n- **pricing is based on the amount of resources** consumed by an application\n- the term serverless is a bit of a misnomer in the sense that servers are still used by cloud service providers to execute code, but the management and details of these servers are transparent to application developers\n- simplifies the process of deploying code into production\n- Amazon {Aurora} offers a serverless version of its databases, based on MySQL and PostgreSQL, providing on-demand, {auto-scaling} configurations",
        "extras": "$idCode=serverless;$rank=4.892;$quick=a cloud computing execution model in which the cloud provider allocates machine resources on demand",
        "genericTermIdCode": "cloud computing execution model",
        "id": 278,
        "systemWhenCreated": "2020-12-28 14:08:22",
        "systemWhoCreated": "systemUnknown",
        "title": "serverless"
    },
    {
        "body": "- {created: 1995}\n\t- (SSL 1.0 was not published)\n\t- 1995: SSL 2.0 (deprecated in 2011)\n\t- 1996: SSL 3.0 (deprecated in 2015)\n- in 2014, SSL 3.0 was found to be vulnerable to the POODLE attack",
        "extras": "$idCode=ssl;$rank=3.5;$quick=deprecated cryptographic protocol that provides communications security between client and server",
        "genericTermIdCode": "cryptographic protocol",
        "id": 279,
        "systemWhenCreated": "2020-12-28 17:43:49",
        "systemWhoCreated": "systemUnknown",
        "title": "SSL"
    },
    {
        "body": "- {created: 1999}\n\t- 1999: TLS 1.0 (deprecated 2020)\n\t- 2006: TLS 1.1 (deprecated 2020)\n\t- 2008: TLS 1.2\n\t- 2018: TLS 1.3\n- widely used in applications such as web browsing, email, instant messaging, and VoIP",
        "extras": "$idCode=tls;$rank=3.9;$quick=newer cryptographic protocol that provides communications security between client and server",
        "genericTermIdCode": "cryptographic protocol",
        "id": 280,
        "systemWhenCreated": "2020-12-28 17:43:49",
        "systemWhoCreated": "systemUnknown",
        "title": "TLS"
    },
    {
        "body": "- full name: **Elastic Load Balancing** \n- distributes incoming application traffic across multiple targets, such as Amazon EC2 instances, containers, IP addresses, Lambda functions, and virtual appliances##elbsecondok2\n- offers four types of load balancers:\n\t- **Application Load Balancer**\n\t\t- balances HTTP and HTTPS traffic\n\t\t- microservices and containers\n\t- **Network Load Balancer**\n\t\t- preforms load balancing for {TCP}, {UDP}, and {TLS} traffic\n\t- **Gateway Load Balancer**\n\t- **Classic Load Balancer**",
        "extras": "$idCode=elb;$rank=3.5;$quick=AWS service to distribute incoming application traffic across multiple targets",
        "genericTermIdCode": "cloud functionality to distribute application load",
        "id": 281,
        "systemWhenCreated": "2020-12-28 17:46:01",
        "systemWhoCreated": "systemUnknown",
        "title": "ELB"
    },
    {
        "body": "- solves the problems of \n\t- 1. generating waste by allocating too much capacity\n\t- 2. difficulties that occur when not allocating enough capacity\n\t- these problems are unavoidable when using traditional, non-cloud environments\n- **capacity is constantly increased or decreases to match demand**##capcityand\n- auto-scaling produces elasticity\n- you define your scale-in and scale-out parameters\n- auto-scaling will remove EC2 instances when certain conditions are met\n- you can set a condition, e.g. that if average CPU usage rises above 75% for more than a minute, the application will automatically scale out\n- three components\n\t- 1. **launch configuration**\n\t\t- what to scale\n\t- 2. **auto-scaling group**\n\t\t- which instances to launch and how many\n\t- 3. **scaling policy** (optional)\n\t\t- when to launch \n\t\t- scale out and scale in policy",
        "extras": "$idCode=autoScaling;$rank=3.5;$quick=feature of AWS which allows servers to conserve CPU utilization, memory usage and network usage",
        "genericTermIdCode": "cloud method to conserve servers",
        "id": 282,
        "systemWhenCreated": "2020-12-28 20:43:38",
        "systemWhoCreated": "systemUnknown",
        "title": "Auto-scaling"
    },
    {
        "body": "- use IAM to control who is authenticated (signed in) and authorized (has permissions) to use resources\n- IAM = **Identity and Access Management**\n- when you first create an AWS account, you have one user, the root user \n\t- do not use the root user for your everyday tasks\n\t- only use the root user to create your first IAM user",
        "extras": "$idCode=iam;$rank=3.9;$quick=web service that helps you securely control access to AWS resources",
        "genericTermIdCode": "identify web service",
        "id": 283,
        "systemWhenCreated": "2020-12-28 21:00:01",
        "systemWhoCreated": "systemUnknown",
        "title": "IAM"
    },
    {
        "body": "- {created: 2004}\n- full name: **Simple Queue Service**\n- supports programmatic sending of messages via web service applications as a way to communicate over the Internet\n- provides a highly **scalable hosted message queue** that resolves issues arising from the common producer-consumer problem or connectivity between producer and consumer\n- similar examples of messaging service technologies include **IBM WebSphere MQ** and **Microsoft Message Queuing**\n\t- but with SQS, users do not need to maintain their own server\n- Amazon sells the SQS service at a per-use rate\n- provides SDKs in several programming languages including Java, Ruby, Python, .NET, PHP and JavaScript\n- Dropbox, Netflix and Nextdoor are examples of companies that use SQS extensively. SQS is also widely used within Amazon.com",
        "extras": "$idCode=sqs;$rank=3.8;$quick=Amazon's distributed message queuing service",
        "genericTermIdCode": "distributed message queuing service",
        "id": 284,
        "systemWhenCreated": "2020-12-28 21:10:50",
        "systemWhoCreated": "systemUnknown",
        "title": "SQS"
    },
    {
        "body": "- {created: 2011}\n- **improves the performance of web applications** by retrieving information from managed in-memory caches\n\t- instead of relying entirely on slower disk-based databases\n- supports {Memcached} and {Redis}",
        "extras": "$idCode=elastiCache;$rank=3.5;$quick=Amazon's fully managed in-memory data store",
        "genericTermIdCode": "in-memory data store",
        "id": 285,
        "systemWhenCreated": "2020-12-28 22:01:07",
        "systemWhoCreated": "systemUnknown",
        "title": "ElastiCache"
    },
    {
        "body": "- {created: 2012}\n- built on top of technology from the massive parallel processing (MPP) data warehouse company ParAccel (later acquired by Actian), to handle large scale data sets and database migrations\n- the name means to shift away from Oracle, red being an allusion to Oracle\n- based on an older version of {PostgreSQL} 8.0.2\n- can handle connections from most other applications using ODBC and JDBC connections\n- uses parallel-processing and compression to decrease command execution time\n\t- performs operations on **billions of rows at once**\n- useful for storing and analyzing **large quantities of data from logs** or live feeds through a source such as Amazon {Kinesis} Data Firehose",
        "extras": "$idCode=redshift;$rank=3.7;$quick=Amazon's data warehouse cloud product",
        "genericTermIdCode": "data warehouse",
        "id": 286,
        "systemWhenCreated": "2020-12-28 22:14:52",
        "systemWhoCreated": "systemUnknown",
        "title": "Redshift"
    },
    {
        "body": "- a set of **batch management capabilities** that enables developers, scientists, and engineers to easily and efficiently run hundreds of thousands of batch computing jobs on AWS\n- run batch computing workloads of any scale\n- no need to install or manage batch computing software\n- dynamically provisions optimal quantity and type of compute resources based on volume and specific resource requirements of batch jobs submitted\n- plans, schedules, and executes batch computing workloads across e.g. {Fargate}, {EC2} and Spot Instances",
        "extras": "$idCode=awsBatch;$rank=3.5;$quick=Amazon's service to run cron jobs in the cloud",
        "genericTermIdCode": "batch computing cloud service",
        "id": 287,
        "systemWhenCreated": "2020-12-28 23:12:12",
        "systemWhoCreated": "systemUnknown",
        "title": "AWS Batch"
    },
    {
        "body": "- {created: 2017}\n- enables developers to create, train, and deploy machine-learning models in the cloud\n- provides \n\t- pre-trained ML models that can be deployed as-is\n\t- a number of **built-in ML algorithms that developers can train** on their own data\n\t- managed instances of {TensorFlow} and Apache {MXNet}, where developers can create their own ML algorithms from scratch\n- can connect SageMaker-enabled ML models to other AWS services\n\t- Amazon {DynamoDB} database for structured data storage\n\t- {AWS Batch} for offline batch processing\n\t- Amazon {Kinesis} for real-time processing",
        "extras": "$idCode=sageMaker;$rank=4.6;$quick=Amazon's cloud machine-learning platform",
        "genericTermIdCode": "cloud machine-learning platform",
        "id": 288,
        "systemWhenCreated": "2020-12-28 23:12:32",
        "systemWhoCreated": "systemUnknown",
        "title": "SageMaker"
    },
    {
        "body": "- {created: 2017}\n- **Apache project**\n- machine learning framework used to **train and deploy deep neural networks**\n- supports a flexible programming model \n\t- {C++}, {Python}, {Java}, Julia, {Matlab}, {JavaScript}, {Go}, {R}, {Scala}, {Perl}, and Wolfram \n- can be used with AWS {SageMaker}",
        "extras": "$idCode=mxnet;$rank=3.5;$quick=Apache's learning software framework used to train and deploy deep neural networks",
        "genericTermIdCode": "machine learning framework",
        "id": 289,
        "systemWhenCreated": "2020-12-28 23:29:50",
        "systemWhoCreated": "systemUnknown",
        "title": "MXNet"
    },
    {
        "body": "- {created: 2016}\n- provides scalable, elastic, and encrypted file storage for use with both AWS cloud services and on-premises resources\n- full name: **Elastic File System**\n- able to grow and shrink automatically as files are added and removed\n- use cases include \n\t- content repositories\n\t- development environments\n\t- web server farms\n\t- home directories \n\t- big data applications",
        "extras": "$idCode=efs;$rank=3.7;$quick=Amazon's cloud file storage service",
        "genericTermIdCode": "cloud file storage service",
        "id": 290,
        "systemWhenCreated": "2020-12-28 23:40:34",
        "systemWhoCreated": "systemUnknown",
        "title": "EFS"
    },
    {
        "body": "- offers the possibility to monitor various Amazon web service products\n- metrics to be monitored differ depending on the product\n\t- for {EC2}, the CPU utilization, hard disk read and write operators and the network transfer rate are evaluated",
        "extras": "$idCode=cloudWatch;$rank=3.4;$quick=Amazon's cloud monitoring and management service",
        "genericTermIdCode": "cloud monitoring and management service",
        "id": 291,
        "systemWhenCreated": "2020-12-29 00:24:44",
        "systemWhoCreated": "systemUnknown",
        "title": "CloudWatch"
    },
    {
        "body": "- manages **complex and large directory infrastructures** so developers don't have to \n- does not limit organizing directory objects in a single fixed hierarchy\n\t- unlike traditional directory systems\n- a **graph-based directory store** that provides a foundational building block for developers",
        "extras": "$idCode=cloudDirectory;$rank=3.1;$quick=Amazon's directory service in the cloud",
        "genericTermIdCode": "scalable cloud directories",
        "id": 292,
        "systemWhenCreated": "2020-12-29 00:39:44",
        "systemWhoCreated": "systemUnknown",
        "title": "Cloud Directory"
    },
    {
        "body": "- provides **security and compliance** for applications deployed on AWS\n- automatically assesses applications for exposure, vulnerabilities, and deviations from best practices\n- produces a **detailed list of security findings** prioritized by level of severity\n- assessments are offered as pre-defined rules packages mapped to common security best practices and vulnerability definitions",
        "extras": "$idCode=inspector;$rank=3.5;$quick=Amazon's automated cloud security assessment service",
        "genericTermIdCode": "automated security assessment service",
        "id": 293,
        "systemWhenCreated": "2020-12-29 00:50:25",
        "systemWhoCreated": "systemUnknown",
        "title": "Inspector"
    },
    {
        "body": "- {created: 2019}\n\t- 2018 announced the service\n- developed using {Flutter}\n- accessible through the Google Chrome web browser on personal computers, supported smartphones, as well as Chrome OS tablets and Chromecast for TV support\n- service is integrated with YouTube, and its \"state share\" feature allows Stadia players to launch a supported game from a save state shared by another player via permalink\n- requires users to purchase games from its store in order to stream them\n- does not require additional computer hardware, only requiring the device to have an Internet connection and support for Google Chrome\n- **works atop YouTube's functionality in streaming media** to the user, as game streaming is seen as an extension of watching video game live streams\n\t- the name \"Stadia\", the Latin plural of \"stadium\", is meant to reflect that it is **a collection of entertainment, which the viewer can choose to sit back and watch**, or take an active part in\n\t- Players can opt to record or stream their sessions onto YouTube through Stadia",
        "extras": "$idCode=stadia;$rank=3.4;$quick=Google's cloud gaming service",
        "genericTermIdCode": "cloud gaming service",
        "id": 294,
        "systemWhenCreated": "2020-12-29 17:05:28",
        "systemWhoCreated": "systemUnknown",
        "title": "Stadia"
    },
    {
        "body": "- {created: 2017}\n\t- 2010: started Project Florence to address developer pain-points faced by large scale applications inside Microsoft\n\t- 2015: made available to the public as **Azure DocumentDB**\n\t- 2017: released with improvements as **Azure Cosmos DB**\n\t\t- DocumentDB customers automatically became Azure Cosmos DB customers\n- implements the wire protocol for {MongoDB}\n\t- allows transparent compatibility with native MongoDB client SDKs, drivers, and tools\n\t- host the MongoDB database engine\n- has pay-per-use model\n\t- by hour\n- APIs\n\t- Casandra API\n\t- SQL API\n\t- MongoDB API \n\t- Gremlin API\n\t- Table API",
        "extras": "$idCode=cosmosdb;$rank=3.9;$quick=Azure's NoSQL cloud database",
        "genericTermIdCode": "NoSQL cloud database",
        "id": 295,
        "systemWhenCreated": "2020-12-29 19:41:29",
        "systemWhoCreated": "systemUnknown",
        "title": "Cosmos DB"
    },
    {
        "body": "- everything is automatically configured for you, you get some dashboards, monitoring, backup, upgrades\n- MongoDB Atlas is available via Azure, AWS and Google Cloud",
        "extras": "$idCode=mongodbAtlas;$rank=3.5;$quick=server cloud hosting service for MongoDB",
        "genericTermIdCode": "MongoDb cloud server hosting",
        "id": 296,
        "systemWhenCreated": "2020-12-29 19:41:29",
        "systemWhoCreated": "systemUnknown",
        "title": "MongoDB Atlas"
    },
    {
        "body": "- evolution to functions-in-the-cloud\n\t- on-premise computing\n\t- **IaaS** = *(hosted machines)* = infrastructure as a service\n\t\t- DigitalOcean\n\t\t- Linode\n\t\t- AWS EC2\t\n\t\t- Azure Virtual Machines\n\t\t- Google Compute Engine (GCE)\n\t- **PaaS** = *(hosted apps)* = platform as a service (most common model today)\n\t\t- AWS Elastic {Beanstalk}\n\t\t- Azure App Service\n\t\t- Heroku\n\t\t- Google App Engine\n\t- **{Serverless}** = *(hosted functions and data)*\n\t\t- the entire infrastructure is abstracted away\n\t\t- AWS Lambda\n\t\t- Azure Functions\n\t\t- Amazon Aurora serverless SQL or Postgresql\n\t\t- computing is done in short bursts\n\t\t- much more easier to scale \n\t\t- offers lowest cost due to its pay-per-use nature\n- on-demand serverless code that is completely managed for us\n- scale dynamically\n- support several programming languages: C#, Java, JavaScript, Python, etc.\n- have triggers and bindings\n- you can use any editor\n\t- Visual Studio\n\t- **VSCode**\n\t- IntelliJ IDEA\n\t- Eclipse\n- subscribers can execute code as an event driven Function-as-a-Service (FaaS) without managing the underlying server resources\n- provides compute on-demand in two ways\n\t- 1. implement your system's logic into readily available blocks of code\n\t- 2. as requests increase, Azure Functions meets the demand with as many resources and function instances as necessary",
        "extras": "$idCode=azureFunctions;$rank=4.54;$quick=Azure's FaaS solution",
        "genericTermIdCode": "on-demand serverless code",
        "id": 297,
        "systemWhenCreated": "2020-12-30 23:37:03",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Functions"
    },
    {
        "body": "- {created: 2002} by Brent Oxley\n\t- 2008 one of the fastest growing companies\n\t- 2010 offices in India\n\t- 2012 sold company\n\t- 2015 launched Optimized WP, a set of tools for building and maintaining WordPress websites\n- cheapest $2.75/month\n- \"easiest place to dump sites online\"\n- Hostgator outranked {GoDaddy} on all five of our user rating criteria, including reliability, pricing, and support",
        "extras": "$idCode=hostgator;$rank=4.1;$quick=Houston-based web hosting provider",
        "genericTermIdCode": "web-hosting provider",
        "id": 298,
        "systemWhenCreated": "2020-12-31 12:02:59",
        "systemWhoCreated": "systemUnknown",
        "title": "Hostgator"
    },
    {
        "body": "- {created: 2013} by Danish entrepreneur Mathias Biilmann\n\t- 2015 publicly launched as a MakerLoop product\n\t- 2017 MakerLoop became Netlify\n- today San Francisco based\n- you can literally deploy your site in seconds\n- offers **free account** for hosting personal projects and experiments\n- pioneered JAMStack\n- *\"Within 5 years, you'll build your next large scale, fully featured web app with JAMstack and deploy on Netlify.\"* - Tom Preston-Werner, GitHub CEO, 2018",
        "extras": "$idCode=netlify;$rank=4.8998384;$quick=static hosting platform created by Danish entrepreneur",
        "genericTermIdCode": "hosting provider",
        "id": 299,
        "systemWhenCreated": "2020-12-31 18:57:58",
        "systemWhoCreated": "systemUnknown",
        "title": "Netlify"
    },
    {
        "body": "- emergent systems are headless because the presentation layer isn't fixed and therefore the user experience can take many different forms\n\t- a commerce system can be experienced on the web, on mobile, or through in-store gadgetry\n\t- an enterprise application might be delivered as a web app, a mobile app, or within a messaging platform such as Slack or Microsoft Teams\n\t- technically, **rather than headless, they are many-headed**, with unlimited choice as to how to present the user experience\n- in a headless installation the front-end is a stand-alone piece of software\n\t- communicates with a back-end via an API\n- Headless CMS\n\t- a back-end only content management system (CMS) built from the ground up as a content repository that makes content accessible via an API for display on any device\n\t- the term **headless** comes from the concept of **chopping the head off** (the front end) of the body (the back end) which is the only part that remains\n\t- a headless CMS is just the content component and focuses entirely on \n\t\t- the administrative interface for content creators\n\t\t- the facilitation of content workflows and collaboration\n\t\t- the organization of content into taxonomies\n\t- it doesn't concern itself with presentation layers, templates, site structure, or design but rather stores its content in pure format \n\t- concept born of the need to present on website, mobile, tablet, Internet of Things devices, smart watches, etc.\n\t- a list of 80+ headless CMSs: https://jamstack.org/headless-cms e.g. [Netlify CMS](https://www.netlifycms.org)",
        "extras": "$idCode=headless;$rank=4.7;$quick=",
        "genericTermIdCode": "a system where the presentation layer isn't fixed",
        "id": 300,
        "systemWhenCreated": "2020-12-31 18:58:03",
        "systemWhoCreated": "systemUnknown",
        "title": "headless"
    },
    {
        "body": "- {created: 2015}\n- JAMstack = **J**avaScript-**A**PIs-**M**arkup stack\n\t- a cloud-native web development architecture based on client-side JavaScript code, reusable APIs, and markup content\n- official site: https://jamstack.org\n- pioneered by Netlify\n- a significant shift in focus from the now abstractable back end to the now-powerful front end\n- Jamstack is a cloud-native web development architecture based on client-side JavaScript code, reusable APIs, and markup content\n- in its purest form, the idea of Jamstack is that a web application is pre-built into static pages, using content and code to generate the output \n- fast and secure sites and apps delivered by pre-rendering files and serving them directly from a CDN, removing the requirement to manage or run web servers\n- a significant shift in focus from the now abstractable back end to the now-powerful front end\n- \"do not build a website with last decade's tech, the future of the web is Jamstack\"\n- **Jamstack on Netlify is the new Wordpress**\n- Jamstack became popular as a common solution for things like blogs, documentation and simple static pages\n\t- primarily created by, maintained by, content primarily written and edited by developers themselves\n\t- it's unlikely non-developers will feel comfortable writing in Markdown, YAML or JSON\n- sites are \n\t- **faster** because the resources are static and served from a CDN\n\t- **more secure** because there is no framework, application server or database to compromise\n- there are literally 300+ Jamstack frameworks: https://jamstack.org/generators\n\t- the most popular are {Next.js}, {Hugo}, {Gatsby}, {Jekyll}, {Nuxt} \n- JAM\n\t- JavaScript - managed by Node.js\n\t- APIs - create dynamic features\n\t- Markup - generated by a series of templates, e.g. Liquid, Markdown, YAML\n- Jamstack sites can use content management systems knows as {headless CMS}\n- advantages of Jamstack\n\t- entire Project on a CDN\n\t- everything lives in Git/GitHub\n\t- you use modern build tools, e.g. Webpack",
        "extras": "$idCode=jamstack;$rank=3.5;$quick=cloud-native web development architecture ",
        "genericTermIdCode": "cloud-native web development architecture",
        "id": 301,
        "systemWhenCreated": "2020-12-31 18:58:09",
        "systemWhoCreated": "systemUnknown",
        "title": "JAMstack"
    },
    {
        "body": "- {created: 1997} by Bob Parsons\n\t- 2020: has more than 20 million customers\n- 7,000 employees worldwide\n- headquartered in Scottsdale, Arizona \n- one of the largest companies in the web hosting market\n- has a big presence in Europe and Asia",
        "extras": "$idCode=doDaddy;$rank=3.5;$quick=webhosting company and domain registrar headquarted in Arizona",
        "genericTermIdCode": "webhosting company",
        "id": 303,
        "systemWhenCreated": "2020-12-31 18:58:48",
        "systemWhoCreated": "systemUnknown",
        "title": "GoDaddy"
    },
    {
        "body": "- {created: 2014}\n- an open-source infrastructure as code software tool created by HashiCorp\n- enables users to define and provision a datacenter infrastructure using a high-level configuration language known as Hashicorp Configuration Language (HCL)\n- {Will Stern} says to **absolutely learn this with docker**\n- manages external resources (such as public cloud infrastructure, private cloud infrastructure, network appliances, software as a service, and platform as a service\n",
        "extras": "$idCode=terraform;$rank=3.5;$quick=infrastructure as code software tool created by HashiCorp.",
        "genericTermIdCode": "infrastructure as code software tool",
        "id": 304,
        "systemWhenCreated": "2020-12-31 18:59:01",
        "systemWhoCreated": "systemUnknown",
        "title": "Terraform"
    },
    {
        "body": "- a serverless compute engine for containers\n- serverless compute engine for containers that works with both {ECS} and {EKS}\n- allows to run containers without having to manage servers or clusters\n- always **provisions enough compute resources for your container applications**\n\t- before you needed to manage a cluster of {EC2} instances, pick the instance types, manage the scheduling of the containers, and optimize cluster utilization\n- you can launch tens or tens of thousands of containers in seconds\n- launches and manages your containers for you\n- removes the need to provision and manage servers\n- lets you specify and **pay for resources per application**\n- **improves security through application isolation by design**\n- Will Stern: *\"Fargate takes the entire server layer out\"*\n- the Azure analog to AWS Fargate is **Azure Container Instances (ACI)**",
        "extras": "$idCode=fargate;$rank=3.5;$quick=AWS compute engine for deploying and managing containers",
        "genericTermIdCode": "compute engine for deploying and managing containers",
        "id": 305,
        "systemWhenCreated": "2020-12-31 18:59:01",
        "systemWhoCreated": "systemUnknown",
        "title": "Fargate"
    },
    {
        "body": "- full name: **Progressive Web App**\n- Progressive Web Apps\n- since a progressive web app is a type of webpage or website known as a web application, they do not require separate bundling or distribution\n- no need for Apple App Store or Google Play\n- using the new capabilities are enabled in modern browsers\n- interesting at least, keep an eye on them",
        "extras": "$idCode=pwa;$rank=3.5;$quick=application software delivered through the web",
        "genericTermIdCode": "application software delivered through the web",
        "id": 306,
        "systemWhenCreated": "2020-12-31 18:59:13",
        "systemWhoCreated": "systemUnknown",
        "title": "PWA"
    },
    {
        "body": "- {created: 2015}\n\t- 2016: Microsoft announced support for AMP in the Bing apps for iOS and Android\n\t- 2017: AMP pages accounted for 7% of all web traffic for top publishers in the United States\n\t- 2018: WordPress websites to include AMP-ready pages\n- full name: **Accelerated Mobile Pages**\n- when people links to the AMP pages, they point to Google and not your site\n\t- \"makes Google own even more\"\n- there are plug-ins for Wordpress that make AMP pages easy to create\n- sites that are putting out a high rate of daily content should probably embrace AMP (2018)\n- AMP pages may be cached by a CDN\n- goal: to improve the performance of the mobile web\n- AMP is a web component framework that you can use to easily create user-first websites, stories, emails, and ads\n- use ten times less data than the equivalent non-AMP pages\n- limitations\n\t- no pop-ups\n- mirror pages of your existing content",
        "extras": "$idCode=googleAmp;$rank=3.1;$quick=an open source HTML framework by Google that accelerates mobile pages",
        "genericTermIdCode": "an open source HTML framework for mobile devices",
        "id": 307,
        "systemWhenCreated": "2020-12-31 18:59:13",
        "systemWhoCreated": "systemUnknown",
        "title": "Google AMP"
    },
    {
        "body": "- {created: 2006}\n\t- 2006: Amazon created subsidary Amazon Web Services and offered **Elastic Compute Cloud**\n\t- 2008: Google released the beta version of **Google App Engine**\n\t- 2008: NASA's Nebula\n\t- 2009: the government of France announced Project Andromède, failed\n\t- 2010: Microsoft released Microsoft **Azure**\n\t- 2010: Rackspace Hosting and NASA jointly launched an open-source cloud-software initiative known as **OpenStack**\n\t- 2011: IBM announced the IBM SmartCloud framework to support Smarter Planet\n\t- 2012: Oracle announced the Oracle Cloud\n- enterprise clouds = clouds for a single organization\n- current percentage of market\n\t- 1. **AWS 33%**\n\t\t- the dominant player, offers the most services\n\t\t- was first to market\n\t- 2. **Azure 16%**\n\t\t- use if you are Microsoft dependent\n\t\t- uses their Office dominance as leverage\n\t- 3. **GCP** 8%\n\t\t- simpler than AWS\n\t- everyone else 43%",
        "extras": "$idCode=cloudComputing;$rank=3.9;$quick=a term that means on-demand availability of computer system resources",
        "genericTermIdCode": "technology that provides on-demand availability of computer resources",
        "id": 308,
        "systemWhenCreated": "2020-12-31 19:01:58",
        "systemWhoCreated": "systemUnknown",
        "title": "cloud computing"
    },
    {
        "body": "- **Azure Synapse** was formerly known as **Azure SQL Data Warehouse**\n- built on the foundation of SQL Server\n- stores petabyte amounts of incoming data \n- bills storage and computing separately\n- you can use your T-SQL knowledge\n- unlike other data warehouse solutions, it does not use virtual machines on the surface\n\t- it abstracts virtual machines away\n\t- computer power is expressed in terms of Data Warehouse units\n\t\t- DWUs provide a measure of CPU, memory and IOPS (Input/Output Operations Per Second, pronounced [i-ops])\n- can import and export to Hadoop, Azure Blob storage, Azure Data Lake\n- uses {SSIS}\n- four parts\n\t- control node\n\t\t- all data passes through here\n\t\t- optimizes queries\n\t\t- powered by SQL database, look and feel is the same\n\t\t\t- it translates queries so they run on each compute node separately\n\t- compute nodes\n\t\t- SQL databases\n\t\t- work independently \n\t- storage\n\t\t- blob storage, where the data for Synapse is ultimately stored\n\t\t- fault tolerant\n\t\t- Windows Azure Storage Blob (WASB)\n\t- data movement service\n\t\t- moves the data between the nodes",
        "extras": "$idCode=synapse;$rank=3.5;$quick=Azure's cloud data warehouse",
        "genericTermIdCode": "cloud data warehouse",
        "id": 309,
        "systemWhenCreated": "2021-01-01 23:50:57",
        "systemWhoCreated": "systemUnknown",
        "title": "Synapse"
    },
    {
        "body": "- {created: 2005} \n\t- 2005: released with Microsoft SQL Server 2005\n\t\t- replaced Data Transformation Services\n- SSIS is only available in the \"Standard\", \"Business Intelligence\" and \"Enterprise\" editions\n- **Wizard can quickly move data** from a variety of source types to a variety of destination types, including text files and other SQL Server instances",
        "extras": "$idCode=ssis;$rank=3.5;$quick=data migration tool for SQL Server",
        "genericTermIdCode": "tool to migrate databases",
        "id": 310,
        "systemWhenCreated": "2021-01-01 23:51:05",
        "systemWhoCreated": "systemUnknown",
        "title": "SSIS"
    },
    {
        "body": "- a way of analyzing data in motion\n- observes data from event hubs, IoT hubs and blob storage\n- supports **SQL-like query language**\n- scales using something called a **streaming unit**\n- typical uses\n\t- persist data into cold storage\n\t- look for something that is not normal, an alert condition, e.g. temperature that is too high\n\t\t- if observed, then stream this into a separate output\n\t- as an input for {Power BI}\n- Stream Analytics jobs are either hosted in Azure or in an IoT Edge device\n- can be **provisioned via an ARM template**\n\t- ARM Templates are a way to declare the objects you want, the types, names and properties in a JSON file which can be checked into source control and managed like any other code file\n\t- ARM Templates are what really gives us the ability to roll out Azure Infrastructure as code\n- streaming units\n\t- more complex SQL queries will consume  more streaming units",
        "extras": "$idCode=streamAnalytics;$rank=3.5;$quick=Azure's real-time analytics and complex event-processing engine",
        "genericTermIdCode": "real-time analytics and complex event-processing engine",
        "id": 311,
        "systemWhenCreated": "2021-01-02 13:00:15",
        "systemWhoCreated": "systemUnknown",
        "title": "Stream Analytics"
    },
    {
        "body": "- {created: 2003} by {Michael Baum}\n- software for searching, monitoring, and analyzing machine-generated big data via a Web-style interface\n- based in San Francisco",
        "extras": "$idCode=splunk;$rank=3.8;$quick=software for searching, monitoring, and analyzing machine-generated big data via a Web-style interface",
        "genericTermIdCode": "big-data analysis tool",
        "id": 312,
        "systemWhenCreated": "2021-01-02 14:10:08",
        "systemWhoCreated": "systemUnknown",
        "title": "Splunk"
    },
    {
        "body": "- fundamental building block for your private network in Azure\n- abbreviated **VNet**\n- virtual network is used to group resources\n- Azure dashboard:\n\t- Create Resource\n\t- Networking\n\t- Virtual Network\n\t- can manage sub-nets\n\t- after you create your virtual network, you can't go back and modify your address space\n\t\t- make it as large and accurate as possible\n\t- create resource group\n\t- address range\n\t\t- must be within address network: /24 = 256 addreses\n\t- takes a few minutes to deploy\n- enables many types of Azure resources, such as Azure Virtual Machines (VM), to securely communicate with each other, the internet, and on-premises networks\n- resources in a VNet can communicate outbound to the internet, by default\n- you can deploy VMs, and several other types of Azure resources to a virtual network, such as Azure App Service Environments, the Azure Kubernetes Service (AKS), and Azure Virtual Machine Scale Sets",
        "extras": "$idCode=azureVirtualNetwork;$rank=3.8;$quick=fundamental building block for your private network in Azure",
        "genericTermIdCode": "private network service",
        "id": 313,
        "systemWhenCreated": "2021-01-02 14:50:52",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Virtual Network"
    },
    {
        "body": "- built-in feature of Cloud Services, Mobile Services, Virtual Machines, and Websites that helps applications perform their best when demand changes\n- you could have a web app that **handles millions of requests during the day and none at night**, Autoscale scales your service for these metrics\n- different resources can be scaled automatically \n- **not available on the free plan**",
        "extras": "$idCode=azureAutoscaling;$rank=3.5;$quick=Azure's cloud-service optimizer",
        "genericTermIdCode": "cloud-service optimizer",
        "id": 314,
        "systemWhenCreated": "2021-01-02 19:29:06",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Autoscaling"
    },
    {
        "body": "- allows you to collect, analyze, and act on telemetry data from your Azure and on-premises environments\n- helps you maximize performance and availability of your applications and proactively identify problems \n- Azure always had inbuilt monitoring support for resources with metrics, alerts and logs, and it was accessible from the context of each resource in the portal\n\t- with the release of Azure Monitor, it is all now centralized with easy discovery and access in the Azure portal and also via a consistent set of APIs, PowerShell, and CLI\n- acts on telemetry\n- collect two kinds of data\n\t- metrics\n\t\t- information on running systems, e.g. CPU of virtual machine\n\t\t- point-in-time, lightweight numbers\n\t- logs\n\t\t- historical records\n- data targets\n\t- application monitoring\n\t- guest OS monitoring\n\t\t- install agent which have performance counters\n\t- Azure resources\n\t- Azure subscription monitoring data\n\t\t- your costs, etc.\n\t- Azure tenant monitoring\n\t\t- Azure tenant is a dedicated and trusted instance of Azure Active Directory that's automatically created when your organization signs up for a Microsoft cloud service subscription, such as Microsoft Azure, Microsoft {Intune}, or Microsoft 365\n\t\t- Azure tenant represents a single organization.\n- uses of data\n\t- insights\n\t\t- diagnose problems proactively\n\t\t- monitor containers\n\t\t- packaged sets of logic\n\t- visualize\n\t\t- data with dashboards\n\t\t- charts\n\t- analyze\n\t\t- data explorer query language\n\t\t\t- easy to learn if you are familiar with {SQL} or {Splunk}\n\t- respond\n\t\t- alerts\n\t\t- automated actions taken on your behalf\n\t\t\t- autoscale\n\t\t\t- runbook\n\t\t\t\t- the Hybrid Runbook Worker feature present in Azure Automation allows you to run Runbooks directly on the computer hosting the role, these Runbooks interact with local resources in the environment and against other tools which manage those local resources\n\t- integrate\n\t\t- event hubs\n\t\t- REST API\n\t\t\t- read and write metric and logs",
        "extras": "$idCode=azureMonitor;$rank=3.9734;$quick=Azure's cloud monitoring service",
        "genericTermIdCode": "cloud monitoring service",
        "id": 315,
        "systemWhenCreated": "2021-01-02 19:29:44",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Monitor"
    },
    {
        "body": "- an MDM and MAM provider for your devices\n\t- MDM = mobile device management \n\t- MAM = mobile application management\n- you control how your organization’s devices are used, including mobile phones, tablets, and laptops\n\t- you can prevent emails from being sent to people outside your organization\n\t- allows people in your organization to use their personal devices for school or work\n\t- makes sure your organization data stays protected, and can isolate organization data from personal data\n- Intune is part of Microsoft's Enterprise Mobility + Security (EMS) suite\n\t- integrates with {Azure Active Directory} (Azure AD) to control who has access, and what they can access",
        "extras": "$idCode=intune;$rank=3.3;$quick=Azure's service that manages mobile devices",
        "genericTermIdCode": "cloud-based service that manages mobile devices",
        "id": 316,
        "systemWhenCreated": "2021-01-02 19:30:23",
        "systemWhoCreated": "systemUnknown",
        "title": "Intune"
    },
    {
        "body": "- manages users, groups, computers and directory-aware applications\n- active directory is a collection of multiple services, among others:\n\t- AD Federation Services\n\t- AD Certificate Services\n- Azure Directory Admin Center: https://aad.portal.azure.com\n\t- users and groups\n- Azure Active Directory Join\n\t- company-owned computers and devices\n- Application Proxy\n\t- authenticate users in the cloud and redirect them to remote applications\n- Azure AD B2B\n- Azure AD B2C\n- AD Connect Tool\n\t- integrate your on-premises Windows Server Active Directory",
        "extras": "$idCode=azureActiveDirectory;$rank=4.4545;$quick=Azure's identity and access management solution",
        "genericTermIdCode": "cloud-based identity and access management (IAM) solution",
        "id": 317,
        "systemWhenCreated": "2021-01-02 22:10:08",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Active Directory"
    },
    {
        "body": "- see and stop threats before they cause harm\n- SIEM = **security information and event management**\n- proactively hunt for suspicious activities\n- your birds-eye view across the enterprise\n- actions\n\t- collect\n\t- detect\n\t- investigate\n\t- respond",
        "extras": "$idCode=sentinel;$rank=3.5;$quick=Azure's security information and event management",
        "genericTermIdCode": "security information and event management",
        "id": 318,
        "systemWhenCreated": "2021-01-02 22:35:45",
        "systemWhoCreated": "systemUnknown",
        "title": "Sentinel"
    },
    {
        "body": "- visualize the security state of your resources \n- view your compliance against regulatory requirements\n- use Azure Defender to protect your hybrid cloud workloads\n- use AI and automation to cut through false alarms, quickly identify threats, and streamline threat investigation",
        "extras": "$idCode=azureSecurityCenter;$rank=3.5;$quick=Azure's security posture management",
        "genericTermIdCode": "security posture management",
        "id": 319,
        "systemWhenCreated": "2021-01-02 22:49:03",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Security Center"
    },
    {
        "body": "- abbreviated: **APIM**\n- has three components\n\t- **1. Gateway**\n\t\t- the front end of your API\n\t\t- accepts requests\n\t\t- verifies identity\n\t\t- enforce limits\n\t\t- transform responses\n\t\t- caches and logs incoming requests\n\t- **2. Azure Portal**\n\t\t- mock response data\n\t\t- package APIs into products\n\t\t- create access policies\n\t- **3. Developer Portal**\n\t\t- the website for your consumers\n\t\t- generated from your API definition\n\t\t- allows your customers to subscribe to APIs\n\t\t- customizable for look and feel\n- has four pricing tiers\n\t- 1. Developer\n\t\t- ca. $.07/hour ($50 per month)\n\t\t- non-production use only\n\t\t- no scale-out\n\t\t- no SLA (Server-Level Agreement)\n\t\t\t- no guaranteed up-time\n\t\t- **capped at 500 requests per second**\n\t\t- has Active Directory integration\n\t- 2. Basic\n\t\t- 99% up-time\n\t\t- two scale-outs\n\t- 3. Standard\n\t\t- 99% up-time\n\t\t- two scale-outs\n\t- 4. Premium\n\t\t- ca. $4.00/hour ($3000 per month)\n\t\t- enterprise only\n\t- when deciding, it's important to calculate accuracly how many requests per second your API is going to need\n- enables you to manage numerous APIs written in different computer languages, etc. while considering\n\t- security\n\t- rate limiting\n\t- versioning\n\t- monitoring\n\t- documentation\n\t- long-term support\n- can handle {JWT} authentication",
        "extras": "$idCode=azureApiManagement;$rank=3.5;$quick=Azure's API management service",
        "genericTermIdCode": "API management service",
        "id": 320,
        "systemWhenCreated": "2021-01-04 12:56:41",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure API Management"
    },
    {
        "body": "- {created: 2014}\n- service that allows you to automate your Azure management tasks and to orchestrate actions across external systems \n\t- automate frequent, time-consuming, and error-prone cloud management tasks\n- author runbooks graphically, in PowerShell, or using Python\n- by using a Hybrid Runbook Worker, you can unify management by orchestrating across on-premises environments\n- Webhooks let you fulfill requests and ensure continuous delivery and operations by triggering automation from ITSM (IT Service Management), DevOps, and monitoring systems\n- built on PowerShell Workflow\n- Azure administration is part of the Azure architect's role \n\t- but there is overlap with the administrator role\n- Azure Resource Manager (ARM)\n\t- the deployment and management service for Azure\n\t- provides a management layer that enables you to create, update, and delete resources in your Azure account\n\t- has management features, like access control, locks, and tags, to secure and organize your resources after deployment\n\t- before ARM, Azure ran on ASM (Azure Service Management)\n\t- **ARM is now the underlying technology to deploy resources in Azure**\n\t- when you create a resource, an ARM template is created to deploy it\n\t- ARM simplifies the organization of resources into resource groups\n\t\t- every resource requires a group\n\t- you store ARM templates in the template library\n\t- when you create a virtual machine on Azure, you can download the ARM template and the parameters file to look at it\n\t\t- format is JSON\n\t\t- has information about the network interface card, ip address, etc.\n- automation works for both Window and Linux machines\n\t- you place scripts such as PowerShell or Python\n- **Desired State Configuration (DSC)**\n\t- ensures an environment doesn't change unless you change the template\n\t- prevents unauthorized and temporary system changes\n\t\t- by constantly comparing the running system to the template",
        "extras": "$idCode=azureAutomation;$rank=3.3;$quick=Azure's cloud automation service",
        "genericTermIdCode": "cloud automation service",
        "id": 321,
        "systemWhenCreated": "2021-01-04 16:11:50",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Automation"
    },
    {
        "body": "- a single service for managing routing of all events from any source to any destination\n- allows for **uniform event consumption using a publish-subscribe model**\n- a site can publish an event in Azure\n- event source = where did the event take place\n- almost anything can be an event source, e.g. \n\t- service bus\n\t- blob storage\n\t- media service\n- event handlers can be\n\t- Azure Automation\n\t- Webhooks\n\t- Logic Apps\n- **specific examples of an event source**\n\t- react to a blob storage event to \n\t\t- resize an image on a website\n\t\t- convert a document format\n\t- machine gets created\n\t\t- policies are applied\n\t- a new SQL database is created\n\t\t- a new Docker image is created for it\n- you pay for the event you receive",
        "extras": "$idCode=eventGrid;$rank=3.5;$quick=Azure's cloud event routing manager",
        "genericTermIdCode": "cloud event routing manager",
        "id": 322,
        "systemWhenCreated": "2021-01-04 17:23:00",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Event Grid"
    },
    {
        "body": "- {created: 2018}\n- full name: **Azure Kubernetes Service**\n- with AKS, you don't have to operate the management infrastructure of Kubernetes\n- offers serverless Kubernetes, an integrated continuous integration and continuous delivery (CI/CD) experience, and enterprise-grade security and governance\n- the Application Gateway Ingress Controller (AGIC) \n\t- a Kubernetes application which makes it possible for AKS customers to leverage Azure's native Application Gateway L7 load-balancer to expose cloud software to the Internet\n\t- AGIC monitors the Kubernetes cluster it is hosted on and continuously updates an Application Gateway, so that selected services are exposed to the Internet\n- Azure takes care of the master node resources\n\t- you concentrate of the specifc number of worker resources you need\n- RBAC\n\t- role-based access control\n\t- is a method of restricting network access based on the roles of individual users within an enterprise\n- helm\n\t- best way to find, share, and use software built for Kubernetes\n\t- helps you manage Kubernetes applications — Helm Charts help you define, install, and upgrade even the most complex Kubernetes application",
        "extras": "$idCode=aks;$rank=3.89;$quick=Azure's container platform",
        "genericTermIdCode": "cloud Kubernetes service",
        "id": 323,
        "systemWhenCreated": "2021-01-04 22:56:43",
        "systemWhoCreated": "systemUnknown",
        "title": "AKS"
    },
    {
        "body": "- {created: 2018}\n- full name: **Elastic Kubernetes Service **\n- managed service that you can use to run Kubernetes on AWS without needing to install, operate, and maintain your own Kubernetes control plane or nodes\n- runs Kubernetes control plane instances across multiple Availability Zones \n- uses\n\t- {IAM} for authentication\n\t- Amazon {VPC} for isolation",
        "extras": "$idCode=eks;$rank=3.8945;$quick=AWS's container platform",
        "genericTermIdCode": "cloud Kubernetes service",
        "id": 324,
        "systemWhenCreated": "2021-01-04 22:56:43",
        "systemWhoCreated": "systemUnknown",
        "title": "EKS"
    },
    {
        "body": "- {created: 2015}\n- full name: **Google Kubernetes Engine**\n- secured and managed Kubernetes service with four-way auto scaling and multi-cluster support\n- *\"there are not just container images, but open source, Google-built, and commercial applications that increase developer productivity, available now on Google Cloud Marketplace\"*\n- GKE Sandbox provides a second layer of defense between containerized workloads on GKE for enhanced workload security",
        "extras": "$idCode=gke;$rank=3.5;$quick=Google Cloud's container platform",
        "genericTermIdCode": "cloud Kubernetes service",
        "id": 325,
        "systemWhenCreated": "2021-01-04 22:56:43",
        "systemWhoCreated": "systemUnknown",
        "title": "GKE"
    },
    {
        "body": "- Apigee Corp. was an API management and predictive analytics software provider before its merger into Google Cloud in **2016**\n\t- founded in 2004 as Sonoa Systems before being rebranded as Apigee in 2010",
        "extras": "$idCode=apigee;$rank=3.5;$quick=Google Cloud's API management service",
        "genericTermIdCode": "API management service",
        "id": 326,
        "systemWhenCreated": "2021-01-04 23:23:15",
        "systemWhoCreated": "systemUnknown",
        "title": "Apigee"
    },
    {
        "body": "- enables developers to create, publish, maintain, monitor, and secure APIs at any scale\n- has CORS support\n\t- Cross-Origin Resource Sharing",
        "extras": "$idCode=apiGateway;$rank=3.5;$quick=AWS's API management service",
        "genericTermIdCode": "API management service",
        "id": 327,
        "systemWhenCreated": "2021-01-04 23:23:15",
        "systemWhoCreated": "systemUnknown",
        "title": "API Gateway"
    },
    {
        "body": "- a configuration management service that **provides managed instances of {Chef} and {Puppet}**\n\t- Chef and Puppet are automation platforms that allow you to use code to automate the configurations of your servers\n- lets you use Chef and Puppet to automate how servers are configured, deployed, and managed across your Amazon EC2 instances or on-premises compute environments\n- three offerings: \n\t- AWS Opsworks for Chef Automate\n\t- AWS OpsWorks for Puppet Enterprise\n\t- AWS OpsWorks Stacks",
        "extras": "$idCode=opsWorks;$rank=3.5;$quick=Amazon's cloud automation service",
        "genericTermIdCode": "cloud automation service",
        "id": 329,
        "systemWhenCreated": "2021-01-04 23:57:38",
        "systemWhoCreated": "systemUnknown",
        "title": "OpsWorks"
    },
    {
        "body": "- **a serverless event bus** that makes it easy to connect applications together using data from your own applications, integrated Software-as-a-Service (SaaS) applications, and AWS services\n- delivers a stream of real-time data from event sources, such as Zendesk, Datadog, or Pagerduty, and routes that data to targets like AWS Lambda\n- *\"EventBridge is the biggest thing since AWS Lambda itself\"* (2019)\n\t- it re-establishes how the greater ecosystem of software integrates with your business logic",
        "extras": "$idCode=eventBridge;$rank=3.5;$quick=Amazon's cloud event routing manager",
        "genericTermIdCode": "cloud event routing manager",
        "id": 330,
        "systemWhenCreated": "2021-01-05 00:14:20",
        "systemWhoCreated": "systemUnknown",
        "title": "EventBridge"
    },
    {
        "body": "- makes it easy to connect Cloud Run services with events from a variety of sources\n- allows you to build event-driven architectures in which microservices are loosely coupled and distributed\n- takes care of event ingestion, delivery, security, authorization, and error-handling for you which improves developer agility and application resilience",
        "extras": "$idCode=eventarc;$rank=3.5;$quick=Google's cloud event routing manager",
        "genericTermIdCode": "cloud event routing manager",
        "id": 331,
        "systemWhenCreated": "2021-01-05 00:14:20",
        "systemWhoCreated": "systemUnknown",
        "title": "Eventarc"
    },
    {
        "body": "- gives you an easy way to **model a collection of related AWS and third-party resources**, provision them quickly and consistently, and manage them throughout their lifecycles, by **treating infrastructure as code**\n- CloudFormation template describes your desired resources and their dependencies so you can launch and configure them together as a stack\n- you can **use a template to create, update, and delete an entire stack as a single unit**, as often as you need to, instead of managing resources individually",
        "extras": "$idCode=cloudFormation;$rank=3.3;$quick=AWS's cloud resource manager",
        "genericTermIdCode": "cloud resource manager",
        "id": 332,
        "systemWhenCreated": "2021-01-05 17:18:06",
        "systemWhoCreated": "systemUnknown",
        "title": "CloudFormation"
    },
    {
        "body": "- a service that enables governance, compliance, operational auditing, and risk auditing of your AWS account\n- log, continuously monitor, and retain account activity related to actions across your AWS infrastructure\n- provides **event history of your AWS account activity**, including actions taken through the AWS Management Console, AWS SDKs, command line tools, and other AWS services\n- **detect unusual activity in your AWS accounts**",
        "extras": "$idCode=cloudTrail;$rank=3.2;$quick=AWS's account-monitoring service",
        "genericTermIdCode": "account-monitoring service",
        "id": 333,
        "systemWhenCreated": "2021-01-05 22:00:05",
        "systemWhoCreated": "systemUnknown",
        "title": "CloudTrail"
    },
    {
        "body": "- full name: **Key Management Service**\n- **manage cryptographic keys and control their use** across a wide range of AWS services and in your applications\n- uses hardware security modules that have been validated under FIPS 140-2 to protect your keys",
        "extras": "$idCode=kms;$rank=3.5;$quick=AWS's cryptographic key management",
        "genericTermIdCode": "cryptographic key management",
        "id": 334,
        "systemWhenCreated": "2021-01-05 22:03:04",
        "systemWhoCreated": "systemUnknown",
        "title": "KMS"
    },
    {
        "body": "- full name: **Elastic Container Service**\n- fully managed container orchestration service\n- is used extensively within Amazon to power services such as {SageMaker}, {AWS Batch} and {Lex}",
        "extras": "$idCode=ecs;$rank=3.7;$quick=AWS's own cloud container orchestration",
        "genericTermIdCode": "cloud container orchestration",
        "id": 335,
        "systemWhenCreated": "2021-01-05 23:11:28",
        "systemWhoCreated": "systemUnknown",
        "title": "ECS"
    },
    {
        "body": "- service for building conversational interfaces into any application using voice and text\n- advanced deep learning functionalities \n\t- **automatic speech recognition** (ASR) for converting speech to text\n\t- **natural language understanding** (NLU) to recognize the intent of the text\n- quickly and easily build sophisticated, natural language, conversational bots",
        "extras": "$idCode=lex;$rank=4.334;$quick=AWS's chatbox service",
        "genericTermIdCode": "chatbox service",
        "id": 337,
        "systemWhenCreated": "2021-01-05 23:25:20",
        "systemWhoCreated": "systemUnknown",
        "title": "Lex"
    },
    {
        "body": "- securely stores and accesses secrets\n\t- secret is anything that you want to tightly control access to, such as **API keys, passwords, certificates, cryptographic keys**\n- two types of containers: \n\t- **vaults** \n\t\t- store HSM-backed keys, secrets, and certificates\n\t- **managed HSM pools** (hardware security module)\n\t\t- only HSM-backed keys",
        "extras": "$idCode=keyVault;$rank=3.5;$quick=Azure's cryptographic key management",
        "genericTermIdCode": "cryptographic key management",
        "id": 338,
        "systemWhenCreated": "2021-01-05 23:42:16",
        "systemWhoCreated": "systemUnknown",
        "title": "Key Vault"
    },
    {
        "body": "- choose the operating system, e.g.\t\n\t- Windows \n\t\t- Server 2016 DataCenter\n\t- RedHat\n\t- Ubuntu\n- disk drives\n\t- Premium SSD\n\t- Standard SSD\n\t- Standard HDD\n\t- managed disk and unmanaged disk\n\t\t- **managed disks** \n\t\t\t- are managed by Microsoft Azure and you don't need any storage account while created new disk\n\t\t\t- since the storage account is managed by Azure you do not have full control of the disks that are being created\n\t\t\t- generally use managed disks\n\t\t- **un-managed disks**\n\t\t\t- requires you to create a storage account before you create any new disk\n\t\t\t- since the storage account is created and owned by you, you have full control over all the data that is present on your storage account\n\t\t\t- you also need to take care of encryption, data recovery plans etc\n- networking\n\t- if no security group, then all ports exposed to Internet\n- backup\n- tags\n\t- use to group machines",
        "extras": "$idCode=azureVirtualMachine;$rank=4.7;$quick=Azure's virtual cloud computer service",
        "genericTermIdCode": "virtual cloud computer",
        "id": 339,
        "systemWhenCreated": "2021-01-06 15:26:14",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Virtual Machine"
    },
    {
        "body": "- create\n\t- resource group\n\t- have to log into a server as well, right side\n\t- you're notified of deployment\n- you connect as with any SQL Server database with SQL Server Management Studio",
        "extras": "$idCode=azureSqlDatabase;$rank=3.5;$quick=Azure's SQL service",
        "genericTermIdCode": "cloud relational database",
        "id": 340,
        "systemWhenCreated": "2021-01-06 16:10:18",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure SQL Database"
    },
    {
        "body": "- blob storage\n\t- unstructured data\n\t\t- log files\n\t\t- backups\n\t\t- archives\n\t\t- data for analysis\n\t- access objects via HTTPS\n\t- block type\n\t\t- block: binary or text\n\t\t- page: virtual hard disk (VHD)\n\t- containers and blobs\n\t\t- like folders and files\n\t- immutable blob storage\n\t\t- WORM\n\t\t\t- Write Once Read Many\n\t\t- data cannot be deleted or modified\n\t\t- uses\n\t\t\t- legal holds\n\t\t\t\t- a legal hold (also known as a litigation hold) is a notification sent from an organization's legal team to employees instructing them not to delete electronically stored information (ESI) or discard paper documents that may be relevant to a new or imminent legal case\n\t\t\t- secure document retention\n- overview of Azure storage\n\t- provides storage to build powerful cloud-native and mobile apps\n\t- various kinds of storage accounts in Azure\n\t\t- general-purpose v2 accounts\n\t\t\t- basic storage\n\t\t\t- blobs, files, queues, tables, disks\n\t\t- general-purpose v1 accounts\n\t\t\t- legacy storage\n\t\t- BlockBlobStorage accounts\n\t\t- FileStorage accounts\n\t\t\t- file shares\n\t\t- **BlobStorage** accounts\n\t- performance tiers\n\t\t- standard\n\t\t\t- blobs, files, tables, queues, virtual machine disks\n\t\t- premium\n\t\t\t- unmanged virtual disks\n\t- access tiers\n\t\t- hot\n\t\t\t- frequent object access\n\t\t\t- (default)\n\t\t- cool\n\t\t\t- infrequent\n\t\t\t- inexpensive\n\t\t\t- must be stored for 30 days\n\t\t- archive\n\t\t\t- must be stored for 180 days\n\t\t\t- most inexpensive",
        "extras": "$idCode=azureBlobStorage;$rank=3.5;$quick=Azure's cloud-based object storage",
        "genericTermIdCode": "cloud-based object storage",
        "id": 341,
        "systemWhenCreated": "2021-01-07 15:25:35",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Blob Storage"
    },
    {
        "body": "- group of **either physical or virtual machines** that are running the Docker application and that have been configured to join together in a cluster\n- the activities of the cluster are controlled by a **swarm manager**, and machines that have joined the cluster are referred to as **nodes**\n- once a group of machines have been clustered together, you can still run the Docker commands that you're used to, but **commands will be carried out by all the machines in your cluster**\n- in a docker swarm, there are typically several worker nodes and at least one manager node that is responsible for handling the worker nodes' resources efficiently and ensuring that the cluster operates efficiently\n- another option instead of a swarm would be **Kubernetes**",
        "extras": "$idCode=dockerSwarm;$rank=4.1;$quick=cluster of containers working in unison",
        "genericTermIdCode": "Docker cluster",
        "id": 342,
        "systemWhenCreated": "2021-01-07 15:52:51",
        "systemWhoCreated": "systemUnknown",
        "title": "Docker swarm"
    },
    {
        "body": "- managed, secure Desktop-as-a-Service (DaaS) solution\n- provision either Windows or Linux desktops in just a few minutes and quickly scale to provide thousands of desktops to workers across the globe\n- pay either monthly or hourly\n- save money when compared to traditional desktops and on-premises VDI solutions (Virtual Desktop Infrastructure)\n- WorkSpaces is a **virtual desktop**\n\t- you have a virtual machine in the cloud\n\t- on it you have applications\n\t\t- Excel, Word, etc.\n\t\t- high-end graphics programs \n\t\t- customized developer tools\n\t- you access these on any device where there is a client for the AWS WorkSpaces service\n\t\t- you can **access this desktop from any device**\n\t\t\t- Android tablet\n\t\t\t- iPad\n\t\t\t- etc. \n- runs **Windows applications**",
        "extras": "$idCode=workspaces;$rank=3.5;$quick=Amazon's DaaS solution",
        "genericTermIdCode": "Desktop-as-a-Service solution",
        "id": 343,
        "systemWhenCreated": "2021-01-07 17:28:00",
        "systemWhoCreated": "systemUnknown",
        "title": "WorkSpaces"
    },
    {
        "body": "- streams applications to the browser\n- delivers desktop applications to any computer\n- your applications run on virtual machines optimized for specific use cases and each streaming sessions automatically adjust to network conditions.\n- revised in 2018\n- designed for **instant-on access from any location** to deliver {SaaS}\n- you can run **pre- and post-processing**\n- you create stacks, fleets and images\n- users get e-mail, *\"your AppStream admin assigned 2 new apps for you\"*",
        "extras": "$idCode=appStream;$rank=3.5;$quick=Amazon's desktop streaming service",
        "genericTermIdCode": "desktop streaming service",
        "id": 344,
        "systemWhenCreated": "2021-01-07 17:28:00",
        "systemWhoCreated": "systemUnknown",
        "title": "AppStream"
    },
    {
        "body": "- gives users the ability to access their email, contacts, and calendars on any device with any client application\n\t- Microsoft Outlook\n\t- native iOS and Android email applications\n\t- any client application supporting the IMAP protocol\n\t- web browser\n- has interoperability with Microsoft Exchange Server",
        "extras": "$idCode=workMail;$rank=3.5;$quick=Amazon's managed business email and calendar service",
        "genericTermIdCode": "hosted e-mail and calendar service",
        "id": 345,
        "systemWhenCreated": "2021-01-07 17:28:06",
        "systemWhoCreated": "systemUnknown",
        "title": "WorkMail"
    },
    {
        "body": "- fully managed, secure content creation, storage, and collaboration service\n- create, edit, and share content, and because it’s stored centrally on AWS, access it from anywhere on any device\n- no upfront fees or commitments. You pay only for active user accounts, and the storage you use\n- **can be integrated with {WorkSpaces}**",
        "extras": "$idCode=workDocs;$rank=3.5;$quick=Amazon's content creation, storage, and collaboration service",
        "genericTermIdCode": "hosted file storage",
        "id": 346,
        "systemWhenCreated": "2021-01-07 17:29:13",
        "systemWhoCreated": "systemUnknown",
        "title": "WorkDocs"
    },
    {
        "body": "- reduce load times, save bandwidth, and speed responsiveness\n- easily handles sudden traffic spikes and heavy loads—for example, during major product launches or global sporting events\n- helps release the pressure on e.g. {S3} storage accounts\n\t- responses are cached\n\t- only the first user would cause a request to go all the way to the storage account\n- you have to make a profile, e.g. how you want to enable caching\n- you place a CDN in front of the storage account to offload the content into the cache\n- portal\n\t- create CDN\n\t- pricing tier: Standard Microsoft\n\t- endpoint is what applications will connect to in order to retrieve the content\n\t- origin type: storage\n\t- caching rules\n\t- compression rules",
        "extras": "$idCode=azureCdn;$rank=3.5;$quick=Azure's content delivery service",
        "genericTermIdCode": "online content delivery",
        "id": 347,
        "systemWhenCreated": "2021-01-08 00:23:09",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure CDN"
    },
    {
        "body": "- stores rarely accessed data\n- automatically encrypted\n- allows you to store terabytes of data for only a few dollars a month\n\t- so you can repurpose your storage infrastructure for other critical business objectives",
        "extras": "$idCode=azureArchiveStorage;$rank=3.5;$quick=Azure's long-term, cloud-based backup storage",
        "genericTermIdCode": "cloud-based backup storage",
        "id": 348,
        "systemWhenCreated": "2021-01-08 14:04:35",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Archive Storage"
    },
    {
        "body": "- allows you to create and send emails and automations, and view your stats\n- enables you to build SMS, voice, chat, and video applications to engage customers on Twilio's omnichannel platform",
        "extras": "$idCode=azureSendGrid;$rank=3.3;$quick=Azure's E-Mail and notification service",
        "genericTermIdCode": "E-Mail and notification service",
        "id": 349,
        "systemWhenCreated": "2021-01-08 17:14:01",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure SendGrid"
    },
    {
        "body": "- block storage for Azure Virtual Machines\n- designed to be used with Azure Virtual Machines\n- four disk storage options\n\t- Ultra Disk Storage\n\t- Premium SSD\n\t- Standard SSD\n\t- Standard HDD",
        "extras": "$idCode=azureDiskStorage;$rank=3.5;$quick=Azure's VM block storage service",
        "genericTermIdCode": "cloud block storage",
        "id": 350,
        "systemWhenCreated": "2021-01-08 17:22:06",
        "systemWhoCreated": "systemUnknown",
        "title": "Azure Disk Storage"
    },
    {
        "body": "- {created: 2007} by Rabbit Technologies as a joint venture between LShift and CohesiveFT\n\t- 2010 acquired by SpringSource, a division of VMware\n\t- 2013 became part of Pivotal Software \n- open-source message-broker software that originally implemented the Advanced Message Queuing Protocol (AMQP) \n\t- also supports STOMP (Streaming Text Oriented Messaging Protocol), MQTT (MQ Telemetry Transport)\n\t\t- written in Erlang",
        "extras": "$idCode=rabbitmq;$rank=4.1;$quick=message-broker software that originally implemented AMQP",
        "genericTermIdCode": "message-broker software",
        "id": 351,
        "systemWhenCreated": "2021-01-14 15:03:46",
        "systemWhoCreated": "systemUnknown",
        "title": "RabbitMQ"
    },
    {
        "body": "- a configuration file convention that is used to define and maintain consistent code styles between team members working on the same code as well as between different editors and IDEs\n- defines and maintains consisten coding styles across various editors\n- two parts\n\t- 1. rule definitions in config file\n\t- 2. text-editor plugin\n\t\t- reals rule definitions in config file\n\t\t- configures the editor to adhere to specified coding styles\n- advantages\n\t- standardization to improve code quality\n\t\t- minimizes inconsistencies\n\t- config file is human-readable and\t self-documenting\n\t- free, open-source standard\n\t- available in most text editors\n- projects that use EditorConfig\n\t- Node.js\n\t- jQuery\n\t- Lodash\n\t- React\n\t- webpack\n- characteristics\n\t- files are named `.editorconfig`\n\t- INI format\n\t- case insensitive\n\t- properties can be omitted\n\t- comments start with `#` or `;`\n\t- `root = true` is a special property at top of file\n\t\t- that it's the top-most EditorConfig file of project\n\t- tells editor not to search in parent directories for another configuration file\n- sections\n\t- `[*]` matches all files\n\t- `[*.md]` only markdown files\n\t- `[{lib,src,test}/**.js]`\n- rules\n\t- `indent_style = space` (or tab)\n\t- `indent_size = 2`\n\t- `end_of_line = lf` (good choice)\n\t- `charset = utf-8` (recommended)\n\t- `trim_trailing_whitespace = true`\n\t- `insert_final_newline = true` (UNIX text files requires this)\n- links\n\t- [EditorConfig website](https://editorconfig.org)",
        "extras": "$idCode=editorConig;$rank=3.6;$quick=a growing consistent-code-styling project",
        "genericTermIdCode": "consistent-code-styling project",
        "id": 352,
        "systemWhenCreated": "2021-01-17 19:02:02",
        "systemWhoCreated": "systemUnknown",
        "title": "EditorConfig"
    },
    {
        "body": "- {created: 2018}\n- a tool to automate and scale E2E testing \n\t- E2E = end-to-end\n- `npm install cypress`\n- ähnelt auf den ersten Blick Selenium\n- \"Testing was broken\"\n- \"Software quality is in need of a hero\"\n- Cypress macht Anleihen bei Mochas bdd-Syntax \n\t- `describe(), context(), it(), before(), beforeEach(), afterEach(), after(),.only() und .skip()`\n- außerdem von Mocha übernommen: Der async-Support des Frameworks\n- example\n\t----------------------------------\n\t\"it will fail when valid user with invalid password\", () => {\n\t\tcy.get(\"#email\").type(\"user@t3n\");\n\t\tcy.get(\"#password\").type(\"12345\");\n\t\tcy.get(\"input[type=submit]\").click();\n\t\tcy.get(\"#login-message\").should(\"have.text\", \"Login failed\"),\n\t});\n\t----------------------------------\n- when you type `npx cypress open` it opens an application and runs the tests:##cypressHasSeparateApp\n- solves the problem that testing doesn't scale well, \"click around and try a few things\"\n\t- you need to be able to click through all the flows of your application\n\t\t- this doesn't scale\n- Cypress tests the application from the user's point of view\n\t- clicking buttons and making sure that certain elements are visible on the page\n- Cypress does end-to-end testing\n- much easier to use than Selenium\n- like Selenium, it's open-source and free\n- advantages\n\t- uses a real browser to run tests\n\t\t- other E2E frameworks use headless browser\n\t\t\t- headless browser come with their own set of bugs\n\t- has access to network layer so can do things like\n\t\t- simulate when server has an error \n\t- takes into account the visibility elements\n\t\t- so if button is not visible or behind some other element, the test will fail\n\t- can take screenshots and videos while running tests\n\t- the test syntax is very readable\n- limitations\n\t- not ideal for data mining or web crawling\n\t- runs in a real browser and hence only uses JavaScript\n\t\t- Cypress says that JavaScript is the only language it will ever support\n\t- you can't test multiple tabs or browser windows at the same time\n\t\t- but if you are just testing to see that a link can open a new tab, you are just testing the functionality of your browser\n\t\t- if you need to test a chat application which enables users to chat with each other, you can use stubbing\n\t- you can't visit two domain names in one test\n\t\t- but you can't visit two domains in two different tests\n\t\t- however you would need to visit two domains for oauth providers, but there are workarounds for this\n- links\n\t- [documentation](https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html)\n\t- [good 40-min tutorial](https://docs.cypress.io/guides/overview/why-cypress.html#In-a-nutshell)\n\t- [beginner tutorial](https://www.valentinog.com/blog/cypress/)",
        "extras": "$idCode=cypress;$rank=4.8;$quick=next generation front end testing tool built for the modern web",
        "genericTermIdCode": "JavaScript testing tool",
        "id": 353,
        "systemWhenCreated": "2021-01-28 10:35:08",
        "systemWhoCreated": "systemUnknown",
        "title": "Cypress"
    },
    {
        "body": "- {created: 2018?}\n- Enzyme can be used within {Jest} to render {React} components, to access the DOM of these components, and to make assertions based on the DOM\n- Enzyme adds up perfectly to Jest, because it can cover unit and integration tests, whereas Jest is mainly used for snapshot tests\n- but Enzyme is not strictly tied to Jest, it can be used in any other test runner too\n- links\n\t- [npm enzyme](https://www.npmjs.com/package/enzyme)",
        "extras": "$idCode=enzyme;$rank=3.5;$quick=JavaScript Testing utility that makes it easier to test output of React Components",
        "genericTermIdCode": "JavaScript Testing tool for React",
        "id": 354,
        "systemWhenCreated": "2021-01-28 10:54:58",
        "systemWhoCreated": "systemUnknown",
        "title": "Enzyme"
    },
    {
        "body": "- {created: 2010?}\n- convention-over-configuration solution for creating stand-alone, production-grade Spring-based Applications that you can \"just run\"\n- preconfigured with the Spring team's opinionated view\n- Embed Tomcat or Jetty directly (no need to deploy WAR files) \n- Absolutely no code generation and no requirement for XML configuration\n- [Spring Boot website](https://spring.io/projects/spring-boot)",
        "extras": "$idCode=springBoot;$rank=3.4;$quick=convention-over-configuration solution for creating Java applications",
        "genericTermIdCode": "Java Application Framework",
        "id": 355,
        "systemWhenCreated": "2021-01-28 16:47:55",
        "systemWhoCreated": "systemUnknown",
        "title": "Spring Boot"
    },
    {
        "body": "- {created: 2002} by {Rod Johnson} \n- an application framework and inversion of control container for the Java platform\n- can be used by any Java application\n- a small, beautiful, and enjoyable library\n- Spring developers decided to write their own Web framework as a reaction to what they perceived as the poor design of the (then) popular Jakarta {Struts}  Web framework\n- central to the Spring Framework is its inversion of control (IoC) container, which provides a consistent means of configuring and managing Java objects using reflection\n- Objects created by the container are also called managed objects or beans\n- has its own Aspect-oriented programming (AOP) framework that modularizes cross-cutting concerns in aspects, AOP means adding additional behavior to existing code (an advice) without modifying the code itself",
        "extras": "$idCode=springFramework;$rank=3.2;$quick=inversion-of-control framework for building Java applications",
        "genericTermIdCode": "application framework",
        "id": 356,
        "systemWhenCreated": "2021-01-28 16:47:55",
        "systemWhoCreated": "systemUnknown",
        "title": "Spring"
    },
    {
        "body": "- {created: 2008}\n\t- 2006 Google acquired JotSpot, created by Joe Kraus who now is the President of Lime\n\t- 2008 converted Google Page Creator into Google Sites\n\t- 2016 New Google Sites, no longer uses JotSpot technology\n- allows users to create and edit files online while collaborating with other users in real-time\n- Levels of permissions (\"owner\", \"editor\", and \"viewer\")\n- embedded HTML and JavaScript\n- integration with Google Drive and Google Maps\n- owners can map their site to a custom domain name\n- limitations\n\t- no support for custom CSS\n\t- no API\n\t- cannot host Google AdSense ads\n- [Classic Google Sites](https://sites.google.com/site) (pre-2016) is still online\n- no coding\n- uses\n\t- can set viewability, only people in company or school can use it or know it exists\n\t- fund-raising events on Google Calendar\n\t- neighborhood page\n\t- post maps\n\t- travel blog\n- create site\n\t- saved automatically\n\t- undo, redo\n\t- preview site on multiple devices\n\t- people can edit with you\n\t- duplicate the site\n\t- sites appear in drive as well\n\t- can add other people as editors\n- pages\n\t- if you delete a page, you have a few seconds, then you can't get it back again\n\t- you can make sub-pages\n\t- you can set top or left-side navigation \n\t- you can change the URL of the site\t\n\t- you can make external links in the menu\n\t- double-click to add item, e.g. text\n\t- easiest way to create a longer page is to duplicate sections and change them\n- forms\n\t- you can embed them on a site, but be sure to pull down the blue frame to the maximum length for best user experience on a smart phone\n- images\n\t- you can crop and resize a photo to get it to show the section of it that you want\n\t- easy to put an image as a background, it adjusts for readability\n- linking\n\t- URLs are automatically linked\n- charts\n\t- note that that the chart is dynamically linked so that when the data in the Google Sheets document changes, the chart changes both there and here dynamically\n- calendar works well (keep all events in specific Google calendar when logged in as you), but for smartphone view, it is best to expand it vertically, best to have it on its own page very long vertically\n- footer\n\t- at bottom of page, click \"add footer\"\n- publish\n\t- you can change your URL\n\t- you can add a domain, you have to get it to link back to Google Sites\n\t- if you have a Google Analytics code you can add it\n\t- you can duplicate the site\n\t- unpublish if e.g. event is over, but you still want to have access to edit your site for the future\n\t- if you have a corporate account, then you can make it so only people in your company can view your site",
        "extras": "$idCode=idCodeidCode;$rank=3.5;$quick=Google's WYSIWYG web creation tool",
        "genericTermIdCode": "web creation tool",
        "id": 357,
        "systemWhenCreated": "2021-01-30 00:38:52",
        "systemWhoCreated": "systemUnknown",
        "title": "Google Sites"
    },
    {
        "body": "- {created: 2012?}\n- forms.google.com\n- create form\n\t- many templates, e.g. invitation\n\t- you can use regex validations, but they seem to require to be simple, complex ones weren't accepted as valid\n\t- you can add videos as their own form item\n\t- you can add an images to the items themselves\n\t- sections\n\t- you can have questions jump to another section based on answer\n\t- when you add an image, it changes the background color based on the colors in the image\n- themes\n\t- event feedback\n\t- course evaluation\n\t- customer feedback\t\n- responses\n\t- create spreadsheet first and select it\n\t- e-mail notification\n\t- shown in charts and graphs\n- options\n\t- click on cog, you can change the order of the questions (e.g. on a quiz)\n\t- you can make it a quiz\n- send\n\t- instead of publish, you send\n\t- you can copy a link\n\t- you can embed the form on any site\n- delete \n\t- before deleting, unlink form so you can see responses for historical purposes in the Google sheet\n- examining data from form\n\t- filter the column in Google sheets\n\t- you manipulate and do analysis on the data in Google sheets with charts etc.\n- examning in Excel\n\t- download as CSV, or download Google sheets as xslx file\n- forms on other web pages\n\t- you can easily add them to Google Sites but they display in a suboptimal way \n\t- Wordpress also has a plugin to include Google forms\n\t- or you can use iframe",
        "extras": "$idCode=googleForms;$rank=4.5;$quick=Google's survey administration software",
        "genericTermIdCode": "survey administration software",
        "id": 358,
        "systemWhenCreated": "2021-01-30 20:32:39",
        "systemWhoCreated": "systemUnknown",
        "title": "Google Forms"
    },
    {
        "body": "- {created: 2002} by Australians Mike Cannon-Brookes and Scott Farquhar\n\t- 2002 flagship product {Jira}\n\t- 2010 acquired {Bitbucket}\n\t- 2017 acquired {Trello}\n- name derived from the titan Atlas in Greek mythology who had been punished to hold up the Heavens after the Greek gods had overthrown the Titans",
        "extras": "$idCode=atlassian;$rank=3.5;$quick=Australian company that owns Jira, Bitbucket and Trello",
        "genericTermIdCode": "Australian company",
        "id": 359,
        "systemWhenCreated": "2021-01-31 13:04:20",
        "systemWhoCreated": "systemUnknown",
        "title": "Atlassian"
    },
    {
        "body": "- {created: 2011}\n\t- 2017 bought by {Atlassian}\n- based in New York\n- Trello was released at a TechCrunch event by Fog Creek founder **Joel Spolsky**\n- users can create their task boards with different columns and move the tasks between them\n- columns include task statuses such as To Do, In Progress, Done\n- \"Trello is my favorite productivity tool\"\n\t- \"stop working harder and start working smarter\"\n\t- \"essentially the equivalent of a giant whiteboard on the wall with index cards\"\n\t- \"il existe de nombreux outils de gestion de projets et de tâches, mais Trello se distingue à la fois par sa simplicité et son efficacité\"\n- can be used for personal and business purposes \n- according to a Fog Creek blog post in January 2012, the client was an extremely thin web layer which downloads the main app, written in {CoffeeScript} and compiled to minified JavaScript, using {Backbone.js}, .pushState() and the Mustache templating language\n\t- the server side was built on top of {MongoDB}, Node.js and a modified version of Socket.io\n- Trello is **mainly a free service** that lets users work with an **unlimited number of boards, lists and cards**\n\t- free users can add **one Power-Up per board** and up to **10 team boards**\n- Competition\n\t- **[Trello](https://trello.com/signup) (free version)**\n\t- **[Asana](https://asana.com/pricing) (free version)**\n\t- **[Zoho Projects](https://www.zoho.com/projects/zohoprojects-pricing.html) (free version for 3 users)**\n\t- Wrike (free version, but limited, confusing)\n\t- Monday.com (no free version, looks cluttered)\n\t- Smartsheet (no free version, free trial, less cluttered)\n\t- Primavera P6 (no free version, unclear)",
        "extras": "$idCode=trello;$rank=3.5;$quick=project-organization and collaboration tool;$kind=/socialEfficiencyApp/",
        "genericTermIdCode": "list-making application",
        "id": 360,
        "systemWhenCreated": "2021-01-31 13:08:45",
        "systemWhoCreated": "systemUnknown",
        "title": "Trello"
    },
    {
        "body": "- {created: 2009} in Denmark as **Hoist** by Jon Froda, Anders Pollas and Andreas Haugstrup Pedersen \n\t- 2011 officially launched\n\t- 2011 launched mobile apps for iPhone and Android\n\t- 2012 acquired by Citrix",
        "extras": "$idCode=podio;$rank=3.5;$quick=older web-based project-planning software created in Denmark",
        "genericTermIdCode": "web-based project-planning software",
        "id": 361,
        "systemWhenCreated": "2021-01-31 16:28:44",
        "systemWhoCreated": "systemUnknown",
        "title": "Podio"
    },
    {
        "body": "- {created: 1915} by Henry Gantt (1861–1919), American mechanical engineer and management consultant \n\t- 1896 first known tool of this type was developed in 1896 by Karol Adamiecki, who called it a harmonogram\n- show the dependency relationships between activities and the current schedule status\n- lists the tasks to be performed on the vertical axis, and time intervals on the horizontal axis\n- illustrate the start and finish dates \n- widely used in project planning in the present day\n\t- but were considered revolutionary when introduced\n- used today in project management software such as {Trello}\n- example of a Gantt chart:##thegannttt",
        "extras": "$idCode=ganttChart;$rank=3.7;$quick=type of bar chart that illustrates a project schedule",
        "genericTermIdCode": "chart that illustrates a project schedule",
        "id": 362,
        "systemWhenCreated": "2021-01-31 16:28:44",
        "systemWhoCreated": "systemUnknown",
        "title": "Gantt Chart"
    },
    {
        "body": "- {created: 2006} by Brian Halligan and Dharmesh Shah \n\t- 2014 launched HubSpot CRM Free \n- the company \n\t- provides tools for social media marketing, content management, web analytics, landing pages, customer support, and search engine optimization\n\t- has been described as unique because it strives to provide its customers with an all-in-one approach\n- **HubSpot CRM Free**\n\t- a cloud-based, customer relationship management tool\n\t- software as a service product is free and integrates with Gmail, G Suite, Microsoft Office for Windows\n\t- helps\t you sell better, market better, and gain more powerful insights from customer interactions",
        "extras": "$idCode=hubspot;$rank=3.5;$quick=CRM software provided by social media marketing company that provides an all-in-one approach",
        "genericTermIdCode": "CRM software",
        "id": 363,
        "systemWhenCreated": "2021-01-31 18:51:48",
        "systemWhoCreated": "systemUnknown",
        "title": "HubSpot"
    },
    {
        "body": "- {created: 2016} by Dylan Field and Evan Wallace \n\t- 2012 Wallace graduated from Brown and Field dropped out to accept a Thiel Fellowship, which provided $100,000 to pursue a startup idea\n\t- 2015 started offering a free invite-only preview program \n\t- 2019 Figma launched Figma Community, allowing designers to publish their work for others to view and remix\n- has **free version**\n\t- 3 projects, unlimited cloud storage\n\t- **web-based**\n- generic UX design workflow\n\t- 1. brainstorm\n\t\t- create personas to find out who that generic customer is\n\t\t- create user flows, e.g. how they go through the app\n\t- 2. wireframe/design (FIGMA)\n\t\t- grey boxes\n\t\t- plain text \n\t- 3. build prototype so people can get a feel for how it will work (FIGMA)\n\t- 4. share/test/feedback (FIGMA)\n\t- 5. iterate (FIGMA)\n\t- 6. build\n- competitors\n\t- **[Figma](https://www.figma.com) (free version)**\n\t- **[InVision](https://www.invisionapp.com/inside-design/wireframe-examples) (free version)**\n\t- [Marvel](https://marvelapp.com) (free version, less known, no LinkedIn tutorials)\n\t- [Zeplin](https://zeplin.io/pricing) (free version, less known, no LinkedIn tutorials)\n\t- proto.io (free downgraded version)\n\t- Adobe XD (2015)\n\t- Avocode (no free version, 14-day trial)\n\t- Sketch (macOS only)\n\t- Framer (macOS only)",
        "extras": "$idCode=figma;$rank=4.1;$quick=a primarily web-based vector graphics editor and prototyping tool",
        "genericTermIdCode": "web-based collaborative interface design tool",
        "id": 364,
        "systemWhenCreated": "2021-01-31 21:52:21",
        "systemWhoCreated": "systemUnknown",
        "title": "Figma"
    },
    {
        "body": "- {created: 2013} by Eric Yuan, former vice president for Cisco Webex, and billionaire\n\t- 2011 Yuan left Cisco in April 2011 with 40 engineers to start a new company\n\t- 2012 changed name to Zoom\n\t- 2012 signed Stanford University as its first customer\n\t- 2013 one million users\n- a portion of Zoom's workforce is based in China, which has given rise to surveillance and censorship concerns\n- features\n\t- to make co-host during meeting, on video of person, three dots\n- test\n\t- record\n\t- raise hand, enable people to vote\n\t- make someone co-host (wasn't on meeting basics)\n\t- turn on polling (wasn't in meeting basics, not in basic account)\n\t- break-out rooms\n\t- take control of computer",
        "extras": "$idCode=idCodeidCode;$rank=3.5;$quick=most popular video conferencing software",
        "genericTermIdCode": "video communications software",
        "id": 365,
        "systemWhenCreated": "2021-02-02 19:06:27",
        "systemWhoCreated": "systemUnknown",
        "title": "Zoom"
    },
    {
        "body": "- {created: 2002} by Martin Dougiamas, Australian\n\t- 2002: version 2.0\n\t- 2015: version 3.0\n\t\t- version 3.2: doesn't rely as heavily on blocks\n\t\t- version 3.5: can take questions \n\t- 2018: Moodle has over 50% of market share in Europe, Latin America, in the U.S. Blackboard (31%), Canvas (30%), Moodle (18%)\n\t- 2019-05: version 3.7.9 (the version that can be installed at a2hosting without manual work)\n\t- 2020-09: version 3.9 - H5P supported\n\t- 2021-02: version 3.10.1\n- learning management system (LMS) written in PHP\n- H5P plugin\n\t- H5P is supported as of [Moodle 3.9](https://docs.moodle.org/dev/Roadmap#Moodle_3.9_.28May_2020_release.29)\n\t- but it seems that some people are having trouble getting H5P to work even in this version: https://moodle.org/plugins/mod_hvp\n\t\t- *\"We have recently upgraded to moodle 3.9.3 and since H5P is in its core, we didn't install this plugin. Now, I have the option to add an H5P activity, but when using as a teacher cannot see the content bank nor any other h5p content\"*",
        "extras": "$idCode=moodle;$rank=3.5;$quick=learning management system (LMS) written in PHP",
        "genericTermIdCode": "learning management system",
        "id": 366,
        "systemWhenCreated": "2021-02-05 20:00:56",
        "systemWhoCreated": "systemUnknown",
        "title": "Moodle"
    },
    {
        "body": "- {created: 2018?}\n- an app for checking the article quality\n- helps **improve the clarity of your writing**, it's not a grammar checker\n- highlights long, complex sentences and common errors\n- if you see a red highlight, your sentence is so dense and complicated that your readers will get lost trying to follow its meandering, splitting logic \n- if you see a yellow highlight, shorten the sentence or split it\n- if you see blue color that represent adverb, the color green which indicate passive voices, get rid of them and pick verbs with force instead\n- this is a pay app, but the [Hemingway editor](http://www.hemingwayapp.com) is online for free##theHemwayApp",
        "extras": "$idCode=hemingwayApp;$rank=2.5;$quick=service to improve the clarity of your writing;$kind=/socialEfficiencyApp/",
        "genericTermIdCode": "writing improvement app",
        "id": 367,
        "systemWhenCreated": "2021-02-07 12:08:08",
        "systemWhoCreated": "systemUnknown",
        "title": "Hemingway App"
    },
    {
        "body": "- {created: 2012} by Johan Brand, Jamie Brooker and Morten Versvik in a joint project with the Norwegian University of Science and Technology\n\t- 2013 released to the public\n- game design is such that the players are required to frequently look up from their devices\n- the creator can choose, whether the player can get 0 points, up to 1000 or 2000\n- encourages focus\n- uses web browser or application\n- I tried to sign up, with Google account,\n\t- offered a 7-day trial\n\t- couldn't sign since I had to give credit card information, and didn't want to\n\t- said at end of trial, card would be billed $271.32 (!)\n- apparently you can use it in classes and students use smart phones\n\t- or can be used in online teaching where there is no central display##usingkahoot",
        "extras": "$idCode=kahoot;$rank=3.9;$quick=game-based educational platform for businesses;$kind=/teachingTools/",
        "genericTermIdCode": "game-based educational platform",
        "id": 368,
        "systemWhenCreated": "2021-02-18 18:25:22",
        "systemWhoCreated": "systemUnknown",
        "title": "Kahoot"
    },
    {
        "body": "- [PIXLR BG](https://pixlr.com/de/remove-background) this is a simple tool that automatically identifies a background of a photo and removes it, allowing you to download the resulting PNG file\n- it has fine-tuning tools if you need to touch it up a bit\n- while you are there, check out the other tools, looks quite impressive, all immediate and online to use\t\n- ##pixlrbg",
        "extras": "$idCode=pixlrbg;$rank=4.2;$quick=online tool to erase the backgrounds of photos;$kind=/graphics/",
        "genericTermIdCode": "photo background-erasing tool",
        "id": 369,
        "systemWhenCreated": "2021-02-18 19:47:03",
        "systemWhoCreated": "systemUnknown",
        "title": "PIXLR BG"
    },
    {
        "body": "- {created: 2009} by Robert Martin in his book *Clean Code: A Handbook of Agile Software Craftsmanship*\n- general\n\t- follow **conventions**\n\t- keep is **simple**\n\t- leave it **cleaner than you found it**\n\t- always find **root cause**\n- design\n\t- prefer **polymorphism** to if/else and switch/case (use **overriding**)\n\t- use **dependency injection**\n\t- use **principle of least knowledge**\n- understandability \n\t- be **consistent**\n\t- use **explanatory variables**\n- names \n\t- use **descriptive names**\n\t- use **searchable names**\n- functions\n\t- keep them **small**\n\t- make them **do one thing**\n\t- use **descriptive names**\n\t- prefer **fewer arguments**\n- comments\n\t- **let code explain itself**\n\t- **don't comment out code**, just remove it\n\t- use comments as **clarification of code**\n\t- use comments as **warning of consequences**\n- code structure\n\t- dependent functions should be close\n\t- similar functions should be close\n- code smells\n\t- **rigidity:** software is difficult to change, a small change cause a cascade of subsequent changes\n\t- **fragility:** software breaks in many places due to a single change\n\t- **immobility:** you cannot reuse parts of the code in other projects\n\t- **needless complexity:** simpler code could do the same thing\n\t- **opacity:** the code is hard to understand",
        "extras": "$idCode=cleanCode;$rank=4.1;$quick=software principles for good programming",
        "genericTermIdCode": "software principles",
        "id": 370,
        "systemWhenCreated": "2021-03-12 21:47:29",
        "systemWhoCreated": "systemUnknown",
        "title": "clean code"
    },
    {
        "body": "- {created: 1951} by Stephen Cole Kleene, American mathematician\n- history\n\t- concept arose in the 1950s when the American mathematician Stephen Cole Kleene formalized the description of a regular language\n\t- different syntaxes for writing regular expressions have existed since the 1980s, one being the **POSIX standard** and another, widely used, being the **Perl syntax**\n- notes\n\t- `h[a.]t` = the `.` is a literal period not a metacharacter representing a wildcard\n\t- `[([][0-9]*[)\\]]` = find (009) or [2]\n\t- `\\w, \\s, \\d, \\W, \\S, \\D`\n- JavaScript\n\t- match line that starts with number and five or more characters\n\t\t----------------------------\n\t\tconst text = '92384 askjfsdf\\n2\\n52343jsdfjsfsdf';\n\t\tconst regex = /^[0-9].{5,}/gm;\n\t\tconst matches = text.match(regex);\n\t\tconsole.log(matches);\n\t\t----------------------------",
        "extras": "$idCode=regex;$rank=4.8;$quick=sequence of characters that specifies a search pattern",
        "genericTermIdCode": "Pattern Matching Tool",
        "id": 371,
        "systemWhenCreated": "2021-07-27 21:45:08",
        "systemWhoCreated": "systemUnknown",
        "title": "regex"
    },
    {
        "body": "- {created: 2006} by Tobias Lütke, German-Canadian billionaire entrepreneur, moved to Canada in 2002\n\t- used Ruby on Rails\n- Shopify Inc. is a Canadian multinational e-commerce company headquartered in Ottawa, Ontario\n- offers online retailers a suite of services including payments, marketing, shipping and customer engagement tools\n- more than 1,700,000 businesses in approximately 175 countries using its platform as of May 2021\n- pros\n\t- you know exactly how much you'll be paying every month and the pricing is fair\n\t- access to thousands of apps to extend your store\n\t- themes are plentiful and beautiful\n\t- handles everything for you from hosting to security\n\t- just a few minutes to launch your store\n\t- dropshipping is simple\n\t\t- a fulfillment method where a store doesn't keep the products it sells in stock, instead, the store purchases the item from a third-party supplier and has it shipped directly to the customer\n\t- good support\n- cons\n\t- don't have as much control over your site \n\t- customization is lacking\n\t- you are stuck with a monthly payment that's only going to get higher",
        "extras": "$idCode=shopify;$rank=3.6;$quick=proprietary e-commerce platform for online stores ;$kind=/ecommerce/",
        "genericTermIdCode": "E-Commerce Platform",
        "id": 372,
        "systemWhenCreated": "2021-08-13 13:26:12",
        "systemWhoCreated": "systemUnknown",
        "title": "Shopify"
    },
    {
        "body": "- {created: 2011} by WordPress-theme-developer WooThemes who hired Mike Jolley and James Koster\n- an open-source e-commerce plugin for WordPress\n- designed for small to large-sized online merchants using WordPress\n- 2020: used by around 3.9 million websites\n- pros\n\t- offers complete customization and control\n\t- WordPress has a huge community online\n\t- themes and plugins are endless\n\t- simple to configure on WordPress\n\t- the base plug-in is free\t\n\t- can run your business in conjunction with a WordPress blog\n- cons\n\t- WordPress has a learning curve\n\t- can end up being more expensive due to plugins, themes, and hosting\n\t- stuck managing everything from hosting to security, and maintenance to backups",
        "extras": "$idCode=woocommerce;$rank=3.6;$quick=an open-source e-commerce plugin for WordPress ;$kind=/ecommerce/",
        "genericTermIdCode": "E-Commerce Platform",
        "id": 373,
        "systemWhenCreated": "2021-08-13 13:26:12",
        "systemWhoCreated": "systemUnknown",
        "title": "WooCommerce"
    },
    {
        "body": "- {created: 2011} by Sahil Lavingia, Sachin Khanna\n\t- created with the intention of making selling as easy as social sharing\n- Sahil Lavingia built the first iteration of Gumroad in a single weekend, in 2011\n- headquarters San Francisco, California\n- 2014: Twitter announced its first commerce product, the Buy Now button, in partnership with Gumroad",
        "extras": "$idCode=gumroad;$rank=3.5;$quick=an ecommerce platform that provides software as a service services to retailers;$kind=/ecommerce/",
        "genericTermIdCode": "E-Commerce Platform",
        "id": 374,
        "systemWhenCreated": "2021-08-13 13:48:29",
        "systemWhoCreated": "systemUnknown",
        "title": "GumRoad"
    },
    {
        "body": "- {created: 2009} in Sydney, Australia in 2009 by Australians Eddie Machaalani and Mitchell Harper\n- Austin, Texas\n- 2020: serves 60,000 online stores in 120 countries\n- is a comprehensive, all-in-one solution to e-commerce\n- online store creation, search engine optimization, hosting, and marketing and security for small and medium-sized businesses",
        "extras": "$idCode=bigcommerce;$rank=3.5;$quick=an ecommerce platform that provides software as a service services to retailers;$kind=/ecommerce/",
        "genericTermIdCode": "E-Commerce Platform",
        "id": 375,
        "systemWhenCreated": "2021-08-13 13:48:29",
        "systemWhoCreated": "systemUnknown",
        "title": "BigCommerce"
    },
    {
        "body": "- {created: 1998} by the World Wide Web Consortium (W3C)\n- DOM = Document Object Model\n- a cross-platform and language-independent interface that treats an XML or HTML document as a tree structure wherein each node is an object representing a part of the document\n- each branch of the tree ends in a node, and each node contains objects\n- nodes can have event handlers attached to them\n- WHATWG took over development of it (Web Hypertext Application Technology Working Group)\n- history\n\t- 1996 DOM Level 0 (\"Legacy DOM\")\n\t\t- `document.formName.inputName`\n\t\t- `document.forms[0].elements[0]`\n\t- 1997 Dynamic HTML\n\t\t- version 4.0 of Netscape Navigator and Internet Explorer respectively\n\t\t- enabling changes to a loaded HTML document. DHTML required extensions to the rudimentary document object\n\t- 1998 DOM Level 1\n\t\t- most browsers adopted this over the years after that up to 2004\n\t- **2000** DOM Level 2\n\t\t- introduced the **getElementById** \n\t- 2004 DOM Level 3\n\t\t- development efforts migrated to the WHATWG, which continues to maintain a living standard\n\t- **2013** [Selectors API Level 1](https://www.w3.org/TR/selectors-api)\n\t\t- **querySelector** and **querySelectorAll**\n\t\t\t- *These methods simplify the process of acquiring specific elements, especially compared with the more verbose techniques defined and used in the past.*\n\t- 2015 DOM Level 4 \n\t\t- a snapshot of the WHATWG living standard\n\t\t- as of 2020, this is the most recent DOM Level\n\t\t- each vendor can choose what they want to implement\n\t\t- most modern web browsers implement all of the Level 3 spec\n- **window Object**\n\t- in Browser console\n\t\t- `console.log(window.history)`\n\t\t- `window.history.back()`\n\t\t- `window.history.forward()`\n\t\t- `window.go(-2)`\n\t- onload\n\t\t- [Make five star control which can be clicked to change](https://edwardtanguay.netlify.app/howtos?id=462)\n\t\t\t----------------------------\n\t\t\twindow.onload = () => {\n\t\t\t\tcreateStars(3);\n\t\t\t}\n\t\t\t----------------------------\n\t- document\n\t\t- https://developer.mozilla.org/en-US/docs/Web/API/Window\n\t\t\t- `document.querySelector('#content').style.display = 'none'`\n\t\t\t- `document.querySelector('#content').style.display = 'block'`\n\t\t\t- `document.querySelector('#content').style.backgroundColor = 'yellow'`\n\t\t- https://developer.mozilla.org/en-US/docs/Web\n\t\t\t- `document.querySelector('#content')`\n\t\t\t- `document.querySelector('#content').querySelectorAll('dt')[2]`\n\t\t\t- `document.querySelector('#content').querySelectorAll('dt')[1].querySelector('a').href = 'http://tanguay.info'`\n- **HTML-Collection vs NodeList**\n\t- HTML-Collection\n\t\t- **live**\n\t\t- returned by\n\t\t\t- [getElementsByClassName()](https://www.w3schools.com/jsref/met_document_getelementsbyclassname.asp)\n\t\t\t\t- find\n\t\t\t\t\t- find all elements with both \"online\" and \"selected\" classes\n\t\t\t\t\t- `const collection = document.getElementsByClassName(\"online selected\");`\n\t\t\t- [getElementsByTagName()](https://www.w3schools.com/jsref/met_document_getelementsbytagname.asp)\n\t\t\t\t- `const collection = document.getElementsByTagName(\"p\");`\n\t- NodeList \n\t\t- **static**\n\t\t\t- [querySelectorAll](https://www.w3schools.com/jsref/met_document_queryselectorall.asp)\n\t\t\t\t- find all elements with both \"online\" and \"selected\" classes\n\t\t\t\t\t------------------------------------\n\t\t\t\t\t// find all elements with both \"online\" and \"selected\" classes\n\t\t\t\t\tconst collection = document.querySelectorAll(\".online.selected\");\n\t\t\t\t\t\tcollection.forEach(m => {\n\t\t\t\t\t\t\tm.style.color = 'green';\n\t\t\t\t\t\t});\n\t\t\t\t\t------------------------------------\n\t\t\t\t- find all elements with either \"online\" or \"selected\" classes\n\t\t\t\t\t- `const collection = document.querySelectorAll(\".color, .example\");`\n\t\t\t- **NodeLists look like arrays but are not**\n\t\t\t\t- support `forEach`, item, entries, keys, and values\n\t\t\t\t- `querySelectorAll` returns a **static NodeList**\n\t\t\t\t- `childNodes` returns a **live NodeList**\n- **methods**\n\t- previousSibling vs previousElementSibling\n\t\t- [previousSibling](https://www.w3schools.com/jsref/prop_node_previoussibling.asp)\n\t\t\t- returns the previous sibling node **as a Node object, i.e. an element node, a text node or a comment node**\n\t\t- [previousElementSibling](https://www.w3schools.com/jsref/prop_element_previouselementsibling.asp)\n\t\t\t- returns the previous element of the specified element, in the same tree level\n\t\t\t- returns the previous sibling node **as an element node, ignoring text and comment nodes**\n\t\t- to see the difference, [add white space between the two LI nodes in this example](https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_node_previoussibling)\n\t- [closest()](https://www.w3schools.com/jsref/met_element_closest.asp)\n\t\t- searches up the DOM tree for the closest element which matches a specified CSS selector\n\t\t- it starts at the element itself\n\t\t- if no matches are found, null is returned\n\t- [matches()](https://www.w3schools.com/jsref/met_element_matches.asp)\n\t\t- returns whether an element is matched by a specific CSS selector or not\n\t- [contains()](https://www.w3schools.com/jsref/met_node_contains.asp)\n\t\t- returns whether a node is a descendant of a specified node",
        "extras": "$idCode=dom;$rank=3.9;$quick=tree-structure interface for XML or HTML documents;$kind=/dom/",
        "genericTermIdCode": "Interface for HTML Documents",
        "id": 376,
        "systemWhenCreated": "2021-08-15 09:39:13",
        "systemWhoCreated": "systemUnknown",
        "title": "DOM"
    },
    {
        "body": "- stores data only for a session, meaning that the data is stored until the browser (or tab) is closed\n- data is never transferred to the server\n- storage limit is larger than a cookie (at least 5MB)",
        "extras": "$idCode=sessionStorage;$rank=4.5;$quick=;$kind=/javaScript/",
        "genericTermIdCode": "Client-Side Storage",
        "id": 377,
        "systemWhenCreated": "2021-08-15 09:59:03",
        "systemWhoCreated": "systemUnknown",
        "title": "Session Storage"
    },
    {
        "body": "- Stores data with no expiration date, and gets cleared only through JavaScript, or clearing the Browser cache",
        "extras": "$idCode=localStorage;$rank=4.5;$quick=;$kind=/javaScript/",
        "genericTermIdCode": "Client-Side Storage",
        "id": 378,
        "systemWhenCreated": "2021-08-15 09:59:03",
        "systemWhoCreated": "systemUnknown",
        "title": "Local Storage"
    },
    {
        "body": "- {created: 2015} when it became a W3C recommendation\n- 2018: IndexedDB 2.0 became a W3C Recommendation \n- 2021: IndexedDB 3.0 is currently a First Public Working Draft\n- complete database\n- allows complex queries\n- allows you to store images and videos\n- may run out of space on mobile",
        "extras": "$idCode=indexeddb;$rank=4.2;$quick=JavaScript application programming interface for storing NoSQL data;$kind=/javaScript/",
        "genericTermIdCode": "Client-Side Storage",
        "id": 379,
        "systemWhenCreated": "2021-08-15 09:59:03",
        "systemWhoCreated": "systemUnknown",
        "title": "IndexedDB"
    },
    {
        "body": "- {created: 2015}\n- the primary interface to the Mongo database is the mongo shell\n\t- but in 2015 with MongoDB 3.2, MongoDB Compass was introduced as the native GUI\n- a powerful GUI for querying, aggregating, and analyzing your MongoDB data in a visual environment\n\t- helps the users to Create, Read, Update and Delete databases/data graphically\n\t- this means no need to run the Mongo commands line for every task\n\t- quickly gives a picture of your schema and determines the frequency, types, and range of values ​​of various fields in your data records\n\t- gives you full control over index creation, document validation\n- free and open-source, available on macOS, Windows, and Linux\n- installing\n\t- on Windows, MongoDB Compass is installed by default when you install MongoDB\n\t- on Ubuntu, install MongoDB [like this](https://onespace.netlify.app/howtos?id=425)\n- connect to Mongo Atlas database\n\t- get Atlas account\n\t\t- https://www.mongodb.com/de-de/cloud\n\t\t- sign up or log in\n\t\t-",
        "extras": "$idCode=idCodeidCode;$rank=3.5;$quick=the preferred GUI for MongoDB;$kind=/nnn/",
        "genericTermIdCode": "Mongo GUI",
        "id": 380,
        "systemWhenCreated": "2021-11-09 08:46:15",
        "systemWhoCreated": "systemUnknown",
        "title": "Mongo Compass"
    },
    {
        "body": "- {created: yyyy}\t\t\n- manages relationships between data models in Mongo\n- enables you to create consistent database documents\n- Mongoose is the Model in the Model-View-Controller pattern for Node/MongoDB projects\n- the primary Object Document Mapping for MongoDB\n- provides a rigorous modeling environment for your data\n- makes life easier by providing convenience in managing data\n- plays as a role of abstraction over your database model\n- built on top of the MongoDB driver to provide programmers with a way to model their data\n- Mongoose helps you define the schema for the documents in a particular collection\n\t- provides convenience in the creation and management of data in MongoDB\n- alternatives to Mongoose\n\t- the official [MongoDB driver](https://www.npmjs.com/package/mongodb) is the native driver in Node.js to interact with MongoDB\n- negatives\n\t- learning curve\n\t- has some limitations in handling schemas that are quite complex\n\t- if your collection schema is unpredictable, or you want a Mongo-shell like experience inside Node.js, then go ahead and use the MongoDB driver, as it is the simplest to pick up\n\t\t- however, without Mongoose, you will have to write larger amounts of code for validating the data, and the risk of errors is higher",
        "extras": "$idCode=mongoose;$rank=4.9;$quick=the primary ODM for MongoDB;$kind=/mern/",
        "genericTermIdCode": "ODM for MongoDB",
        "id": 381,
        "systemWhenCreated": "2021-11-09 09:17:07",
        "systemWhoCreated": "systemUnknown",
        "title": "Mongoose"
    },
    {
        "body": "- {created: 1977} Kent Beck and Ward Cunningham began experimenting with the idea of applying patterns to programming\n- \"effective solutions to common application development challenges\"\n- there are anti-patterns, i.e. solutions that lead to less effective solutions\n-",
        "extras": "$idCode=designPatterns;$rank=4.3;$quick=effective solutions to common application development challenges;$kind=/oldCore/",
        "genericTermIdCode": "reusable solutions to software problems",
        "id": 382,
        "systemWhenCreated": "2021-12-17 23:53:59",
        "systemWhoCreated": "systemUnknown",
        "title": "Design Patterns"
    },
    {
        "body": "- {created: 1977} Kent Beck and Ward Cunningham began experimenting with the idea of applying patterns to programming\n- \"effective solutions to common application development challenges\"\n- there are anti-patterns, i.e. solutions that lead to less effective solutions",
        "extras": "$idCode=designPatterns;$rank=4.3;$quick=effective solutions to common application development challenges;$kind=/oldCore/",
        "genericTermIdCode": "reusable solutions to software problems",
        "id": 383,
        "systemWhenCreated": "2021-12-27 19:47:46",
        "systemWhoCreated": "systemUnknown",
        "title": "Design Patterns"
    },
    {
        "body": "- overview\n\t- {created: 2017}: Version 1\n\t- 2018: Version 2\n\t- 2021: Version 4\n\t- a **React**-based, **GraphQL**-powered, **static-site generator**\n\t- weaves together the best parts of React, Webpack, react-router, GraphQL\n\t- more like a modern front-end framework than a static site generator of old\n\t- builds a website that uses only static files for **fast page loads**\n\t- Gatsby is **part Jekyll, part create-react-app**\n\t\t- Jekyll\n\t\t\t- 2008\n\t\t\t- most popular static site generator, largely due to its adoption by GitHub\n\t\t\t- renders markdown and produces a complete, static website ready to be served by Apache or Nginx\n\t\t\t- instead of using databases, Jekyll supports loading content from YAML, JSON, CSV, and TSV (tab-separated files) files\n\t\t\t\t- *\"Jekyll gets out of your way and allows you to concentrate on what truly matters: your content\"*\n\t- common use of Gatsby is a **blogging platform**\n\t\t- add files in directories and they appear as pages on the website, e.g. Markdown\n- three reasons you would use Gatsby\n\t- 1. Gatsby **uses GraphQL** to build its data layer\n\t\t- \"the content mesh\": collects your data from wherever it may be: Markdown, JSON, your favorite CMS, third party APIs\n\t\t\t- at build-time, it creates an internal GraphQL server of all of this data\n\t\t- *\"The true power of Gatsby becomes apparent when you start working with data from various sources.\"*\n\t- 2. the richness of the **Gatsby ecosystem**\n\t\t- good [documentation](https://www.gatsbyjs.com/docs/)\n\t\t- [plugins](https://www.gatsbyjs.com/plugins)\n\t\t- [data-source plugins](https://www.gatsbyjs.com/plugins)\n\t- 3. optimized for **speed and performance**\n- prerequisites\n\t- you **need to know React** before you use Gatsby\n\t- however, knowing GraphQL is helpful but not necessary\n\t\t- you'll learn GraphQL as you learn Gatsby\n\t\t- in fact, Gatsby is a good gateway technology to learn GraphQL \n- Gatsby and Next.js\n\t- as a developer who has spent time learning React, **Gatsby and Next.js are useful, low-hanging fruit**\n\t- how to choose between create-react-app, Next.js and Gatsby, from [Ben Awad video](https://www.youtube.com/watch?v=VoscwJ6MGsU):##graphgatsby232\t\n- features of Gatsby\n\t- code splitting\n\t\t- occurs during webpack compilation \n\t\t\t- if webpack finds an import function invocation, it will split the imported file into a separate bundle\n\t\t\t- if webpack find modules are instead loaded with require, they are not code split and are instead included in the original bundle\n\t\t- you naturally want to split pages\n\t\t\t- when you load a page, there’s no reason you need to also load the JavaScript/CSS for all the other pages \n\t\t\t\t- but you do want to prefetch them \n\t- data prefetching\n\t\t- Gatsby automatically creates code that looks for all links on the page\n\t\t- for each link it starts prefetching the page that the link points to\n\t\t- it does this using the `<link rel=\"prefetch\" href=\"...\" />` parameter\n\t\t\t- when the browser sees this tag, it will start downloading the resource but at a low priority\n\t- various rendering options\n\t\t- **Static Site Generation** (SSG)\n\t\t\t- preferred\n\t\t\t- **everything is rendered before being put on the CDN**\n\t\t\t\t- all static content with dynamic JavaScript\n\t\t- Deferred Static Generation (DSG)\n\t\t\t- same as SSG but developers can choose to defer building certain pages until the first time a user requests it\n\t\t\t- e.g. you have an archive of old articles that no longer receive significant traffic\n\t\t\t- no practical reason to generate them on each build, which may take many minutes\n\t\t\t\t- Gatsby will skip them during the build step\n\t\t\t- **DSG requires you to keep the build server running after the initial build**\n\t\t\t\t- using the `gatsby serve` command\n\t\t\t\t- implies a different deployment model and requires backend infrastructure, e.g. Gatsby Cloud \n\t\t- Server-Side Rendering (SSR)\n\t\t\t- least preferred of the three methods\n\t\t\t- renders a page with data that is fetched when a user visits the page\n\t\t\t- this uses e.g. classic `await fetch` commands \n\t\t\t- you use the `getServerData()` function \n\t- intelligent image loading\n\t\t- uses the [sharp](https://sharp.pixelplumbing.com/) library \n\t\t\t- features like lazy-loading\n\t- **service workers**\n\t\t- a script that your browser runs in the background separate from a web page\n\t\t- enables features that don't need a web page or user interaction\n\t\t- increase your site availability in spotty connections which improve user experience\n\t\t- is able to check the availability of a remote server and to cache content when that server is available, and serve that content later \n\t\t- can handle push notifications and synchronize data in the background, cache or retrieve resource requests, intercept network requests and receive centralized updates\n\t\t- *\"a requirement for a website to qualify as a PWA is the use of a service worker\"* [add-offline-support-with-a-service-worker](https://www.gatsbyjs.com/docs/how-to/performance/add-offline-support-with-a-service-worker)\n\t- starters\n\t\t- you generally use [starters](https://www.gatsbyjs.com/starters) to build sites\n\t\t- e.g. [gatsby-gitbook-starter](https://www.gatsbyjs.com/starters/hasura/gatsby-gitbook-starter/)\n- plugins\n\t- the heart of developing software with Gatsby \n\t\t- extend a wide spectrum of Gatsby's features \n\t\t- make data available from multiple sources\n\t- a Node package\n\t\t- often a customized version of a React component that implements the Gatsby API\n\t- you add a plugin, you add functionality\n\t- find them in `gatsby-config.js`\n\t\t- `plugins:`\n\t- some have options, some don't\n\t- you can make your own\n- conventions\n\t- content folder for e.g. images that are used and processed by Gatsby\n\t- the most used file is `gatsby-config.js`\n- infos\n\t- if you change the `gatsby-config.js` file, you have to restart: `gatsby develop`\n- data\n\t- GraphQL\n\t\t- two kinds of queries\n\t\t\t- staticQuery\n\t\t\t- pageQuery\n\t- GraphiQL\n- note Gatsby developers are often concerned with optimizing speed and performance with an automated website quality measuring tool called **Lighthouse**, i.e. getting the highest \"Lighthouse score\"\n\t- check with Chrome Lighthouse:\n\t\t- https://gatsby-test-001.netlify.app\n\t\t- https://gatsby-test-001.vercel.app\n- problems you might have with Gatsby\n\t- slow build times\n\t\t- *\"I am trying to set up a custom service worker for the gatsby app. The build process of my application takes about 7 minutes and the service worker is registered only in production mode, so I am not able to develop fast.\"* - [service-worker-in-gatsby-react-js](https://stackoverflow.com/questions/61598138/service-worker-in-gatsby-react-js)\n\t\t- *\"If we’re not careful, some of Gatsby’s magic can bite us by slowing our build times down significantly. And when I say “significantly”, I mean significantly. We recently helped one of our customers with optimizing their extremely image-heavy Gatsby build and got this email back: “I was able to get the build times down from 4.8 hours to right around 10 minutes!”\"* - [5-optimizations-for-faster-gatsby-builds](https://www.netlify.com/blog/2020/06/11/5-optimizations-for-faster-gatsby-builds/)\n- simple deployment\n\t- Netlify\n\t\t- use all default settings\n\t\t- https://gatsby-test-001.netlify.app\n\t\t- seems to be the default provider for Gatsby, \"More than half of all Gatsby sites are deployed on Netlify.\" - [netlify.com/gatsby](https://www.netlify.com/with/gatsby/)\n\t- Vercel\n\t\t- use all default settings\n\t\t- https://gatsby-test-001.vercel.app\n\t- Gatsby Cloud\n\t\t- not a good experience\n\t\t- doesn't seem to compare well even with Vercel: [vercel-vs-gatsby-cloud](https://bejamas.io/compare/vercel-vs-gatsby-cloud/)\n- useful commands\n\t- `gatsby develop -H 0.0.0.0` for access to network\n\t\t- couldn't access from smart phone on WLAN\n\t- `gatsby clean`\n\t- `gatsby new test001` (creates a Gatsby site in a directory below current position called `test001`)\n\t\t- `cd test001`\n\t\t- `npm start`\n\t- `gatsby -version` (on 2022-01-03 was 4.4.0)",
        "extras": "$idCode=gatsby;$rank=3.5;$quick=static site generator build on React and GraphQL;$kind=/jamstack/",
        "genericTermIdCode": "Static Site Generator",
        "id": 384,
        "systemWhenCreated": "2021-12-28 14:36:40",
        "systemWhoCreated": "systemUnknown",
        "title": "Gatsby"
    },
    {
        "body": "- {created: 2008}\n\t- WebSocket API protocol was standardized in 2011\n\t- a computer communications protocol, providing full-duplex communication channels over a single TCP connection\n\t- relies on HTTP for its initial handshake, but after that, the connection is left open so taht teh server and the client can pass messages back and forth",
        "extras": "$idCode=websocket;$rank=3.5;$quick=communications protocol that enables communication channels over TCP;$kind=/web/",
        "genericTermIdCode": "communications protocol",
        "id": 385,
        "systemWhenCreated": "2022-01-07 08:13:17",
        "systemWhoCreated": "systemUnknown",
        "title": "Websocket"
    },
    {
        "body": "- {created: 2014}\n- can be installed with npm\n- two parts\n\t- client-side library that runs in browser\n\t- server-side library that runs in Node.js. \n- uses the WebSocket protocol with JSON long polling as a fallback option while providing the same interface\n- while it can be used as simply a wrapper for WebSocket, it provides many more features, including broadcasting to multiple sockets, storing data associated with each client, and asynchronous I/O. \n- uses\n\t- any bidirectional interactions\n\t- real-time dashboards\n\t- chat applications\n\t- multiplayer games",
        "extras": "$idCode=idCodeidCode;$rank=3.5;$quick=JavaScript library that enables realtime, bi-directional communication between web clients and servers;$kind=/nnn/",
        "genericTermIdCode": "JavaScript library for realtime web applications",
        "id": 386,
        "systemWhenCreated": "2022-01-07 08:13:34",
        "systemWhoCreated": "systemUnknown",
        "title": "socket.io"
    },
    {
        "body": "- {created: 2010}\n- plugins\n\t- IdeaVim#vimpluginpych\n\t\t- you're in vim even when naming commits\n\t\t- commands that work\n\t\t\t- `\"*Y` works\n\t\t- commands that don't work\n\t\t\t- `cie` \n\t\t\t- `gcc` \n\t\t- turn off vim sounds with `:set visualbell`\n\t\t\t- turn back on with `:set novisualbell`",
        "extras": "$idCode=pycharm;$rank=3.5;$quick=the standard code editor for Python;$kind=/python/",
        "genericTermIdCode": "Python Code Editor",
        "id": 387,
        "systemWhenCreated": "2022-01-31 09:45:59",
        "systemWhoCreated": "systemUnknown",
        "title": "PyCharm"
    },
    {
        "body": "- {created: 1995}\n- global variables can be made local (private) with closures\n- global and local variables with the same name are different variables\n- JavaScript variables created without a declaration keyword (var, let, or const) are always global, even if they are created inside a function\n- local are created when the function is invoked, and deleted when the function is finished\n- all functions have access to the global scope\n- all functions have access to the scope above them\n- there is a nice, long and clear demonstration/explanation of the purpose of closure at [w3schools](https://www.w3schools.com/js/js_function_closures.asp)\n\t------------------------------------\n\tconst add = (function () {\n\t\tlet counter = 0;\n\t\treturn function () {counter += 1; return counter}\n\t})();\n\n\tadd();\n\tadd();\n\tadd();\n\n\t// the counter is now 3 \n\t------------------------------------",
        "extras": "$idCode=javascriptClosure;$rank=3.5;$quick=a function having access to the parent scope;$kind=/javascript/",
        "genericTermIdCode": "concept",
        "id": 388,
        "systemWhenCreated": "2022-03-05 01:01:09",
        "systemWhoCreated": "systemUnknown",
        "title": "JavaScript closure"
    },
    {
        "body": "- OWASP\n\t- [Open Web Application Security Project](https://owasp.org)\n\t\t- [cheatsheets](https://cheatsheetseries.owasp.org)\n\t\t\t- what are the threats out there, the solutions, the code, etc.\n\t\t\t- e.g. [CSRF cheetsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)\n\t\t\t- join [OWASP Slack Channel](https://owasp-slack.herokuapp.com)\n\t- founded 2001\n\t- \n\t-",
        "extras": "$idCode=apiSecurity;$rank=3.5;$quick=one of the most important areas in API development;$kind=/api/",
        "genericTermIdCode": "Application Security",
        "id": 389,
        "systemWhenCreated": "2022-03-23 08:44:08",
        "systemWhoCreated": "systemUnknown",
        "title": "API Security"
    }
]